

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 18:26:44 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0013                     _SSPBUF	set	19
   286  0014                     _SSPCON	set	20
   287  000C                     _PIR1bits	set	12
   288  000B                     _INTCONbits	set	11
   289  0006                     _PORTB	set	6
   290  0005                     _PORTA	set	5
   291  0008                     _PORTD	set	8
   292  0006                     _PORTBbits	set	6
   293  0063                     _SSPIF	set	99
   294  0094                     _SSPSTATbits	set	148
   295  0094                     _SSPSTAT	set	148
   296  0085                     _TRISAbits	set	133
   297  008C                     _PIE1bits	set	140
   298  0088                     _TRISD	set	136
   299  0086                     _TRISBbits	set	134
   300  0085                     _TRISA	set	133
   301  043B                     _TRISC3	set	1083
   302  043D                     _TRISC5	set	1085
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           	psect	cinit
   307  000F                     start_initialization:	
   308                           ; #config settings
   309                           
   310  000F                     __initialization:
   311                           
   312                           ; Clear objects allocated to COMMON
   313  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   314  0010                     end_of_initialization:	
   315                           ;End of C runtime variable initialization code
   316                           
   317  0010                     __end_of__initialization:
   318  0010  0183               	clrf	3
   319  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMMON
   322  0079                     __pbssCOMMON:
   323  0079                     _contador:
   324  0079                     	ds	1
   325                           
   326                           	psect	cstackCOMMON
   327  0070                     __pcstackCOMMON:
   328  0070                     ?_spiWrite:
   329  0070                     ??_spiWrite:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_setup:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_INTER:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_isr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     spiWrite@dat:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	1
   350  0071                     ??_isr:
   351                           
   352                           ; 1 bytes @ 0x1
   353  0071                     	ds	2
   354  0073                     ??_INTER:
   355  0073                     ?_spiInit:	
   356                           ; 1 bytes @ 0x3
   357                           
   358  0073                     spiInit@sDataSample:	
   359                           ; 1 bytes @ 0x3
   360                           
   361                           
   362                           ; 1 bytes @ 0x3
   363  0073                     	ds	1
   364  0074                     spiInit@sClockIdle:
   365                           
   366                           ; 1 bytes @ 0x4
   367  0074                     	ds	1
   368  0075                     spiInit@sTransmitEdge:
   369                           
   370                           ; 1 bytes @ 0x5
   371  0075                     	ds	1
   372  0076                     ??_spiInit:
   373  0076                     spiInit@sType:	
   374                           ; 1 bytes @ 0x6
   375                           
   376                           
   377                           ; 1 bytes @ 0x6
   378  0076                     	ds	1
   379  0077                     ??_setup:
   380  0077                     ??_main:	
   381                           ; 1 bytes @ 0x7
   382                           
   383                           
   384                           ; 1 bytes @ 0x7
   385  0077                     	ds	2
   386                           
   387                           	psect	maintext
   388  0014                     __pmaintext:	
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 53 in file "CONT.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0, pclath, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : B00/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0
   410 ;;      Temps:          2       0       0       0       0
   411 ;;      Totals:         2       0       0       0       0
   412 ;;Total ram usage:        2 bytes
   413 ;; Hardware stack levels required when called:    4
   414 ;; This function calls:
   415 ;;		_INTER
   416 ;;		_setup
   417 ;; This function is called by:
   418 ;;		Startup code after reset
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           
   423                           ;psect for function _main
   424  0014                     _main:
   425  0014                     l794:	
   426                           ;incstack = 0
   427                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   428                           
   429                           
   430                           ;CONT.c: 54:     setup();
   431  0014  120A  118A  2054  120A  118A  	fcall	_setup
   432  0019                     l796:
   433                           
   434                           ;CONT.c: 55:     INTER();
   435  0019  120A  118A  209A  120A  118A  	fcall	_INTER
   436  001E                     l798:
   437                           
   438                           ;CONT.c: 61:         if (PORTBbits.RB6 == 0){
   439  001E  1283               	bcf	3,5	;RP0=0, select bank0
   440  001F  1303               	bcf	3,6	;RP1=0, select bank0
   441  0020  1B06               	btfsc	6,6	;volatile
   442  0021  2823               	goto	u91
   443  0022  2824               	goto	u90
   444  0023                     u91:
   445  0023  2839               	goto	l808
   446  0024                     u90:
   447  0024                     l800:
   448                           
   449                           ;CONT.c: 62:             _delay((unsigned long)((70)*(8000000/4000.0)));
   450  0024  30B6               	movlw	182
   451  0025  00F8               	movwf	??_main+1
   452  0026  30D0               	movlw	208
   453  0027  00F7               	movwf	??_main
   454  0028                     u137:
   455  0028  0BF7               	decfsz	??_main,f
   456  0029  2828               	goto	u137
   457  002A  0BF8               	decfsz	??_main+1,f
   458  002B  2828               	goto	u137
   459  002C  0000               	nop
   460  002D                     l802:
   461                           
   462                           ;CONT.c: 63:             if (PORTBbits.RB6 == 1){
   463  002D  1283               	bcf	3,5	;RP0=0, select bank0
   464  002E  1303               	bcf	3,6	;RP1=0, select bank0
   465  002F  1F06               	btfss	6,6	;volatile
   466  0030  2832               	goto	u101
   467  0031  2833               	goto	u100
   468  0032                     u101:
   469  0032  2839               	goto	l808
   470  0033                     u100:
   471  0033                     l804:
   472                           
   473                           ;CONT.c: 64:                 contador ++;
   474  0033  3001               	movlw	1
   475  0034  00F7               	movwf	??_main
   476  0035  0877               	movf	??_main,w
   477  0036  07F9               	addwf	_contador,f
   478  0037                     l806:
   479                           
   480                           ;CONT.c: 65:                 PORTD = contador;
   481  0037  0879               	movf	_contador,w
   482  0038  0088               	movwf	8	;volatile
   483  0039                     l808:
   484                           
   485                           ;CONT.c: 69:         if (PORTBbits.RB7 == 0){
   486  0039  1B86               	btfsc	6,7	;volatile
   487  003A  283C               	goto	u111
   488  003B  283D               	goto	u110
   489  003C                     u111:
   490  003C  281E               	goto	l798
   491  003D                     u110:
   492  003D                     l810:
   493                           
   494                           ;CONT.c: 70:             _delay((unsigned long)((70)*(8000000/4000.0)));
   495  003D  30B6               	movlw	182
   496  003E  00F8               	movwf	??_main+1
   497  003F  30D0               	movlw	208
   498  0040  00F7               	movwf	??_main
   499  0041                     u147:
   500  0041  0BF7               	decfsz	??_main,f
   501  0042  2841               	goto	u147
   502  0043  0BF8               	decfsz	??_main+1,f
   503  0044  2841               	goto	u147
   504  0045  0000               	nop
   505  0046                     l812:
   506                           
   507                           ;CONT.c: 71:             if (PORTBbits.RB7 == 1){
   508  0046  1283               	bcf	3,5	;RP0=0, select bank0
   509  0047  1303               	bcf	3,6	;RP1=0, select bank0
   510  0048  1F86               	btfss	6,7	;volatile
   511  0049  284B               	goto	u121
   512  004A  284C               	goto	u120
   513  004B                     u121:
   514  004B  281E               	goto	l798
   515  004C                     u120:
   516  004C                     l814:
   517                           
   518                           ;CONT.c: 72:                 contador --;
   519  004C  3001               	movlw	1
   520  004D  02F9               	subwf	_contador,f
   521  004E                     l816:
   522                           
   523                           ;CONT.c: 73:                 PORTD = contador;
   524  004E  0879               	movf	_contador,w
   525  004F  0088               	movwf	8	;volatile
   526  0050  281E               	goto	l798
   527  0051  120A  118A  280C   	ljmp	start
   528  0054                     __end_of_main:
   529                           
   530                           	psect	text1
   531  0054                     __ptext1:	
   532 ;; *************** function _setup *****************
   533 ;; Defined at:
   534 ;;		line 82 in file "CONT.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0, pclath, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    3
   555 ;; This function calls:
   556 ;;		_spiInit
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           
   563                           ;psect for function _setup
   564  0054                     _setup:
   565  0054                     l776:	
   566                           ;incstack = 0
   567                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   568                           
   569                           
   570                           ;CONT.c: 83:     ANSEL = 0;
   571  0054  1683               	bsf	3,5	;RP0=1, select bank3
   572  0055  1703               	bsf	3,6	;RP1=1, select bank3
   573  0056  0188               	clrf	8	;volatile
   574                           
   575                           ;CONT.c: 84:     ANSELH = 0;
   576  0057  0189               	clrf	9	;volatile
   577  0058                     l778:
   578                           
   579                           ;CONT.c: 85:     TRISA = 1;
   580  0058  3001               	movlw	1
   581  0059  1683               	bsf	3,5	;RP0=1, select bank1
   582  005A  1303               	bcf	3,6	;RP1=0, select bank1
   583  005B  0085               	movwf	5	;volatile
   584  005C                     l780:
   585                           
   586                           ;CONT.c: 86:     TRISBbits.TRISB0 = 1;
   587  005C  1406               	bsf	6,0	;volatile
   588  005D                     l782:
   589                           
   590                           ;CONT.c: 87:     TRISBbits.TRISB1 = 1;
   591  005D  1486               	bsf	6,1	;volatile
   592  005E                     l784:
   593                           
   594                           ;CONT.c: 88:     TRISD = 0;
   595  005E  0188               	clrf	8	;volatile
   596  005F                     l786:
   597                           
   598                           ;CONT.c: 91:     PORTA = 0;
   599  005F  1283               	bcf	3,5	;RP0=0, select bank0
   600  0060  1303               	bcf	3,6	;RP1=0, select bank0
   601  0061  0185               	clrf	5	;volatile
   602  0062                     l788:
   603                           
   604                           ;CONT.c: 92:     PORTB = 0;
   605  0062  0186               	clrf	6	;volatile
   606  0063                     l790:
   607                           
   608                           ;CONT.c: 93:     PORTD = 0;
   609  0063  0188               	clrf	8	;volatile
   610  0064                     l792:
   611                           
   612                           ;CONT.c: 95:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,SPI
      +                          _IDLE_2_ACTIVE);
   613  0064  01F3               	clrf	spiInit@sDataSample
   614  0065  01F4               	clrf	spiInit@sClockIdle
   615  0066  01F5               	clrf	spiInit@sTransmitEdge
   616  0067  3024               	movlw	36
   617  0068  120A  118A  206E  120A  118A  	fcall	_spiInit
   618  006D                     l61:
   619  006D  0008               	return
   620  006E                     __end_of_setup:
   621                           
   622                           	psect	text2
   623  006E                     __ptext2:	
   624 ;; *************** function _spiInit *****************
   625 ;; Defined at:
   626 ;;		line 12 in file "SPI.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  sType           1    wreg     enum E1264
   629 ;;  sDataSample     1    3[COMMON] enum E1272
   630 ;;  sClockIdle      1    4[COMMON] enum E1276
   631 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  sType           1    6[COMMON] enum E1264
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         3       0       0       0       0
   644 ;;      Locals:         1       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0
   646 ;;      Totals:         4       0       0       0       0
   647 ;;Total ram usage:        4 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; Hardware stack levels required when called:    2
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_setup
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _spiInit
   659  006E                     _spiInit:
   660                           
   661                           ;incstack = 0
   662                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   663                           ;spiInit@sType stored from wreg
   664  006E  00F6               	movwf	spiInit@sType
   665  006F                     l766:
   666                           
   667                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   668  006F  1683               	bsf	3,5	;RP0=1, select bank1
   669  0070  1303               	bcf	3,6	;RP1=0, select bank1
   670  0071  1287               	bcf	7,5	;volatile
   671                           
   672                           ;SPI.c: 15:     if(sType & 0b00000100)
   673  0072  1D76               	btfss	spiInit@sType,2
   674  0073  2875               	goto	u81
   675  0074  2876               	goto	u80
   676  0075                     u81:
   677  0075  287A               	goto	l772
   678  0076                     u80:
   679  0076                     l768:
   680                           
   681                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   682  0076  0875               	movf	spiInit@sTransmitEdge,w
   683  0077  0094               	movwf	20	;volatile
   684  0078                     l770:
   685                           
   686                           ;SPI.c: 18:         TRISC3 = 1;
   687  0078  1587               	bsf	7,3	;volatile
   688                           
   689                           ;SPI.c: 19:     }
   690  0079  287E               	goto	l80
   691  007A                     l772:
   692                           
   693                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   694  007A  0873               	movf	spiInit@sDataSample,w
   695  007B  0475               	iorwf	spiInit@sTransmitEdge,w
   696  007C  0094               	movwf	20	;volatile
   697  007D                     l774:
   698                           
   699                           ;SPI.c: 23:         TRISC3 = 0;
   700  007D  1187               	bcf	7,3	;volatile
   701  007E                     l80:	
   702                           ;SPI.c: 24:     }
   703                           
   704                           
   705                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   706  007E  0876               	movf	spiInit@sType,w
   707  007F  0474               	iorwf	spiInit@sClockIdle,w
   708  0080  1283               	bcf	3,5	;RP0=0, select bank0
   709  0081  1303               	bcf	3,6	;RP1=0, select bank0
   710  0082  0094               	movwf	20	;volatile
   711  0083                     l81:
   712  0083  0008               	return
   713  0084                     __end_of_spiInit:
   714                           
   715                           	psect	text3
   716  009A                     __ptext3:	
   717 ;; *************** function _INTER *****************
   718 ;; Defined at:
   719 ;;		line 99 in file "CONT.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		None
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    2
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_main
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function _INTER
   749  009A                     _INTER:
   750  009A                     l720:	
   751                           ;incstack = 0
   752                           ; Regs used in _INTER: []
   753                           
   754                           
   755                           ;CONT.c: 100:     INTCONbits.GIE = 1;
   756  009A  178B               	bsf	11,7	;volatile
   757                           
   758                           ;CONT.c: 101:     INTCONbits.PEIE = 1;
   759  009B  170B               	bsf	11,6	;volatile
   760                           
   761                           ;CONT.c: 102:     PIR1bits.SSPIF = 0;
   762  009C  1283               	bcf	3,5	;RP0=0, select bank0
   763  009D  1303               	bcf	3,6	;RP1=0, select bank0
   764  009E  118C               	bcf	12,3	;volatile
   765                           
   766                           ;CONT.c: 103:     PIE1bits.SSPIE = 1;
   767  009F  1683               	bsf	3,5	;RP0=1, select bank1
   768  00A0  1303               	bcf	3,6	;RP1=0, select bank1
   769  00A1  158C               	bsf	12,3	;volatile
   770                           
   771                           ;CONT.c: 104:     TRISAbits.TRISA5 = 1;
   772  00A2  1685               	bsf	5,5	;volatile
   773  00A3                     l64:
   774  00A3  0008               	return
   775  00A4                     __end_of_INTER:
   776                           
   777                           	psect	text4
   778  0084                     __ptext4:	
   779 ;; *************** function _isr *****************
   780 ;; Defined at:
   781 ;;		line 41 in file "CONT.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, status,2, status,0, pclath, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   795 ;;      Params:         0       0       0       0       0
   796 ;;      Locals:         0       0       0       0       0
   797 ;;      Temps:          2       0       0       0       0
   798 ;;      Totals:         2       0       0       0       0
   799 ;;Total ram usage:        2 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    1
   802 ;; This function calls:
   803 ;;		_spiWrite
   804 ;; This function is called by:
   805 ;;		Interrupt level 1
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           
   810                           ;psect for function _isr
   811  0084                     _isr:
   812  0084                     i1l724:
   813                           
   814                           ;CONT.c: 43:     if(SSPIF == 1){
   815  0084  1283               	bcf	3,5	;RP0=0, select bank0
   816  0085  1303               	bcf	3,6	;RP1=0, select bank0
   817  0086  1D8C               	btfss	12,3	;volatile
   818  0087  2889               	goto	u3_21
   819  0088  288A               	goto	u3_20
   820  0089                     u3_21:
   821  0089  2893               	goto	i1l46
   822  008A                     u3_20:
   823  008A                     i1l726:
   824                           
   825                           ;CONT.c: 45:         spiWrite(contador);
   826  008A  0879               	movf	_contador,w
   827  008B  120A  118A  20A4  120A  118A  	fcall	_spiWrite
   828  0090                     i1l728:
   829                           
   830                           ;CONT.c: 47:         SSPIF = 0;
   831  0090  1283               	bcf	3,5	;RP0=0, select bank0
   832  0091  1303               	bcf	3,6	;RP1=0, select bank0
   833  0092  118C               	bcf	12,3	;volatile
   834  0093                     i1l46:
   835  0093  0872               	movf	??_isr+1,w
   836  0094  008A               	movwf	10
   837  0095  0E71               	swapf	??_isr,w
   838  0096  0083               	movwf	3
   839  0097  0EFE               	swapf	btemp,f
   840  0098  0E7E               	swapf	btemp,w
   841  0099  0009               	retfie
   842  009A                     __end_of_isr:
   843                           
   844                           	psect	intentry
   845  0004                     __pintentry:	
   846                           ;incstack = 0
   847                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   848                           
   849  0004                     interrupt_function:
   850  007E                     saved_w	set	btemp
   851  0004  00FE               	movwf	btemp
   852  0005  0E03               	swapf	3,w
   853  0006  00F1               	movwf	??_isr
   854  0007  080A               	movf	10,w
   855  0008  00F2               	movwf	??_isr+1
   856  0009  120A  118A  2884   	ljmp	_isr
   857                           
   858                           	psect	text5
   859  00A4                     __ptext5:	
   860 ;; *************** function _spiWrite *****************
   861 ;; Defined at:
   862 ;;		line 34 in file "SPI.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  dat             1    wreg     unsigned char 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  dat             1    0[COMMON] unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         0       0       0       0       0
   877 ;;      Locals:         1       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0
   879 ;;      Totals:         1       0       0       0       0
   880 ;;Total ram usage:        1 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_isr
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           
   890                           ;psect for function _spiWrite
   891  00A4                     _spiWrite:
   892                           
   893                           ;incstack = 0
   894                           ; Regs used in _spiWrite: [wreg]
   895                           ;spiWrite@dat stored from wreg
   896  00A4  00F0               	movwf	spiWrite@dat
   897  00A5                     i1l700:
   898                           
   899                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   900  00A5  0870               	movf	spiWrite@dat,w
   901  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   902  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   903  00A8  0093               	movwf	19	;volatile
   904  00A9                     i1l90:
   905  00A9  0008               	return
   906  00AA                     __end_of_spiWrite:
   907  007E                     btemp	set	126	;btemp
   908  007E                     wtemp0	set	126
   909                           
   910                           	psect	config
   911                           
   912                           ;Config register CONFIG1 @ 0x2007
   913                           ;	Oscillator Selection bits
   914                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   915                           ;	Watchdog Timer Enable bit
   916                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   917                           ;	Power-up Timer Enable bit
   918                           ;	PWRTE = OFF, PWRT disabled
   919                           ;	RE3/MCLR pin function select bit
   920                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   921                           ;	Code Protection bit
   922                           ;	CP = OFF, Program memory code protection is disabled
   923                           ;	Data Code Protection bit
   924                           ;	CPD = OFF, Data memory code protection is disabled
   925                           ;	Brown Out Reset Selection bits
   926                           ;	BOREN = OFF, BOR disabled
   927                           ;	Internal External Switchover bit
   928                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   929                           ;	Fail-Safe Clock Monitor Enabled bit
   930                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   931                           ;	Low Voltage Programming Enable bit
   932                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   933                           ;	In-Circuit Debugger Mode bit
   934                           ;	DEBUG = 0x1, unprogrammed default
   935  2007                     	org	8199
   936  2007  20D1               	dw	8401
   937                           
   938                           ;Config register CONFIG2 @ 0x2008
   939                           ;	Brown-out Reset Selection bit
   940                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   941                           ;	Flash Program Memory Self Write Enable bits
   942                           ;	WRT = OFF, Write protection off
   943  2008                     	org	8200
   944  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     360
                                              7 COMMON     2     2      0
                              _INTER
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _INTER                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INTER
   _setup
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 18:26:44 2021

            _SSPSTATbits 0094                       l61 006D                       l64 00A3  
                     l80 007E                       l81 0083                       u80 0076  
                     u81 0075                       u90 0024                       u91 0023  
                    l720 009A                      l800 0024                      l810 003D  
                    l802 002D                      l812 0046                      l804 0033  
                    l814 004C                      l806 0037                      l816 004E  
                    l808 0039                      l770 0078                      l772 007A  
                    l780 005C                      l774 007D                      l766 006F  
                    l790 0063                      l782 005D                      l768 0076  
                    l792 0064                      l784 005E                      l776 0054  
                    l786 005F                      l778 0058                      l794 0014  
                    l788 0062                      l796 0019                      l798 001E  
                    u100 0033                      u101 0032                      u110 003D  
                    u111 003C                      u120 004C                      u121 004B  
                    u137 0028                      u147 0041                      _isr 0084  
                   ?_isr 0070                     i1l46 0093                     i1l90 00A9  
                   u3_20 008A                     u3_21 0089                     _main 0014  
                   btemp 007E                     start 000C                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l700 00A5  
                  i1l724 0084                    i1l726 008A                    i1l728 0090  
                  _INTER 009A                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
                  _SSPIF 0063                    _setup 0054                    pclath 000A  
        __end_of_spiInit 0084                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0054                   ??_main 0077  
                 ?_INTER 0070                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   saved_w 007E         __end_of_spiWrite 00AA  
              ??_spiInit 0076  __end_of__initialization 0010            __end_of_INTER 00A4  
         __pcstackCOMMON 0070            __end_of_setup 006E                  ??_INTER 0073  
                ??_setup 0077               __pmaintext 0014               __pintentry 0004  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 0054  
                __ptext2 006E                  __ptext3 009A                  __ptext4 0084  
                __ptext5 00A4             __size_of_isr 0016                  _spiInit 006E  
   end_of_initialization 0010               ??_spiWrite 0070                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086              spiWrite@dat 0070  
    start_initialization 000F              __end_of_isr 009A              __pbssCOMMON 0079  
              ___latbits 0002        __size_of_spiWrite 0006           __size_of_INTER 000A  
               ?_spiInit 0073           __size_of_setup 001A     spiInit@sTransmitEdge 0075  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0073  
               _PIR1bits 000C         __size_of_spiInit 0016                 _contador 0079  
          __size_of_main 0040                 _spiWrite 00A4             spiInit@sType 0076  
      spiInit@sClockIdle 0074               _INTCONbits 000B                 intlevel1 0000  
