

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 00:33:10 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0013                     _SSPBUF	set	19
   286  0014                     _SSPCON	set	20
   287  000C                     _PIR1bits	set	12
   288  000B                     _INTCONbits	set	11
   289  0006                     _PORTB	set	6
   290  0005                     _PORTA	set	5
   291  0008                     _PORTD	set	8
   292  0006                     _PORTBbits	set	6
   293  0063                     _SSPIF	set	99
   294  0094                     _SSPSTATbits	set	148
   295  0094                     _SSPSTAT	set	148
   296  0085                     _TRISAbits	set	133
   297  008C                     _PIE1bits	set	140
   298  0088                     _TRISD	set	136
   299  0086                     _TRISBbits	set	134
   300  0085                     _TRISA	set	133
   301  043B                     _TRISC3	set	1083
   302  043D                     _TRISC5	set	1085
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           	psect	cinit
   307  000F                     start_initialization:	
   308                           ; #config settings
   309                           
   310  000F                     __initialization:
   311                           
   312                           ; Clear objects allocated to COMMON
   313  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   314  0010                     end_of_initialization:	
   315                           ;End of C runtime variable initialization code
   316                           
   317  0010                     __end_of__initialization:
   318  0010  0183               	clrf	3
   319  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMMON
   322  007A                     __pbssCOMMON:
   323  007A                     _contador:
   324  007A                     	ds	1
   325                           
   326                           	psect	cstackCOMMON
   327  0070                     __pcstackCOMMON:
   328  0070                     ?_spiWrite:
   329  0070                     ??_spiWrite:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_setup:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_INTER:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_isr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     spiWrite@dat:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	1
   350  0071                     ??_isr:
   351                           
   352                           ; 1 bytes @ 0x1
   353  0071                     	ds	2
   354  0073                     ??_INTER:
   355  0073                     ?_spiInit:	
   356                           ; 1 bytes @ 0x3
   357                           
   358  0073                     spiInit@sDataSample:	
   359                           ; 1 bytes @ 0x3
   360                           
   361                           
   362                           ; 1 bytes @ 0x3
   363  0073                     	ds	1
   364  0074                     spiInit@sClockIdle:
   365                           
   366                           ; 1 bytes @ 0x4
   367  0074                     	ds	1
   368  0075                     spiInit@sTransmitEdge:
   369                           
   370                           ; 1 bytes @ 0x5
   371  0075                     	ds	1
   372  0076                     ??_spiInit:
   373  0076                     spiInit@sType:	
   374                           ; 1 bytes @ 0x6
   375                           
   376                           
   377                           ; 1 bytes @ 0x6
   378  0076                     	ds	1
   379  0077                     ??_setup:
   380  0077                     ??_main:	
   381                           ; 1 bytes @ 0x7
   382                           
   383                           
   384                           ; 1 bytes @ 0x7
   385  0077                     	ds	3
   386                           
   387                           	psect	maintext
   388  0014                     __pmaintext:	
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 50 in file "CONT.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0, pclath, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : B00/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0
   410 ;;      Temps:          3       0       0       0       0
   411 ;;      Totals:         3       0       0       0       0
   412 ;;Total ram usage:        3 bytes
   413 ;; Hardware stack levels required when called:    4
   414 ;; This function calls:
   415 ;;		_INTER
   416 ;;		_setup
   417 ;; This function is called by:
   418 ;;		Startup code after reset
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           
   423                           ;psect for function _main
   424  0014                     _main:
   425  0014                     l794:	
   426                           ;incstack = 0
   427                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   428                           
   429                           
   430                           ;CONT.c: 51:     setup();
   431  0014  120A  118A  205C  120A  118A  	fcall	_setup
   432  0019                     l796:
   433                           
   434                           ;CONT.c: 52:     INTER();
   435  0019  120A  118A  20A2  120A  118A  	fcall	_INTER
   436  001E                     l798:
   437                           
   438                           ;CONT.c: 58:         if (PORTBbits.RB0 == 0){
   439  001E  1283               	bcf	3,5	;RP0=0, select bank0
   440  001F  1303               	bcf	3,6	;RP1=0, select bank0
   441  0020  1806               	btfsc	6,0	;volatile
   442  0021  2823               	goto	u91
   443  0022  2824               	goto	u90
   444  0023                     u91:
   445  0023  283D               	goto	l808
   446  0024                     u90:
   447  0024                     l800:
   448                           
   449                           ;CONT.c: 59:             _delay((unsigned long)((100)*(8000000/4000.0)));
   450  0024  3002               	movlw	2
   451  0025  00F9               	movwf	??_main+2
   452  0026  3004               	movlw	4
   453  0027  00F8               	movwf	??_main+1
   454  0028  30BA               	movlw	186
   455  0029  00F7               	movwf	??_main
   456  002A                     u137:
   457  002A  0BF7               	decfsz	??_main,f
   458  002B  282A               	goto	u137
   459  002C  0BF8               	decfsz	??_main+1,f
   460  002D  282A               	goto	u137
   461  002E  0BF9               	decfsz	??_main+2,f
   462  002F  282A               	goto	u137
   463  0030  0000               	nop
   464  0031                     l802:
   465                           
   466                           ;CONT.c: 60:             if (PORTBbits.RB0 == 1){
   467  0031  1283               	bcf	3,5	;RP0=0, select bank0
   468  0032  1303               	bcf	3,6	;RP1=0, select bank0
   469  0033  1C06               	btfss	6,0	;volatile
   470  0034  2836               	goto	u101
   471  0035  2837               	goto	u100
   472  0036                     u101:
   473  0036  283D               	goto	l808
   474  0037                     u100:
   475  0037                     l804:
   476                           
   477                           ;CONT.c: 61:                 contador ++;
   478  0037  3001               	movlw	1
   479  0038  00F7               	movwf	??_main
   480  0039  0877               	movf	??_main,w
   481  003A  07FA               	addwf	_contador,f
   482  003B                     l806:
   483                           
   484                           ;CONT.c: 62:                 PORTD = contador;
   485  003B  087A               	movf	_contador,w
   486  003C  0088               	movwf	8	;volatile
   487  003D                     l808:
   488                           
   489                           ;CONT.c: 66:         if (PORTBbits.RB1 == 0){
   490  003D  1886               	btfsc	6,1	;volatile
   491  003E  2840               	goto	u111
   492  003F  2841               	goto	u110
   493  0040                     u111:
   494  0040  281E               	goto	l798
   495  0041                     u110:
   496  0041                     l810:
   497                           
   498                           ;CONT.c: 67:             _delay((unsigned long)((100)*(8000000/4000.0)));
   499  0041  3002               	movlw	2
   500  0042  00F9               	movwf	??_main+2
   501  0043  3004               	movlw	4
   502  0044  00F8               	movwf	??_main+1
   503  0045  30BA               	movlw	186
   504  0046  00F7               	movwf	??_main
   505  0047                     u147:
   506  0047  0BF7               	decfsz	??_main,f
   507  0048  2847               	goto	u147
   508  0049  0BF8               	decfsz	??_main+1,f
   509  004A  2847               	goto	u147
   510  004B  0BF9               	decfsz	??_main+2,f
   511  004C  2847               	goto	u147
   512  004D  0000               	nop
   513  004E                     l812:
   514                           
   515                           ;CONT.c: 68:             if (PORTBbits.RB1 == 1){
   516  004E  1283               	bcf	3,5	;RP0=0, select bank0
   517  004F  1303               	bcf	3,6	;RP1=0, select bank0
   518  0050  1C86               	btfss	6,1	;volatile
   519  0051  2853               	goto	u121
   520  0052  2854               	goto	u120
   521  0053                     u121:
   522  0053  281E               	goto	l798
   523  0054                     u120:
   524  0054                     l814:
   525                           
   526                           ;CONT.c: 69:                 contador --;
   527  0054  3001               	movlw	1
   528  0055  02FA               	subwf	_contador,f
   529  0056                     l816:
   530                           
   531                           ;CONT.c: 70:                 PORTD = contador;
   532  0056  087A               	movf	_contador,w
   533  0057  0088               	movwf	8	;volatile
   534  0058  281E               	goto	l798
   535  0059  120A  118A  280C   	ljmp	start
   536  005C                     __end_of_main:
   537                           
   538                           	psect	text1
   539  005C                     __ptext1:	
   540 ;; *************** function _setup *****************
   541 ;; Defined at:
   542 ;;		line 78 in file "CONT.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;		None
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0, pclath, cstack
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   556 ;;      Params:         0       0       0       0       0
   557 ;;      Locals:         0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0
   559 ;;      Totals:         0       0       0       0       0
   560 ;;Total ram usage:        0 bytes
   561 ;; Hardware stack levels used:    1
   562 ;; Hardware stack levels required when called:    3
   563 ;; This function calls:
   564 ;;		_spiInit
   565 ;; This function is called by:
   566 ;;		_main
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _setup
   572  005C                     _setup:
   573  005C                     l776:	
   574                           ;incstack = 0
   575                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   576                           
   577                           
   578                           ;CONT.c: 79:     ANSEL = 0;
   579  005C  1683               	bsf	3,5	;RP0=1, select bank3
   580  005D  1703               	bsf	3,6	;RP1=1, select bank3
   581  005E  0188               	clrf	8	;volatile
   582                           
   583                           ;CONT.c: 80:     ANSELH = 0;
   584  005F  0189               	clrf	9	;volatile
   585  0060                     l778:
   586                           
   587                           ;CONT.c: 81:     TRISA = 1;
   588  0060  3001               	movlw	1
   589  0061  1683               	bsf	3,5	;RP0=1, select bank1
   590  0062  1303               	bcf	3,6	;RP1=0, select bank1
   591  0063  0085               	movwf	5	;volatile
   592  0064                     l780:
   593                           
   594                           ;CONT.c: 82:     TRISBbits.TRISB0 = 1;
   595  0064  1406               	bsf	6,0	;volatile
   596  0065                     l782:
   597                           
   598                           ;CONT.c: 83:     TRISBbits.TRISB1 = 1;
   599  0065  1486               	bsf	6,1	;volatile
   600  0066                     l784:
   601                           
   602                           ;CONT.c: 84:     TRISD = 0;
   603  0066  0188               	clrf	8	;volatile
   604  0067                     l786:
   605                           
   606                           ;CONT.c: 87:     PORTA = 0;
   607  0067  1283               	bcf	3,5	;RP0=0, select bank0
   608  0068  1303               	bcf	3,6	;RP1=0, select bank0
   609  0069  0185               	clrf	5	;volatile
   610  006A                     l788:
   611                           
   612                           ;CONT.c: 88:     PORTB = 0;
   613  006A  0186               	clrf	6	;volatile
   614  006B                     l790:
   615                           
   616                           ;CONT.c: 89:     PORTD = 0;
   617  006B  0188               	clrf	8	;volatile
   618  006C                     l792:
   619                           
   620                           ;CONT.c: 91:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,SPI
      +                          _IDLE_2_ACTIVE);
   621  006C  01F3               	clrf	spiInit@sDataSample
   622  006D  01F4               	clrf	spiInit@sClockIdle
   623  006E  01F5               	clrf	spiInit@sTransmitEdge
   624  006F  3024               	movlw	36
   625  0070  120A  118A  2076  120A  118A  	fcall	_spiInit
   626  0075                     l61:
   627  0075  0008               	return
   628  0076                     __end_of_setup:
   629                           
   630                           	psect	text2
   631  0076                     __ptext2:	
   632 ;; *************** function _spiInit *****************
   633 ;; Defined at:
   634 ;;		line 12 in file "SPI.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;  sType           1    wreg     enum E1264
   637 ;;  sDataSample     1    3[COMMON] enum E1272
   638 ;;  sClockIdle      1    4[COMMON] enum E1276
   639 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  sType           1    6[COMMON] enum E1264
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         3       0       0       0       0
   652 ;;      Locals:         1       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0
   654 ;;      Totals:         4       0       0       0       0
   655 ;;Total ram usage:        4 bytes
   656 ;; Hardware stack levels used:    1
   657 ;; Hardware stack levels required when called:    2
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_setup
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _spiInit
   667  0076                     _spiInit:
   668                           
   669                           ;incstack = 0
   670                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   671                           ;spiInit@sType stored from wreg
   672  0076  00F6               	movwf	spiInit@sType
   673  0077                     l766:
   674                           
   675                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   676  0077  1683               	bsf	3,5	;RP0=1, select bank1
   677  0078  1303               	bcf	3,6	;RP1=0, select bank1
   678  0079  1287               	bcf	7,5	;volatile
   679                           
   680                           ;SPI.c: 15:     if(sType & 0b00000100)
   681  007A  1D76               	btfss	spiInit@sType,2
   682  007B  287D               	goto	u81
   683  007C  287E               	goto	u80
   684  007D                     u81:
   685  007D  2882               	goto	l772
   686  007E                     u80:
   687  007E                     l768:
   688                           
   689                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   690  007E  0875               	movf	spiInit@sTransmitEdge,w
   691  007F  0094               	movwf	20	;volatile
   692  0080                     l770:
   693                           
   694                           ;SPI.c: 18:         TRISC3 = 1;
   695  0080  1587               	bsf	7,3	;volatile
   696                           
   697                           ;SPI.c: 19:     }
   698  0081  2886               	goto	l80
   699  0082                     l772:
   700                           
   701                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   702  0082  0873               	movf	spiInit@sDataSample,w
   703  0083  0475               	iorwf	spiInit@sTransmitEdge,w
   704  0084  0094               	movwf	20	;volatile
   705  0085                     l774:
   706                           
   707                           ;SPI.c: 23:         TRISC3 = 0;
   708  0085  1187               	bcf	7,3	;volatile
   709  0086                     l80:	
   710                           ;SPI.c: 24:     }
   711                           
   712                           
   713                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   714  0086  0876               	movf	spiInit@sType,w
   715  0087  0474               	iorwf	spiInit@sClockIdle,w
   716  0088  1283               	bcf	3,5	;RP0=0, select bank0
   717  0089  1303               	bcf	3,6	;RP1=0, select bank0
   718  008A  0094               	movwf	20	;volatile
   719  008B                     l81:
   720  008B  0008               	return
   721  008C                     __end_of_spiInit:
   722                           
   723                           	psect	text3
   724  00A2                     __ptext3:	
   725 ;; *************** function _INTER *****************
   726 ;; Defined at:
   727 ;;		line 95 in file "CONT.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		None
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   741 ;;      Params:         0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0
   743 ;;      Temps:          0       0       0       0       0
   744 ;;      Totals:         0       0       0       0       0
   745 ;;Total ram usage:        0 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    2
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           
   756                           ;psect for function _INTER
   757  00A2                     _INTER:
   758  00A2                     l720:	
   759                           ;incstack = 0
   760                           ; Regs used in _INTER: []
   761                           
   762                           
   763                           ;CONT.c: 96:     INTCONbits.GIE = 1;
   764  00A2  178B               	bsf	11,7	;volatile
   765                           
   766                           ;CONT.c: 97:     INTCONbits.PEIE = 1;
   767  00A3  170B               	bsf	11,6	;volatile
   768                           
   769                           ;CONT.c: 98:     PIR1bits.SSPIF = 0;
   770  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   771  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   772  00A6  118C               	bcf	12,3	;volatile
   773                           
   774                           ;CONT.c: 99:     PIE1bits.SSPIE = 1;
   775  00A7  1683               	bsf	3,5	;RP0=1, select bank1
   776  00A8  1303               	bcf	3,6	;RP1=0, select bank1
   777  00A9  158C               	bsf	12,3	;volatile
   778                           
   779                           ;CONT.c: 100:     TRISAbits.TRISA5 = 1;
   780  00AA  1685               	bsf	5,5	;volatile
   781  00AB                     l64:
   782  00AB  0008               	return
   783  00AC                     __end_of_INTER:
   784                           
   785                           	psect	text4
   786  008C                     __ptext4:	
   787 ;; *************** function _isr *****************
   788 ;; Defined at:
   789 ;;		line 41 in file "CONT.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0, pclath, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0
   805 ;;      Temps:          2       0       0       0       0
   806 ;;      Totals:         2       0       0       0       0
   807 ;;Total ram usage:        2 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    1
   810 ;; This function calls:
   811 ;;		_spiWrite
   812 ;; This function is called by:
   813 ;;		Interrupt level 1
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           
   818                           ;psect for function _isr
   819  008C                     _isr:
   820  008C                     i1l724:
   821                           
   822                           ;CONT.c: 42:     if(SSPIF == 1){
   823  008C  1283               	bcf	3,5	;RP0=0, select bank0
   824  008D  1303               	bcf	3,6	;RP1=0, select bank0
   825  008E  1D8C               	btfss	12,3	;volatile
   826  008F  2891               	goto	u3_21
   827  0090  2892               	goto	u3_20
   828  0091                     u3_21:
   829  0091  289B               	goto	i1l46
   830  0092                     u3_20:
   831  0092                     i1l726:
   832                           
   833                           ;CONT.c: 43:         spiWrite(contador);
   834  0092  087A               	movf	_contador,w
   835  0093  120A  118A  20AC  120A  118A  	fcall	_spiWrite
   836  0098                     i1l728:
   837                           
   838                           ;CONT.c: 44:         SSPIF = 0;
   839  0098  1283               	bcf	3,5	;RP0=0, select bank0
   840  0099  1303               	bcf	3,6	;RP1=0, select bank0
   841  009A  118C               	bcf	12,3	;volatile
   842  009B                     i1l46:
   843  009B  0872               	movf	??_isr+1,w
   844  009C  008A               	movwf	10
   845  009D  0E71               	swapf	??_isr,w
   846  009E  0083               	movwf	3
   847  009F  0EFE               	swapf	btemp,f
   848  00A0  0E7E               	swapf	btemp,w
   849  00A1  0009               	retfie
   850  00A2                     __end_of_isr:
   851                           
   852                           	psect	intentry
   853  0004                     __pintentry:	
   854                           ;incstack = 0
   855                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   856                           
   857  0004                     interrupt_function:
   858  007E                     saved_w	set	btemp
   859  0004  00FE               	movwf	btemp
   860  0005  0E03               	swapf	3,w
   861  0006  00F1               	movwf	??_isr
   862  0007  080A               	movf	10,w
   863  0008  00F2               	movwf	??_isr+1
   864  0009  120A  118A  288C   	ljmp	_isr
   865                           
   866                           	psect	text5
   867  00AC                     __ptext5:	
   868 ;; *************** function _spiWrite *****************
   869 ;; Defined at:
   870 ;;		line 34 in file "SPI.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  dat             1    wreg     unsigned char 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  dat             1    0[COMMON] unsigned char 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         0       0       0       0       0
   885 ;;      Locals:         1       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0
   887 ;;      Totals:         1       0       0       0       0
   888 ;;Total ram usage:        1 bytes
   889 ;; Hardware stack levels used:    1
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		_isr
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           
   898                           ;psect for function _spiWrite
   899  00AC                     _spiWrite:
   900                           
   901                           ;incstack = 0
   902                           ; Regs used in _spiWrite: [wreg]
   903                           ;spiWrite@dat stored from wreg
   904  00AC  00F0               	movwf	spiWrite@dat
   905  00AD                     i1l700:
   906                           
   907                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   908  00AD  0870               	movf	spiWrite@dat,w
   909  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   910  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   911  00B0  0093               	movwf	19	;volatile
   912  00B1                     i1l90:
   913  00B1  0008               	return
   914  00B2                     __end_of_spiWrite:
   915  007E                     btemp	set	126	;btemp
   916  007E                     wtemp0	set	126
   917                           
   918                           	psect	config
   919                           
   920                           ;Config register CONFIG1 @ 0x2007
   921                           ;	Oscillator Selection bits
   922                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   923                           ;	Watchdog Timer Enable bit
   924                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   925                           ;	Power-up Timer Enable bit
   926                           ;	PWRTE = OFF, PWRT disabled
   927                           ;	RE3/MCLR pin function select bit
   928                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   929                           ;	Code Protection bit
   930                           ;	CP = OFF, Program memory code protection is disabled
   931                           ;	Data Code Protection bit
   932                           ;	CPD = OFF, Data memory code protection is disabled
   933                           ;	Brown Out Reset Selection bits
   934                           ;	BOREN = OFF, BOR disabled
   935                           ;	Internal External Switchover bit
   936                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   937                           ;	Fail-Safe Clock Monitor Enabled bit
   938                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   939                           ;	Low Voltage Programming Enable bit
   940                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   941                           ;	In-Circuit Debugger Mode bit
   942                           ;	DEBUG = 0x1, unprogrammed default
   943  2007                     	org	8199
   944  2007  20D1               	dw	8401
   945                           
   946                           ;Config register CONFIG2 @ 0x2008
   947                           ;	Brown-out Reset Selection bit
   948                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   949                           ;	Flash Program Memory Self Write Enable bits
   950                           ;	WRT = OFF, Write protection off
   951  2008                     	org	8200
   952  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     360
                                              7 COMMON     3     3      0
                              _INTER
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _INTER                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INTER
   _setup
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 00:33:10 2021

            _SSPSTATbits 0094                       l61 0075                       l64 00AB  
                     l80 0086                       l81 008B                       u80 007E  
                     u81 007D                       u90 0024                       u91 0023  
                    l720 00A2                      l800 0024                      l810 0041  
                    l802 0031                      l812 004E                      l804 0037  
                    l814 0054                      l806 003B                      l816 0056  
                    l808 003D                      l770 0080                      l772 0082  
                    l780 0064                      l774 0085                      l766 0077  
                    l790 006B                      l782 0065                      l768 007E  
                    l792 006C                      l784 0066                      l776 005C  
                    l786 0067                      l778 0060                      l794 0014  
                    l788 006A                      l796 0019                      l798 001E  
                    u100 0037                      u101 0036                      u110 0041  
                    u111 0040                      u120 0054                      u121 0053  
                    u137 002A                      u147 0047                      _isr 008C  
                   ?_isr 0070                     i1l46 009B                     i1l90 00B1  
                   u3_20 0092                     u3_21 0091                     _main 0014  
                   btemp 007E                     start 000C                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l700 00AD  
                  i1l724 008C                    i1l726 0092                    i1l728 0098  
                  _INTER 00A2                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
                  _SSPIF 0063                    _setup 005C                    pclath 000A  
        __end_of_spiInit 008C                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 005C                   ??_main 0077  
                 ?_INTER 0070                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   saved_w 007E         __end_of_spiWrite 00B2  
              ??_spiInit 0076  __end_of__initialization 0010            __end_of_INTER 00AC  
         __pcstackCOMMON 0070            __end_of_setup 0076                  ??_INTER 0073  
                ??_setup 0077               __pmaintext 0014               __pintentry 0004  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 005C  
                __ptext2 0076                  __ptext3 00A2                  __ptext4 008C  
                __ptext5 00AC             __size_of_isr 0016                  _spiInit 0076  
   end_of_initialization 0010               ??_spiWrite 0070                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086              spiWrite@dat 0070  
    start_initialization 000F              __end_of_isr 00A2              __pbssCOMMON 007A  
              ___latbits 0002        __size_of_spiWrite 0006           __size_of_INTER 000A  
               ?_spiInit 0073           __size_of_setup 001A     spiInit@sTransmitEdge 0075  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0073  
               _PIR1bits 000C         __size_of_spiInit 0016                 _contador 007A  
          __size_of_main 0048                 _spiWrite 00AC             spiInit@sType 0076  
      spiInit@sClockIdle 0074               _INTCONbits 000B                 intlevel1 0000  
