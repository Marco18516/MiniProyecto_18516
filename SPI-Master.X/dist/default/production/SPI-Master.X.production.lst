

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 18:27:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    57                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 2.31
    61                           ; Generated 13/10/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F887 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001B                     	;# 
   126  001C                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  0081                     	;# 
   131  0085                     	;# 
   132  0086                     	;# 
   133  0087                     	;# 
   134  0088                     	;# 
   135  0089                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  008F                     	;# 
   140  0090                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0093                     	;# 
   145  0093                     	;# 
   146  0094                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  0105                     	;# 
   159  0107                     	;# 
   160  0108                     	;# 
   161  0109                     	;# 
   162  010C                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  0185                     	;# 
   168  0187                     	;# 
   169  0188                     	;# 
   170  0189                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  0088                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  008F                     	;# 
   218  0090                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0097                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236  0105                     	;# 
   237  0107                     	;# 
   238  0108                     	;# 
   239  0109                     	;# 
   240  010C                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  0185                     	;# 
   246  0187                     	;# 
   247  0188                     	;# 
   248  0189                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0008                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001D                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  0088                     	;# 
   291  0089                     	;# 
   292  008C                     	;# 
   293  008D                     	;# 
   294  008E                     	;# 
   295  008F                     	;# 
   296  0090                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0093                     	;# 
   301  0093                     	;# 
   302  0094                     	;# 
   303  0095                     	;# 
   304  0096                     	;# 
   305  0097                     	;# 
   306  0098                     	;# 
   307  0099                     	;# 
   308  009A                     	;# 
   309  009B                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  009F                     	;# 
   314  0105                     	;# 
   315  0107                     	;# 
   316  0108                     	;# 
   317  0109                     	;# 
   318  010C                     	;# 
   319  010C                     	;# 
   320  010D                     	;# 
   321  010E                     	;# 
   322  010F                     	;# 
   323  0185                     	;# 
   324  0187                     	;# 
   325  0188                     	;# 
   326  0189                     	;# 
   327  018C                     	;# 
   328  018D                     	;# 
   329                           
   330                           	psect	strings
   331  0003                     __pstrings:
   332  0003                     stringtab:
   333  0003                     __stringtab:
   334                           
   335                           ;	String table - string pointers are 1 byte each
   336  0003  1BFF               	btfsc	btemp+1,7
   337  0004  280D               	ljmp	stringcode
   338  0005  1383               	bcf	3,7
   339  0006  187F               	btfsc	btemp+1,0
   340  0007  1783               	bsf	3,7
   341  0008  0800               	movf	0,w
   342  0009  0A84               	incf	4,f
   343  000A  1903               	skipnz
   344  000B  0AFF               	incf	btemp+1,f
   345  000C  0008               	return
   346  000D                     stringcode:
   347  000D                     stringdir:
   348  000D  3000               	movlw	high stringdir
   349  000E  008A               	movwf	10
   350  000F  0804               	movf	4,w
   351  0010  0A84               	incf	4,f
   352  0011  0782               	addwf	2,f
   353  0012                     __stringbase:
   354  0012  3400               	retlw	0
   355  0013                     __end_of__stringtab:
   356  0013                     __powers_:
   357  0013  3400               	retlw	0
   358  0014  3400               	retlw	0
   359  0015  3480               	retlw	128
   360  0016  343F               	retlw	63
   361  0017  3400               	retlw	0
   362  0018  3400               	retlw	0
   363  0019  3420               	retlw	32
   364  001A  3441               	retlw	65
   365  001B  3400               	retlw	0
   366  001C  3400               	retlw	0
   367  001D  34C8               	retlw	200
   368  001E  3442               	retlw	66
   369  001F  3400               	retlw	0
   370  0020  3400               	retlw	0
   371  0021  347A               	retlw	122
   372  0022  3444               	retlw	68
   373  0023  3400               	retlw	0
   374  0024  3440               	retlw	64
   375  0025  341C               	retlw	28
   376  0026  3446               	retlw	70
   377  0027  3400               	retlw	0
   378  0028  3450               	retlw	80
   379  0029  34C3               	retlw	195
   380  002A  3447               	retlw	71
   381  002B  3400               	retlw	0
   382  002C  3424               	retlw	36
   383  002D  3474               	retlw	116
   384  002E  3449               	retlw	73
   385  002F  3480               	retlw	128
   386  0030  3496               	retlw	150
   387  0031  3418               	retlw	24
   388  0032  344B               	retlw	75
   389  0033  3420               	retlw	32
   390  0034  34BC               	retlw	188
   391  0035  34BE               	retlw	190
   392  0036  344C               	retlw	76
   393  0037  3428               	retlw	40
   394  0038  346B               	retlw	107
   395  0039  346E               	retlw	110
   396  003A  344E               	retlw	78
   397  003B  34F9               	retlw	249
   398  003C  3402               	retlw	2
   399  003D  3415               	retlw	21
   400  003E  3450               	retlw	80
   401  003F  34EC               	retlw	236
   402  0040  3478               	retlw	120
   403  0041  34AD               	retlw	173
   404  0042  3460               	retlw	96
   405  0043  34CA               	retlw	202
   406  0044  34F2               	retlw	242
   407  0045  3449               	retlw	73
   408  0046  3471               	retlw	113
   409  0047                     __end_of__powers_:
   410  0047                     __npowers_:
   411  0047  3400               	retlw	0
   412  0048  3400               	retlw	0
   413  0049  3480               	retlw	128
   414  004A  343F               	retlw	63
   415  004B  34CD               	retlw	205
   416  004C  34CC               	retlw	204
   417  004D  34CC               	retlw	204
   418  004E  343D               	retlw	61
   419  004F  340A               	retlw	10
   420  0050  34D7               	retlw	215
   421  0051  3423               	retlw	35
   422  0052  343C               	retlw	60
   423  0053  346F               	retlw	111
   424  0054  3412               	retlw	18
   425  0055  3483               	retlw	131
   426  0056  343A               	retlw	58
   427  0057  3417               	retlw	23
   428  0058  34B7               	retlw	183
   429  0059  34D1               	retlw	209
   430  005A  3438               	retlw	56
   431  005B  34AC               	retlw	172
   432  005C  34C5               	retlw	197
   433  005D  3427               	retlw	39
   434  005E  3437               	retlw	55
   435  005F  34BD               	retlw	189
   436  0060  3437               	retlw	55
   437  0061  3486               	retlw	134
   438  0062  3435               	retlw	53
   439  0063  3495               	retlw	149
   440  0064  34BF               	retlw	191
   441  0065  34D6               	retlw	214
   442  0066  3433               	retlw	51
   443  0067  3477               	retlw	119
   444  0068  34CC               	retlw	204
   445  0069  342B               	retlw	43
   446  006A  3432               	retlw	50
   447  006B  345F               	retlw	95
   448  006C  3470               	retlw	112
   449  006D  3489               	retlw	137
   450  006E  3430               	retlw	48
   451  006F  34FF               	retlw	255
   452  0070  34E6               	retlw	230
   453  0071  34DB               	retlw	219
   454  0072  342E               	retlw	46
   455  0073  3408               	retlw	8
   456  0074  34E5               	retlw	229
   457  0075  343C               	retlw	60
   458  0076  341E               	retlw	30
   459  0077  3460               	retlw	96
   460  0078  3442               	retlw	66
   461  0079  34A2               	retlw	162
   462  007A  340D               	retlw	13
   463  007B                     __end_of__npowers_:
   464  007B                     _dpowers:
   465  007B  3401               	retlw	1
   466  007C  3400               	retlw	0
   467  007D  3400               	retlw	0
   468  007E  3400               	retlw	0
   469  007F  340A               	retlw	10
   470  0080  3400               	retlw	0
   471  0081  3400               	retlw	0
   472  0082  3400               	retlw	0
   473  0083  3464               	retlw	100
   474  0084  3400               	retlw	0
   475  0085  3400               	retlw	0
   476  0086  3400               	retlw	0
   477  0087  34E8               	retlw	232
   478  0088  3403               	retlw	3
   479  0089  3400               	retlw	0
   480  008A  3400               	retlw	0
   481  008B  3410               	retlw	16
   482  008C  3427               	retlw	39
   483  008D  3400               	retlw	0
   484  008E  3400               	retlw	0
   485  008F  34A0               	retlw	160
   486  0090  3486               	retlw	134
   487  0091  3401               	retlw	1
   488  0092  3400               	retlw	0
   489  0093  3440               	retlw	64
   490  0094  3442               	retlw	66
   491  0095  340F               	retlw	15
   492  0096  3400               	retlw	0
   493  0097  3480               	retlw	128
   494  0098  3496               	retlw	150
   495  0099  3498               	retlw	152
   496  009A  3400               	retlw	0
   497  009B  3400               	retlw	0
   498  009C  34E1               	retlw	225
   499  009D  34F5               	retlw	245
   500  009E  3405               	retlw	5
   501  009F  3400               	retlw	0
   502  00A0  34CA               	retlw	202
   503  00A1  349A               	retlw	154
   504  00A2  343B               	retlw	59
   505  00A3                     __end_of_dpowers:
   506  0013                     _SSPBUF	set	19
   507  0014                     _SSPCON	set	20
   508  0007                     _PORTCbits	set	7
   509  0006                     _PORTB	set	6
   510  0008                     _PORTD	set	8
   511  0009                     _PORTE	set	9
   512  0007                     _PORTC	set	7
   513  0019                     _TXREG	set	25
   514  001A                     _RCREG	set	26
   515  0018                     _RCSTAbits	set	24
   516  0065                     _RCIF	set	101
   517  0049                     _RE1	set	73
   518  0048                     _RE0	set	72
   519  0047                     _RD7	set	71
   520  0046                     _RD6	set	70
   521  0045                     _RD5	set	69
   522  0044                     _RD4	set	68
   523  0043                     _RD3	set	67
   524  0042                     _RD2	set	66
   525  0041                     _RD1	set	65
   526  0040                     _RD0	set	64
   527  0094                     _SSPSTATbits	set	148
   528  0094                     _SSPSTAT	set	148
   529  008F                     _OSCCON	set	143
   530  0088                     _TRISD	set	136
   531  0089                     _TRISE	set	137
   532  0086                     _TRISB	set	134
   533  0098                     _TXSTAbits	set	152
   534  0099                     _SPBRG	set	153
   535  043B                     _TRISC3	set	1083
   536  043D                     _TRISC5	set	1085
   537  043A                     _TRISC2	set	1082
   538  0439                     _TRISC1	set	1081
   539  0438                     _TRISC0	set	1080
   540  04C1                     _TRMT	set	1217
   541  0189                     _ANSELH	set	393
   542  0188                     _ANSEL	set	392
   543  00A3                     STR_2:
   544  00A3  3425               	retlw	37	;'%'
   545  00A4  3431               	retlw	49	;'1'
   546  00A5  342E               	retlw	46	;'.'
   547  00A6  3430               	retlw	48	;'0'
   548  00A7  3466               	retlw	102	;'f'
   549  00A8  3420               	retlw	32	;' '
   550  00A9  3420               	retlw	32	;' '
   551  00AA  3420               	retlw	32	;' '
   552  00AB  3425               	retlw	37	;'%'
   553  00AC  3464               	retlw	100	;'d'
   554  00AD  3420               	retlw	32	;' '
   555  00AE  3420               	retlw	32	;' '
   556  00AF  3420               	retlw	32	;' '
   557  00B0  3425               	retlw	37	;'%'
   558  00B1  3433               	retlw	51	;'3'
   559  00B2  342E               	retlw	46	;'.'
   560  00B3  3430               	retlw	48	;'0'
   561  00B4  3466               	retlw	102	;'f'
   562  00B5  3400               	retlw	0
   563  00B6                     STR_1:
   564  00B6  3453               	retlw	83	;'S'
   565  00B7  3431               	retlw	49	;'1'
   566  00B8  3420               	retlw	32	;' '
   567  00B9  3420               	retlw	32	;' '
   568  00BA  3420               	retlw	32	;' '
   569  00BB  3453               	retlw	83	;'S'
   570  00BC  3432               	retlw	50	;'2'
   571  00BD  3420               	retlw	32	;' '
   572  00BE  3420               	retlw	32	;' '
   573  00BF  3420               	retlw	32	;' '
   574  00C0  3453               	retlw	83	;'S'
   575  00C1  3433               	retlw	51	;'3'
   576  00C2  3400               	retlw	0
   577  00B6                     
   578                           	psect	cinit
   579  07EF                     start_initialization:	
   580                           ; #config settings
   581                           
   582  07EF                     __initialization:
   583                           
   584                           ; Clear objects allocated to BANK0
   585  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   586  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   587  07F1  01EE               	clrf	__pbssBANK0& (0+127)
   588  07F2  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   589                           
   590                           ; Clear objects allocated to BANK1
   591  07F3  1383               	bcf	3,7	;select IRP bank0
   592  07F4  30CE               	movlw	low __pbssBANK1
   593  07F5  0084               	movwf	4
   594  07F6  30EB               	movlw	low (__pbssBANK1+29)
   595  07F7  160A  158A  2145  120A  118A  	fcall	clear_ram0
   596  07FC                     end_of_initialization:	
   597                           ;End of C runtime variable initialization code
   598                           
   599  07FC                     __end_of__initialization:
   600  07FC  0183               	clrf	3
   601  07FD  120A  118A  291B   	ljmp	_main	;jump to C main() function
   602                           
   603                           	psect	bssBANK0
   604  006E                     __pbssBANK0:
   605  006E                     _ADC2:
   606  006E                     	ds	1
   607  006F                     _ADC1:
   608  006F                     	ds	1
   609                           
   610                           	psect	bssBANK1
   611  00CE                     __pbssBANK1:
   612  00CE                     _temp:
   613  00CE                     	ds	4
   614  00D2                     _volt:
   615  00D2                     	ds	4
   616  00D6                     _cont:
   617  00D6                     	ds	1
   618  00D7                     _data:
   619  00D7                     	ds	20
   620                           
   621                           	psect	clrtext
   622  1945                     clear_ram0:	
   623                           ;	Called with FSR containing the base address, and
   624                           ;	W with the last address+1
   625                           
   626  1945  0064               	clrwdt	;clear the watchdog before getting into this loop
   627  1946                     clrloop0:
   628  1946  0180               	clrf	0	;clear RAM location pointed to by FSR
   629  1947  0A84               	incf	4,f	;increment pointer
   630  1948  0604               	xorwf	4,w	;XOR with final address
   631  1949  1903               	btfsc	3,2	;have we reached the end yet?
   632  194A  3400               	retlw	0	;all done for this memory range, return
   633  194B  0604               	xorwf	4,w	;XOR again to restore value
   634  194C  2946               	goto	clrloop0	;do the next byte
   635                           
   636                           	psect	cstackBANK1
   637  00A0                     __pcstackBANK1:
   638  00A0                     ?_sprintf:
   639  00A0                     sprintf@f:	
   640                           ; 2 bytes @ 0x0
   641                           
   642                           
   643                           ; 1 bytes @ 0x0
   644  00A0                     	ds	11
   645  00AB                     ??_sprintf:
   646                           
   647                           ; 1 bytes @ 0xB
   648  00AB                     	ds	5
   649  00B0                     _sprintf$1136:
   650                           
   651                           ; 4 bytes @ 0x10
   652  00B0                     	ds	4
   653  00B4                     sprintf@ap:
   654                           
   655                           ; 1 bytes @ 0x14
   656  00B4                     	ds	1
   657  00B5                     sprintf@flag:
   658                           
   659                           ; 2 bytes @ 0x15
   660  00B5                     	ds	2
   661  00B7                     sprintf@width:
   662                           
   663                           ; 2 bytes @ 0x17
   664  00B7                     	ds	2
   665  00B9                     sprintf@tmpval:
   666                           
   667                           ; 4 bytes @ 0x19
   668  00B9                     	ds	4
   669  00BD                     sprintf@val:
   670                           
   671                           ; 4 bytes @ 0x1D
   672  00BD                     	ds	4
   673  00C1                     sprintf@eexp:
   674                           
   675                           ; 2 bytes @ 0x21
   676  00C1                     	ds	2
   677  00C3                     sprintf@fval:
   678                           
   679                           ; 4 bytes @ 0x23
   680  00C3                     	ds	4
   681  00C7                     sprintf@sp:
   682                           
   683                           ; 1 bytes @ 0x27
   684  00C7                     	ds	1
   685  00C8                     sprintf@prec:
   686                           
   687                           ; 2 bytes @ 0x28
   688  00C8                     	ds	2
   689  00CA                     sprintf@c:
   690                           
   691                           ; 1 bytes @ 0x2A
   692  00CA                     	ds	1
   693  00CB                     ??_main:
   694                           
   695                           ; 1 bytes @ 0x2B
   696  00CB                     	ds	3
   697                           
   698                           	psect	cstackCOMMON
   699  0070                     __pcstackCOMMON:
   700  0070                     ?_isdigit:
   701  0070                     ?___fleq:	
   702                           ; 1 bit 
   703                           
   704  0070                     ?___flge:	
   705                           ; 1 bit 
   706                           
   707  0070                     ?_setup:	
   708                           ; 1 bit 
   709                           
   710  0070                     ?_OSCILADOR:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ??_OSCILADOR:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_Conteo:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_leer_ADC:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_spiInit:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_spiWrite:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ??_spiWrite:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_spiRead:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ??_spiRead:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ??_isdigit:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_Puerto:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ??_Puerto:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_LCD_CMD:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_datosLCD:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_LCD_clean:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_Lcd_Init:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_Baudios:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ??_Baudios:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_config_txsta:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ??_config_txsta:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_config_rcsta:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ??_config_rcsta:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?_Write_USART:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ??_Write_USART:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?_main:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ?_spiReceiveWait:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ??_spiReceiveWait:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ?__Umul8_16:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ?___wmul:	
   795                           ; 2 bytes @ 0x0
   796                           
   797  0070                     ?___awmod:	
   798                           ; 2 bytes @ 0x0
   799                           
   800  0070                     ?___lwmod:	
   801                           ; 2 bytes @ 0x0
   802                           
   803  0070                     ?__tdiv_to_l_:	
   804                           ; 2 bytes @ 0x0
   805                           
   806  0070                     ?__div_to_l_:	
   807                           ; 4 bytes @ 0x0
   808                           
   809  0070                     ?___lldiv:	
   810                           ; 4 bytes @ 0x0
   811                           
   812  0070                     ?___flneg:	
   813                           ; 4 bytes @ 0x0
   814                           
   815  0070                     ?___xxtofl:	
   816                           ; 4 bytes @ 0x0
   817                           
   818  0070                     Puerto@x:	
   819                           ; 4 bytes @ 0x0
   820                           
   821  0070                     Write_USART@a:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     spiInit@sDataSample:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     spiWrite@dat:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     __Umul8_16@multiplicand:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     _isdigit$935:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ___wmul@multiplier:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ___awmod@divisor:	
   840                           ; 2 bytes @ 0x0
   841                           
   842  0070                     ___lwmod@divisor:	
   843                           ; 2 bytes @ 0x0
   844                           
   845  0070                     ___lldiv@divisor:	
   846                           ; 2 bytes @ 0x0
   847                           
   848  0070                     __div_to_l_@f1:	
   849                           ; 4 bytes @ 0x0
   850                           
   851  0070                     ___fleq@ff1:	
   852                           ; 4 bytes @ 0x0
   853                           
   854  0070                     ___flge@ff1:	
   855                           ; 4 bytes @ 0x0
   856                           
   857  0070                     ___flneg@f1:	
   858                           ; 4 bytes @ 0x0
   859                           
   860  0070                     __tdiv_to_l_@f1:	
   861                           ; 4 bytes @ 0x0
   862                           
   863  0070                     ___xxtofl@val:	
   864                           ; 4 bytes @ 0x0
   865                           
   866                           
   867                           ; 4 bytes @ 0x0
   868  0070                     	ds	1
   869  0071                     ??_Conteo:
   870  0071                     ??_LCD_CMD:	
   871                           ; 1 bytes @ 0x1
   872                           
   873  0071                     ??_datosLCD:	
   874                           ; 1 bytes @ 0x1
   875                           
   876  0071                     ?_Write_USART_String:	
   877                           ; 1 bytes @ 0x1
   878                           
   879  0071                     spiInit@sClockIdle:	
   880                           ; 1 bytes @ 0x1
   881                           
   882  0071                     isdigit@c:	
   883                           ; 1 bytes @ 0x1
   884                           
   885  0071                     Write_USART_String@a:	
   886                           ; 1 bytes @ 0x1
   887                           
   888                           
   889                           ; 2 bytes @ 0x1
   890  0071                     	ds	1
   891  0072                     ??__Umul8_16:
   892  0072                     LCD_CMD@a:	
   893                           ; 1 bytes @ 0x2
   894                           
   895  0072                     spiInit@sTransmitEdge:	
   896                           ; 1 bytes @ 0x2
   897                           
   898  0072                     ___wmul@multiplicand:	
   899                           ; 1 bytes @ 0x2
   900                           
   901  0072                     ___awmod@dividend:	
   902                           ; 2 bytes @ 0x2
   903                           
   904  0072                     ___lwmod@dividend:	
   905                           ; 2 bytes @ 0x2
   906                           
   907                           
   908                           ; 2 bytes @ 0x2
   909  0072                     	ds	1
   910  0073                     ??_spiInit:
   911  0073                     ?_Lcd_Write_String:	
   912                           ; 1 bytes @ 0x3
   913                           
   914  0073                     ??_Write_USART_String:	
   915                           ; 1 bytes @ 0x3
   916                           
   917  0073                     datosLCD@x:	
   918                           ; 1 bytes @ 0x3
   919                           
   920  0073                     spiInit@sType:	
   921                           ; 1 bytes @ 0x3
   922                           
   923  0073                     Lcd_Write_String@a:	
   924                           ; 1 bytes @ 0x3
   925                           
   926                           
   927                           ; 2 bytes @ 0x3
   928  0073                     	ds	1
   929  0074                     ??_setup:
   930  0074                     ??_LCD_clean:	
   931                           ; 1 bytes @ 0x4
   932                           
   933  0074                     ??_Lcd_Init:	
   934                           ; 1 bytes @ 0x4
   935                           
   936  0074                     ?_Lcd_Set_Cursor:	
   937                           ; 1 bytes @ 0x4
   938                           
   939  0074                     ??___wmul:	
   940                           ; 1 bytes @ 0x4
   941                           
   942  0074                     ??___awmod:	
   943                           ; 1 bytes @ 0x4
   944                           
   945  0074                     ??___flneg:	
   946                           ; 1 bytes @ 0x4
   947                           
   948  0074                     ??___lwmod:	
   949                           ; 1 bytes @ 0x4
   950                           
   951  0074                     ??___xxtofl:	
   952                           ; 1 bytes @ 0x4
   953                           
   954  0074                     Lcd_Set_Cursor@y:	
   955                           ; 1 bytes @ 0x4
   956                           
   957  0074                     Write_USART_String@i:	
   958                           ; 1 bytes @ 0x4
   959                           
   960  0074                     ___wmul@product:	
   961                           ; 1 bytes @ 0x4
   962                           
   963  0074                     __Umul8_16@product:	
   964                           ; 2 bytes @ 0x4
   965                           
   966  0074                     ___lldiv@dividend:	
   967                           ; 2 bytes @ 0x4
   968                           
   969  0074                     __div_to_l_@f2:	
   970                           ; 4 bytes @ 0x4
   971                           
   972  0074                     ___fleq@ff2:	
   973                           ; 4 bytes @ 0x4
   974                           
   975  0074                     ___flge@ff2:	
   976                           ; 4 bytes @ 0x4
   977                           
   978  0074                     __tdiv_to_l_@f2:	
   979                           ; 4 bytes @ 0x4
   980                           
   981                           
   982                           ; 4 bytes @ 0x4
   983  0074                     	ds	1
   984  0075                     ??_Lcd_Set_Cursor:
   985  0075                     ??_Lcd_Write_String:	
   986                           ; 1 bytes @ 0x5
   987                           
   988  0075                     ___awmod@counter:	
   989                           ; 1 bytes @ 0x5
   990                           
   991  0075                     ___lwmod@counter:	
   992                           ; 1 bytes @ 0x5
   993                           
   994                           
   995                           ; 1 bytes @ 0x5
   996  0075                     	ds	1
   997  0076                     ?___lwdiv:
   998  0076                     Lcd_Set_Cursor@x:	
   999                           ; 2 bytes @ 0x6
  1000                           
  1001  0076                     ___awmod@sign:	
  1002                           ; 1 bytes @ 0x6
  1003                           
  1004  0076                     ___lwdiv@divisor:	
  1005                           ; 1 bytes @ 0x6
  1006                           
  1007  0076                     __Umul8_16@word_mpld:	
  1008                           ; 2 bytes @ 0x6
  1009                           
  1010                           
  1011                           ; 2 bytes @ 0x6
  1012  0076                     	ds	1
  1013  0077                     ?___awdiv:
  1014  0077                     Lcd_Set_Cursor@a:	
  1015                           ; 2 bytes @ 0x7
  1016                           
  1017  0077                     ___awdiv@divisor:	
  1018                           ; 1 bytes @ 0x7
  1019                           
  1020                           
  1021                           ; 2 bytes @ 0x7
  1022  0077                     	ds	1
  1023  0078                     ??__tdiv_to_l_:
  1024  0078                     ??__div_to_l_:	
  1025                           ; 1 bytes @ 0x8
  1026                           
  1027  0078                     ??___lldiv:	
  1028                           ; 1 bytes @ 0x8
  1029                           
  1030  0078                     ??___fleq:	
  1031                           ; 1 bytes @ 0x8
  1032                           
  1033  0078                     ??___flge:	
  1034                           ; 1 bytes @ 0x8
  1035                           
  1036  0078                     __Umul8_16@multiplier:	
  1037                           ; 1 bytes @ 0x8
  1038                           
  1039  0078                     ___xxtofl@sign:	
  1040                           ; 1 bytes @ 0x8
  1041                           
  1042  0078                     Lcd_Write_String@i:	
  1043                           ; 1 bytes @ 0x8
  1044                           
  1045  0078                     ___lwdiv@dividend:	
  1046                           ; 2 bytes @ 0x8
  1047                           
  1048                           
  1049                           ; 2 bytes @ 0x8
  1050  0078                     	ds	1
  1051  0079                     ___xxtofl@exp:
  1052  0079                     ___awdiv@dividend:	
  1053                           ; 1 bytes @ 0x9
  1054                           
  1055  0079                     ___lldiv@quotient:	
  1056                           ; 2 bytes @ 0x9
  1057                           
  1058                           
  1059                           ; 4 bytes @ 0x9
  1060  0079                     	ds	1
  1061  007A                     ??___lwdiv:
  1062  007A                     ___xxtofl@arg:	
  1063                           ; 1 bytes @ 0xA
  1064                           
  1065                           
  1066                           ; 4 bytes @ 0xA
  1067  007A                     	ds	1
  1068  007B                     ??___awdiv:
  1069  007B                     ___lwdiv@quotient:	
  1070                           ; 1 bytes @ 0xB
  1071                           
  1072                           
  1073                           ; 2 bytes @ 0xB
  1074  007B                     	ds	2
  1075  007D                     ___lldiv@counter:
  1076  007D                     ___lwdiv@counter:	
  1077                           ; 1 bytes @ 0xD
  1078                           
  1079                           
  1080                           ; 1 bytes @ 0xD
  1081  007D                     	ds	1
  1082  007E                     ??___flsub:
  1083                           
  1084                           	psect	cstackBANK0
  1085  0020                     __pcstackBANK0:	
  1086                           ; 1 bytes @ 0xE
  1087                           
  1088  0020                     ??_leer_ADC:
  1089  0020                     ?_Sensor:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0020                     ?___llmod:	
  1093                           ; 4 bytes @ 0x0
  1094                           
  1095  0020                     ___awdiv@counter:	
  1096                           ; 4 bytes @ 0x0
  1097                           
  1098  0020                     __div_to_l_@quot:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0020                     __tdiv_to_l_@quot:	
  1102                           ; 4 bytes @ 0x0
  1103                           
  1104  0020                     ___llmod@divisor:	
  1105                           ; 4 bytes @ 0x0
  1106                           
  1107                           
  1108                           ; 4 bytes @ 0x0
  1109  0020                     	ds	1
  1110  0021                     ___awdiv@sign:
  1111                           
  1112                           ; 1 bytes @ 0x1
  1113  0021                     	ds	1
  1114  0022                     ___awdiv@quotient:
  1115                           
  1116                           ; 2 bytes @ 0x2
  1117  0022                     	ds	2
  1118  0024                     ??_Sensor:
  1119  0024                     ?___flmul:	
  1120                           ; 1 bytes @ 0x4
  1121                           
  1122  0024                     __div_to_l_@cntr:	
  1123                           ; 4 bytes @ 0x4
  1124                           
  1125  0024                     __tdiv_to_l_@cntr:	
  1126                           ; 1 bytes @ 0x4
  1127                           
  1128  0024                     ___llmod@dividend:	
  1129                           ; 1 bytes @ 0x4
  1130                           
  1131  0024                     ___flmul@b:	
  1132                           ; 4 bytes @ 0x4
  1133                           
  1134                           
  1135                           ; 4 bytes @ 0x4
  1136  0024                     	ds	1
  1137  0025                     __div_to_l_@exp1:
  1138  0025                     __tdiv_to_l_@exp1:	
  1139                           ; 1 bytes @ 0x5
  1140                           
  1141                           
  1142                           ; 1 bytes @ 0x5
  1143  0025                     	ds	3
  1144  0028                     ??___llmod:
  1145  0028                     ___flmul@a:	
  1146                           ; 1 bytes @ 0x8
  1147                           
  1148                           
  1149                           ; 4 bytes @ 0x8
  1150  0028                     	ds	1
  1151  0029                     ___llmod@counter:
  1152                           
  1153                           ; 1 bytes @ 0x9
  1154  0029                     	ds	3
  1155  002C                     ??___flmul:
  1156                           
  1157                           ; 1 bytes @ 0xC
  1158  002C                     	ds	5
  1159  0031                     ___flmul@sign:
  1160                           
  1161                           ; 1 bytes @ 0x11
  1162  0031                     	ds	1
  1163  0032                     ___flmul@grs:
  1164                           
  1165                           ; 4 bytes @ 0x12
  1166  0032                     	ds	4
  1167  0036                     ___flmul@aexp:
  1168                           
  1169                           ; 1 bytes @ 0x16
  1170  0036                     	ds	1
  1171  0037                     ___flmul@bexp:
  1172                           
  1173                           ; 1 bytes @ 0x17
  1174  0037                     	ds	1
  1175  0038                     ___flmul@prod:
  1176                           
  1177                           ; 4 bytes @ 0x18
  1178  0038                     	ds	4
  1179  003C                     ___flmul@temp:
  1180                           
  1181                           ; 2 bytes @ 0x1C
  1182  003C                     	ds	2
  1183  003E                     ?_fround:
  1184  003E                     ?_scale:	
  1185                           ; 4 bytes @ 0x1E
  1186                           
  1187                           
  1188                           ; 4 bytes @ 0x1E
  1189  003E                     	ds	4
  1190  0042                     ??_fround:
  1191  0042                     ??_scale:	
  1192                           ; 1 bytes @ 0x22
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0x22
  1196  0042                     	ds	7
  1197  0049                     _fround$1134:
  1198                           
  1199                           ; 4 bytes @ 0x29
  1200  0049                     	ds	3
  1201  004C                     _scale$1135:
  1202                           
  1203                           ; 4 bytes @ 0x2C
  1204  004C                     	ds	1
  1205  004D                     _fround$1133:
  1206                           
  1207                           ; 4 bytes @ 0x2D
  1208  004D                     	ds	3
  1209  0050                     scale@scl:
  1210                           
  1211                           ; 1 bytes @ 0x30
  1212  0050                     	ds	1
  1213  0051                     ?___fltol:
  1214  0051                     fround@prec:	
  1215                           ; 4 bytes @ 0x31
  1216                           
  1217  0051                     ___fltol@f1:	
  1218                           ; 1 bytes @ 0x31
  1219                           
  1220                           
  1221                           ; 4 bytes @ 0x31
  1222  0051                     	ds	1
  1223  0052                     ?___fladd:
  1224  0052                     ___fladd@b:	
  1225                           ; 4 bytes @ 0x32
  1226                           
  1227                           
  1228                           ; 4 bytes @ 0x32
  1229  0052                     	ds	3
  1230  0055                     ??___fltol:
  1231                           
  1232                           ; 1 bytes @ 0x35
  1233  0055                     	ds	1
  1234  0056                     ___fladd@a:
  1235                           
  1236                           ; 4 bytes @ 0x36
  1237  0056                     	ds	4
  1238  005A                     ??___fladd:
  1239  005A                     ___fltol@sign1:	
  1240                           ; 1 bytes @ 0x3A
  1241                           
  1242                           
  1243                           ; 1 bytes @ 0x3A
  1244  005A                     	ds	1
  1245  005B                     ___fltol@exp1:
  1246                           
  1247                           ; 1 bytes @ 0x3B
  1248  005B                     	ds	7
  1249  0062                     ___fladd@signs:
  1250                           
  1251                           ; 1 bytes @ 0x42
  1252  0062                     	ds	1
  1253  0063                     ___fladd@aexp:
  1254                           
  1255                           ; 1 bytes @ 0x43
  1256  0063                     	ds	1
  1257  0064                     ___fladd@bexp:
  1258                           
  1259                           ; 1 bytes @ 0x44
  1260  0064                     	ds	1
  1261  0065                     ___fladd@grs:
  1262                           
  1263                           ; 1 bytes @ 0x45
  1264  0065                     	ds	1
  1265  0066                     ?___flsub:
  1266  0066                     ___flsub@a:	
  1267                           ; 4 bytes @ 0x46
  1268                           
  1269                           
  1270                           ; 4 bytes @ 0x46
  1271  0066                     	ds	4
  1272  006A                     ___flsub@b:
  1273                           
  1274                           ; 4 bytes @ 0x4A
  1275  006A                     	ds	4
  1276                           
  1277                           	psect	maintext
  1278  011B                     __pmaintext:	
  1279 ;;
  1280 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1281 ;;
  1282 ;; *************** function _main *****************
  1283 ;; Defined at:
  1284 ;;		line 66 in file "main.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : B00/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         0       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0
  1300 ;;      Temps:          0       0       3       0       0
  1301 ;;      Totals:         0       0       3       0       0
  1302 ;;Total ram usage:        3 bytes
  1303 ;; Hardware stack levels required when called:    4
  1304 ;; This function calls:
  1305 ;;		_Baudios
  1306 ;;		_Conteo
  1307 ;;		_LCD_clean
  1308 ;;		_Lcd_Init
  1309 ;;		_Lcd_Set_Cursor
  1310 ;;		_Lcd_Write_String
  1311 ;;		_OSCILADOR
  1312 ;;		_Sensor
  1313 ;;		_Write_USART
  1314 ;;		_Write_USART_String
  1315 ;;		_config_rcsta
  1316 ;;		_config_txsta
  1317 ;;		_leer_ADC
  1318 ;;		_setup
  1319 ;;		_sprintf
  1320 ;; This function is called by:
  1321 ;;		Startup code after reset
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           
  1326                           ;psect for function _main
  1327  011B                     _main:
  1328  011B                     l3701:	
  1329                           ;incstack = 0
  1330                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1331                           
  1332                           
  1333                           ;main.c: 67:     setup();
  1334  011B  160A  158A  2206  120A  118A  	fcall	_setup
  1335                           
  1336                           ;main.c: 68:     OSCILADOR();
  1337  0120  160A  158A  2131  120A  118A  	fcall	_OSCILADOR
  1338                           
  1339                           ;main.c: 69:     Baudios();
  1340  0125  160A  158A  212C  120A  118A  	fcall	_Baudios
  1341  012A                     l3703:
  1342                           
  1343                           ;main.c: 70:     config_txsta();
  1344  012A  160A  158A  214D  120A  118A  	fcall	_config_txsta
  1345  012F                     l3705:
  1346                           
  1347                           ;main.c: 71:     config_rcsta();
  1348  012F  160A  158A  213D  120A  118A  	fcall	_config_rcsta
  1349                           
  1350                           ;main.c: 72:     Lcd_Init();
  1351  0134  160A  158A  261F  120A  118A  	fcall	_Lcd_Init
  1352                           
  1353                           ;main.c: 73:     LCD_clean();
  1354  0139  160A  158A  216E  120A  118A  	fcall	_LCD_clean
  1355  013E                     l169:	
  1356                           ;main.c: 77:     while(1){
  1357                           
  1358                           
  1359                           ;main.c: 78:         Conteo();
  1360  013E  160A  158A  22C5  120A  118A  	fcall	_Conteo
  1361                           
  1362                           ;main.c: 79:         leer_ADC();
  1363  0143  160A  158A  23F5  120A  118A  	fcall	_leer_ADC
  1364                           
  1365                           ;main.c: 80:         LCD_clean();
  1366  0148  160A  158A  216E  120A  118A  	fcall	_LCD_clean
  1367                           
  1368                           ;main.c: 81:         Lcd_Set_Cursor(1,1);
  1369  014D  01F4               	clrf	Lcd_Set_Cursor@y
  1370  014E  0AF4               	incf	Lcd_Set_Cursor@y,f
  1371  014F  3001               	movlw	1
  1372  0150  160A  158A  21E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1373  0155                     l3707:
  1374                           
  1375                           ;main.c: 82:         Lcd_Write_String("S1   S2   S3");
  1376  0155  30A4               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1377  0156  00F3               	movwf	Lcd_Write_String@a
  1378  0157  3080               	movlw	128
  1379  0158  00F4               	movwf	Lcd_Write_String@a+1
  1380  0159  160A  158A  236F  120A  118A  	fcall	_Lcd_Write_String
  1381  015E                     l3709:
  1382                           
  1383                           ;main.c: 84:         temp = Sensor();
  1384  015E  160A  158A  24EA  120A  118A  	fcall	_Sensor
  1385  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1386  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0165  0823               	movf	?_Sensor+3,w
  1388  0166  1683               	bsf	3,5	;RP0=1, select bank1
  1389  0167  1303               	bcf	3,6	;RP1=0, select bank1
  1390  0168  00D1               	movwf	(_temp+3)^(0+128)
  1391  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1392  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1393  016B  0822               	movf	?_Sensor+2,w
  1394  016C  1683               	bsf	3,5	;RP0=1, select bank1
  1395  016D  1303               	bcf	3,6	;RP1=0, select bank1
  1396  016E  00D0               	movwf	(_temp+2)^(0+128)
  1397  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1398  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1399  0171  0821               	movf	?_Sensor+1,w
  1400  0172  1683               	bsf	3,5	;RP0=1, select bank1
  1401  0173  1303               	bcf	3,6	;RP1=0, select bank1
  1402  0174  00CF               	movwf	(_temp+1)^(0+128)
  1403  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1404  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1405  0177  0820               	movf	?_Sensor,w
  1406  0178  1683               	bsf	3,5	;RP0=1, select bank1
  1407  0179  1303               	bcf	3,6	;RP1=0, select bank1
  1408  017A  00CE               	movwf	_temp^(0+128)
  1409                           
  1410                           ;main.c: 86:         sprintf(data, "%1.0f   %d   %3.0f" ,volt,cont,temp);
  1411  017B  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1412  017C  00CB               	movwf	??_main^(0+128)
  1413  017D  084B               	movf	??_main^(0+128),w
  1414  017E  00A0               	movwf	sprintf@f^(0+128)
  1415  017F  0855               	movf	(_volt+3)^(0+128),w
  1416  0180  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1417  0181  0854               	movf	(_volt+2)^(0+128),w
  1418  0182  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1419  0183  0853               	movf	(_volt+1)^(0+128),w
  1420  0184  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1421  0185  0852               	movf	_volt^(0+128),w
  1422  0186  00A1               	movwf	(?_sprintf^(0+128)+1)
  1423  0187  0856               	movf	_cont^(0+128),w
  1424  0188  00CC               	movwf	(??_main+1)^(0+128)
  1425  0189  01CD               	clrf	((??_main+1)^(0+128)+1)
  1426  018A  084C               	movf	(??_main+1)^(0+128),w
  1427  018B  00A5               	movwf	(?_sprintf^(0+128)+5)
  1428  018C  084D               	movf	(??_main+2)^(0+128),w
  1429  018D  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1430  018E  0851               	movf	(_temp+3)^(0+128),w
  1431  018F  00AA               	movwf	((?_sprintf+3)^(0+128)+7)
  1432  0190  0850               	movf	(_temp+2)^(0+128),w
  1433  0191  00A9               	movwf	((?_sprintf+2)^(0+128)+7)
  1434  0192  084F               	movf	(_temp+1)^(0+128),w
  1435  0193  00A8               	movwf	((?_sprintf+1)^(0+128)+7)
  1436  0194  084E               	movf	_temp^(0+128),w
  1437  0195  00A7               	movwf	(?_sprintf^(0+128)+7)
  1438  0196  30D7               	movlw	(low (_data| 0))& (0+255)
  1439  0197  160A  118A  253E  120A  118A  	fcall	_sprintf
  1440  019C                     l3711:
  1441                           
  1442                           ;main.c: 88:         Lcd_Set_Cursor(2,1);
  1443  019C  01F4               	clrf	Lcd_Set_Cursor@y
  1444  019D  0AF4               	incf	Lcd_Set_Cursor@y,f
  1445  019E  3002               	movlw	2
  1446  019F  160A  158A  21E2  120A  118A  	fcall	_Lcd_Set_Cursor
  1447  01A4                     l3713:
  1448                           
  1449                           ;main.c: 90:         Lcd_Write_String(data);
  1450  01A4  30D7               	movlw	(low (_data| 0))& (0+255)
  1451  01A5  00F3               	movwf	Lcd_Write_String@a
  1452  01A6  3000               	movlw	0
  1453  01A7  00F4               	movwf	Lcd_Write_String@a+1
  1454  01A8  160A  158A  236F  120A  118A  	fcall	_Lcd_Write_String
  1455  01AD                     l3715:
  1456                           
  1457                           ;main.c: 92:         Write_USART_String("S1   S2   S3");
  1458  01AD  30A4               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1459  01AE  00F1               	movwf	Write_USART_String@a
  1460  01AF  3080               	movlw	128
  1461  01B0  00F2               	movwf	Write_USART_String@a+1
  1462  01B1  160A  158A  229A  120A  118A  	fcall	_Write_USART_String
  1463  01B6                     l3717:
  1464                           
  1465                           ;main.c: 94:         Write_USART(13);
  1466  01B6  300D               	movlw	13
  1467  01B7  160A  158A  2162  120A  118A  	fcall	_Write_USART
  1468  01BC                     l3719:
  1469                           
  1470                           ;main.c: 95:         Write_USART(10);
  1471  01BC  300A               	movlw	10
  1472  01BD  160A  158A  2162  120A  118A  	fcall	_Write_USART
  1473  01C2                     l3721:
  1474                           
  1475                           ;main.c: 97:         Write_USART_String(data);
  1476  01C2  30D7               	movlw	(low (_data| 0))& (0+255)
  1477  01C3  00F1               	movwf	Write_USART_String@a
  1478  01C4  3000               	movlw	0
  1479  01C5  00F2               	movwf	Write_USART_String@a+1
  1480  01C6  160A  158A  229A  120A  118A  	fcall	_Write_USART_String
  1481                           
  1482                           ;main.c: 99:         Write_USART(13);
  1483  01CB  300D               	movlw	13
  1484  01CC  160A  158A  2162  120A  118A  	fcall	_Write_USART
  1485                           
  1486                           ;main.c: 100:         Write_USART(10);
  1487  01D1  300A               	movlw	10
  1488  01D2  160A  158A  2162  120A  118A  	fcall	_Write_USART
  1489  01D7                     l3723:
  1490                           
  1491                           ;main.c: 101:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1492  01D7  3006               	movlw	6
  1493  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  1494  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  1495  01DA  00CD               	movwf	(??_main^(0+128)+2)
  1496  01DB  3013               	movlw	19
  1497  01DC  00CC               	movwf	(??_main^(0+128)+1)
  1498  01DD  30AD               	movlw	173
  1499  01DE  00CB               	movwf	??_main^(0+128)
  1500  01DF                     u5887:
  1501  01DF  0BCB               	decfsz	??_main^(0+128),f
  1502  01E0  29DF               	goto	u5887
  1503  01E1  0BCC               	decfsz	(??_main^(0+128)+1),f
  1504  01E2  29DF               	goto	u5887
  1505  01E3  0BCD               	decfsz	(??_main^(0+128)+2),f
  1506  01E4  29DF               	goto	u5887
  1507  01E5  293E               	goto	l169
  1508  01E6  120A  118A  2800   	ljmp	start
  1509  01E9                     __end_of_main:
  1510                           
  1511                           	psect	text1
  1512  153E                     __ptext1:	
  1513 ;; *************** function _sprintf *****************
  1514 ;; Defined at:
  1515 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  sp              1    wreg     PTR unsigned char 
  1518 ;;		 -> data(20), 
  1519 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1520 ;;		 -> STR_2(19), 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  sp              1   39[BANK1 ] PTR unsigned char 
  1523 ;;		 -> data(20), 
  1524 ;;  fval            4   35[BANK1 ] PTR unsigned char 
  1525 ;;  val             4   29[BANK1 ] unsigned long 
  1526 ;;  tmpval          4   25[BANK1 ] struct .
  1527 ;;  prec            2   40[BANK1 ] int 
  1528 ;;  eexp            2   33[BANK1 ] int 
  1529 ;;  width           2   23[BANK1 ] int 
  1530 ;;  flag            2   21[BANK1 ] unsigned short 
  1531 ;;  cp              2    0        PTR const unsigned char 
  1532 ;;  len             2    0        unsigned int 
  1533 ;;  c               1   42[BANK1 ] unsigned char 
  1534 ;;  ap              1   20[BANK1 ] PTR void [1]
  1535 ;;		 -> ?_sprintf(2), 
  1536 ;;  d               1    0        unsigned char 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  2    0[BANK1 ] int 
  1539 ;; Registers used:
  1540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1546 ;;      Params:         0       0      11       0       0
  1547 ;;      Locals:         0       0      27       0       0
  1548 ;;      Temps:          0       0       5       0       0
  1549 ;;      Totals:         0       0      43       0       0
  1550 ;;Total ram usage:       43 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    3
  1553 ;; This function calls:
  1554 ;;		___awdiv
  1555 ;;		___fladd
  1556 ;;		___fleq
  1557 ;;		___flge
  1558 ;;		___flmul
  1559 ;;		___flneg
  1560 ;;		___flsub
  1561 ;;		___fltol
  1562 ;;		___lldiv
  1563 ;;		___llmod
  1564 ;;		___wmul
  1565 ;;		___xxtofl
  1566 ;;		__div_to_l_
  1567 ;;		__tdiv_to_l_
  1568 ;;		_fround
  1569 ;;		_isdigit
  1570 ;;		_scale
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _sprintf
  1578  153E                     _sprintf:
  1579                           
  1580                           ;incstack = 0
  1581                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1582                           ;sprintf@sp stored from wreg
  1583  153E  1683               	bsf	3,5	;RP0=1, select bank1
  1584  153F  1303               	bcf	3,6	;RP1=0, select bank1
  1585  1540  00C7               	movwf	sprintf@sp^(0+128)
  1586  1541                     l3407:
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1589  1541  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1590  1542  00AB               	movwf	??_sprintf^(0+128)
  1591  1543  082B               	movf	??_sprintf^(0+128),w
  1592  1544  00B4               	movwf	sprintf@ap^(0+128)
  1593  1545                     L1:
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1596  1545  120A  118A  2FD6   	goto	l3689
  1597  1548                     l3409:
  1598                           
  1599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1600  1548  3025               	movlw	37
  1601  1549  064A               	xorwf	sprintf@c^(0+128),w
  1602  154A  1903               	btfsc	3,2
  1603  154B  2D4D               	goto	u5351
  1604  154C  2D4E               	goto	u5350
  1605  154D                     u5351:
  1606  154D  2D5A               	goto	l3415
  1607  154E                     u5350:
  1608  154E                     l3411:
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1611  154E  084A               	movf	sprintf@c^(0+128),w
  1612  154F  00AB               	movwf	??_sprintf^(0+128)
  1613  1550  0847               	movf	sprintf@sp^(0+128),w
  1614  1551  0084               	movwf	4
  1615  1552  082B               	movf	??_sprintf^(0+128),w
  1616  1553  1383               	bcf	3,7	;select IRP bank0
  1617  1554  0080               	movwf	0
  1618  1555                     l3413:
  1619  1555  3001               	movlw	1
  1620  1556  00AB               	movwf	??_sprintf^(0+128)
  1621  1557  082B               	movf	??_sprintf^(0+128),w
  1622  1558  07C7               	addwf	sprintf@sp^(0+128),f
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1625  1559  2D45               	goto	L1
  1626  155A                     l3415:
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1629  155A  01B7               	clrf	sprintf@width^(0+128)
  1630  155B  01B8               	clrf	(sprintf@width+1)^(0+128)
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1633  155C  01B5               	clrf	sprintf@flag^(0+128)
  1634  155D  01B6               	clrf	(sprintf@flag+1)^(0+128)
  1635  155E                     l3417:
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1638  155E  0820               	movf	sprintf@f^(0+128),w
  1639  155F  0084               	movwf	4
  1640  1560  120A  118A  200D  160A  118A  	fcall	stringdir
  1641  1565  160A  158A  217B  160A  118A  	fcall	_isdigit
  1642  156A  1C03               	btfss	3,0
  1643  156B  2D6D               	goto	u5361
  1644  156C  2D6E               	goto	u5360
  1645  156D                     u5361:
  1646  156D  2DAE               	goto	l3429
  1647  156E                     u5360:
  1648  156E                     l3419:
  1649                           
  1650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1651  156E  1683               	bsf	3,5	;RP0=1, select bank1
  1652  156F  1303               	bcf	3,6	;RP1=0, select bank1
  1653  1570  01B7               	clrf	sprintf@width^(0+128)
  1654  1571  01B8               	clrf	(sprintf@width+1)^(0+128)
  1655  1572                     l3421:
  1656                           
  1657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1658  1572  300A               	movlw	10
  1659  1573  00F0               	movwf	___wmul@multiplier
  1660  1574  3000               	movlw	0
  1661  1575  00F1               	movwf	___wmul@multiplier+1
  1662  1576  1683               	bsf	3,5	;RP0=1, select bank1
  1663  1577  1303               	bcf	3,6	;RP1=0, select bank1
  1664  1578  0838               	movf	(sprintf@width+1)^(0+128),w
  1665  1579  00F3               	movwf	___wmul@multiplicand+1
  1666  157A  0837               	movf	sprintf@width^(0+128),w
  1667  157B  00F2               	movwf	___wmul@multiplicand
  1668  157C  160A  158A  224E  160A  118A  	fcall	___wmul
  1669  1581  0871               	movf	?___wmul+1,w
  1670  1582  1683               	bsf	3,5	;RP0=1, select bank1
  1671  1583  1303               	bcf	3,6	;RP1=0, select bank1
  1672  1584  00B8               	movwf	(sprintf@width+1)^(0+128)
  1673  1585  0870               	movf	?___wmul,w
  1674  1586  00B7               	movwf	sprintf@width^(0+128)
  1675  1587                     l3423:
  1676                           
  1677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1678  1587  0820               	movf	sprintf@f^(0+128),w
  1679  1588  0084               	movwf	4
  1680  1589  120A  118A  200D  160A  118A  	fcall	stringdir
  1681  158E  3ED0               	addlw	208
  1682  158F  00AB               	movwf	??_sprintf^(0+128)
  1683  1590  30FF               	movlw	255
  1684  1591  1803               	skipnc
  1685  1592  3000               	movlw	0
  1686  1593  00AC               	movwf	(??_sprintf^(0+128)+1)
  1687  1594  082B               	movf	??_sprintf^(0+128),w
  1688  1595  07B7               	addwf	sprintf@width^(0+128),f
  1689  1596  1803               	skipnc
  1690  1597  0AB8               	incf	(sprintf@width+1)^(0+128),f
  1691  1598  082C               	movf	(??_sprintf+1)^(0+128),w
  1692  1599  07B8               	addwf	(sprintf@width+1)^(0+128),f
  1693  159A                     l3425:
  1694  159A  3001               	movlw	1
  1695  159B  00AB               	movwf	??_sprintf^(0+128)
  1696  159C  082B               	movf	??_sprintf^(0+128),w
  1697  159D  07A0               	addwf	sprintf@f^(0+128),f
  1698  159E                     l3427:
  1699                           
  1700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1701  159E  0820               	movf	sprintf@f^(0+128),w
  1702  159F  0084               	movwf	4
  1703  15A0  120A  118A  200D  160A  118A  	fcall	stringdir
  1704  15A5  160A  158A  217B  160A  118A  	fcall	_isdigit
  1705  15AA  1803               	btfsc	3,0
  1706  15AB  2DAD               	goto	u5371
  1707  15AC  2DAE               	goto	u5370
  1708  15AD                     u5371:
  1709  15AD  2D72               	goto	l3421
  1710  15AE                     u5370:
  1711  15AE                     l3429:
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1714  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  1715  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  1716  15B0  0820               	movf	sprintf@f^(0+128),w
  1717  15B1  0084               	movwf	4
  1718  15B2  120A  118A  200D  160A  118A  	fcall	stringdir
  1719  15B7  3A2E               	xorlw	46
  1720  15B8  1D03               	skipz
  1721  15B9  2DBB               	goto	u5381
  1722  15BA  2DBC               	goto	u5380
  1723  15BB                     u5381:
  1724  15BB  2E01               	goto	l3445
  1725  15BC                     u5380:
  1726  15BC                     l3431:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1729  15BC  1736               	bsf	(sprintf@flag^(0+128)+1),6
  1730  15BD                     l3433:
  1731                           
  1732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1733  15BD  3001               	movlw	1
  1734  15BE  00AB               	movwf	??_sprintf^(0+128)
  1735  15BF  082B               	movf	??_sprintf^(0+128),w
  1736  15C0  07A0               	addwf	sprintf@f^(0+128),f
  1737  15C1                     l3435:
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1740  15C1  01C8               	clrf	sprintf@prec^(0+128)
  1741  15C2  01C9               	clrf	(sprintf@prec+1)^(0+128)
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1744  15C3  2DF0               	goto	l3443
  1745  15C4                     l3437:
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1748  15C4  300A               	movlw	10
  1749  15C5  00F0               	movwf	___wmul@multiplier
  1750  15C6  3000               	movlw	0
  1751  15C7  00F1               	movwf	___wmul@multiplier+1
  1752  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  1753  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  1754  15CA  0849               	movf	(sprintf@prec+1)^(0+128),w
  1755  15CB  00F3               	movwf	___wmul@multiplicand+1
  1756  15CC  0848               	movf	sprintf@prec^(0+128),w
  1757  15CD  00F2               	movwf	___wmul@multiplicand
  1758  15CE  160A  158A  224E  160A  118A  	fcall	___wmul
  1759  15D3  0871               	movf	?___wmul+1,w
  1760  15D4  1683               	bsf	3,5	;RP0=1, select bank1
  1761  15D5  1303               	bcf	3,6	;RP1=0, select bank1
  1762  15D6  00C9               	movwf	(sprintf@prec+1)^(0+128)
  1763  15D7  0870               	movf	?___wmul,w
  1764  15D8  00C8               	movwf	sprintf@prec^(0+128)
  1765  15D9                     l3439:
  1766                           
  1767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1768  15D9  0820               	movf	sprintf@f^(0+128),w
  1769  15DA  0084               	movwf	4
  1770  15DB  120A  118A  200D  160A  118A  	fcall	stringdir
  1771  15E0  3ED0               	addlw	208
  1772  15E1  00AB               	movwf	??_sprintf^(0+128)
  1773  15E2  30FF               	movlw	255
  1774  15E3  1803               	skipnc
  1775  15E4  3000               	movlw	0
  1776  15E5  00AC               	movwf	(??_sprintf^(0+128)+1)
  1777  15E6  082B               	movf	??_sprintf^(0+128),w
  1778  15E7  07C8               	addwf	sprintf@prec^(0+128),f
  1779  15E8  1803               	skipnc
  1780  15E9  0AC9               	incf	(sprintf@prec+1)^(0+128),f
  1781  15EA  082C               	movf	(??_sprintf+1)^(0+128),w
  1782  15EB  07C9               	addwf	(sprintf@prec+1)^(0+128),f
  1783  15EC                     l3441:
  1784  15EC  3001               	movlw	1
  1785  15ED  00AB               	movwf	??_sprintf^(0+128)
  1786  15EE  082B               	movf	??_sprintf^(0+128),w
  1787  15EF  07A0               	addwf	sprintf@f^(0+128),f
  1788  15F0                     l3443:
  1789                           
  1790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1791  15F0  0820               	movf	sprintf@f^(0+128),w
  1792  15F1  0084               	movwf	4
  1793  15F2  120A  118A  200D  160A  118A  	fcall	stringdir
  1794  15F7  160A  158A  217B  160A  118A  	fcall	_isdigit
  1795  15FC  1803               	btfsc	3,0
  1796  15FD  2DFF               	goto	u5391
  1797  15FE  2E00               	goto	u5390
  1798  15FF                     u5391:
  1799  15FF  2DC4               	goto	l3437
  1800  1600                     u5390:
  1801  1600  2E07               	goto	l3451
  1802  1601                     l3445:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1805  1601  01C8               	clrf	sprintf@prec^(0+128)
  1806  1602  01C9               	clrf	(sprintf@prec+1)^(0+128)
  1807  1603                     l3447:
  1808                           
  1809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1810  1603  1636               	bsf	(sprintf@flag^(0+128)+1),4
  1811  1604  2E07               	goto	l3451
  1812  1605                     l352:	
  1813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1814                           
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1817  1605  1536               	bsf	(sprintf@flag^(0+128)+1),2
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1820  1606  2E29               	goto	l3453
  1821  1607                     l3451:
  1822  1607  3001               	movlw	1
  1823  1608  1683               	bsf	3,5	;RP0=1, select bank1
  1824  1609  1303               	bcf	3,6	;RP1=0, select bank1
  1825  160A  07A0               	addwf	sprintf@f^(0+128),f
  1826  160B  30FF               	movlw	-1
  1827  160C  0720               	addwf	sprintf@f^(0+128),w
  1828  160D  0084               	movwf	4
  1829  160E  120A  118A  200D  160A  118A  	fcall	stringdir
  1830  1613  00CA               	movwf	sprintf@c^(0+128)
  1831  1614  00AB               	movwf	??_sprintf^(0+128)
  1832  1615  01AC               	clrf	(??_sprintf^(0+128)+1)
  1833                           
  1834                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1835                           ; Switch size 1, requested type "simple"
  1836                           ; Number of cases is 1, Range of values is 0 to 0
  1837                           ; switch strategies available:
  1838                           ; Name         Instructions Cycles
  1839                           ; simple_byte            4     3 (average)
  1840                           ; direct_byte           11     8 (fixed)
  1841                           ; jumptable            260     6 (fixed)
  1842                           ;	Chosen strategy is simple_byte
  1843  1616  082C               	movf	(??_sprintf+1)^(0+128),w
  1844  1617  3A00               	xorlw	0	; case 0
  1845  1618  1903               	skipnz
  1846  1619  2E1B               	goto	l3755
  1847  161A  2D45               	goto	L1
  1848  161B                     l3755:
  1849                           
  1850                           ; Switch size 1, requested type "simple"
  1851                           ; Number of cases is 4, Range of values is 0 to 105
  1852                           ; switch strategies available:
  1853                           ; Name         Instructions Cycles
  1854                           ; simple_byte           13     7 (average)
  1855                           ; jumptable            260     6 (fixed)
  1856                           ;	Chosen strategy is simple_byte
  1857  161B  082B               	movf	??_sprintf^(0+128),w
  1858  161C  3A00               	xorlw	0	; case 0
  1859  161D  1903               	skipnz
  1860  161E  2FFD               	goto	L3
  1861  161F  3A64               	xorlw	100	; case 100
  1862  1620  1903               	skipnz
  1863  1621  2E29               	goto	l3453
  1864  1622  3A02               	xorlw	2	; case 102
  1865  1623  1903               	skipnz
  1866  1624  2E05               	goto	l352
  1867  1625  3A0F               	xorlw	15	; case 105
  1868  1626  1903               	skipnz
  1869  1627  2E29               	goto	l3453
  1870  1628  2D45               	goto	L1
  1871  1629                     l3453:
  1872                           
  1873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1874  1629  3000               	movlw	0
  1875  162A  0535               	andwf	sprintf@flag^(0+128),w
  1876  162B  00AB               	movwf	??_sprintf^(0+128)
  1877  162C  3007               	movlw	7
  1878  162D  0536               	andwf	(sprintf@flag+1)^(0+128),w
  1879  162E  00AC               	movwf	(??_sprintf+1)^(0+128)
  1880  162F  082B               	movf	??_sprintf^(0+128),w
  1881  1630  042C               	iorwf	(??_sprintf^(0+128)+1),w
  1882  1631  1903               	btfsc	3,2
  1883  1632  2E34               	goto	u5401
  1884  1633  2E37               	goto	u5400
  1885  1634                     u5401:
  1886  1634  120A  118A  2E39   	goto	l3611
  1887  1637                     u5400:
  1888  1637                     l3455:
  1889                           
  1890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1891  1637  1E36               	btfss	(sprintf@flag+1)^(0+128),4
  1892  1638  2E3A               	goto	u5411
  1893  1639  2E3B               	goto	u5410
  1894  163A                     u5411:
  1895  163A  2E3F               	goto	l3459
  1896  163B                     u5410:
  1897  163B                     l3457:
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1900  163B  3006               	movlw	6
  1901  163C  00C8               	movwf	sprintf@prec^(0+128)
  1902  163D  3000               	movlw	0
  1903  163E  00C9               	movwf	(sprintf@prec^(0+128)+1)
  1904  163F                     l3459:
  1905                           
  1906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1907  163F  0834               	movf	sprintf@ap^(0+128),w
  1908  1640  0084               	movwf	4
  1909  1641  1383               	bcf	3,7	;select IRP bank0
  1910  1642  0800               	movf	0,w
  1911  1643  00C3               	movwf	sprintf@fval^(0+128)
  1912  1644  0A84               	incf	4,f
  1913  1645  0800               	movf	0,w
  1914  1646  00C4               	movwf	(sprintf@fval+1)^(0+128)
  1915  1647  0A84               	incf	4,f
  1916  1648  0800               	movf	0,w
  1917  1649  00C5               	movwf	(sprintf@fval+2)^(0+128)
  1918  164A  0A84               	incf	4,f
  1919  164B  0800               	movf	0,w
  1920  164C  00C6               	movwf	(sprintf@fval+3)^(0+128)
  1921  164D                     l3461:
  1922  164D  3004               	movlw	4
  1923  164E  00AB               	movwf	??_sprintf^(0+128)
  1924  164F  082B               	movf	??_sprintf^(0+128),w
  1925  1650  07B4               	addwf	sprintf@ap^(0+128),f
  1926  1651                     l3463:
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1929  1651  0846               	movf	(sprintf@fval+3)^(0+128),w
  1930  1652  00F3               	movwf	___flge@ff1+3
  1931  1653  0845               	movf	(sprintf@fval+2)^(0+128),w
  1932  1654  00F2               	movwf	___flge@ff1+2
  1933  1655  0844               	movf	(sprintf@fval+1)^(0+128),w
  1934  1656  00F1               	movwf	___flge@ff1+1
  1935  1657  0843               	movf	sprintf@fval^(0+128),w
  1936  1658  00F0               	movwf	___flge@ff1
  1937  1659  3000               	movlw	0
  1938  165A  00F7               	movwf	___flge@ff2+3
  1939  165B  3000               	movlw	0
  1940  165C  00F6               	movwf	___flge@ff2+2
  1941  165D  3000               	movlw	0
  1942  165E  00F5               	movwf	___flge@ff2+1
  1943  165F  3000               	movlw	0
  1944  1660  00F4               	movwf	___flge@ff2
  1945  1661  160A  118A  2009  160A  118A  	fcall	___flge
  1946  1666  1803               	btfsc	3,0
  1947  1667  2E69               	goto	u5421
  1948  1668  2E6A               	goto	u5420
  1949  1669                     u5421:
  1950  1669  2E87               	goto	l3469
  1951  166A                     u5420:
  1952  166A                     l3465:
  1953                           
  1954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1955  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1956  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1957  166C  0846               	movf	(sprintf@fval+3)^(0+128),w
  1958  166D  00F3               	movwf	___flneg@f1+3
  1959  166E  0845               	movf	(sprintf@fval+2)^(0+128),w
  1960  166F  00F2               	movwf	___flneg@f1+2
  1961  1670  0844               	movf	(sprintf@fval+1)^(0+128),w
  1962  1671  00F1               	movwf	___flneg@f1+1
  1963  1672  0843               	movf	sprintf@fval^(0+128),w
  1964  1673  00F0               	movwf	___flneg@f1
  1965  1674  160A  158A  2157  160A  118A  	fcall	___flneg
  1966  1679  0873               	movf	?___flneg+3,w
  1967  167A  1683               	bsf	3,5	;RP0=1, select bank1
  1968  167B  1303               	bcf	3,6	;RP1=0, select bank1
  1969  167C  00C6               	movwf	(sprintf@fval+3)^(0+128)
  1970  167D  0872               	movf	?___flneg+2,w
  1971  167E  00C5               	movwf	(sprintf@fval+2)^(0+128)
  1972  167F  0871               	movf	?___flneg+1,w
  1973  1680  00C4               	movwf	(sprintf@fval+1)^(0+128)
  1974  1681  0870               	movf	?___flneg,w
  1975  1682  00C3               	movwf	sprintf@fval^(0+128)
  1976  1683                     l3467:
  1977                           
  1978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1979  1683  3003               	movlw	3
  1980  1684  04B5               	iorwf	sprintf@flag^(0+128),f
  1981  1685  3000               	movlw	0
  1982  1686  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
  1983  1687                     l3469:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1986  1687  1683               	bsf	3,5	;RP0=1, select bank1
  1987  1688  1303               	bcf	3,6	;RP1=0, select bank1
  1988  1689  01C1               	clrf	sprintf@eexp^(0+128)
  1989  168A  01C2               	clrf	(sprintf@eexp+1)^(0+128)
  1990  168B                     l3471:
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1993  168B  0846               	movf	(sprintf@fval+3)^(0+128),w
  1994  168C  00F3               	movwf	___fleq@ff1+3
  1995  168D  0845               	movf	(sprintf@fval+2)^(0+128),w
  1996  168E  00F2               	movwf	___fleq@ff1+2
  1997  168F  0844               	movf	(sprintf@fval+1)^(0+128),w
  1998  1690  00F1               	movwf	___fleq@ff1+1
  1999  1691  0843               	movf	sprintf@fval^(0+128),w
  2000  1692  00F0               	movwf	___fleq@ff1
  2001  1693  3000               	movlw	0
  2002  1694  00F7               	movwf	___fleq@ff2+3
  2003  1695  3000               	movlw	0
  2004  1696  00F6               	movwf	___fleq@ff2+2
  2005  1697  3000               	movlw	0
  2006  1698  00F5               	movwf	___fleq@ff2+1
  2007  1699  3000               	movlw	0
  2008  169A  00F4               	movwf	___fleq@ff2
  2009  169B  160A  158A  2443  160A  118A  	fcall	___fleq
  2010  16A0  1803               	btfsc	3,0
  2011  16A1  2EA3               	goto	u5431
  2012  16A2  2EA4               	goto	u5430
  2013  16A3                     u5431:
  2014  16A3  2F94               	goto	l3497
  2015  16A4                     u5430:
  2016  16A4                     l3473:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2019  16A4  1003               	clrc
  2020  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  2021  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  2022  16A7  0D45               	rlf	(sprintf@fval+2)^(0+128),w
  2023  16A8  0D46               	rlf	(sprintf@fval+3)^(0+128),w
  2024  16A9  3E82               	addlw	130
  2025  16AA  00C1               	movwf	sprintf@eexp^(0+128)
  2026  16AB  30FF               	movlw	255
  2027  16AC  1803               	skipnc
  2028  16AD  3000               	movlw	0
  2029  16AE  00C2               	movwf	(sprintf@eexp^(0+128)+1)
  2030  16AF                     l3475:
  2031                           
  2032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2033  16AF  30FF               	movlw	255
  2034  16B0  07C1               	addwf	sprintf@eexp^(0+128),f
  2035  16B1  1803               	skipnc
  2036  16B2  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2037  16B3  30FF               	movlw	255
  2038  16B4  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2039  16B5                     l3477:
  2040                           
  2041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2042  16B5  3003               	movlw	3
  2043  16B6  00F0               	movwf	___wmul@multiplier
  2044  16B7  3000               	movlw	0
  2045  16B8  00F1               	movwf	___wmul@multiplier+1
  2046  16B9  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2047  16BA  00F3               	movwf	___wmul@multiplicand+1
  2048  16BB  0841               	movf	sprintf@eexp^(0+128),w
  2049  16BC  00F2               	movwf	___wmul@multiplicand
  2050  16BD  160A  158A  224E  160A  118A  	fcall	___wmul
  2051  16C2  0871               	movf	?___wmul+1,w
  2052  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  2053  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  2054  16C5  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  2055  16C6  0870               	movf	?___wmul,w
  2056  16C7  00C1               	movwf	sprintf@eexp^(0+128)
  2057  16C8                     l3479:
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2060  16C8  300A               	movlw	10
  2061  16C9  00F7               	movwf	___awdiv@divisor
  2062  16CA  3000               	movlw	0
  2063  16CB  00F8               	movwf	___awdiv@divisor+1
  2064  16CC  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2065  16CD  00FA               	movwf	___awdiv@dividend+1
  2066  16CE  0841               	movf	sprintf@eexp^(0+128),w
  2067  16CF  00F9               	movwf	___awdiv@dividend
  2068  16D0  160A  158A  25B6  160A  118A  	fcall	___awdiv
  2069  16D5  0878               	movf	?___awdiv+1,w
  2070  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  2071  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  2072  16D8  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  2073  16D9  0877               	movf	?___awdiv,w
  2074  16DA  00C1               	movwf	sprintf@eexp^(0+128)
  2075  16DB                     l3481:
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2078  16DB  1FC2               	btfss	(sprintf@eexp+1)^(0+128),7
  2079  16DC  2EDE               	goto	u5441
  2080  16DD  2EDF               	goto	u5440
  2081  16DE                     u5441:
  2082  16DE  2EE5               	goto	l3485
  2083  16DF                     u5440:
  2084  16DF                     l3483:
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2087  16DF  30FF               	movlw	255
  2088  16E0  07C1               	addwf	sprintf@eexp^(0+128),f
  2089  16E1  1803               	skipnc
  2090  16E2  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2091  16E3  30FF               	movlw	255
  2092  16E4  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2093  16E5                     l3485:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2096  16E5  0341               	decf	sprintf@eexp^(0+128),w
  2097  16E6  3AFF               	xorlw	255
  2098  16E7  120A  158A  2140  160A  118A  	fcall	_scale
  2099  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2100  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2101  16EE  0841               	movf	?_scale+3,w
  2102  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2103  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2104  16F1  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2105  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2106  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2107  16F4  0840               	movf	?_scale+2,w
  2108  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2109  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2110  16F7  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2111  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2112  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2113  16FA  083F               	movf	?_scale+1,w
  2114  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2115  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2116  16FD  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2117  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2118  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2119  1700  083E               	movf	?_scale,w
  2120  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2121  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2122  1703  00B9               	movwf	sprintf@tmpval^(0+128)
  2123  1704                     l3487:
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2126  1704  0846               	movf	(sprintf@fval+3)^(0+128),w
  2127  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2128  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2129  1707  00A7               	movwf	___flmul@b+3
  2130  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2131  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2132  170A  0845               	movf	(sprintf@fval+2)^(0+128),w
  2133  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2134  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2135  170D  00A6               	movwf	___flmul@b+2
  2136  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2137  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2138  1710  0844               	movf	(sprintf@fval+1)^(0+128),w
  2139  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2140  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2141  1713  00A5               	movwf	___flmul@b+1
  2142  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2143  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2144  1716  0843               	movf	sprintf@fval^(0+128),w
  2145  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2146  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2147  1719  00A4               	movwf	___flmul@b
  2148  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2149  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2150  171C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2151  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2152  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2153  171F  00AB               	movwf	___flmul@a+3
  2154  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2155  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2156  1722  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2157  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2158  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2159  1725  00AA               	movwf	___flmul@a+2
  2160  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2161  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2162  1728  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2163  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2164  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2165  172B  00A9               	movwf	___flmul@a+1
  2166  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2167  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2168  172E  0839               	movf	sprintf@tmpval^(0+128),w
  2169  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2170  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2171  1731  00A8               	movwf	___flmul@a
  2172  1732  120A  158A  249F  160A  118A  	fcall	___flmul
  2173  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2174  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2175  1739  0827               	movf	?___flmul+3,w
  2176  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2177  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2178  173C  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2179  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2180  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2181  173F  0826               	movf	?___flmul+2,w
  2182  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2183  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2184  1742  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2185  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2186  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2187  1745  0825               	movf	?___flmul+1,w
  2188  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2189  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2190  1748  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2191  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2192  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2193  174B  0824               	movf	?___flmul,w
  2194  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2195  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2196  174E  00B9               	movwf	sprintf@tmpval^(0+128)
  2197  174F                     l3489:
  2198                           
  2199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2200  174F  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2201  1750  00F3               	movwf	___flge@ff1+3
  2202  1751  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2203  1752  00F2               	movwf	___flge@ff1+2
  2204  1753  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2205  1754  00F1               	movwf	___flge@ff1+1
  2206  1755  0839               	movf	sprintf@tmpval^(0+128),w
  2207  1756  00F0               	movwf	___flge@ff1
  2208  1757  303F               	movlw	63
  2209  1758  00F7               	movwf	___flge@ff2+3
  2210  1759  3080               	movlw	128
  2211  175A  00F6               	movwf	___flge@ff2+2
  2212  175B  3000               	movlw	0
  2213  175C  00F5               	movwf	___flge@ff2+1
  2214  175D  3000               	movlw	0
  2215  175E  00F4               	movwf	___flge@ff2
  2216  175F  160A  118A  2009  160A  118A  	fcall	___flge
  2217  1764  1803               	btfsc	3,0
  2218  1765  2F67               	goto	u5451
  2219  1766  2F68               	goto	u5450
  2220  1767                     u5451:
  2221  1767  2F71               	goto	l3493
  2222  1768                     u5450:
  2223  1768                     l3491:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2226  1768  30FF               	movlw	255
  2227  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2228  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2229  176B  07C1               	addwf	sprintf@eexp^(0+128),f
  2230  176C  1803               	skipnc
  2231  176D  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2232  176E  30FF               	movlw	255
  2233  176F  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2234  1770  2F94               	goto	l3497
  2235  1771                     l3493:
  2236  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2237  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2238  1773  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2239  1774  00F3               	movwf	___flge@ff1+3
  2240  1775  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2241  1776  00F2               	movwf	___flge@ff1+2
  2242  1777  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2243  1778  00F1               	movwf	___flge@ff1+1
  2244  1779  0839               	movf	sprintf@tmpval^(0+128),w
  2245  177A  00F0               	movwf	___flge@ff1
  2246  177B  3041               	movlw	65
  2247  177C  00F7               	movwf	___flge@ff2+3
  2248  177D  3020               	movlw	32
  2249  177E  00F6               	movwf	___flge@ff2+2
  2250  177F  3000               	movlw	0
  2251  1780  00F5               	movwf	___flge@ff2+1
  2252  1781  3000               	movlw	0
  2253  1782  00F4               	movwf	___flge@ff2
  2254  1783  160A  118A  2009  160A  118A  	fcall	___flge
  2255  1788  1C03               	btfss	3,0
  2256  1789  2F8B               	goto	u5461
  2257  178A  2F8C               	goto	u5460
  2258  178B                     u5461:
  2259  178B  2F94               	goto	l3497
  2260  178C                     u5460:
  2261  178C                     l3495:
  2262                           
  2263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2264  178C  3001               	movlw	1
  2265  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2266  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2267  178F  07C1               	addwf	sprintf@eexp^(0+128),f
  2268  1790  1803               	skipnc
  2269  1791  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2270  1792  3000               	movlw	0
  2271  1793  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2272  1794                     l3497:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2275  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2276  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2277  1796  0849               	movf	(sprintf@prec+1)^(0+128),w
  2278  1797  3A80               	xorlw	128
  2279  1798  00FF               	movwf	btemp+1
  2280  1799  3080               	movlw	128
  2281  179A  027F               	subwf	btemp+1,w
  2282  179B  1D03               	skipz
  2283  179C  2F9F               	goto	u5475
  2284  179D  300D               	movlw	13
  2285  179E  0248               	subwf	sprintf@prec^(0+128),w
  2286  179F                     u5475:
  2287  179F  1803               	skipnc
  2288  17A0  2FA2               	goto	u5471
  2289  17A1  2FA3               	goto	u5470
  2290  17A2                     u5471:
  2291  17A2  2FEA               	goto	l3501
  2292  17A3                     u5470:
  2293  17A3                     l3499:
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2296  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2297  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2298  17A5  0848               	movf	sprintf@prec^(0+128),w
  2299  17A6  160A  118A  20AB  160A  118A  	fcall	_fround
  2300  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2301  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2302  17AD  0841               	movf	?_fround+3,w
  2303  17AE  00D5               	movwf	___fladd@b+3
  2304  17AF  0840               	movf	?_fround+2,w
  2305  17B0  00D4               	movwf	___fladd@b+2
  2306  17B1  083F               	movf	?_fround+1,w
  2307  17B2  00D3               	movwf	___fladd@b+1
  2308  17B3  083E               	movf	?_fround,w
  2309  17B4  00D2               	movwf	___fladd@b
  2310  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2311  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2312  17B7  0846               	movf	(sprintf@fval+3)^(0+128),w
  2313  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2314  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2315  17BA  00D9               	movwf	___fladd@a+3
  2316  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2317  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2318  17BD  0845               	movf	(sprintf@fval+2)^(0+128),w
  2319  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2320  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2321  17C0  00D8               	movwf	___fladd@a+2
  2322  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2323  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2324  17C3  0844               	movf	(sprintf@fval+1)^(0+128),w
  2325  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2326  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2327  17C6  00D7               	movwf	___fladd@a+1
  2328  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2329  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2330  17C9  0843               	movf	sprintf@fval^(0+128),w
  2331  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2332  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2333  17CC  00D6               	movwf	___fladd@a
  2334  17CD  160A  118A  22B6  160A  118A  	fcall	___fladd
  2335  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2336  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2337  17D4  0855               	movf	?___fladd+3,w
  2338  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2339  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2340  17D7  00C6               	movwf	(sprintf@fval+3)^(0+128)
  2341  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2342  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2343  17DA  0854               	movf	?___fladd+2,w
  2344  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2345  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2346  17DD  00C5               	movwf	(sprintf@fval+2)^(0+128)
  2347  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2348  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2349  17E0  0853               	movf	?___fladd+1,w
  2350  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2351  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2352  17E3  00C4               	movwf	(sprintf@fval+1)^(0+128)
  2353  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2354  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2355  17E6  0852               	movf	?___fladd,w
  2356  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2357  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2358  17E9  00C3               	movwf	sprintf@fval^(0+128)
  2359  17EA                     l3501:
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2362  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2363  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2364  17EC  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2365  17ED  3A80               	xorlw	128
  2366  17EE  00FF               	movwf	btemp+1
  2367  17EF  3080               	movlw	128
  2368  17F0  027F               	subwf	btemp+1,w
  2369  17F1  1D03               	skipz
  2370  17F2  2FF5               	goto	u5485
  2371  17F3  300A               	movlw	10
  2372  17F4  0241               	subwf	sprintf@eexp^(0+128),w
  2373  17F5                     u5485:
  2374  17F5  1803               	skipnc
  2375  17F6  2FFA               	goto	u5481
  2376  17F7  120A  118A  29E9   	goto	u5480
  2377  17FA                     u5481:
  2378  17FA  120A  118A  2A3A   	goto	l3509
  2379  17FD                     L3:
  2380  17FD                     L2:
  2381  17FD  120A  118A  2FEA   	ljmp	l3691
  2382                           
  2383                           	psect	text2
  2384  0940                     __ptext2:	
  2385 ;; *************** function _scale *****************
  2386 ;; Defined at:
  2387 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  scl             1    wreg     char 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  scl             1   48[BANK0 ] char 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  4   30[BANK0 ] char 
  2394 ;; Registers used:
  2395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2401 ;;      Params:         0       4       0       0       0
  2402 ;;      Locals:         0       5       0       0       0
  2403 ;;      Temps:          0      10       0       0       0
  2404 ;;      Totals:         0      19       0       0       0
  2405 ;;Total ram usage:       19 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    2
  2408 ;; This function calls:
  2409 ;;		___awdiv
  2410 ;;		___awmod
  2411 ;;		___flmul
  2412 ;; This function is called by:
  2413 ;;		_sprintf
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _scale
  2419  0940                     _scale:
  2420                           
  2421                           ;incstack = 0
  2422                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2423                           ;scale@scl stored from wreg
  2424  0940  1283               	bcf	3,5	;RP0=0, select bank0
  2425  0941  1303               	bcf	3,6	;RP1=0, select bank0
  2426  0942  00D0               	movwf	scale@scl
  2427  0943                     l2953:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2430  0943  1FD0               	btfss	scale@scl,7
  2431  0944  2946               	goto	u4321
  2432  0945  2947               	goto	u4320
  2433  0946                     u4321:
  2434  0946  2AF4               	goto	l2975
  2435  0947                     u4320:
  2436  0947                     l2955:
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2439  0947  09D0               	comf	scale@scl,f
  2440  0948  0AD0               	incf	scale@scl,f
  2441  0949                     l2957:
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2444  0949  0850               	movf	scale@scl,w
  2445  094A  3A80               	xorlw	128
  2446  094B  3E12               	addlw	-238
  2447  094C  1C03               	skipc
  2448  094D  294F               	goto	u4331
  2449  094E  2950               	goto	u4330
  2450  094F                     u4331:
  2451  094F  2A38               	goto	l2965
  2452  0950                     u4330:
  2453  0950                     l2959:
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2456  0950  300A               	movlw	10
  2457  0951  00F7               	movwf	___awdiv@divisor
  2458  0952  3000               	movlw	0
  2459  0953  00F8               	movwf	___awdiv@divisor+1
  2460  0954  0850               	movf	scale@scl,w
  2461  0955  00F2               	movwf	___awmod@dividend
  2462  0956  01F3               	clrf	___awmod@dividend+1
  2463  0957  1BF2               	btfsc	___awmod@dividend,7
  2464  0958  03F3               	decf	___awmod@dividend+1,f
  2465  0959  3064               	movlw	100
  2466  095A  00F0               	movwf	___awmod@divisor
  2467  095B  3000               	movlw	0
  2468  095C  00F1               	movwf	___awmod@divisor+1
  2469  095D  160A  158A  2491  120A  158A  	fcall	___awmod
  2470  0962  0871               	movf	?___awmod+1,w
  2471  0963  00FA               	movwf	___awdiv@dividend+1
  2472  0964  0870               	movf	?___awmod,w
  2473  0965  00F9               	movwf	___awdiv@dividend
  2474  0966  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2475  096B  0877               	movf	?___awdiv,w
  2476  096C  1283               	bcf	3,5	;RP0=0, select bank0
  2477  096D  1303               	bcf	3,6	;RP1=0, select bank0
  2478  096E  00C2               	movwf	??_scale
  2479  096F  3001               	movlw	1
  2480  0970                     u4345:
  2481  0970  1003               	clrc
  2482  0971  0DC2               	rlf	??_scale,f
  2483  0972  3EFF               	addlw	-1
  2484  0973  1D03               	skipz
  2485  0974  2970               	goto	u4345
  2486  0975  1003               	clrc
  2487  0976  0D42               	rlf	??_scale,w
  2488  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2489  0978  0084               	movwf	4
  2490  0979  120A  118A  200D  120A  158A  	fcall	stringdir
  2491  097E  00C3               	movwf	??_scale+1
  2492  097F  120A  118A  200D  120A  158A  	fcall	stringdir
  2493  0984  00C4               	movwf	??_scale+2
  2494  0985  120A  118A  200D  120A  158A  	fcall	stringdir
  2495  098A  00C5               	movwf	??_scale+3
  2496  098B  120A  118A  200D  120A  158A  	fcall	stringdir
  2497  0990  00C6               	movwf	??_scale+4
  2498  0991  0846               	movf	??_scale+4,w
  2499  0992  00A7               	movwf	___flmul@b+3
  2500  0993  0845               	movf	??_scale+3,w
  2501  0994  00A6               	movwf	___flmul@b+2
  2502  0995  0844               	movf	??_scale+2,w
  2503  0996  00A5               	movwf	___flmul@b+1
  2504  0997  0843               	movf	??_scale+1,w
  2505  0998  00A4               	movwf	___flmul@b
  2506  0999  3064               	movlw	100
  2507  099A  00F7               	movwf	___awdiv@divisor
  2508  099B  3000               	movlw	0
  2509  099C  00F8               	movwf	___awdiv@divisor+1
  2510  099D  0850               	movf	scale@scl,w
  2511  099E  00F9               	movwf	___awdiv@dividend
  2512  099F  01FA               	clrf	___awdiv@dividend+1
  2513  09A0  1BF9               	btfsc	___awdiv@dividend,7
  2514  09A1  03FA               	decf	___awdiv@dividend+1,f
  2515  09A2  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2516  09A7  0877               	movf	?___awdiv,w
  2517  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  2518  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  2519  09AA  00C7               	movwf	??_scale+5
  2520  09AB  3001               	movlw	1
  2521  09AC                     u4355:
  2522  09AC  1003               	clrc
  2523  09AD  0DC7               	rlf	??_scale+5,f
  2524  09AE  3EFF               	addlw	-1
  2525  09AF  1D03               	skipz
  2526  09B0  29AC               	goto	u4355
  2527  09B1  1003               	clrc
  2528  09B2  0D47               	rlf	??_scale+5,w
  2529  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2530  09B4  0084               	movwf	4
  2531  09B5  120A  118A  200D  120A  158A  	fcall	stringdir
  2532  09BA  00C8               	movwf	??_scale+6
  2533  09BB  120A  118A  200D  120A  158A  	fcall	stringdir
  2534  09C0  00C9               	movwf	??_scale+7
  2535  09C1  120A  118A  200D  120A  158A  	fcall	stringdir
  2536  09C6  00CA               	movwf	??_scale+8
  2537  09C7  120A  118A  200D  120A  158A  	fcall	stringdir
  2538  09CC  00CB               	movwf	??_scale+9
  2539  09CD  084B               	movf	??_scale+9,w
  2540  09CE  00AB               	movwf	___flmul@a+3
  2541  09CF  084A               	movf	??_scale+8,w
  2542  09D0  00AA               	movwf	___flmul@a+2
  2543  09D1  0849               	movf	??_scale+7,w
  2544  09D2  00A9               	movwf	___flmul@a+1
  2545  09D3  0848               	movf	??_scale+6,w
  2546  09D4  00A8               	movwf	___flmul@a
  2547  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  2548  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  2549  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  2550  09DC  0827               	movf	?___flmul+3,w
  2551  09DD  00CF               	movwf	_scale$1135+3
  2552  09DE  0826               	movf	?___flmul+2,w
  2553  09DF  00CE               	movwf	_scale$1135+2
  2554  09E0  0825               	movf	?___flmul+1,w
  2555  09E1  00CD               	movwf	_scale$1135+1
  2556  09E2  0824               	movf	?___flmul,w
  2557  09E3  00CC               	movwf	_scale$1135
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2560  09E4  300A               	movlw	10
  2561  09E5  00F0               	movwf	___awmod@divisor
  2562  09E6  3000               	movlw	0
  2563  09E7  00F1               	movwf	___awmod@divisor+1
  2564  09E8  0850               	movf	scale@scl,w
  2565  09E9  00F2               	movwf	___awmod@dividend
  2566  09EA  01F3               	clrf	___awmod@dividend+1
  2567  09EB  1BF2               	btfsc	___awmod@dividend,7
  2568  09EC  03F3               	decf	___awmod@dividend+1,f
  2569  09ED  160A  158A  2491  120A  158A  	fcall	___awmod
  2570  09F2  0870               	movf	?___awmod,w
  2571  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  2572  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  2573  09F5  00C2               	movwf	??_scale
  2574  09F6  3001               	movlw	1
  2575  09F7                     u4365:
  2576  09F7  1003               	clrc
  2577  09F8  0DC2               	rlf	??_scale,f
  2578  09F9  3EFF               	addlw	-1
  2579  09FA  1D03               	skipz
  2580  09FB  29F7               	goto	u4365
  2581  09FC  1003               	clrc
  2582  09FD  0D42               	rlf	??_scale,w
  2583  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2584  09FF  0084               	movwf	4
  2585  0A00  120A  118A  200D  120A  158A  	fcall	stringdir
  2586  0A05  00C3               	movwf	??_scale+1
  2587  0A06  120A  118A  200D  120A  158A  	fcall	stringdir
  2588  0A0B  00C4               	movwf	??_scale+2
  2589  0A0C  120A  118A  200D  120A  158A  	fcall	stringdir
  2590  0A11  00C5               	movwf	??_scale+3
  2591  0A12  120A  118A  200D  120A  158A  	fcall	stringdir
  2592  0A17  00C6               	movwf	??_scale+4
  2593  0A18  0846               	movf	??_scale+4,w
  2594  0A19  00A7               	movwf	___flmul@b+3
  2595  0A1A  0845               	movf	??_scale+3,w
  2596  0A1B  00A6               	movwf	___flmul@b+2
  2597  0A1C  0844               	movf	??_scale+2,w
  2598  0A1D  00A5               	movwf	___flmul@b+1
  2599  0A1E  0843               	movf	??_scale+1,w
  2600  0A1F  00A4               	movwf	___flmul@b
  2601  0A20  084F               	movf	_scale$1135+3,w
  2602  0A21  00AB               	movwf	___flmul@a+3
  2603  0A22  084E               	movf	_scale$1135+2,w
  2604  0A23  00AA               	movwf	___flmul@a+2
  2605  0A24  084D               	movf	_scale$1135+1,w
  2606  0A25  00A9               	movwf	___flmul@a+1
  2607  0A26  084C               	movf	_scale$1135,w
  2608  0A27  00A8               	movwf	___flmul@a
  2609  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  2610  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  2612  0A2F  0827               	movf	?___flmul+3,w
  2613  0A30  00C1               	movwf	?_scale+3
  2614  0A31  0826               	movf	?___flmul+2,w
  2615  0A32  00C0               	movwf	?_scale+2
  2616  0A33  0825               	movf	?___flmul+1,w
  2617  0A34  00BF               	movwf	?_scale+1
  2618  0A35  0824               	movf	?___flmul,w
  2619  0A36  00BE               	movwf	?_scale
  2620  0A37  2C9E               	goto	l330
  2621  0A38                     l2965:
  2622  0A38  0850               	movf	scale@scl,w
  2623  0A39  3A80               	xorlw	128
  2624  0A3A  3E75               	addlw	-139
  2625  0A3B  1C03               	skipc
  2626  0A3C  2A3E               	goto	u4371
  2627  0A3D  2A3F               	goto	u4370
  2628  0A3E                     u4371:
  2629  0A3E  2AC7               	goto	l2971
  2630  0A3F                     u4370:
  2631  0A3F                     l2967:
  2632                           
  2633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2634  0A3F  300A               	movlw	10
  2635  0A40  00F0               	movwf	___awmod@divisor
  2636  0A41  3000               	movlw	0
  2637  0A42  00F1               	movwf	___awmod@divisor+1
  2638  0A43  0850               	movf	scale@scl,w
  2639  0A44  00F2               	movwf	___awmod@dividend
  2640  0A45  01F3               	clrf	___awmod@dividend+1
  2641  0A46  1BF2               	btfsc	___awmod@dividend,7
  2642  0A47  03F3               	decf	___awmod@dividend+1,f
  2643  0A48  160A  158A  2491  120A  158A  	fcall	___awmod
  2644  0A4D  0870               	movf	?___awmod,w
  2645  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  2646  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  2647  0A50  00C2               	movwf	??_scale
  2648  0A51  3001               	movlw	1
  2649  0A52                     u4385:
  2650  0A52  1003               	clrc
  2651  0A53  0DC2               	rlf	??_scale,f
  2652  0A54  3EFF               	addlw	-1
  2653  0A55  1D03               	skipz
  2654  0A56  2A52               	goto	u4385
  2655  0A57  1003               	clrc
  2656  0A58  0D42               	rlf	??_scale,w
  2657  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2658  0A5A  0084               	movwf	4
  2659  0A5B  120A  118A  200D  120A  158A  	fcall	stringdir
  2660  0A60  00C3               	movwf	??_scale+1
  2661  0A61  120A  118A  200D  120A  158A  	fcall	stringdir
  2662  0A66  00C4               	movwf	??_scale+2
  2663  0A67  120A  118A  200D  120A  158A  	fcall	stringdir
  2664  0A6C  00C5               	movwf	??_scale+3
  2665  0A6D  120A  118A  200D  120A  158A  	fcall	stringdir
  2666  0A72  00C6               	movwf	??_scale+4
  2667  0A73  0846               	movf	??_scale+4,w
  2668  0A74  00A7               	movwf	___flmul@b+3
  2669  0A75  0845               	movf	??_scale+3,w
  2670  0A76  00A6               	movwf	___flmul@b+2
  2671  0A77  0844               	movf	??_scale+2,w
  2672  0A78  00A5               	movwf	___flmul@b+1
  2673  0A79  0843               	movf	??_scale+1,w
  2674  0A7A  00A4               	movwf	___flmul@b
  2675  0A7B  300A               	movlw	10
  2676  0A7C  00F7               	movwf	___awdiv@divisor
  2677  0A7D  3000               	movlw	0
  2678  0A7E  00F8               	movwf	___awdiv@divisor+1
  2679  0A7F  0850               	movf	scale@scl,w
  2680  0A80  00F9               	movwf	___awdiv@dividend
  2681  0A81  01FA               	clrf	___awdiv@dividend+1
  2682  0A82  1BF9               	btfsc	___awdiv@dividend,7
  2683  0A83  03FA               	decf	___awdiv@dividend+1,f
  2684  0A84  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2685  0A89  0877               	movf	?___awdiv,w
  2686  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  2687  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  2688  0A8C  00C7               	movwf	??_scale+5
  2689  0A8D  3001               	movlw	1
  2690  0A8E                     u4395:
  2691  0A8E  1003               	clrc
  2692  0A8F  0DC7               	rlf	??_scale+5,f
  2693  0A90  3EFF               	addlw	-1
  2694  0A91  1D03               	skipz
  2695  0A92  2A8E               	goto	u4395
  2696  0A93  1003               	clrc
  2697  0A94  0D47               	rlf	??_scale+5,w
  2698  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2699  0A96  0084               	movwf	4
  2700  0A97  120A  118A  200D  120A  158A  	fcall	stringdir
  2701  0A9C  00C8               	movwf	??_scale+6
  2702  0A9D  120A  118A  200D  120A  158A  	fcall	stringdir
  2703  0AA2  00C9               	movwf	??_scale+7
  2704  0AA3  120A  118A  200D  120A  158A  	fcall	stringdir
  2705  0AA8  00CA               	movwf	??_scale+8
  2706  0AA9  120A  118A  200D  120A  158A  	fcall	stringdir
  2707  0AAE  00CB               	movwf	??_scale+9
  2708  0AAF  084B               	movf	??_scale+9,w
  2709  0AB0  00AB               	movwf	___flmul@a+3
  2710  0AB1  084A               	movf	??_scale+8,w
  2711  0AB2  00AA               	movwf	___flmul@a+2
  2712  0AB3  0849               	movf	??_scale+7,w
  2713  0AB4  00A9               	movwf	___flmul@a+1
  2714  0AB5  0848               	movf	??_scale+6,w
  2715  0AB6  00A8               	movwf	___flmul@a
  2716  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  2717  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0ABE  0827               	movf	?___flmul+3,w
  2720  0ABF  00C1               	movwf	?_scale+3
  2721  0AC0  0826               	movf	?___flmul+2,w
  2722  0AC1  00C0               	movwf	?_scale+2
  2723  0AC2  0825               	movf	?___flmul+1,w
  2724  0AC3  00BF               	movwf	?_scale+1
  2725  0AC4  0824               	movf	?___flmul,w
  2726  0AC5  00BE               	movwf	?_scale
  2727  0AC6  2C9E               	goto	l330
  2728  0AC7                     l2971:
  2729                           
  2730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2731  0AC7  0850               	movf	scale@scl,w
  2732  0AC8  00C2               	movwf	??_scale
  2733  0AC9  3001               	movlw	1
  2734  0ACA                     u4405:
  2735  0ACA  1003               	clrc
  2736  0ACB  0DC2               	rlf	??_scale,f
  2737  0ACC  3EFF               	addlw	-1
  2738  0ACD  1D03               	skipz
  2739  0ACE  2ACA               	goto	u4405
  2740  0ACF  1003               	clrc
  2741  0AD0  0D42               	rlf	??_scale,w
  2742  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2743  0AD2  0084               	movwf	4
  2744  0AD3  120A  118A  200D  120A  158A  	fcall	stringdir
  2745  0AD8  00C3               	movwf	??_scale+1
  2746  0AD9  120A  118A  200D  120A  158A  	fcall	stringdir
  2747  0ADE  00C4               	movwf	??_scale+2
  2748  0ADF  120A  118A  200D  120A  158A  	fcall	stringdir
  2749  0AE4  00C5               	movwf	??_scale+3
  2750  0AE5  120A  118A  200D  120A  158A  	fcall	stringdir
  2751  0AEA  00C6               	movwf	??_scale+4
  2752  0AEB  0846               	movf	??_scale+4,w
  2753  0AEC  00C1               	movwf	?_scale+3
  2754  0AED  0845               	movf	??_scale+3,w
  2755  0AEE  00C0               	movwf	?_scale+2
  2756  0AEF  0844               	movf	??_scale+2,w
  2757  0AF0  00BF               	movwf	?_scale+1
  2758  0AF1  0843               	movf	??_scale+1,w
  2759  0AF2  00BE               	movwf	?_scale
  2760  0AF3  2C9E               	goto	l330
  2761  0AF4                     l2975:
  2762                           
  2763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2764  0AF4  0850               	movf	scale@scl,w
  2765  0AF5  3A80               	xorlw	128
  2766  0AF6  3E12               	addlw	-238
  2767  0AF7  1C03               	skipc
  2768  0AF8  2AFA               	goto	u4411
  2769  0AF9  2AFB               	goto	u4410
  2770  0AFA                     u4411:
  2771  0AFA  2BE3               	goto	l2983
  2772  0AFB                     u4410:
  2773  0AFB                     l2977:
  2774                           
  2775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2776  0AFB  300A               	movlw	10
  2777  0AFC  00F7               	movwf	___awdiv@divisor
  2778  0AFD  3000               	movlw	0
  2779  0AFE  00F8               	movwf	___awdiv@divisor+1
  2780  0AFF  0850               	movf	scale@scl,w
  2781  0B00  00F2               	movwf	___awmod@dividend
  2782  0B01  01F3               	clrf	___awmod@dividend+1
  2783  0B02  1BF2               	btfsc	___awmod@dividend,7
  2784  0B03  03F3               	decf	___awmod@dividend+1,f
  2785  0B04  3064               	movlw	100
  2786  0B05  00F0               	movwf	___awmod@divisor
  2787  0B06  3000               	movlw	0
  2788  0B07  00F1               	movwf	___awmod@divisor+1
  2789  0B08  160A  158A  2491  120A  158A  	fcall	___awmod
  2790  0B0D  0871               	movf	?___awmod+1,w
  2791  0B0E  00FA               	movwf	___awdiv@dividend+1
  2792  0B0F  0870               	movf	?___awmod,w
  2793  0B10  00F9               	movwf	___awdiv@dividend
  2794  0B11  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2795  0B16  0877               	movf	?___awdiv,w
  2796  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0B19  00C2               	movwf	??_scale
  2799  0B1A  3001               	movlw	1
  2800  0B1B                     u4425:
  2801  0B1B  1003               	clrc
  2802  0B1C  0DC2               	rlf	??_scale,f
  2803  0B1D  3EFF               	addlw	-1
  2804  0B1E  1D03               	skipz
  2805  0B1F  2B1B               	goto	u4425
  2806  0B20  1003               	clrc
  2807  0B21  0D42               	rlf	??_scale,w
  2808  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2809  0B23  0084               	movwf	4
  2810  0B24  120A  118A  200D  120A  158A  	fcall	stringdir
  2811  0B29  00C3               	movwf	??_scale+1
  2812  0B2A  120A  118A  200D  120A  158A  	fcall	stringdir
  2813  0B2F  00C4               	movwf	??_scale+2
  2814  0B30  120A  118A  200D  120A  158A  	fcall	stringdir
  2815  0B35  00C5               	movwf	??_scale+3
  2816  0B36  120A  118A  200D  120A  158A  	fcall	stringdir
  2817  0B3B  00C6               	movwf	??_scale+4
  2818  0B3C  0846               	movf	??_scale+4,w
  2819  0B3D  00A7               	movwf	___flmul@b+3
  2820  0B3E  0845               	movf	??_scale+3,w
  2821  0B3F  00A6               	movwf	___flmul@b+2
  2822  0B40  0844               	movf	??_scale+2,w
  2823  0B41  00A5               	movwf	___flmul@b+1
  2824  0B42  0843               	movf	??_scale+1,w
  2825  0B43  00A4               	movwf	___flmul@b
  2826  0B44  3064               	movlw	100
  2827  0B45  00F7               	movwf	___awdiv@divisor
  2828  0B46  3000               	movlw	0
  2829  0B47  00F8               	movwf	___awdiv@divisor+1
  2830  0B48  0850               	movf	scale@scl,w
  2831  0B49  00F9               	movwf	___awdiv@dividend
  2832  0B4A  01FA               	clrf	___awdiv@dividend+1
  2833  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  2834  0B4C  03FA               	decf	___awdiv@dividend+1,f
  2835  0B4D  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2836  0B52  0877               	movf	?___awdiv,w
  2837  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  2838  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  2839  0B55  00C7               	movwf	??_scale+5
  2840  0B56  3001               	movlw	1
  2841  0B57                     u4435:
  2842  0B57  1003               	clrc
  2843  0B58  0DC7               	rlf	??_scale+5,f
  2844  0B59  3EFF               	addlw	-1
  2845  0B5A  1D03               	skipz
  2846  0B5B  2B57               	goto	u4435
  2847  0B5C  1003               	clrc
  2848  0B5D  0D47               	rlf	??_scale+5,w
  2849  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2850  0B5F  0084               	movwf	4
  2851  0B60  120A  118A  200D  120A  158A  	fcall	stringdir
  2852  0B65  00C8               	movwf	??_scale+6
  2853  0B66  120A  118A  200D  120A  158A  	fcall	stringdir
  2854  0B6B  00C9               	movwf	??_scale+7
  2855  0B6C  120A  118A  200D  120A  158A  	fcall	stringdir
  2856  0B71  00CA               	movwf	??_scale+8
  2857  0B72  120A  118A  200D  120A  158A  	fcall	stringdir
  2858  0B77  00CB               	movwf	??_scale+9
  2859  0B78  084B               	movf	??_scale+9,w
  2860  0B79  00AB               	movwf	___flmul@a+3
  2861  0B7A  084A               	movf	??_scale+8,w
  2862  0B7B  00AA               	movwf	___flmul@a+2
  2863  0B7C  0849               	movf	??_scale+7,w
  2864  0B7D  00A9               	movwf	___flmul@a+1
  2865  0B7E  0848               	movf	??_scale+6,w
  2866  0B7F  00A8               	movwf	___flmul@a
  2867  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  2868  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  2869  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  2870  0B87  0827               	movf	?___flmul+3,w
  2871  0B88  00CF               	movwf	_scale$1135+3
  2872  0B89  0826               	movf	?___flmul+2,w
  2873  0B8A  00CE               	movwf	_scale$1135+2
  2874  0B8B  0825               	movf	?___flmul+1,w
  2875  0B8C  00CD               	movwf	_scale$1135+1
  2876  0B8D  0824               	movf	?___flmul,w
  2877  0B8E  00CC               	movwf	_scale$1135
  2878                           
  2879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2880  0B8F  300A               	movlw	10
  2881  0B90  00F0               	movwf	___awmod@divisor
  2882  0B91  3000               	movlw	0
  2883  0B92  00F1               	movwf	___awmod@divisor+1
  2884  0B93  0850               	movf	scale@scl,w
  2885  0B94  00F2               	movwf	___awmod@dividend
  2886  0B95  01F3               	clrf	___awmod@dividend+1
  2887  0B96  1BF2               	btfsc	___awmod@dividend,7
  2888  0B97  03F3               	decf	___awmod@dividend+1,f
  2889  0B98  160A  158A  2491  120A  158A  	fcall	___awmod
  2890  0B9D  0870               	movf	?___awmod,w
  2891  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  2893  0BA0  00C2               	movwf	??_scale
  2894  0BA1  3001               	movlw	1
  2895  0BA2                     u4445:
  2896  0BA2  1003               	clrc
  2897  0BA3  0DC2               	rlf	??_scale,f
  2898  0BA4  3EFF               	addlw	-1
  2899  0BA5  1D03               	skipz
  2900  0BA6  2BA2               	goto	u4445
  2901  0BA7  1003               	clrc
  2902  0BA8  0D42               	rlf	??_scale,w
  2903  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2904  0BAA  0084               	movwf	4
  2905  0BAB  120A  118A  200D  120A  158A  	fcall	stringdir
  2906  0BB0  00C3               	movwf	??_scale+1
  2907  0BB1  120A  118A  200D  120A  158A  	fcall	stringdir
  2908  0BB6  00C4               	movwf	??_scale+2
  2909  0BB7  120A  118A  200D  120A  158A  	fcall	stringdir
  2910  0BBC  00C5               	movwf	??_scale+3
  2911  0BBD  120A  118A  200D  120A  158A  	fcall	stringdir
  2912  0BC2  00C6               	movwf	??_scale+4
  2913  0BC3  0846               	movf	??_scale+4,w
  2914  0BC4  00A7               	movwf	___flmul@b+3
  2915  0BC5  0845               	movf	??_scale+3,w
  2916  0BC6  00A6               	movwf	___flmul@b+2
  2917  0BC7  0844               	movf	??_scale+2,w
  2918  0BC8  00A5               	movwf	___flmul@b+1
  2919  0BC9  0843               	movf	??_scale+1,w
  2920  0BCA  00A4               	movwf	___flmul@b
  2921  0BCB  084F               	movf	_scale$1135+3,w
  2922  0BCC  00AB               	movwf	___flmul@a+3
  2923  0BCD  084E               	movf	_scale$1135+2,w
  2924  0BCE  00AA               	movwf	___flmul@a+2
  2925  0BCF  084D               	movf	_scale$1135+1,w
  2926  0BD0  00A9               	movwf	___flmul@a+1
  2927  0BD1  084C               	movf	_scale$1135,w
  2928  0BD2  00A8               	movwf	___flmul@a
  2929  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  2930  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  2931  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  2932  0BDA  0827               	movf	?___flmul+3,w
  2933  0BDB  00C1               	movwf	?_scale+3
  2934  0BDC  0826               	movf	?___flmul+2,w
  2935  0BDD  00C0               	movwf	?_scale+2
  2936  0BDE  0825               	movf	?___flmul+1,w
  2937  0BDF  00BF               	movwf	?_scale+1
  2938  0BE0  0824               	movf	?___flmul,w
  2939  0BE1  00BE               	movwf	?_scale
  2940  0BE2  2C9E               	goto	l330
  2941  0BE3                     l2983:
  2942  0BE3  0850               	movf	scale@scl,w
  2943  0BE4  3A80               	xorlw	128
  2944  0BE5  3E75               	addlw	-139
  2945  0BE6  1C03               	skipc
  2946  0BE7  2BE9               	goto	u4451
  2947  0BE8  2BEA               	goto	u4450
  2948  0BE9                     u4451:
  2949  0BE9  2C72               	goto	l2989
  2950  0BEA                     u4450:
  2951  0BEA                     l2985:
  2952                           
  2953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2954  0BEA  300A               	movlw	10
  2955  0BEB  00F0               	movwf	___awmod@divisor
  2956  0BEC  3000               	movlw	0
  2957  0BED  00F1               	movwf	___awmod@divisor+1
  2958  0BEE  0850               	movf	scale@scl,w
  2959  0BEF  00F2               	movwf	___awmod@dividend
  2960  0BF0  01F3               	clrf	___awmod@dividend+1
  2961  0BF1  1BF2               	btfsc	___awmod@dividend,7
  2962  0BF2  03F3               	decf	___awmod@dividend+1,f
  2963  0BF3  160A  158A  2491  120A  158A  	fcall	___awmod
  2964  0BF8  0870               	movf	?___awmod,w
  2965  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0BFB  00C2               	movwf	??_scale
  2968  0BFC  3001               	movlw	1
  2969  0BFD                     u4465:
  2970  0BFD  1003               	clrc
  2971  0BFE  0DC2               	rlf	??_scale,f
  2972  0BFF  3EFF               	addlw	-1
  2973  0C00  1D03               	skipz
  2974  0C01  2BFD               	goto	u4465
  2975  0C02  1003               	clrc
  2976  0C03  0D42               	rlf	??_scale,w
  2977  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2978  0C05  0084               	movwf	4
  2979  0C06  120A  118A  200D  120A  158A  	fcall	stringdir
  2980  0C0B  00C3               	movwf	??_scale+1
  2981  0C0C  120A  118A  200D  120A  158A  	fcall	stringdir
  2982  0C11  00C4               	movwf	??_scale+2
  2983  0C12  120A  118A  200D  120A  158A  	fcall	stringdir
  2984  0C17  00C5               	movwf	??_scale+3
  2985  0C18  120A  118A  200D  120A  158A  	fcall	stringdir
  2986  0C1D  00C6               	movwf	??_scale+4
  2987  0C1E  0846               	movf	??_scale+4,w
  2988  0C1F  00A7               	movwf	___flmul@b+3
  2989  0C20  0845               	movf	??_scale+3,w
  2990  0C21  00A6               	movwf	___flmul@b+2
  2991  0C22  0844               	movf	??_scale+2,w
  2992  0C23  00A5               	movwf	___flmul@b+1
  2993  0C24  0843               	movf	??_scale+1,w
  2994  0C25  00A4               	movwf	___flmul@b
  2995  0C26  300A               	movlw	10
  2996  0C27  00F7               	movwf	___awdiv@divisor
  2997  0C28  3000               	movlw	0
  2998  0C29  00F8               	movwf	___awdiv@divisor+1
  2999  0C2A  0850               	movf	scale@scl,w
  3000  0C2B  00F9               	movwf	___awdiv@dividend
  3001  0C2C  01FA               	clrf	___awdiv@dividend+1
  3002  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3003  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3004  0C2F  160A  158A  25B6  120A  158A  	fcall	___awdiv
  3005  0C34  0877               	movf	?___awdiv,w
  3006  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0C37  00C7               	movwf	??_scale+5
  3009  0C38  3001               	movlw	1
  3010  0C39                     u4475:
  3011  0C39  1003               	clrc
  3012  0C3A  0DC7               	rlf	??_scale+5,f
  3013  0C3B  3EFF               	addlw	-1
  3014  0C3C  1D03               	skipz
  3015  0C3D  2C39               	goto	u4475
  3016  0C3E  1003               	clrc
  3017  0C3F  0D47               	rlf	??_scale+5,w
  3018  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3019  0C41  0084               	movwf	4
  3020  0C42  120A  118A  200D  120A  158A  	fcall	stringdir
  3021  0C47  00C8               	movwf	??_scale+6
  3022  0C48  120A  118A  200D  120A  158A  	fcall	stringdir
  3023  0C4D  00C9               	movwf	??_scale+7
  3024  0C4E  120A  118A  200D  120A  158A  	fcall	stringdir
  3025  0C53  00CA               	movwf	??_scale+8
  3026  0C54  120A  118A  200D  120A  158A  	fcall	stringdir
  3027  0C59  00CB               	movwf	??_scale+9
  3028  0C5A  084B               	movf	??_scale+9,w
  3029  0C5B  00AB               	movwf	___flmul@a+3
  3030  0C5C  084A               	movf	??_scale+8,w
  3031  0C5D  00AA               	movwf	___flmul@a+2
  3032  0C5E  0849               	movf	??_scale+7,w
  3033  0C5F  00A9               	movwf	___flmul@a+1
  3034  0C60  0848               	movf	??_scale+6,w
  3035  0C61  00A8               	movwf	___flmul@a
  3036  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3037  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3038  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3039  0C69  0827               	movf	?___flmul+3,w
  3040  0C6A  00C1               	movwf	?_scale+3
  3041  0C6B  0826               	movf	?___flmul+2,w
  3042  0C6C  00C0               	movwf	?_scale+2
  3043  0C6D  0825               	movf	?___flmul+1,w
  3044  0C6E  00BF               	movwf	?_scale+1
  3045  0C6F  0824               	movf	?___flmul,w
  3046  0C70  00BE               	movwf	?_scale
  3047  0C71  2C9E               	goto	l330
  3048  0C72                     l2989:
  3049                           
  3050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3051  0C72  0850               	movf	scale@scl,w
  3052  0C73  00C2               	movwf	??_scale
  3053  0C74  3001               	movlw	1
  3054  0C75                     u4485:
  3055  0C75  1003               	clrc
  3056  0C76  0DC2               	rlf	??_scale,f
  3057  0C77  3EFF               	addlw	-1
  3058  0C78  1D03               	skipz
  3059  0C79  2C75               	goto	u4485
  3060  0C7A  1003               	clrc
  3061  0C7B  0D42               	rlf	??_scale,w
  3062  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3063  0C7D  0084               	movwf	4
  3064  0C7E  120A  118A  200D  120A  158A  	fcall	stringdir
  3065  0C83  00C3               	movwf	??_scale+1
  3066  0C84  120A  118A  200D  120A  158A  	fcall	stringdir
  3067  0C89  00C4               	movwf	??_scale+2
  3068  0C8A  120A  118A  200D  120A  158A  	fcall	stringdir
  3069  0C8F  00C5               	movwf	??_scale+3
  3070  0C90  120A  118A  200D  120A  158A  	fcall	stringdir
  3071  0C95  00C6               	movwf	??_scale+4
  3072  0C96  0846               	movf	??_scale+4,w
  3073  0C97  00C1               	movwf	?_scale+3
  3074  0C98  0845               	movf	??_scale+3,w
  3075  0C99  00C0               	movwf	?_scale+2
  3076  0C9A  0844               	movf	??_scale+2,w
  3077  0C9B  00BF               	movwf	?_scale+1
  3078  0C9C  0843               	movf	??_scale+1,w
  3079  0C9D  00BE               	movwf	?_scale
  3080  0C9E                     l330:
  3081  0C9E  0008               	return
  3082  0C9F                     __end_of_scale:
  3083                           
  3084                           	psect	text3
  3085  1C91                     __ptext3:	
  3086 ;; *************** function ___awmod *****************
  3087 ;; Defined at:
  3088 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  divisor         2    0[COMMON] int 
  3091 ;;  dividend        2    2[COMMON] int 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  sign            1    6[COMMON] unsigned char 
  3094 ;;  counter         1    5[COMMON] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  2    0[COMMON] int 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3104 ;;      Params:         4       0       0       0       0
  3105 ;;      Locals:         2       0       0       0       0
  3106 ;;      Temps:          1       0       0       0       0
  3107 ;;      Totals:         7       0       0       0       0
  3108 ;;Total ram usage:        7 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_scale
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function ___awmod
  3119  1C91                     ___awmod:
  3120  1C91                     l2465:	
  3121                           ;incstack = 0
  3122                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3123                           
  3124  1C91  01F6               	clrf	___awmod@sign
  3125  1C92                     l2467:
  3126  1C92  1FF3               	btfss	___awmod@dividend+1,7
  3127  1C93  2C95               	goto	u3171
  3128  1C94  2C96               	goto	u3170
  3129  1C95                     u3171:
  3130  1C95  2C9D               	goto	l2473
  3131  1C96                     u3170:
  3132  1C96                     l2469:
  3133  1C96  09F2               	comf	___awmod@dividend,f
  3134  1C97  09F3               	comf	___awmod@dividend+1,f
  3135  1C98  0AF2               	incf	___awmod@dividend,f
  3136  1C99  1903               	skipnz
  3137  1C9A  0AF3               	incf	___awmod@dividend+1,f
  3138  1C9B                     l2471:
  3139  1C9B  01F6               	clrf	___awmod@sign
  3140  1C9C  0AF6               	incf	___awmod@sign,f
  3141  1C9D                     l2473:
  3142  1C9D  1FF1               	btfss	___awmod@divisor+1,7
  3143  1C9E  2CA0               	goto	u3181
  3144  1C9F  2CA1               	goto	u3180
  3145  1CA0                     u3181:
  3146  1CA0  2CA6               	goto	l2477
  3147  1CA1                     u3180:
  3148  1CA1                     l2475:
  3149  1CA1  09F0               	comf	___awmod@divisor,f
  3150  1CA2  09F1               	comf	___awmod@divisor+1,f
  3151  1CA3  0AF0               	incf	___awmod@divisor,f
  3152  1CA4  1903               	skipnz
  3153  1CA5  0AF1               	incf	___awmod@divisor+1,f
  3154  1CA6                     l2477:
  3155  1CA6  0870               	movf	___awmod@divisor,w
  3156  1CA7  0471               	iorwf	___awmod@divisor+1,w
  3157  1CA8  1903               	btfsc	3,2
  3158  1CA9  2CAB               	goto	u3191
  3159  1CAA  2CAC               	goto	u3190
  3160  1CAB                     u3191:
  3161  1CAB  2CDB               	goto	l2495
  3162  1CAC                     u3190:
  3163  1CAC                     l2479:
  3164  1CAC  01F5               	clrf	___awmod@counter
  3165  1CAD  0AF5               	incf	___awmod@counter,f
  3166  1CAE  2CBA               	goto	l2485
  3167  1CAF                     l2481:
  3168  1CAF  3001               	movlw	1
  3169  1CB0                     u3205:
  3170  1CB0  1003               	clrc
  3171  1CB1  0DF0               	rlf	___awmod@divisor,f
  3172  1CB2  0DF1               	rlf	___awmod@divisor+1,f
  3173  1CB3  3EFF               	addlw	-1
  3174  1CB4  1D03               	skipz
  3175  1CB5  2CB0               	goto	u3205
  3176  1CB6                     l2483:
  3177  1CB6  3001               	movlw	1
  3178  1CB7  00F4               	movwf	??___awmod
  3179  1CB8  0874               	movf	??___awmod,w
  3180  1CB9  07F5               	addwf	___awmod@counter,f
  3181  1CBA                     l2485:
  3182  1CBA  1FF1               	btfss	___awmod@divisor+1,7
  3183  1CBB  2CBD               	goto	u3211
  3184  1CBC  2CBE               	goto	u3210
  3185  1CBD                     u3211:
  3186  1CBD  2CAF               	goto	l2481
  3187  1CBE                     u3210:
  3188  1CBE                     l2487:
  3189  1CBE  0871               	movf	___awmod@divisor+1,w
  3190  1CBF  0273               	subwf	___awmod@dividend+1,w
  3191  1CC0  1D03               	skipz
  3192  1CC1  2CC4               	goto	u3225
  3193  1CC2  0870               	movf	___awmod@divisor,w
  3194  1CC3  0272               	subwf	___awmod@dividend,w
  3195  1CC4                     u3225:
  3196  1CC4  1C03               	skipc
  3197  1CC5  2CC7               	goto	u3221
  3198  1CC6  2CC8               	goto	u3220
  3199  1CC7                     u3221:
  3200  1CC7  2CCE               	goto	l2491
  3201  1CC8                     u3220:
  3202  1CC8                     l2489:
  3203  1CC8  0870               	movf	___awmod@divisor,w
  3204  1CC9  02F2               	subwf	___awmod@dividend,f
  3205  1CCA  0871               	movf	___awmod@divisor+1,w
  3206  1CCB  1C03               	skipc
  3207  1CCC  03F3               	decf	___awmod@dividend+1,f
  3208  1CCD  02F3               	subwf	___awmod@dividend+1,f
  3209  1CCE                     l2491:
  3210  1CCE  3001               	movlw	1
  3211  1CCF                     u3235:
  3212  1CCF  1003               	clrc
  3213  1CD0  0CF1               	rrf	___awmod@divisor+1,f
  3214  1CD1  0CF0               	rrf	___awmod@divisor,f
  3215  1CD2  3EFF               	addlw	-1
  3216  1CD3  1D03               	skipz
  3217  1CD4  2CCF               	goto	u3235
  3218  1CD5                     l2493:
  3219  1CD5  3001               	movlw	1
  3220  1CD6  02F5               	subwf	___awmod@counter,f
  3221  1CD7  1D03               	btfss	3,2
  3222  1CD8  2CDA               	goto	u3241
  3223  1CD9  2CDB               	goto	u3240
  3224  1CDA                     u3241:
  3225  1CDA  2CBE               	goto	l2487
  3226  1CDB                     u3240:
  3227  1CDB                     l2495:
  3228  1CDB  0876               	movf	___awmod@sign,w
  3229  1CDC  1903               	btfsc	3,2
  3230  1CDD  2CDF               	goto	u3251
  3231  1CDE  2CE0               	goto	u3250
  3232  1CDF                     u3251:
  3233  1CDF  2CE5               	goto	l2499
  3234  1CE0                     u3250:
  3235  1CE0                     l2497:
  3236  1CE0  09F2               	comf	___awmod@dividend,f
  3237  1CE1  09F3               	comf	___awmod@dividend+1,f
  3238  1CE2  0AF2               	incf	___awmod@dividend,f
  3239  1CE3  1903               	skipnz
  3240  1CE4  0AF3               	incf	___awmod@dividend+1,f
  3241  1CE5                     l2499:
  3242  1CE5  0873               	movf	___awmod@dividend+1,w
  3243  1CE6  00F1               	movwf	?___awmod+1
  3244  1CE7  0872               	movf	___awmod@dividend,w
  3245  1CE8  00F0               	movwf	?___awmod
  3246  1CE9                     l592:
  3247  1CE9  0008               	return
  3248  1CEA                     __end_of___awmod:
  3249                           
  3250                           	psect	text4
  3251  1DB6                     __ptext4:	
  3252 ;; *************** function ___awdiv *****************
  3253 ;; Defined at:
  3254 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  divisor         2    7[COMMON] int 
  3257 ;;  dividend        2    9[COMMON] int 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  quotient        2    2[BANK0 ] int 
  3260 ;;  sign            1    1[BANK0 ] unsigned char 
  3261 ;;  counter         1    0[BANK0 ] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  2    7[COMMON] int 
  3264 ;; Registers used:
  3265 ;;		wreg, status,2, status,0
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3271 ;;      Params:         4       0       0       0       0
  3272 ;;      Locals:         0       4       0       0       0
  3273 ;;      Temps:          1       0       0       0       0
  3274 ;;      Totals:         5       4       0       0       0
  3275 ;;Total ram usage:        9 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_scale
  3281 ;;		_sprintf
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           
  3286                           ;psect for function ___awdiv
  3287  1DB6                     ___awdiv:
  3288  1DB6                     l2421:	
  3289                           ;incstack = 0
  3290                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3291                           
  3292  1DB6  1283               	bcf	3,5	;RP0=0, select bank0
  3293  1DB7  1303               	bcf	3,6	;RP1=0, select bank0
  3294  1DB8  01A1               	clrf	___awdiv@sign
  3295  1DB9                     l2423:
  3296  1DB9  1FF8               	btfss	___awdiv@divisor+1,7
  3297  1DBA  2DBC               	goto	u3071
  3298  1DBB  2DBD               	goto	u3070
  3299  1DBC                     u3071:
  3300  1DBC  2DC4               	goto	l2429
  3301  1DBD                     u3070:
  3302  1DBD                     l2425:
  3303  1DBD  09F7               	comf	___awdiv@divisor,f
  3304  1DBE  09F8               	comf	___awdiv@divisor+1,f
  3305  1DBF  0AF7               	incf	___awdiv@divisor,f
  3306  1DC0  1903               	skipnz
  3307  1DC1  0AF8               	incf	___awdiv@divisor+1,f
  3308  1DC2                     l2427:
  3309  1DC2  01A1               	clrf	___awdiv@sign
  3310  1DC3  0AA1               	incf	___awdiv@sign,f
  3311  1DC4                     l2429:
  3312  1DC4  1FFA               	btfss	___awdiv@dividend+1,7
  3313  1DC5  2DC7               	goto	u3081
  3314  1DC6  2DC8               	goto	u3080
  3315  1DC7                     u3081:
  3316  1DC7  2DD1               	goto	l2435
  3317  1DC8                     u3080:
  3318  1DC8                     l2431:
  3319  1DC8  09F9               	comf	___awdiv@dividend,f
  3320  1DC9  09FA               	comf	___awdiv@dividend+1,f
  3321  1DCA  0AF9               	incf	___awdiv@dividend,f
  3322  1DCB  1903               	skipnz
  3323  1DCC  0AFA               	incf	___awdiv@dividend+1,f
  3324  1DCD                     l2433:
  3325  1DCD  3001               	movlw	1
  3326  1DCE  00FB               	movwf	??___awdiv
  3327  1DCF  087B               	movf	??___awdiv,w
  3328  1DD0  06A1               	xorwf	___awdiv@sign,f
  3329  1DD1                     l2435:
  3330  1DD1  01A2               	clrf	___awdiv@quotient
  3331  1DD2  01A3               	clrf	___awdiv@quotient+1
  3332  1DD3                     l2437:
  3333  1DD3  0877               	movf	___awdiv@divisor,w
  3334  1DD4  0478               	iorwf	___awdiv@divisor+1,w
  3335  1DD5  1903               	btfsc	3,2
  3336  1DD6  2DD8               	goto	u3091
  3337  1DD7  2DD9               	goto	u3090
  3338  1DD8                     u3091:
  3339  1DD8  2E10               	goto	l2457
  3340  1DD9                     u3090:
  3341  1DD9                     l2439:
  3342  1DD9  01A0               	clrf	___awdiv@counter
  3343  1DDA  0AA0               	incf	___awdiv@counter,f
  3344  1DDB  2DE7               	goto	l2445
  3345  1DDC                     l2441:
  3346  1DDC  3001               	movlw	1
  3347  1DDD                     u3105:
  3348  1DDD  1003               	clrc
  3349  1DDE  0DF7               	rlf	___awdiv@divisor,f
  3350  1DDF  0DF8               	rlf	___awdiv@divisor+1,f
  3351  1DE0  3EFF               	addlw	-1
  3352  1DE1  1D03               	skipz
  3353  1DE2  2DDD               	goto	u3105
  3354  1DE3                     l2443:
  3355  1DE3  3001               	movlw	1
  3356  1DE4  00FB               	movwf	??___awdiv
  3357  1DE5  087B               	movf	??___awdiv,w
  3358  1DE6  07A0               	addwf	___awdiv@counter,f
  3359  1DE7                     l2445:
  3360  1DE7  1FF8               	btfss	___awdiv@divisor+1,7
  3361  1DE8  2DEA               	goto	u3111
  3362  1DE9  2DEB               	goto	u3110
  3363  1DEA                     u3111:
  3364  1DEA  2DDC               	goto	l2441
  3365  1DEB                     u3110:
  3366  1DEB                     l2447:
  3367  1DEB  3001               	movlw	1
  3368  1DEC                     u3125:
  3369  1DEC  1003               	clrc
  3370  1DED  0DA2               	rlf	___awdiv@quotient,f
  3371  1DEE  0DA3               	rlf	___awdiv@quotient+1,f
  3372  1DEF  3EFF               	addlw	-1
  3373  1DF0  1D03               	skipz
  3374  1DF1  2DEC               	goto	u3125
  3375  1DF2  0878               	movf	___awdiv@divisor+1,w
  3376  1DF3  027A               	subwf	___awdiv@dividend+1,w
  3377  1DF4  1D03               	skipz
  3378  1DF5  2DF8               	goto	u3135
  3379  1DF6  0877               	movf	___awdiv@divisor,w
  3380  1DF7  0279               	subwf	___awdiv@dividend,w
  3381  1DF8                     u3135:
  3382  1DF8  1C03               	skipc
  3383  1DF9  2DFB               	goto	u3131
  3384  1DFA  2DFC               	goto	u3130
  3385  1DFB                     u3131:
  3386  1DFB  2E03               	goto	l2453
  3387  1DFC                     u3130:
  3388  1DFC                     l2449:
  3389  1DFC  0877               	movf	___awdiv@divisor,w
  3390  1DFD  02F9               	subwf	___awdiv@dividend,f
  3391  1DFE  0878               	movf	___awdiv@divisor+1,w
  3392  1DFF  1C03               	skipc
  3393  1E00  03FA               	decf	___awdiv@dividend+1,f
  3394  1E01  02FA               	subwf	___awdiv@dividend+1,f
  3395  1E02                     l2451:
  3396  1E02  1422               	bsf	___awdiv@quotient,0
  3397  1E03                     l2453:
  3398  1E03  3001               	movlw	1
  3399  1E04                     u3145:
  3400  1E04  1003               	clrc
  3401  1E05  0CF8               	rrf	___awdiv@divisor+1,f
  3402  1E06  0CF7               	rrf	___awdiv@divisor,f
  3403  1E07  3EFF               	addlw	-1
  3404  1E08  1D03               	skipz
  3405  1E09  2E04               	goto	u3145
  3406  1E0A                     l2455:
  3407  1E0A  3001               	movlw	1
  3408  1E0B  02A0               	subwf	___awdiv@counter,f
  3409  1E0C  1D03               	btfss	3,2
  3410  1E0D  2E0F               	goto	u3151
  3411  1E0E  2E10               	goto	u3150
  3412  1E0F                     u3151:
  3413  1E0F  2DEB               	goto	l2447
  3414  1E10                     u3150:
  3415  1E10                     l2457:
  3416  1E10  0821               	movf	___awdiv@sign,w
  3417  1E11  1903               	btfsc	3,2
  3418  1E12  2E14               	goto	u3161
  3419  1E13  2E15               	goto	u3160
  3420  1E14                     u3161:
  3421  1E14  2E1A               	goto	l2461
  3422  1E15                     u3160:
  3423  1E15                     l2459:
  3424  1E15  09A2               	comf	___awdiv@quotient,f
  3425  1E16  09A3               	comf	___awdiv@quotient+1,f
  3426  1E17  0AA2               	incf	___awdiv@quotient,f
  3427  1E18  1903               	skipnz
  3428  1E19  0AA3               	incf	___awdiv@quotient+1,f
  3429  1E1A                     l2461:
  3430  1E1A  0823               	movf	___awdiv@quotient+1,w
  3431  1E1B  00F8               	movwf	?___awdiv+1
  3432  1E1C  0822               	movf	___awdiv@quotient,w
  3433  1E1D  00F7               	movwf	?___awdiv
  3434  1E1E                     l579:
  3435  1E1E  0008               	return
  3436  1E1F                     __end_of___awdiv:
  3437                           
  3438                           	psect	text5
  3439  197B                     __ptext5:	
  3440 ;; *************** function _isdigit *****************
  3441 ;; Defined at:
  3442 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  c               1    wreg     unsigned char 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  c               1    1[COMMON] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;		None               void
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3456 ;;      Params:         0       0       0       0       0
  3457 ;;      Locals:         2       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0
  3459 ;;      Totals:         2       0       0       0       0
  3460 ;;Total ram usage:        2 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_sprintf
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           
  3470                           ;psect for function _isdigit
  3471  197B                     _isdigit:
  3472                           
  3473                           ;incstack = 0
  3474                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3475                           ;isdigit@c stored from wreg
  3476  197B  00F1               	movwf	isdigit@c
  3477  197C                     l2993:
  3478  197C  01F0               	clrf	_isdigit$935
  3479  197D                     l2995:
  3480  197D  303A               	movlw	58
  3481  197E  0271               	subwf	isdigit@c,w
  3482  197F  1803               	skipnc
  3483  1980  2982               	goto	u4491
  3484  1981  2983               	goto	u4490
  3485  1982                     u4491:
  3486  1982  298B               	goto	l3001
  3487  1983                     u4490:
  3488  1983                     l2997:
  3489  1983  3030               	movlw	48
  3490  1984  0271               	subwf	isdigit@c,w
  3491  1985  1C03               	skipc
  3492  1986  2988               	goto	u4501
  3493  1987  2989               	goto	u4500
  3494  1988                     u4501:
  3495  1988  298B               	goto	l3001
  3496  1989                     u4500:
  3497  1989                     l2999:
  3498  1989  01F0               	clrf	_isdigit$935
  3499  198A  0AF0               	incf	_isdigit$935,f
  3500  198B                     l3001:
  3501  198B  0C70               	rrf	_isdigit$935,w
  3502  198C                     l913:
  3503  198C  0008               	return
  3504  198D                     __end_of_isdigit:
  3505                           
  3506                           	psect	text6
  3507  10AB                     __ptext6:	
  3508 ;; *************** function _fround *****************
  3509 ;; Defined at:
  3510 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  prec            1    wreg     unsigned char 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  prec            1   49[BANK0 ] unsigned char 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  4   30[BANK0 ] unsigned char 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3524 ;;      Params:         0       4       0       0       0
  3525 ;;      Locals:         0       9       0       0       0
  3526 ;;      Temps:          0       7       0       0       0
  3527 ;;      Totals:         0      20       0       0       0
  3528 ;;Total ram usage:       20 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:    2
  3531 ;; This function calls:
  3532 ;;		___flmul
  3533 ;;		___lwdiv
  3534 ;;		___lwmod
  3535 ;; This function is called by:
  3536 ;;		_sprintf
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function _fround
  3542  10AB                     _fround:
  3543                           
  3544                           ;incstack = 0
  3545                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3546                           ;fround@prec stored from wreg
  3547  10AB  1283               	bcf	3,5	;RP0=0, select bank0
  3548  10AC  1303               	bcf	3,6	;RP1=0, select bank0
  3549  10AD  00D1               	movwf	fround@prec
  3550  10AE                     l2935:
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3553  10AE  306E               	movlw	110
  3554  10AF  0251               	subwf	fround@prec,w
  3555  10B0  1C03               	skipc
  3556  10B1  28B3               	goto	u4241
  3557  10B2  28B4               	goto	u4240
  3558  10B3                     u4241:
  3559  10B3  29C1               	goto	l2943
  3560  10B4                     u4240:
  3561  10B4                     l2937:
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3564  10B4  303F               	movlw	63
  3565  10B5  00A7               	movwf	___flmul@b+3
  3566  10B6  3000               	movlw	0
  3567  10B7  00A6               	movwf	___flmul@b+2
  3568  10B8  3000               	movlw	0
  3569  10B9  00A5               	movwf	___flmul@b+1
  3570  10BA  3000               	movlw	0
  3571  10BB  00A4               	movwf	___flmul@b
  3572  10BC  3064               	movlw	100
  3573  10BD  00F6               	movwf	___lwdiv@divisor
  3574  10BE  3000               	movlw	0
  3575  10BF  00F7               	movwf	___lwdiv@divisor+1
  3576  10C0  0851               	movf	fround@prec,w
  3577  10C1  00C2               	movwf	??_fround
  3578  10C2  01C3               	clrf	??_fround+1
  3579  10C3  0842               	movf	??_fround,w
  3580  10C4  00F8               	movwf	___lwdiv@dividend
  3581  10C5  0843               	movf	??_fround+1,w
  3582  10C6  00F9               	movwf	___lwdiv@dividend+1
  3583  10C7  160A  158A  23B1  160A  118A  	fcall	___lwdiv
  3584  10CC  0876               	movf	?___lwdiv,w
  3585  10CD  1283               	bcf	3,5	;RP0=0, select bank0
  3586  10CE  1303               	bcf	3,6	;RP1=0, select bank0
  3587  10CF  00C4               	movwf	??_fround+2
  3588  10D0  3001               	movlw	1
  3589  10D1                     u4255:
  3590  10D1  1003               	clrc
  3591  10D2  0DC4               	rlf	??_fround+2,f
  3592  10D3  3EFF               	addlw	-1
  3593  10D4  1D03               	skipz
  3594  10D5  28D1               	goto	u4255
  3595  10D6  1003               	clrc
  3596  10D7  0D44               	rlf	??_fround+2,w
  3597  10D8  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3598  10D9  0084               	movwf	4
  3599  10DA  120A  118A  200D  160A  118A  	fcall	stringdir
  3600  10DF  00C5               	movwf	??_fround+3
  3601  10E0  120A  118A  200D  160A  118A  	fcall	stringdir
  3602  10E5  00C6               	movwf	??_fround+4
  3603  10E6  120A  118A  200D  160A  118A  	fcall	stringdir
  3604  10EB  00C7               	movwf	??_fround+5
  3605  10EC  120A  118A  200D  160A  118A  	fcall	stringdir
  3606  10F1  00C8               	movwf	??_fround+6
  3607  10F2  0848               	movf	??_fround+6,w
  3608  10F3  00AB               	movwf	___flmul@a+3
  3609  10F4  0847               	movf	??_fround+5,w
  3610  10F5  00AA               	movwf	___flmul@a+2
  3611  10F6  0846               	movf	??_fround+4,w
  3612  10F7  00A9               	movwf	___flmul@a+1
  3613  10F8  0845               	movf	??_fround+3,w
  3614  10F9  00A8               	movwf	___flmul@a
  3615  10FA  120A  158A  249F  160A  118A  	fcall	___flmul
  3616  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  3617  1100  1303               	bcf	3,6	;RP1=0, select bank0
  3618  1101  0827               	movf	?___flmul+3,w
  3619  1102  00D0               	movwf	_fround$1133+3
  3620  1103  0826               	movf	?___flmul+2,w
  3621  1104  00CF               	movwf	_fround$1133+2
  3622  1105  0825               	movf	?___flmul+1,w
  3623  1106  00CE               	movwf	_fround$1133+1
  3624  1107  0824               	movf	?___flmul,w
  3625  1108  00CD               	movwf	_fround$1133
  3626                           
  3627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3628  1109  300A               	movlw	10
  3629  110A  00F6               	movwf	___lwdiv@divisor
  3630  110B  3000               	movlw	0
  3631  110C  00F7               	movwf	___lwdiv@divisor+1
  3632  110D  0851               	movf	fround@prec,w
  3633  110E  00C2               	movwf	??_fround
  3634  110F  01C3               	clrf	??_fround+1
  3635  1110  0842               	movf	??_fround,w
  3636  1111  00F2               	movwf	___lwmod@dividend
  3637  1112  0843               	movf	??_fround+1,w
  3638  1113  00F3               	movwf	___lwmod@dividend+1
  3639  1114  3064               	movlw	100
  3640  1115  00F0               	movwf	___lwmod@divisor
  3641  1116  3000               	movlw	0
  3642  1117  00F1               	movwf	___lwmod@divisor+1
  3643  1118  160A  158A  22F7  160A  118A  	fcall	___lwmod
  3644  111D  0871               	movf	?___lwmod+1,w
  3645  111E  00F9               	movwf	___lwdiv@dividend+1
  3646  111F  0870               	movf	?___lwmod,w
  3647  1120  00F8               	movwf	___lwdiv@dividend
  3648  1121  160A  158A  23B1  160A  118A  	fcall	___lwdiv
  3649  1126  0876               	movf	?___lwdiv,w
  3650  1127  1283               	bcf	3,5	;RP0=0, select bank0
  3651  1128  1303               	bcf	3,6	;RP1=0, select bank0
  3652  1129  00C4               	movwf	??_fround+2
  3653  112A  3001               	movlw	1
  3654  112B                     u4265:
  3655  112B  1003               	clrc
  3656  112C  0DC4               	rlf	??_fround+2,f
  3657  112D  3EFF               	addlw	-1
  3658  112E  1D03               	skipz
  3659  112F  292B               	goto	u4265
  3660  1130  1003               	clrc
  3661  1131  0D44               	rlf	??_fround+2,w
  3662  1132  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3663  1133  0084               	movwf	4
  3664  1134  120A  118A  200D  160A  118A  	fcall	stringdir
  3665  1139  00C5               	movwf	??_fround+3
  3666  113A  120A  118A  200D  160A  118A  	fcall	stringdir
  3667  113F  00C6               	movwf	??_fround+4
  3668  1140  120A  118A  200D  160A  118A  	fcall	stringdir
  3669  1145  00C7               	movwf	??_fround+5
  3670  1146  120A  118A  200D  160A  118A  	fcall	stringdir
  3671  114B  00C8               	movwf	??_fround+6
  3672  114C  0848               	movf	??_fround+6,w
  3673  114D  00A7               	movwf	___flmul@b+3
  3674  114E  0847               	movf	??_fround+5,w
  3675  114F  00A6               	movwf	___flmul@b+2
  3676  1150  0846               	movf	??_fround+4,w
  3677  1151  00A5               	movwf	___flmul@b+1
  3678  1152  0845               	movf	??_fround+3,w
  3679  1153  00A4               	movwf	___flmul@b
  3680  1154  0850               	movf	_fround$1133+3,w
  3681  1155  00AB               	movwf	___flmul@a+3
  3682  1156  084F               	movf	_fround$1133+2,w
  3683  1157  00AA               	movwf	___flmul@a+2
  3684  1158  084E               	movf	_fround$1133+1,w
  3685  1159  00A9               	movwf	___flmul@a+1
  3686  115A  084D               	movf	_fround$1133,w
  3687  115B  00A8               	movwf	___flmul@a
  3688  115C  120A  158A  249F  160A  118A  	fcall	___flmul
  3689  1161  1283               	bcf	3,5	;RP0=0, select bank0
  3690  1162  1303               	bcf	3,6	;RP1=0, select bank0
  3691  1163  0827               	movf	?___flmul+3,w
  3692  1164  00CC               	movwf	_fround$1134+3
  3693  1165  0826               	movf	?___flmul+2,w
  3694  1166  00CB               	movwf	_fround$1134+2
  3695  1167  0825               	movf	?___flmul+1,w
  3696  1168  00CA               	movwf	_fround$1134+1
  3697  1169  0824               	movf	?___flmul,w
  3698  116A  00C9               	movwf	_fround$1134
  3699                           
  3700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3701  116B  300A               	movlw	10
  3702  116C  00F0               	movwf	___lwmod@divisor
  3703  116D  3000               	movlw	0
  3704  116E  00F1               	movwf	___lwmod@divisor+1
  3705  116F  0851               	movf	fround@prec,w
  3706  1170  00C2               	movwf	??_fround
  3707  1171  01C3               	clrf	??_fround+1
  3708  1172  0842               	movf	??_fround,w
  3709  1173  00F2               	movwf	___lwmod@dividend
  3710  1174  0843               	movf	??_fround+1,w
  3711  1175  00F3               	movwf	___lwmod@dividend+1
  3712  1176  160A  158A  22F7  160A  118A  	fcall	___lwmod
  3713  117B  0870               	movf	?___lwmod,w
  3714  117C  1283               	bcf	3,5	;RP0=0, select bank0
  3715  117D  1303               	bcf	3,6	;RP1=0, select bank0
  3716  117E  00C4               	movwf	??_fround+2
  3717  117F  3001               	movlw	1
  3718  1180                     u4275:
  3719  1180  1003               	clrc
  3720  1181  0DC4               	rlf	??_fround+2,f
  3721  1182  3EFF               	addlw	-1
  3722  1183  1D03               	skipz
  3723  1184  2980               	goto	u4275
  3724  1185  1003               	clrc
  3725  1186  0D44               	rlf	??_fround+2,w
  3726  1187  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3727  1188  0084               	movwf	4
  3728  1189  120A  118A  200D  160A  118A  	fcall	stringdir
  3729  118E  00C5               	movwf	??_fround+3
  3730  118F  120A  118A  200D  160A  118A  	fcall	stringdir
  3731  1194  00C6               	movwf	??_fround+4
  3732  1195  120A  118A  200D  160A  118A  	fcall	stringdir
  3733  119A  00C7               	movwf	??_fround+5
  3734  119B  120A  118A  200D  160A  118A  	fcall	stringdir
  3735  11A0  00C8               	movwf	??_fround+6
  3736  11A1  0848               	movf	??_fround+6,w
  3737  11A2  00A7               	movwf	___flmul@b+3
  3738  11A3  0847               	movf	??_fround+5,w
  3739  11A4  00A6               	movwf	___flmul@b+2
  3740  11A5  0846               	movf	??_fround+4,w
  3741  11A6  00A5               	movwf	___flmul@b+1
  3742  11A7  0845               	movf	??_fround+3,w
  3743  11A8  00A4               	movwf	___flmul@b
  3744  11A9  084C               	movf	_fround$1134+3,w
  3745  11AA  00AB               	movwf	___flmul@a+3
  3746  11AB  084B               	movf	_fround$1134+2,w
  3747  11AC  00AA               	movwf	___flmul@a+2
  3748  11AD  084A               	movf	_fround$1134+1,w
  3749  11AE  00A9               	movwf	___flmul@a+1
  3750  11AF  0849               	movf	_fround$1134,w
  3751  11B0  00A8               	movwf	___flmul@a
  3752  11B1  120A  158A  249F  160A  118A  	fcall	___flmul
  3753  11B6  1283               	bcf	3,5	;RP0=0, select bank0
  3754  11B7  1303               	bcf	3,6	;RP1=0, select bank0
  3755  11B8  0827               	movf	?___flmul+3,w
  3756  11B9  00C1               	movwf	?_fround+3
  3757  11BA  0826               	movf	?___flmul+2,w
  3758  11BB  00C0               	movwf	?_fround+2
  3759  11BC  0825               	movf	?___flmul+1,w
  3760  11BD  00BF               	movwf	?_fround+1
  3761  11BE  0824               	movf	?___flmul,w
  3762  11BF  00BE               	movwf	?_fround
  3763  11C0  2AB5               	goto	l323
  3764  11C1                     l2943:
  3765  11C1  300B               	movlw	11
  3766  11C2  0251               	subwf	fround@prec,w
  3767  11C3  1C03               	skipc
  3768  11C4  29C6               	goto	u4281
  3769  11C5  29C7               	goto	u4280
  3770  11C6                     u4281:
  3771  11C6  2A72               	goto	l2949
  3772  11C7                     u4280:
  3773  11C7                     l2945:
  3774                           
  3775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3776  11C7  303F               	movlw	63
  3777  11C8  00A7               	movwf	___flmul@b+3
  3778  11C9  3000               	movlw	0
  3779  11CA  00A6               	movwf	___flmul@b+2
  3780  11CB  3000               	movlw	0
  3781  11CC  00A5               	movwf	___flmul@b+1
  3782  11CD  3000               	movlw	0
  3783  11CE  00A4               	movwf	___flmul@b
  3784  11CF  300A               	movlw	10
  3785  11D0  00F6               	movwf	___lwdiv@divisor
  3786  11D1  3000               	movlw	0
  3787  11D2  00F7               	movwf	___lwdiv@divisor+1
  3788  11D3  0851               	movf	fround@prec,w
  3789  11D4  00C2               	movwf	??_fround
  3790  11D5  01C3               	clrf	??_fround+1
  3791  11D6  0842               	movf	??_fround,w
  3792  11D7  00F8               	movwf	___lwdiv@dividend
  3793  11D8  0843               	movf	??_fround+1,w
  3794  11D9  00F9               	movwf	___lwdiv@dividend+1
  3795  11DA  160A  158A  23B1  160A  118A  	fcall	___lwdiv
  3796  11DF  0876               	movf	?___lwdiv,w
  3797  11E0  1283               	bcf	3,5	;RP0=0, select bank0
  3798  11E1  1303               	bcf	3,6	;RP1=0, select bank0
  3799  11E2  00C4               	movwf	??_fround+2
  3800  11E3  3001               	movlw	1
  3801  11E4                     u4295:
  3802  11E4  1003               	clrc
  3803  11E5  0DC4               	rlf	??_fround+2,f
  3804  11E6  3EFF               	addlw	-1
  3805  11E7  1D03               	skipz
  3806  11E8  29E4               	goto	u4295
  3807  11E9  1003               	clrc
  3808  11EA  0D44               	rlf	??_fround+2,w
  3809  11EB  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3810  11EC  0084               	movwf	4
  3811  11ED  120A  118A  200D  160A  118A  	fcall	stringdir
  3812  11F2  00C5               	movwf	??_fround+3
  3813  11F3  120A  118A  200D  160A  118A  	fcall	stringdir
  3814  11F8  00C6               	movwf	??_fround+4
  3815  11F9  120A  118A  200D  160A  118A  	fcall	stringdir
  3816  11FE  00C7               	movwf	??_fround+5
  3817  11FF  120A  118A  200D  160A  118A  	fcall	stringdir
  3818  1204  00C8               	movwf	??_fround+6
  3819  1205  0848               	movf	??_fround+6,w
  3820  1206  00AB               	movwf	___flmul@a+3
  3821  1207  0847               	movf	??_fround+5,w
  3822  1208  00AA               	movwf	___flmul@a+2
  3823  1209  0846               	movf	??_fround+4,w
  3824  120A  00A9               	movwf	___flmul@a+1
  3825  120B  0845               	movf	??_fround+3,w
  3826  120C  00A8               	movwf	___flmul@a
  3827  120D  120A  158A  249F  160A  118A  	fcall	___flmul
  3828  1212  1283               	bcf	3,5	;RP0=0, select bank0
  3829  1213  1303               	bcf	3,6	;RP1=0, select bank0
  3830  1214  0827               	movf	?___flmul+3,w
  3831  1215  00D0               	movwf	_fround$1133+3
  3832  1216  0826               	movf	?___flmul+2,w
  3833  1217  00CF               	movwf	_fround$1133+2
  3834  1218  0825               	movf	?___flmul+1,w
  3835  1219  00CE               	movwf	_fround$1133+1
  3836  121A  0824               	movf	?___flmul,w
  3837  121B  00CD               	movwf	_fround$1133
  3838                           
  3839                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3840  121C  300A               	movlw	10
  3841  121D  00F0               	movwf	___lwmod@divisor
  3842  121E  3000               	movlw	0
  3843  121F  00F1               	movwf	___lwmod@divisor+1
  3844  1220  0851               	movf	fround@prec,w
  3845  1221  00C2               	movwf	??_fround
  3846  1222  01C3               	clrf	??_fround+1
  3847  1223  0842               	movf	??_fround,w
  3848  1224  00F2               	movwf	___lwmod@dividend
  3849  1225  0843               	movf	??_fround+1,w
  3850  1226  00F3               	movwf	___lwmod@dividend+1
  3851  1227  160A  158A  22F7  160A  118A  	fcall	___lwmod
  3852  122C  0870               	movf	?___lwmod,w
  3853  122D  1283               	bcf	3,5	;RP0=0, select bank0
  3854  122E  1303               	bcf	3,6	;RP1=0, select bank0
  3855  122F  00C4               	movwf	??_fround+2
  3856  1230  3001               	movlw	1
  3857  1231                     u4305:
  3858  1231  1003               	clrc
  3859  1232  0DC4               	rlf	??_fround+2,f
  3860  1233  3EFF               	addlw	-1
  3861  1234  1D03               	skipz
  3862  1235  2A31               	goto	u4305
  3863  1236  1003               	clrc
  3864  1237  0D44               	rlf	??_fround+2,w
  3865  1238  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3866  1239  0084               	movwf	4
  3867  123A  120A  118A  200D  160A  118A  	fcall	stringdir
  3868  123F  00C5               	movwf	??_fround+3
  3869  1240  120A  118A  200D  160A  118A  	fcall	stringdir
  3870  1245  00C6               	movwf	??_fround+4
  3871  1246  120A  118A  200D  160A  118A  	fcall	stringdir
  3872  124B  00C7               	movwf	??_fround+5
  3873  124C  120A  118A  200D  160A  118A  	fcall	stringdir
  3874  1251  00C8               	movwf	??_fround+6
  3875  1252  0848               	movf	??_fround+6,w
  3876  1253  00A7               	movwf	___flmul@b+3
  3877  1254  0847               	movf	??_fround+5,w
  3878  1255  00A6               	movwf	___flmul@b+2
  3879  1256  0846               	movf	??_fround+4,w
  3880  1257  00A5               	movwf	___flmul@b+1
  3881  1258  0845               	movf	??_fround+3,w
  3882  1259  00A4               	movwf	___flmul@b
  3883  125A  0850               	movf	_fround$1133+3,w
  3884  125B  00AB               	movwf	___flmul@a+3
  3885  125C  084F               	movf	_fround$1133+2,w
  3886  125D  00AA               	movwf	___flmul@a+2
  3887  125E  084E               	movf	_fround$1133+1,w
  3888  125F  00A9               	movwf	___flmul@a+1
  3889  1260  084D               	movf	_fround$1133,w
  3890  1261  00A8               	movwf	___flmul@a
  3891  1262  120A  158A  249F  160A  118A  	fcall	___flmul
  3892  1267  1283               	bcf	3,5	;RP0=0, select bank0
  3893  1268  1303               	bcf	3,6	;RP1=0, select bank0
  3894  1269  0827               	movf	?___flmul+3,w
  3895  126A  00C1               	movwf	?_fround+3
  3896  126B  0826               	movf	?___flmul+2,w
  3897  126C  00C0               	movwf	?_fround+2
  3898  126D  0825               	movf	?___flmul+1,w
  3899  126E  00BF               	movwf	?_fround+1
  3900  126F  0824               	movf	?___flmul,w
  3901  1270  00BE               	movwf	?_fround
  3902  1271  2AB5               	goto	l323
  3903  1272                     l2949:
  3904                           
  3905                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3906  1272  303F               	movlw	63
  3907  1273  00A7               	movwf	___flmul@b+3
  3908  1274  3000               	movlw	0
  3909  1275  00A6               	movwf	___flmul@b+2
  3910  1276  3000               	movlw	0
  3911  1277  00A5               	movwf	___flmul@b+1
  3912  1278  3000               	movlw	0
  3913  1279  00A4               	movwf	___flmul@b
  3914  127A  0851               	movf	fround@prec,w
  3915  127B  00C2               	movwf	??_fround
  3916  127C  3001               	movlw	1
  3917  127D                     u4315:
  3918  127D  1003               	clrc
  3919  127E  0DC2               	rlf	??_fround,f
  3920  127F  3EFF               	addlw	-1
  3921  1280  1D03               	skipz
  3922  1281  2A7D               	goto	u4315
  3923  1282  1003               	clrc
  3924  1283  0D42               	rlf	??_fround,w
  3925  1284  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3926  1285  0084               	movwf	4
  3927  1286  120A  118A  200D  160A  118A  	fcall	stringdir
  3928  128B  00C3               	movwf	??_fround+1
  3929  128C  120A  118A  200D  160A  118A  	fcall	stringdir
  3930  1291  00C4               	movwf	??_fround+2
  3931  1292  120A  118A  200D  160A  118A  	fcall	stringdir
  3932  1297  00C5               	movwf	??_fround+3
  3933  1298  120A  118A  200D  160A  118A  	fcall	stringdir
  3934  129D  00C6               	movwf	??_fround+4
  3935  129E  0846               	movf	??_fround+4,w
  3936  129F  00AB               	movwf	___flmul@a+3
  3937  12A0  0845               	movf	??_fround+3,w
  3938  12A1  00AA               	movwf	___flmul@a+2
  3939  12A2  0844               	movf	??_fround+2,w
  3940  12A3  00A9               	movwf	___flmul@a+1
  3941  12A4  0843               	movf	??_fround+1,w
  3942  12A5  00A8               	movwf	___flmul@a
  3943  12A6  120A  158A  249F  160A  118A  	fcall	___flmul
  3944  12AB  1283               	bcf	3,5	;RP0=0, select bank0
  3945  12AC  1303               	bcf	3,6	;RP1=0, select bank0
  3946  12AD  0827               	movf	?___flmul+3,w
  3947  12AE  00C1               	movwf	?_fround+3
  3948  12AF  0826               	movf	?___flmul+2,w
  3949  12B0  00C0               	movwf	?_fround+2
  3950  12B1  0825               	movf	?___flmul+1,w
  3951  12B2  00BF               	movwf	?_fround+1
  3952  12B3  0824               	movf	?___flmul,w
  3953  12B4  00BE               	movwf	?_fround
  3954  12B5                     l323:
  3955  12B5  0008               	return
  3956  12B6                     __end_of_fround:
  3957                           
  3958                           	psect	text7
  3959  1AF7                     __ptext7:	
  3960 ;; *************** function ___lwmod *****************
  3961 ;; Defined at:
  3962 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  divisor         2    0[COMMON] unsigned int 
  3965 ;;  dividend        2    2[COMMON] unsigned int 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  counter         1    5[COMMON] unsigned char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  2    0[COMMON] unsigned int 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3977 ;;      Params:         4       0       0       0       0
  3978 ;;      Locals:         1       0       0       0       0
  3979 ;;      Temps:          1       0       0       0       0
  3980 ;;      Totals:         6       0       0       0       0
  3981 ;;Total ram usage:        6 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_fround
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           
  3991                           ;psect for function ___lwmod
  3992  1AF7                     ___lwmod:
  3993  1AF7                     l2529:	
  3994                           ;incstack = 0
  3995                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3996                           
  3997  1AF7  0870               	movf	___lwmod@divisor,w
  3998  1AF8  0471               	iorwf	___lwmod@divisor+1,w
  3999  1AF9  1903               	btfsc	3,2
  4000  1AFA  2AFC               	goto	u3331
  4001  1AFB  2AFD               	goto	u3330
  4002  1AFC                     u3331:
  4003  1AFC  2B2C               	goto	l2547
  4004  1AFD                     u3330:
  4005  1AFD                     l2531:
  4006  1AFD  01F5               	clrf	___lwmod@counter
  4007  1AFE  0AF5               	incf	___lwmod@counter,f
  4008  1AFF  2B0B               	goto	l2537
  4009  1B00                     l2533:
  4010  1B00  3001               	movlw	1
  4011  1B01                     u3345:
  4012  1B01  1003               	clrc
  4013  1B02  0DF0               	rlf	___lwmod@divisor,f
  4014  1B03  0DF1               	rlf	___lwmod@divisor+1,f
  4015  1B04  3EFF               	addlw	-1
  4016  1B05  1D03               	skipz
  4017  1B06  2B01               	goto	u3345
  4018  1B07                     l2535:
  4019  1B07  3001               	movlw	1
  4020  1B08  00F4               	movwf	??___lwmod
  4021  1B09  0874               	movf	??___lwmod,w
  4022  1B0A  07F5               	addwf	___lwmod@counter,f
  4023  1B0B                     l2537:
  4024  1B0B  1FF1               	btfss	___lwmod@divisor+1,7
  4025  1B0C  2B0E               	goto	u3351
  4026  1B0D  2B0F               	goto	u3350
  4027  1B0E                     u3351:
  4028  1B0E  2B00               	goto	l2533
  4029  1B0F                     u3350:
  4030  1B0F                     l2539:
  4031  1B0F  0871               	movf	___lwmod@divisor+1,w
  4032  1B10  0273               	subwf	___lwmod@dividend+1,w
  4033  1B11  1D03               	skipz
  4034  1B12  2B15               	goto	u3365
  4035  1B13  0870               	movf	___lwmod@divisor,w
  4036  1B14  0272               	subwf	___lwmod@dividend,w
  4037  1B15                     u3365:
  4038  1B15  1C03               	skipc
  4039  1B16  2B18               	goto	u3361
  4040  1B17  2B19               	goto	u3360
  4041  1B18                     u3361:
  4042  1B18  2B1F               	goto	l2543
  4043  1B19                     u3360:
  4044  1B19                     l2541:
  4045  1B19  0870               	movf	___lwmod@divisor,w
  4046  1B1A  02F2               	subwf	___lwmod@dividend,f
  4047  1B1B  0871               	movf	___lwmod@divisor+1,w
  4048  1B1C  1C03               	skipc
  4049  1B1D  03F3               	decf	___lwmod@dividend+1,f
  4050  1B1E  02F3               	subwf	___lwmod@dividend+1,f
  4051  1B1F                     l2543:
  4052  1B1F  3001               	movlw	1
  4053  1B20                     u3375:
  4054  1B20  1003               	clrc
  4055  1B21  0CF1               	rrf	___lwmod@divisor+1,f
  4056  1B22  0CF0               	rrf	___lwmod@divisor,f
  4057  1B23  3EFF               	addlw	-1
  4058  1B24  1D03               	skipz
  4059  1B25  2B20               	goto	u3375
  4060  1B26                     l2545:
  4061  1B26  3001               	movlw	1
  4062  1B27  02F5               	subwf	___lwmod@counter,f
  4063  1B28  1D03               	btfss	3,2
  4064  1B29  2B2B               	goto	u3381
  4065  1B2A  2B2C               	goto	u3380
  4066  1B2B                     u3381:
  4067  1B2B  2B0F               	goto	l2539
  4068  1B2C                     u3380:
  4069  1B2C                     l2547:
  4070  1B2C  0873               	movf	___lwmod@dividend+1,w
  4071  1B2D  00F1               	movwf	?___lwmod+1
  4072  1B2E  0872               	movf	___lwmod@dividend,w
  4073  1B2F  00F0               	movwf	?___lwmod
  4074  1B30                     l742:
  4075  1B30  0008               	return
  4076  1B31                     __end_of___lwmod:
  4077                           
  4078                           	psect	text8
  4079  1BB1                     __ptext8:	
  4080 ;; *************** function ___lwdiv *****************
  4081 ;; Defined at:
  4082 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  divisor         2    6[COMMON] unsigned int 
  4085 ;;  dividend        2    8[COMMON] unsigned int 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  quotient        2   11[COMMON] unsigned int 
  4088 ;;  counter         1   13[COMMON] unsigned char 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  2    6[COMMON] unsigned int 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4098 ;;      Params:         4       0       0       0       0
  4099 ;;      Locals:         3       0       0       0       0
  4100 ;;      Temps:          1       0       0       0       0
  4101 ;;      Totals:         8       0       0       0       0
  4102 ;;Total ram usage:        8 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_fround
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           
  4112                           ;psect for function ___lwdiv
  4113  1BB1                     ___lwdiv:
  4114  1BB1                     l2503:	
  4115                           ;incstack = 0
  4116                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4117                           
  4118  1BB1  01FB               	clrf	___lwdiv@quotient
  4119  1BB2  01FC               	clrf	___lwdiv@quotient+1
  4120  1BB3                     l2505:
  4121  1BB3  0876               	movf	___lwdiv@divisor,w
  4122  1BB4  0477               	iorwf	___lwdiv@divisor+1,w
  4123  1BB5  1903               	btfsc	3,2
  4124  1BB6  2BB8               	goto	u3261
  4125  1BB7  2BB9               	goto	u3260
  4126  1BB8                     u3261:
  4127  1BB8  2BF0               	goto	l2525
  4128  1BB9                     u3260:
  4129  1BB9                     l2507:
  4130  1BB9  01FD               	clrf	___lwdiv@counter
  4131  1BBA  0AFD               	incf	___lwdiv@counter,f
  4132  1BBB  2BC7               	goto	l2513
  4133  1BBC                     l2509:
  4134  1BBC  3001               	movlw	1
  4135  1BBD                     u3275:
  4136  1BBD  1003               	clrc
  4137  1BBE  0DF6               	rlf	___lwdiv@divisor,f
  4138  1BBF  0DF7               	rlf	___lwdiv@divisor+1,f
  4139  1BC0  3EFF               	addlw	-1
  4140  1BC1  1D03               	skipz
  4141  1BC2  2BBD               	goto	u3275
  4142  1BC3                     l2511:
  4143  1BC3  3001               	movlw	1
  4144  1BC4  00FA               	movwf	??___lwdiv
  4145  1BC5  087A               	movf	??___lwdiv,w
  4146  1BC6  07FD               	addwf	___lwdiv@counter,f
  4147  1BC7                     l2513:
  4148  1BC7  1FF7               	btfss	___lwdiv@divisor+1,7
  4149  1BC8  2BCA               	goto	u3281
  4150  1BC9  2BCB               	goto	u3280
  4151  1BCA                     u3281:
  4152  1BCA  2BBC               	goto	l2509
  4153  1BCB                     u3280:
  4154  1BCB                     l2515:
  4155  1BCB  3001               	movlw	1
  4156  1BCC                     u3295:
  4157  1BCC  1003               	clrc
  4158  1BCD  0DFB               	rlf	___lwdiv@quotient,f
  4159  1BCE  0DFC               	rlf	___lwdiv@quotient+1,f
  4160  1BCF  3EFF               	addlw	-1
  4161  1BD0  1D03               	skipz
  4162  1BD1  2BCC               	goto	u3295
  4163  1BD2  0877               	movf	___lwdiv@divisor+1,w
  4164  1BD3  0279               	subwf	___lwdiv@dividend+1,w
  4165  1BD4  1D03               	skipz
  4166  1BD5  2BD8               	goto	u3305
  4167  1BD6  0876               	movf	___lwdiv@divisor,w
  4168  1BD7  0278               	subwf	___lwdiv@dividend,w
  4169  1BD8                     u3305:
  4170  1BD8  1C03               	skipc
  4171  1BD9  2BDB               	goto	u3301
  4172  1BDA  2BDC               	goto	u3300
  4173  1BDB                     u3301:
  4174  1BDB  2BE3               	goto	l2521
  4175  1BDC                     u3300:
  4176  1BDC                     l2517:
  4177  1BDC  0876               	movf	___lwdiv@divisor,w
  4178  1BDD  02F8               	subwf	___lwdiv@dividend,f
  4179  1BDE  0877               	movf	___lwdiv@divisor+1,w
  4180  1BDF  1C03               	skipc
  4181  1BE0  03F9               	decf	___lwdiv@dividend+1,f
  4182  1BE1  02F9               	subwf	___lwdiv@dividend+1,f
  4183  1BE2                     l2519:
  4184  1BE2  147B               	bsf	___lwdiv@quotient,0
  4185  1BE3                     l2521:
  4186  1BE3  3001               	movlw	1
  4187  1BE4                     u3315:
  4188  1BE4  1003               	clrc
  4189  1BE5  0CF7               	rrf	___lwdiv@divisor+1,f
  4190  1BE6  0CF6               	rrf	___lwdiv@divisor,f
  4191  1BE7  3EFF               	addlw	-1
  4192  1BE8  1D03               	skipz
  4193  1BE9  2BE4               	goto	u3315
  4194  1BEA                     l2523:
  4195  1BEA  3001               	movlw	1
  4196  1BEB  02FD               	subwf	___lwdiv@counter,f
  4197  1BEC  1D03               	btfss	3,2
  4198  1BED  2BEF               	goto	u3321
  4199  1BEE  2BF0               	goto	u3320
  4200  1BEF                     u3321:
  4201  1BEF  2BCB               	goto	l2515
  4202  1BF0                     u3320:
  4203  1BF0                     l2525:
  4204  1BF0  087C               	movf	___lwdiv@quotient+1,w
  4205  1BF1  00F7               	movwf	?___lwdiv+1
  4206  1BF2  087B               	movf	___lwdiv@quotient,w
  4207  1BF3  00F6               	movwf	?___lwdiv
  4208  1BF4                     l732:
  4209  1BF4  0008               	return
  4210  1BF5                     __end_of___lwdiv:
  4211                           
  4212                           	psect	text9
  4213  0C9F                     __ptext9:	
  4214 ;; *************** function ___flmul *****************
  4215 ;; Defined at:
  4216 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  b               4    4[BANK0 ] unsigned int 
  4219 ;;  a               4    8[BANK0 ] unsigned int 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  prod            4   24[BANK0 ] struct .
  4222 ;;  grs             4   18[BANK0 ] unsigned long 
  4223 ;;  temp            2   28[BANK0 ] struct .
  4224 ;;  bexp            1   23[BANK0 ] unsigned char 
  4225 ;;  aexp            1   22[BANK0 ] unsigned char 
  4226 ;;  sign            1   17[BANK0 ] unsigned char 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  4    4[BANK0 ] unsigned char 
  4229 ;; Registers used:
  4230 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4236 ;;      Params:         0       8       0       0       0
  4237 ;;      Locals:         0      13       0       0       0
  4238 ;;      Temps:          0       5       0       0       0
  4239 ;;      Totals:         0      26       0       0       0
  4240 ;;Total ram usage:       26 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    1
  4243 ;; This function calls:
  4244 ;;		__Umul8_16
  4245 ;; This function is called by:
  4246 ;;		_fround
  4247 ;;		_scale
  4248 ;;		_sprintf
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           
  4253                           ;psect for function ___flmul
  4254  0C9F                     ___flmul:
  4255  0C9F                     l2745:	
  4256                           ;incstack = 0
  4257                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4258                           
  4259  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  4260  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  4261  0CA1  0827               	movf	___flmul@b+3,w
  4262  0CA2  3980               	andlw	128
  4263  0CA3  00AC               	movwf	??___flmul
  4264  0CA4  082C               	movf	??___flmul,w
  4265  0CA5  00B1               	movwf	___flmul@sign
  4266  0CA6                     l2747:
  4267  0CA6  0827               	movf	___flmul@b+3,w
  4268  0CA7  00AC               	movwf	??___flmul
  4269  0CA8  072C               	addwf	??___flmul,w
  4270  0CA9  00AD               	movwf	??___flmul+1
  4271  0CAA  082D               	movf	??___flmul+1,w
  4272  0CAB  00B7               	movwf	___flmul@bexp
  4273  0CAC                     l2749:
  4274  0CAC  1FA6               	btfss	___flmul@b+2,7
  4275  0CAD  2CAF               	goto	u3851
  4276  0CAE  2CB0               	goto	u3850
  4277  0CAF                     u3851:
  4278  0CAF  2CB1               	goto	l2753
  4279  0CB0                     u3850:
  4280  0CB0                     l2751:
  4281  0CB0  1437               	bsf	___flmul@bexp,0
  4282  0CB1                     l2753:
  4283  0CB1  0837               	movf	___flmul@bexp,w
  4284  0CB2  1903               	btfsc	3,2
  4285  0CB3  2CB5               	goto	u3861
  4286  0CB4  2CB6               	goto	u3860
  4287  0CB5                     u3861:
  4288  0CB5  2CC5               	goto	l2761
  4289  0CB6                     u3860:
  4290  0CB6                     l2755:
  4291  0CB6  0A37               	incf	___flmul@bexp,w
  4292  0CB7  1D03               	btfss	3,2
  4293  0CB8  2CBA               	goto	u3871
  4294  0CB9  2CBB               	goto	u3870
  4295  0CBA                     u3871:
  4296  0CBA  2CC3               	goto	l2759
  4297  0CBB                     u3870:
  4298  0CBB                     l2757:
  4299  0CBB  3000               	movlw	0
  4300  0CBC  00A7               	movwf	___flmul@b+3
  4301  0CBD  3000               	movlw	0
  4302  0CBE  00A6               	movwf	___flmul@b+2
  4303  0CBF  3000               	movlw	0
  4304  0CC0  00A5               	movwf	___flmul@b+1
  4305  0CC1  3000               	movlw	0
  4306  0CC2  00A4               	movwf	___flmul@b
  4307  0CC3                     l2759:
  4308  0CC3  17A6               	bsf	___flmul@b+2,7
  4309  0CC4  2CCD               	goto	l2763
  4310  0CC5                     l2761:
  4311  0CC5  3000               	movlw	0
  4312  0CC6  00A7               	movwf	___flmul@b+3
  4313  0CC7  3000               	movlw	0
  4314  0CC8  00A6               	movwf	___flmul@b+2
  4315  0CC9  3000               	movlw	0
  4316  0CCA  00A5               	movwf	___flmul@b+1
  4317  0CCB  3000               	movlw	0
  4318  0CCC  00A4               	movwf	___flmul@b
  4319  0CCD                     l2763:
  4320  0CCD  082B               	movf	___flmul@a+3,w
  4321  0CCE  3980               	andlw	128
  4322  0CCF  00AC               	movwf	??___flmul
  4323  0CD0  082C               	movf	??___flmul,w
  4324  0CD1  06B1               	xorwf	___flmul@sign,f
  4325  0CD2                     l2765:
  4326  0CD2  082B               	movf	___flmul@a+3,w
  4327  0CD3  00AC               	movwf	??___flmul
  4328  0CD4  072C               	addwf	??___flmul,w
  4329  0CD5  00AD               	movwf	??___flmul+1
  4330  0CD6  082D               	movf	??___flmul+1,w
  4331  0CD7  00B6               	movwf	___flmul@aexp
  4332  0CD8                     l2767:
  4333  0CD8  1FAA               	btfss	___flmul@a+2,7
  4334  0CD9  2CDB               	goto	u3881
  4335  0CDA  2CDC               	goto	u3880
  4336  0CDB                     u3881:
  4337  0CDB  2CDD               	goto	l2771
  4338  0CDC                     u3880:
  4339  0CDC                     l2769:
  4340  0CDC  1436               	bsf	___flmul@aexp,0
  4341  0CDD                     l2771:
  4342  0CDD  0836               	movf	___flmul@aexp,w
  4343  0CDE  1903               	btfsc	3,2
  4344  0CDF  2CE1               	goto	u3891
  4345  0CE0  2CE2               	goto	u3890
  4346  0CE1                     u3891:
  4347  0CE1  2CF1               	goto	l2779
  4348  0CE2                     u3890:
  4349  0CE2                     l2773:
  4350  0CE2  0A36               	incf	___flmul@aexp,w
  4351  0CE3  1D03               	btfss	3,2
  4352  0CE4  2CE6               	goto	u3901
  4353  0CE5  2CE7               	goto	u3900
  4354  0CE6                     u3901:
  4355  0CE6  2CEF               	goto	l2777
  4356  0CE7                     u3900:
  4357  0CE7                     l2775:
  4358  0CE7  3000               	movlw	0
  4359  0CE8  00AB               	movwf	___flmul@a+3
  4360  0CE9  3000               	movlw	0
  4361  0CEA  00AA               	movwf	___flmul@a+2
  4362  0CEB  3000               	movlw	0
  4363  0CEC  00A9               	movwf	___flmul@a+1
  4364  0CED  3000               	movlw	0
  4365  0CEE  00A8               	movwf	___flmul@a
  4366  0CEF                     l2777:
  4367  0CEF  17AA               	bsf	___flmul@a+2,7
  4368  0CF0  2CF9               	goto	l2781
  4369  0CF1                     l2779:
  4370  0CF1  3000               	movlw	0
  4371  0CF2  00AB               	movwf	___flmul@a+3
  4372  0CF3  3000               	movlw	0
  4373  0CF4  00AA               	movwf	___flmul@a+2
  4374  0CF5  3000               	movlw	0
  4375  0CF6  00A9               	movwf	___flmul@a+1
  4376  0CF7  3000               	movlw	0
  4377  0CF8  00A8               	movwf	___flmul@a
  4378  0CF9                     l2781:
  4379  0CF9  0836               	movf	___flmul@aexp,w
  4380  0CFA  1903               	btfsc	3,2
  4381  0CFB  2CFD               	goto	u3911
  4382  0CFC  2CFE               	goto	u3910
  4383  0CFD                     u3911:
  4384  0CFD  2D03               	goto	l2785
  4385  0CFE                     u3910:
  4386  0CFE                     l2783:
  4387  0CFE  0837               	movf	___flmul@bexp,w
  4388  0CFF  1D03               	btfss	3,2
  4389  0D00  2D02               	goto	u3921
  4390  0D01  2D03               	goto	u3920
  4391  0D02                     u3921:
  4392  0D02  2D0C               	goto	l2789
  4393  0D03                     u3920:
  4394  0D03                     l2785:
  4395  0D03  3000               	movlw	0
  4396  0D04  00A7               	movwf	?___flmul+3
  4397  0D05  3000               	movlw	0
  4398  0D06  00A6               	movwf	?___flmul+2
  4399  0D07  3000               	movlw	0
  4400  0D08  00A5               	movwf	?___flmul+1
  4401  0D09  3000               	movlw	0
  4402  0D0A  00A4               	movwf	?___flmul
  4403  0D0B  2FFF               	goto	l849
  4404  0D0C                     l2789:
  4405  0D0C  0824               	movf	___flmul@b,w
  4406  0D0D  00AC               	movwf	??___flmul
  4407  0D0E  082C               	movf	??___flmul,w
  4408  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  4409  0D10  082A               	movf	___flmul@a+2,w
  4410  0D11  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  4411  0D16  0871               	movf	?__Umul8_16+1,w
  4412  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  4413  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  4414  0D19  00BD               	movwf	___flmul@temp+1
  4415  0D1A  0870               	movf	?__Umul8_16,w
  4416  0D1B  00BC               	movwf	___flmul@temp
  4417  0D1C                     l2791:
  4418  0D1C  083C               	movf	___flmul@temp,w
  4419  0D1D  00AC               	movwf	??___flmul
  4420  0D1E  01AD               	clrf	??___flmul+1
  4421  0D1F  01AE               	clrf	??___flmul+2
  4422  0D20  01AF               	clrf	??___flmul+3
  4423  0D21  082F               	movf	??___flmul+3,w
  4424  0D22  00B5               	movwf	___flmul@grs+3
  4425  0D23  082E               	movf	??___flmul+2,w
  4426  0D24  00B4               	movwf	___flmul@grs+2
  4427  0D25  082D               	movf	??___flmul+1,w
  4428  0D26  00B3               	movwf	___flmul@grs+1
  4429  0D27  082C               	movf	??___flmul,w
  4430  0D28  00B2               	movwf	___flmul@grs
  4431  0D29                     l2793:
  4432  0D29  083D               	movf	___flmul@temp+1,w
  4433  0D2A  00AC               	movwf	??___flmul
  4434  0D2B  01AD               	clrf	??___flmul+1
  4435  0D2C  01AE               	clrf	??___flmul+2
  4436  0D2D  01AF               	clrf	??___flmul+3
  4437  0D2E  082F               	movf	??___flmul+3,w
  4438  0D2F  00BB               	movwf	___flmul@prod+3
  4439  0D30  082E               	movf	??___flmul+2,w
  4440  0D31  00BA               	movwf	___flmul@prod+2
  4441  0D32  082D               	movf	??___flmul+1,w
  4442  0D33  00B9               	movwf	___flmul@prod+1
  4443  0D34  082C               	movf	??___flmul,w
  4444  0D35  00B8               	movwf	___flmul@prod
  4445  0D36  0825               	movf	___flmul@b+1,w
  4446  0D37  00AC               	movwf	??___flmul
  4447  0D38  082C               	movf	??___flmul,w
  4448  0D39  00F0               	movwf	__Umul8_16@multiplicand
  4449  0D3A  0829               	movf	___flmul@a+1,w
  4450  0D3B  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  4451  0D40  0871               	movf	?__Umul8_16+1,w
  4452  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4453  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4454  0D43  00BD               	movwf	___flmul@temp+1
  4455  0D44  0870               	movf	?__Umul8_16,w
  4456  0D45  00BC               	movwf	___flmul@temp
  4457  0D46                     l2795:
  4458  0D46  083C               	movf	___flmul@temp,w
  4459  0D47  00AC               	movwf	??___flmul
  4460  0D48  01AD               	clrf	??___flmul+1
  4461  0D49  01AE               	clrf	??___flmul+2
  4462  0D4A  01AF               	clrf	??___flmul+3
  4463  0D4B  082C               	movf	??___flmul,w
  4464  0D4C  07B2               	addwf	___flmul@grs,f
  4465  0D4D  082D               	movf	??___flmul+1,w
  4466  0D4E  1103               	clrz
  4467  0D4F  1803               	skipnc
  4468  0D50  3E01               	addlw	1
  4469  0D51  1903               	skipnz
  4470  0D52  2D54               	goto	u3931
  4471  0D53  07B3               	addwf	___flmul@grs+1,f
  4472  0D54                     u3931:
  4473  0D54  082E               	movf	??___flmul+2,w
  4474  0D55  1103               	clrz
  4475  0D56  1803               	skipnc
  4476  0D57  3E01               	addlw	1
  4477  0D58  1903               	skipnz
  4478  0D59  2D5B               	goto	u3932
  4479  0D5A  07B4               	addwf	___flmul@grs+2,f
  4480  0D5B                     u3932:
  4481  0D5B  082F               	movf	??___flmul+3,w
  4482  0D5C  1103               	clrz
  4483  0D5D  1803               	skipnc
  4484  0D5E  3E01               	addlw	1
  4485  0D5F  1903               	skipnz
  4486  0D60  2D62               	goto	u3933
  4487  0D61  07B5               	addwf	___flmul@grs+3,f
  4488  0D62                     u3933:
  4489  0D62                     l2797:
  4490  0D62  083D               	movf	___flmul@temp+1,w
  4491  0D63  00AC               	movwf	??___flmul
  4492  0D64  01AD               	clrf	??___flmul+1
  4493  0D65  01AE               	clrf	??___flmul+2
  4494  0D66  01AF               	clrf	??___flmul+3
  4495  0D67  082C               	movf	??___flmul,w
  4496  0D68  07B8               	addwf	___flmul@prod,f
  4497  0D69  082D               	movf	??___flmul+1,w
  4498  0D6A  1103               	clrz
  4499  0D6B  1803               	skipnc
  4500  0D6C  3E01               	addlw	1
  4501  0D6D  1903               	skipnz
  4502  0D6E  2D70               	goto	u3941
  4503  0D6F  07B9               	addwf	___flmul@prod+1,f
  4504  0D70                     u3941:
  4505  0D70  082E               	movf	??___flmul+2,w
  4506  0D71  1103               	clrz
  4507  0D72  1803               	skipnc
  4508  0D73  3E01               	addlw	1
  4509  0D74  1903               	skipnz
  4510  0D75  2D77               	goto	u3942
  4511  0D76  07BA               	addwf	___flmul@prod+2,f
  4512  0D77                     u3942:
  4513  0D77  082F               	movf	??___flmul+3,w
  4514  0D78  1103               	clrz
  4515  0D79  1803               	skipnc
  4516  0D7A  3E01               	addlw	1
  4517  0D7B  1903               	skipnz
  4518  0D7C  2D7E               	goto	u3943
  4519  0D7D  07BB               	addwf	___flmul@prod+3,f
  4520  0D7E                     u3943:
  4521  0D7E  0826               	movf	___flmul@b+2,w
  4522  0D7F  00AC               	movwf	??___flmul
  4523  0D80  082C               	movf	??___flmul,w
  4524  0D81  00F0               	movwf	__Umul8_16@multiplicand
  4525  0D82  0828               	movf	___flmul@a,w
  4526  0D83  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  4527  0D88  0871               	movf	?__Umul8_16+1,w
  4528  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  4529  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  4530  0D8B  00BD               	movwf	___flmul@temp+1
  4531  0D8C  0870               	movf	?__Umul8_16,w
  4532  0D8D  00BC               	movwf	___flmul@temp
  4533  0D8E                     l2799:
  4534  0D8E  083C               	movf	___flmul@temp,w
  4535  0D8F  00AC               	movwf	??___flmul
  4536  0D90  01AD               	clrf	??___flmul+1
  4537  0D91  01AE               	clrf	??___flmul+2
  4538  0D92  01AF               	clrf	??___flmul+3
  4539  0D93  082C               	movf	??___flmul,w
  4540  0D94  07B2               	addwf	___flmul@grs,f
  4541  0D95  082D               	movf	??___flmul+1,w
  4542  0D96  1103               	clrz
  4543  0D97  1803               	skipnc
  4544  0D98  3E01               	addlw	1
  4545  0D99  1903               	skipnz
  4546  0D9A  2D9C               	goto	u3951
  4547  0D9B  07B3               	addwf	___flmul@grs+1,f
  4548  0D9C                     u3951:
  4549  0D9C  082E               	movf	??___flmul+2,w
  4550  0D9D  1103               	clrz
  4551  0D9E  1803               	skipnc
  4552  0D9F  3E01               	addlw	1
  4553  0DA0  1903               	skipnz
  4554  0DA1  2DA3               	goto	u3952
  4555  0DA2  07B4               	addwf	___flmul@grs+2,f
  4556  0DA3                     u3952:
  4557  0DA3  082F               	movf	??___flmul+3,w
  4558  0DA4  1103               	clrz
  4559  0DA5  1803               	skipnc
  4560  0DA6  3E01               	addlw	1
  4561  0DA7  1903               	skipnz
  4562  0DA8  2DAA               	goto	u3953
  4563  0DA9  07B5               	addwf	___flmul@grs+3,f
  4564  0DAA                     u3953:
  4565  0DAA                     l2801:
  4566  0DAA  083D               	movf	___flmul@temp+1,w
  4567  0DAB  00AC               	movwf	??___flmul
  4568  0DAC  01AD               	clrf	??___flmul+1
  4569  0DAD  01AE               	clrf	??___flmul+2
  4570  0DAE  01AF               	clrf	??___flmul+3
  4571  0DAF  082C               	movf	??___flmul,w
  4572  0DB0  07B8               	addwf	___flmul@prod,f
  4573  0DB1  082D               	movf	??___flmul+1,w
  4574  0DB2  1103               	clrz
  4575  0DB3  1803               	skipnc
  4576  0DB4  3E01               	addlw	1
  4577  0DB5  1903               	skipnz
  4578  0DB6  2DB8               	goto	u3961
  4579  0DB7  07B9               	addwf	___flmul@prod+1,f
  4580  0DB8                     u3961:
  4581  0DB8  082E               	movf	??___flmul+2,w
  4582  0DB9  1103               	clrz
  4583  0DBA  1803               	skipnc
  4584  0DBB  3E01               	addlw	1
  4585  0DBC  1903               	skipnz
  4586  0DBD  2DBF               	goto	u3962
  4587  0DBE  07BA               	addwf	___flmul@prod+2,f
  4588  0DBF                     u3962:
  4589  0DBF  082F               	movf	??___flmul+3,w
  4590  0DC0  1103               	clrz
  4591  0DC1  1803               	skipnc
  4592  0DC2  3E01               	addlw	1
  4593  0DC3  1903               	skipnz
  4594  0DC4  2DC6               	goto	u3963
  4595  0DC5  07BB               	addwf	___flmul@prod+3,f
  4596  0DC6                     u3963:
  4597  0DC6                     l2803:
  4598  0DC6  3008               	movlw	8
  4599  0DC7  00AC               	movwf	??___flmul
  4600  0DC8                     u3975:
  4601  0DC8  1003               	clrc
  4602  0DC9  0DB2               	rlf	___flmul@grs,f
  4603  0DCA  0DB3               	rlf	___flmul@grs+1,f
  4604  0DCB  0DB4               	rlf	___flmul@grs+2,f
  4605  0DCC  0DB5               	rlf	___flmul@grs+3,f
  4606  0DCD  0BAC               	decfsz	??___flmul,f
  4607  0DCE  2DC8               	goto	u3975
  4608  0DCF                     l2805:
  4609  0DCF  0825               	movf	___flmul@b+1,w
  4610  0DD0  00AC               	movwf	??___flmul
  4611  0DD1  082C               	movf	??___flmul,w
  4612  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  4613  0DD3  0828               	movf	___flmul@a,w
  4614  0DD4  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  4615  0DD9  0871               	movf	?__Umul8_16+1,w
  4616  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  4617  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  4618  0DDC  00BD               	movwf	___flmul@temp+1
  4619  0DDD  0870               	movf	?__Umul8_16,w
  4620  0DDE  00BC               	movwf	___flmul@temp
  4621  0DDF                     l2807:
  4622  0DDF  083C               	movf	___flmul@temp,w
  4623  0DE0  00AC               	movwf	??___flmul
  4624  0DE1  083D               	movf	___flmul@temp+1,w
  4625  0DE2  00AD               	movwf	??___flmul+1
  4626  0DE3  01AE               	clrf	??___flmul+2
  4627  0DE4  01AF               	clrf	??___flmul+3
  4628  0DE5  082C               	movf	??___flmul,w
  4629  0DE6  07B2               	addwf	___flmul@grs,f
  4630  0DE7  082D               	movf	??___flmul+1,w
  4631  0DE8  1103               	clrz
  4632  0DE9  1803               	skipnc
  4633  0DEA  3E01               	addlw	1
  4634  0DEB  1903               	skipnz
  4635  0DEC  2DEE               	goto	u3981
  4636  0DED  07B3               	addwf	___flmul@grs+1,f
  4637  0DEE                     u3981:
  4638  0DEE  082E               	movf	??___flmul+2,w
  4639  0DEF  1103               	clrz
  4640  0DF0  1803               	skipnc
  4641  0DF1  3E01               	addlw	1
  4642  0DF2  1903               	skipnz
  4643  0DF3  2DF5               	goto	u3982
  4644  0DF4  07B4               	addwf	___flmul@grs+2,f
  4645  0DF5                     u3982:
  4646  0DF5  082F               	movf	??___flmul+3,w
  4647  0DF6  1103               	clrz
  4648  0DF7  1803               	skipnc
  4649  0DF8  3E01               	addlw	1
  4650  0DF9  1903               	skipnz
  4651  0DFA  2DFC               	goto	u3983
  4652  0DFB  07B5               	addwf	___flmul@grs+3,f
  4653  0DFC                     u3983:
  4654  0DFC                     l2809:
  4655  0DFC  0824               	movf	___flmul@b,w
  4656  0DFD  00AC               	movwf	??___flmul
  4657  0DFE  082C               	movf	??___flmul,w
  4658  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  4659  0E00  0829               	movf	___flmul@a+1,w
  4660  0E01  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  4661  0E06  0871               	movf	?__Umul8_16+1,w
  4662  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  4663  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  4664  0E09  00BD               	movwf	___flmul@temp+1
  4665  0E0A  0870               	movf	?__Umul8_16,w
  4666  0E0B  00BC               	movwf	___flmul@temp
  4667  0E0C                     l2811:
  4668  0E0C  083C               	movf	___flmul@temp,w
  4669  0E0D  00AC               	movwf	??___flmul
  4670  0E0E  083D               	movf	___flmul@temp+1,w
  4671  0E0F  00AD               	movwf	??___flmul+1
  4672  0E10  01AE               	clrf	??___flmul+2
  4673  0E11  01AF               	clrf	??___flmul+3
  4674  0E12  082C               	movf	??___flmul,w
  4675  0E13  07B2               	addwf	___flmul@grs,f
  4676  0E14  082D               	movf	??___flmul+1,w
  4677  0E15  1103               	clrz
  4678  0E16  1803               	skipnc
  4679  0E17  3E01               	addlw	1
  4680  0E18  1903               	skipnz
  4681  0E19  2E1B               	goto	u3991
  4682  0E1A  07B3               	addwf	___flmul@grs+1,f
  4683  0E1B                     u3991:
  4684  0E1B  082E               	movf	??___flmul+2,w
  4685  0E1C  1103               	clrz
  4686  0E1D  1803               	skipnc
  4687  0E1E  3E01               	addlw	1
  4688  0E1F  1903               	skipnz
  4689  0E20  2E22               	goto	u3992
  4690  0E21  07B4               	addwf	___flmul@grs+2,f
  4691  0E22                     u3992:
  4692  0E22  082F               	movf	??___flmul+3,w
  4693  0E23  1103               	clrz
  4694  0E24  1803               	skipnc
  4695  0E25  3E01               	addlw	1
  4696  0E26  1903               	skipnz
  4697  0E27  2E29               	goto	u3993
  4698  0E28  07B5               	addwf	___flmul@grs+3,f
  4699  0E29                     u3993:
  4700  0E29                     l2813:
  4701  0E29  3008               	movlw	8
  4702  0E2A  00AC               	movwf	??___flmul
  4703  0E2B                     u4005:
  4704  0E2B  1003               	clrc
  4705  0E2C  0DB2               	rlf	___flmul@grs,f
  4706  0E2D  0DB3               	rlf	___flmul@grs+1,f
  4707  0E2E  0DB4               	rlf	___flmul@grs+2,f
  4708  0E2F  0DB5               	rlf	___flmul@grs+3,f
  4709  0E30  0BAC               	decfsz	??___flmul,f
  4710  0E31  2E2B               	goto	u4005
  4711  0E32  0824               	movf	___flmul@b,w
  4712  0E33  00AC               	movwf	??___flmul
  4713  0E34  082C               	movf	??___flmul,w
  4714  0E35  00F0               	movwf	__Umul8_16@multiplicand
  4715  0E36  0828               	movf	___flmul@a,w
  4716  0E37  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  4717  0E3C  0871               	movf	?__Umul8_16+1,w
  4718  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  4719  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  4720  0E3F  00BD               	movwf	___flmul@temp+1
  4721  0E40  0870               	movf	?__Umul8_16,w
  4722  0E41  00BC               	movwf	___flmul@temp
  4723  0E42                     l2815:
  4724  0E42  083C               	movf	___flmul@temp,w
  4725  0E43  00AC               	movwf	??___flmul
  4726  0E44  083D               	movf	___flmul@temp+1,w
  4727  0E45  00AD               	movwf	??___flmul+1
  4728  0E46  01AE               	clrf	??___flmul+2
  4729  0E47  01AF               	clrf	??___flmul+3
  4730  0E48  082C               	movf	??___flmul,w
  4731  0E49  07B2               	addwf	___flmul@grs,f
  4732  0E4A  082D               	movf	??___flmul+1,w
  4733  0E4B  1103               	clrz
  4734  0E4C  1803               	skipnc
  4735  0E4D  3E01               	addlw	1
  4736  0E4E  1903               	skipnz
  4737  0E4F  2E51               	goto	u4011
  4738  0E50  07B3               	addwf	___flmul@grs+1,f
  4739  0E51                     u4011:
  4740  0E51  082E               	movf	??___flmul+2,w
  4741  0E52  1103               	clrz
  4742  0E53  1803               	skipnc
  4743  0E54  3E01               	addlw	1
  4744  0E55  1903               	skipnz
  4745  0E56  2E58               	goto	u4012
  4746  0E57  07B4               	addwf	___flmul@grs+2,f
  4747  0E58                     u4012:
  4748  0E58  082F               	movf	??___flmul+3,w
  4749  0E59  1103               	clrz
  4750  0E5A  1803               	skipnc
  4751  0E5B  3E01               	addlw	1
  4752  0E5C  1903               	skipnz
  4753  0E5D  2E5F               	goto	u4013
  4754  0E5E  07B5               	addwf	___flmul@grs+3,f
  4755  0E5F                     u4013:
  4756  0E5F                     l2817:
  4757  0E5F  0825               	movf	___flmul@b+1,w
  4758  0E60  00AC               	movwf	??___flmul
  4759  0E61  082C               	movf	??___flmul,w
  4760  0E62  00F0               	movwf	__Umul8_16@multiplicand
  4761  0E63  082A               	movf	___flmul@a+2,w
  4762  0E64  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  4763  0E69  0871               	movf	?__Umul8_16+1,w
  4764  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  4765  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  4766  0E6C  00BD               	movwf	___flmul@temp+1
  4767  0E6D  0870               	movf	?__Umul8_16,w
  4768  0E6E  00BC               	movwf	___flmul@temp
  4769  0E6F  083C               	movf	___flmul@temp,w
  4770  0E70  00AC               	movwf	??___flmul
  4771  0E71  083D               	movf	___flmul@temp+1,w
  4772  0E72  00AD               	movwf	??___flmul+1
  4773  0E73  01AE               	clrf	??___flmul+2
  4774  0E74  01AF               	clrf	??___flmul+3
  4775  0E75  082C               	movf	??___flmul,w
  4776  0E76  07B8               	addwf	___flmul@prod,f
  4777  0E77  082D               	movf	??___flmul+1,w
  4778  0E78  1103               	clrz
  4779  0E79  1803               	skipnc
  4780  0E7A  3E01               	addlw	1
  4781  0E7B  1903               	skipnz
  4782  0E7C  2E7E               	goto	u4021
  4783  0E7D  07B9               	addwf	___flmul@prod+1,f
  4784  0E7E                     u4021:
  4785  0E7E  082E               	movf	??___flmul+2,w
  4786  0E7F  1103               	clrz
  4787  0E80  1803               	skipnc
  4788  0E81  3E01               	addlw	1
  4789  0E82  1903               	skipnz
  4790  0E83  2E85               	goto	u4022
  4791  0E84  07BA               	addwf	___flmul@prod+2,f
  4792  0E85                     u4022:
  4793  0E85  082F               	movf	??___flmul+3,w
  4794  0E86  1103               	clrz
  4795  0E87  1803               	skipnc
  4796  0E88  3E01               	addlw	1
  4797  0E89  1903               	skipnz
  4798  0E8A  2E8C               	goto	u4023
  4799  0E8B  07BB               	addwf	___flmul@prod+3,f
  4800  0E8C                     u4023:
  4801  0E8C                     l2819:
  4802  0E8C  0826               	movf	___flmul@b+2,w
  4803  0E8D  00AC               	movwf	??___flmul
  4804  0E8E  082C               	movf	??___flmul,w
  4805  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  4806  0E90  0829               	movf	___flmul@a+1,w
  4807  0E91  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  4808  0E96  0871               	movf	?__Umul8_16+1,w
  4809  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  4810  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  4811  0E99  00BD               	movwf	___flmul@temp+1
  4812  0E9A  0870               	movf	?__Umul8_16,w
  4813  0E9B  00BC               	movwf	___flmul@temp
  4814  0E9C                     l2821:
  4815  0E9C  083C               	movf	___flmul@temp,w
  4816  0E9D  00AC               	movwf	??___flmul
  4817  0E9E  083D               	movf	___flmul@temp+1,w
  4818  0E9F  00AD               	movwf	??___flmul+1
  4819  0EA0  01AE               	clrf	??___flmul+2
  4820  0EA1  01AF               	clrf	??___flmul+3
  4821  0EA2  082C               	movf	??___flmul,w
  4822  0EA3  07B8               	addwf	___flmul@prod,f
  4823  0EA4  082D               	movf	??___flmul+1,w
  4824  0EA5  1103               	clrz
  4825  0EA6  1803               	skipnc
  4826  0EA7  3E01               	addlw	1
  4827  0EA8  1903               	skipnz
  4828  0EA9  2EAB               	goto	u4031
  4829  0EAA  07B9               	addwf	___flmul@prod+1,f
  4830  0EAB                     u4031:
  4831  0EAB  082E               	movf	??___flmul+2,w
  4832  0EAC  1103               	clrz
  4833  0EAD  1803               	skipnc
  4834  0EAE  3E01               	addlw	1
  4835  0EAF  1903               	skipnz
  4836  0EB0  2EB2               	goto	u4032
  4837  0EB1  07BA               	addwf	___flmul@prod+2,f
  4838  0EB2                     u4032:
  4839  0EB2  082F               	movf	??___flmul+3,w
  4840  0EB3  1103               	clrz
  4841  0EB4  1803               	skipnc
  4842  0EB5  3E01               	addlw	1
  4843  0EB6  1903               	skipnz
  4844  0EB7  2EB9               	goto	u4033
  4845  0EB8  07BB               	addwf	___flmul@prod+3,f
  4846  0EB9                     u4033:
  4847  0EB9  0826               	movf	___flmul@b+2,w
  4848  0EBA  00AC               	movwf	??___flmul
  4849  0EBB  082C               	movf	??___flmul,w
  4850  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  4851  0EBD  082A               	movf	___flmul@a+2,w
  4852  0EBE  160A  158A  2273  120A  158A  	fcall	__Umul8_16
  4853  0EC3  0871               	movf	?__Umul8_16+1,w
  4854  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  4855  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  4856  0EC6  00BD               	movwf	___flmul@temp+1
  4857  0EC7  0870               	movf	?__Umul8_16,w
  4858  0EC8  00BC               	movwf	___flmul@temp
  4859  0EC9                     l2823:
  4860  0EC9  083C               	movf	___flmul@temp,w
  4861  0ECA  00AC               	movwf	??___flmul
  4862  0ECB  083D               	movf	___flmul@temp+1,w
  4863  0ECC  00AD               	movwf	??___flmul+1
  4864  0ECD  01AE               	clrf	??___flmul+2
  4865  0ECE  01AF               	clrf	??___flmul+3
  4866  0ECF  3008               	movlw	8
  4867  0ED0                     u4045:
  4868  0ED0  1003               	clrc
  4869  0ED1  0DAC               	rlf	??___flmul,f
  4870  0ED2  0DAD               	rlf	??___flmul+1,f
  4871  0ED3  0DAE               	rlf	??___flmul+2,f
  4872  0ED4  0DAF               	rlf	??___flmul+3,f
  4873  0ED5                     u4040:
  4874  0ED5  3EFF               	addlw	-1
  4875  0ED6  1D03               	skipz
  4876  0ED7  2ED0               	goto	u4045
  4877  0ED8  082C               	movf	??___flmul,w
  4878  0ED9  07B8               	addwf	___flmul@prod,f
  4879  0EDA  082D               	movf	??___flmul+1,w
  4880  0EDB  1103               	clrz
  4881  0EDC  1803               	skipnc
  4882  0EDD  3E01               	addlw	1
  4883  0EDE  1903               	skipnz
  4884  0EDF  2EE1               	goto	u4051
  4885  0EE0  07B9               	addwf	___flmul@prod+1,f
  4886  0EE1                     u4051:
  4887  0EE1  082E               	movf	??___flmul+2,w
  4888  0EE2  1103               	clrz
  4889  0EE3  1803               	skipnc
  4890  0EE4  3E01               	addlw	1
  4891  0EE5  1903               	skipnz
  4892  0EE6  2EE8               	goto	u4052
  4893  0EE7  07BA               	addwf	___flmul@prod+2,f
  4894  0EE8                     u4052:
  4895  0EE8  082F               	movf	??___flmul+3,w
  4896  0EE9  1103               	clrz
  4897  0EEA  1803               	skipnc
  4898  0EEB  3E01               	addlw	1
  4899  0EEC  1903               	skipnz
  4900  0EED  2EEF               	goto	u4053
  4901  0EEE  07BB               	addwf	___flmul@prod+3,f
  4902  0EEF                     u4053:
  4903  0EEF                     l2825:
  4904  0EEF  0832               	movf	___flmul@grs,w
  4905  0EF0  00AC               	movwf	??___flmul
  4906  0EF1  0833               	movf	___flmul@grs+1,w
  4907  0EF2  00AD               	movwf	??___flmul+1
  4908  0EF3  0834               	movf	___flmul@grs+2,w
  4909  0EF4  00AE               	movwf	??___flmul+2
  4910  0EF5  0835               	movf	___flmul@grs+3,w
  4911  0EF6  00AF               	movwf	??___flmul+3
  4912  0EF7  3018               	movlw	24
  4913  0EF8                     u4065:
  4914  0EF8  1003               	clrc
  4915  0EF9  0CAF               	rrf	??___flmul+3,f
  4916  0EFA  0CAE               	rrf	??___flmul+2,f
  4917  0EFB  0CAD               	rrf	??___flmul+1,f
  4918  0EFC  0CAC               	rrf	??___flmul,f
  4919  0EFD                     u4060:
  4920  0EFD  3EFF               	addlw	-1
  4921  0EFE  1D03               	skipz
  4922  0EFF  2EF8               	goto	u4065
  4923  0F00  082C               	movf	??___flmul,w
  4924  0F01  07B8               	addwf	___flmul@prod,f
  4925  0F02  082D               	movf	??___flmul+1,w
  4926  0F03  1103               	clrz
  4927  0F04  1803               	skipnc
  4928  0F05  3E01               	addlw	1
  4929  0F06  1903               	skipnz
  4930  0F07  2F09               	goto	u4071
  4931  0F08  07B9               	addwf	___flmul@prod+1,f
  4932  0F09                     u4071:
  4933  0F09  082E               	movf	??___flmul+2,w
  4934  0F0A  1103               	clrz
  4935  0F0B  1803               	skipnc
  4936  0F0C  3E01               	addlw	1
  4937  0F0D  1903               	skipnz
  4938  0F0E  2F10               	goto	u4072
  4939  0F0F  07BA               	addwf	___flmul@prod+2,f
  4940  0F10                     u4072:
  4941  0F10  082F               	movf	??___flmul+3,w
  4942  0F11  1103               	clrz
  4943  0F12  1803               	skipnc
  4944  0F13  3E01               	addlw	1
  4945  0F14  1903               	skipnz
  4946  0F15  2F17               	goto	u4073
  4947  0F16  07BB               	addwf	___flmul@prod+3,f
  4948  0F17                     u4073:
  4949  0F17                     l2827:
  4950  0F17  3008               	movlw	8
  4951  0F18  00AC               	movwf	??___flmul
  4952  0F19                     u4085:
  4953  0F19  1003               	clrc
  4954  0F1A  0DB2               	rlf	___flmul@grs,f
  4955  0F1B  0DB3               	rlf	___flmul@grs+1,f
  4956  0F1C  0DB4               	rlf	___flmul@grs+2,f
  4957  0F1D  0DB5               	rlf	___flmul@grs+3,f
  4958  0F1E  0BAC               	decfsz	??___flmul,f
  4959  0F1F  2F19               	goto	u4085
  4960  0F20                     l2829:
  4961  0F20  0837               	movf	___flmul@bexp,w
  4962  0F21  0736               	addwf	___flmul@aexp,w
  4963  0F22  00AC               	movwf	??___flmul
  4964  0F23  01AD               	clrf	??___flmul+1
  4965  0F24  0DAD               	rlf	??___flmul+1,f
  4966  0F25  082C               	movf	??___flmul,w
  4967  0F26  3E82               	addlw	130
  4968  0F27  00BC               	movwf	___flmul@temp
  4969  0F28  082D               	movf	??___flmul+1,w
  4970  0F29  1803               	skipnc
  4971  0F2A  3E01               	addlw	1
  4972  0F2B  3EFF               	addlw	255
  4973  0F2C  00BD               	movwf	___flmul@temp+1
  4974  0F2D  2F4B               	goto	l2841
  4975  0F2E                     l2831:
  4976  0F2E  3001               	movlw	1
  4977  0F2F  00AC               	movwf	??___flmul
  4978  0F30                     u4095:
  4979  0F30  1003               	clrc
  4980  0F31  0DB8               	rlf	___flmul@prod,f
  4981  0F32  0DB9               	rlf	___flmul@prod+1,f
  4982  0F33  0DBA               	rlf	___flmul@prod+2,f
  4983  0F34  0DBB               	rlf	___flmul@prod+3,f
  4984  0F35  0BAC               	decfsz	??___flmul,f
  4985  0F36  2F30               	goto	u4095
  4986  0F37                     l2833:
  4987  0F37  1FB5               	btfss	___flmul@grs+3,7
  4988  0F38  2F3A               	goto	u4101
  4989  0F39  2F3B               	goto	u4100
  4990  0F3A                     u4101:
  4991  0F3A  2F3C               	goto	l2837
  4992  0F3B                     u4100:
  4993  0F3B                     l2835:
  4994  0F3B  1438               	bsf	___flmul@prod,0
  4995  0F3C                     l2837:
  4996  0F3C  3001               	movlw	1
  4997  0F3D  00AC               	movwf	??___flmul
  4998  0F3E                     u4115:
  4999  0F3E  1003               	clrc
  5000  0F3F  0DB2               	rlf	___flmul@grs,f
  5001  0F40  0DB3               	rlf	___flmul@grs+1,f
  5002  0F41  0DB4               	rlf	___flmul@grs+2,f
  5003  0F42  0DB5               	rlf	___flmul@grs+3,f
  5004  0F43  0BAC               	decfsz	??___flmul,f
  5005  0F44  2F3E               	goto	u4115
  5006  0F45                     l2839:
  5007  0F45  30FF               	movlw	255
  5008  0F46  07BC               	addwf	___flmul@temp,f
  5009  0F47  1803               	skipnc
  5010  0F48  0ABD               	incf	___flmul@temp+1,f
  5011  0F49  30FF               	movlw	255
  5012  0F4A  07BD               	addwf	___flmul@temp+1,f
  5013  0F4B                     l2841:
  5014  0F4B  1FBA               	btfss	___flmul@prod+2,7
  5015  0F4C  2F4E               	goto	u4121
  5016  0F4D  2F4F               	goto	u4120
  5017  0F4E                     u4121:
  5018  0F4E  2F2E               	goto	l2831
  5019  0F4F                     u4120:
  5020  0F4F                     l2843:
  5021  0F4F  01B6               	clrf	___flmul@aexp
  5022  0F50                     l2845:
  5023  0F50  1FB5               	btfss	___flmul@grs+3,7
  5024  0F51  2F53               	goto	u4131
  5025  0F52  2F54               	goto	u4130
  5026  0F53                     u4131:
  5027  0F53  2F70               	goto	l2853
  5028  0F54                     u4130:
  5029  0F54                     l2847:
  5030  0F54  30FF               	movlw	255
  5031  0F55  0532               	andwf	___flmul@grs,w
  5032  0F56  00AC               	movwf	??___flmul
  5033  0F57  30FF               	movlw	255
  5034  0F58  0533               	andwf	___flmul@grs+1,w
  5035  0F59  00AD               	movwf	??___flmul+1
  5036  0F5A  30FF               	movlw	255
  5037  0F5B  0534               	andwf	___flmul@grs+2,w
  5038  0F5C  00AE               	movwf	??___flmul+2
  5039  0F5D  307F               	movlw	127
  5040  0F5E  0535               	andwf	___flmul@grs+3,w
  5041  0F5F  00AF               	movwf	??___flmul+3
  5042  0F60  082F               	movf	??___flmul+3,w
  5043  0F61  042E               	iorwf	??___flmul+2,w
  5044  0F62  042D               	iorwf	??___flmul+1,w
  5045  0F63  042C               	iorwf	??___flmul,w
  5046  0F64  1903               	skipnz
  5047  0F65  2F67               	goto	u4141
  5048  0F66  2F68               	goto	u4140
  5049  0F67                     u4141:
  5050  0F67  2F6B               	goto	l855
  5051  0F68                     u4140:
  5052  0F68                     l2849:
  5053  0F68  01B6               	clrf	___flmul@aexp
  5054  0F69  0AB6               	incf	___flmul@aexp,f
  5055  0F6A  2F70               	goto	l2853
  5056  0F6B                     l855:
  5057  0F6B  1C38               	btfss	___flmul@prod,0
  5058  0F6C  2F6E               	goto	u4151
  5059  0F6D  2F6F               	goto	u4150
  5060  0F6E                     u4151:
  5061  0F6E  2F70               	goto	l2853
  5062  0F6F                     u4150:
  5063  0F6F  2F68               	goto	l2849
  5064  0F70                     l2853:
  5065  0F70  0836               	movf	___flmul@aexp,w
  5066  0F71  1903               	btfsc	3,2
  5067  0F72  2F74               	goto	u4161
  5068  0F73  2F75               	goto	u4160
  5069  0F74                     u4161:
  5070  0F74  2FA6               	goto	l2863
  5071  0F75                     u4160:
  5072  0F75                     l2855:
  5073  0F75  3001               	movlw	1
  5074  0F76  07B8               	addwf	___flmul@prod,f
  5075  0F77  3000               	movlw	0
  5076  0F78  1803               	skipnc
  5077  0F79  3001               	movlw	1
  5078  0F7A  07B9               	addwf	___flmul@prod+1,f
  5079  0F7B  3000               	movlw	0
  5080  0F7C  1803               	skipnc
  5081  0F7D  3001               	movlw	1
  5082  0F7E  07BA               	addwf	___flmul@prod+2,f
  5083  0F7F  3000               	movlw	0
  5084  0F80  1803               	skipnc
  5085  0F81  3001               	movlw	1
  5086  0F82  07BB               	addwf	___flmul@prod+3,f
  5087  0F83                     l2857:
  5088  0F83  1C3B               	btfss	___flmul@prod+3,0
  5089  0F84  2F86               	goto	u4171
  5090  0F85  2F87               	goto	u4170
  5091  0F86                     u4171:
  5092  0F86  2FA6               	goto	l2863
  5093  0F87                     u4170:
  5094  0F87                     l2859:
  5095  0F87  0838               	movf	___flmul@prod,w
  5096  0F88  00AC               	movwf	??___flmul
  5097  0F89  0839               	movf	___flmul@prod+1,w
  5098  0F8A  00AD               	movwf	??___flmul+1
  5099  0F8B  083A               	movf	___flmul@prod+2,w
  5100  0F8C  00AE               	movwf	??___flmul+2
  5101  0F8D  083B               	movf	___flmul@prod+3,w
  5102  0F8E  00AF               	movwf	??___flmul+3
  5103  0F8F  3001               	movlw	1
  5104  0F90  00B0               	movwf	??___flmul+4
  5105  0F91                     u4185:
  5106  0F91  0D2F               	rlf	??___flmul+3,w
  5107  0F92  0CAF               	rrf	??___flmul+3,f
  5108  0F93  0CAE               	rrf	??___flmul+2,f
  5109  0F94  0CAD               	rrf	??___flmul+1,f
  5110  0F95  0CAC               	rrf	??___flmul,f
  5111  0F96                     u4180:
  5112  0F96  0BB0               	decfsz	??___flmul+4,f
  5113  0F97  2F91               	goto	u4185
  5114  0F98  082F               	movf	??___flmul+3,w
  5115  0F99  00BB               	movwf	___flmul@prod+3
  5116  0F9A  082E               	movf	??___flmul+2,w
  5117  0F9B  00BA               	movwf	___flmul@prod+2
  5118  0F9C  082D               	movf	??___flmul+1,w
  5119  0F9D  00B9               	movwf	___flmul@prod+1
  5120  0F9E  082C               	movf	??___flmul,w
  5121  0F9F  00B8               	movwf	___flmul@prod
  5122  0FA0                     l2861:
  5123  0FA0  3001               	movlw	1
  5124  0FA1  07BC               	addwf	___flmul@temp,f
  5125  0FA2  1803               	skipnc
  5126  0FA3  0ABD               	incf	___flmul@temp+1,f
  5127  0FA4  3000               	movlw	0
  5128  0FA5  07BD               	addwf	___flmul@temp+1,f
  5129  0FA6                     l2863:
  5130  0FA6  083D               	movf	___flmul@temp+1,w
  5131  0FA7  3A80               	xorlw	128
  5132  0FA8  00FF               	movwf	btemp+1
  5133  0FA9  3080               	movlw	128
  5134  0FAA  027F               	subwf	btemp+1,w
  5135  0FAB  1D03               	skipz
  5136  0FAC  2FAF               	goto	u4195
  5137  0FAD  30FF               	movlw	255
  5138  0FAE  023C               	subwf	___flmul@temp,w
  5139  0FAF                     u4195:
  5140  0FAF  1C03               	skipc
  5141  0FB0  2FB2               	goto	u4191
  5142  0FB1  2FB3               	goto	u4190
  5143  0FB2                     u4191:
  5144  0FB2  2FBE               	goto	l2867
  5145  0FB3                     u4190:
  5146  0FB3                     l2865:
  5147  0FB3  307F               	movlw	127
  5148  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5149  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5150  0FB6  00BB               	movwf	___flmul@prod+3
  5151  0FB7  3080               	movlw	128
  5152  0FB8  00BA               	movwf	___flmul@prod+2
  5153  0FB9  3000               	movlw	0
  5154  0FBA  00B9               	movwf	___flmul@prod+1
  5155  0FBB  3000               	movlw	0
  5156  0FBC  00B8               	movwf	___flmul@prod
  5157  0FBD  2FF3               	goto	l861
  5158  0FBE                     l2867:
  5159  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5160  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5161  0FC0  083D               	movf	___flmul@temp+1,w
  5162  0FC1  3A80               	xorlw	128
  5163  0FC2  00FF               	movwf	btemp+1
  5164  0FC3  3080               	movlw	128
  5165  0FC4  027F               	subwf	btemp+1,w
  5166  0FC5  1D03               	skipz
  5167  0FC6  2FC9               	goto	u4205
  5168  0FC7  3001               	movlw	1
  5169  0FC8  023C               	subwf	___flmul@temp,w
  5170  0FC9                     u4205:
  5171  0FC9  1803               	skipnc
  5172  0FCA  2FCC               	goto	u4201
  5173  0FCB  2FCD               	goto	u4200
  5174  0FCC                     u4201:
  5175  0FCC  2FD9               	goto	l2873
  5176  0FCD                     u4200:
  5177  0FCD                     l2869:
  5178  0FCD  3000               	movlw	0
  5179  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5180  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5181  0FD0  00BB               	movwf	___flmul@prod+3
  5182  0FD1  3000               	movlw	0
  5183  0FD2  00BA               	movwf	___flmul@prod+2
  5184  0FD3  3000               	movlw	0
  5185  0FD4  00B9               	movwf	___flmul@prod+1
  5186  0FD5  3000               	movlw	0
  5187  0FD6  00B8               	movwf	___flmul@prod
  5188  0FD7                     l2871:
  5189  0FD7  01B1               	clrf	___flmul@sign
  5190  0FD8  2FF3               	goto	l861
  5191  0FD9                     l2873:
  5192  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5193  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5194  0FDB  083C               	movf	___flmul@temp,w
  5195  0FDC  00AC               	movwf	??___flmul
  5196  0FDD  082C               	movf	??___flmul,w
  5197  0FDE  00B7               	movwf	___flmul@bexp
  5198  0FDF  30FF               	movlw	255
  5199  0FE0  05B8               	andwf	___flmul@prod,f
  5200  0FE1  30FF               	movlw	255
  5201  0FE2  05B9               	andwf	___flmul@prod+1,f
  5202  0FE3  307F               	movlw	127
  5203  0FE4  05BA               	andwf	___flmul@prod+2,f
  5204  0FE5  3000               	movlw	0
  5205  0FE6  05BB               	andwf	___flmul@prod+3,f
  5206  0FE7                     l2875:
  5207  0FE7  1C37               	btfss	___flmul@bexp,0
  5208  0FE8  2FEA               	goto	u4211
  5209  0FE9  2FEB               	goto	u4210
  5210  0FEA                     u4211:
  5211  0FEA  2FEC               	goto	l2879
  5212  0FEB                     u4210:
  5213  0FEB                     l2877:
  5214  0FEB  17BA               	bsf	___flmul@prod+2,7
  5215  0FEC                     l2879:
  5216  0FEC  0837               	movf	___flmul@bexp,w
  5217  0FED  00AC               	movwf	??___flmul
  5218  0FEE  1003               	clrc
  5219  0FEF  0C2C               	rrf	??___flmul,w
  5220  0FF0  00AD               	movwf	??___flmul+1
  5221  0FF1  082D               	movf	??___flmul+1,w
  5222  0FF2  00BB               	movwf	___flmul@prod+3
  5223  0FF3                     l861:
  5224  0FF3  0831               	movf	___flmul@sign,w
  5225  0FF4  00AC               	movwf	??___flmul
  5226  0FF5  082C               	movf	??___flmul,w
  5227  0FF6  04BB               	iorwf	___flmul@prod+3,f
  5228  0FF7                     l2881:
  5229  0FF7  083B               	movf	___flmul@prod+3,w
  5230  0FF8  00A7               	movwf	?___flmul+3
  5231  0FF9  083A               	movf	___flmul@prod+2,w
  5232  0FFA  00A6               	movwf	?___flmul+2
  5233  0FFB  0839               	movf	___flmul@prod+1,w
  5234  0FFC  00A5               	movwf	?___flmul+1
  5235  0FFD  0838               	movf	___flmul@prod,w
  5236  0FFE  00A4               	movwf	?___flmul
  5237  0FFF                     l849:
  5238  0FFF  0008               	return
  5239  1000                     __end_of___flmul:
  5240                           
  5241                           	psect	text10
  5242  1A73                     __ptext10:	
  5243 ;; *************** function __Umul8_16 *****************
  5244 ;; Defined at:
  5245 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;  multiplier      1    wreg     unsigned char 
  5248 ;;  multiplicand    1    0[COMMON] unsigned char 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  multiplier      1    8[COMMON] unsigned char 
  5251 ;;  word_mpld       2    6[COMMON] unsigned int 
  5252 ;;  product         2    4[COMMON] unsigned int 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  2    0[COMMON] unsigned int 
  5255 ;; Registers used:
  5256 ;;		wreg, status,2, status,0
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5262 ;;      Params:         2       0       0       0       0
  5263 ;;      Locals:         5       0       0       0       0
  5264 ;;      Temps:          2       0       0       0       0
  5265 ;;      Totals:         9       0       0       0       0
  5266 ;;Total ram usage:        9 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		___flmul
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           
  5276                           ;psect for function __Umul8_16
  5277  1A73                     __Umul8_16:
  5278                           
  5279                           ;incstack = 0
  5280                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5281                           ;__Umul8_16@multiplier stored from wreg
  5282  1A73  00F8               	movwf	__Umul8_16@multiplier
  5283  1A74                     l2387:
  5284  1A74  01F4               	clrf	__Umul8_16@product
  5285  1A75  01F5               	clrf	__Umul8_16@product+1
  5286  1A76                     l2389:
  5287  1A76  0870               	movf	__Umul8_16@multiplicand,w
  5288  1A77  00F2               	movwf	??__Umul8_16
  5289  1A78  01F3               	clrf	??__Umul8_16+1
  5290  1A79  0872               	movf	??__Umul8_16,w
  5291  1A7A  00F6               	movwf	__Umul8_16@word_mpld
  5292  1A7B  0873               	movf	??__Umul8_16+1,w
  5293  1A7C  00F7               	movwf	__Umul8_16@word_mpld+1
  5294  1A7D                     l2391:
  5295  1A7D  1C78               	btfss	__Umul8_16@multiplier,0
  5296  1A7E  2A80               	goto	u2951
  5297  1A7F  2A81               	goto	u2950
  5298  1A80                     u2951:
  5299  1A80  2A87               	goto	l868
  5300  1A81                     u2950:
  5301  1A81                     l2393:
  5302  1A81  0876               	movf	__Umul8_16@word_mpld,w
  5303  1A82  07F4               	addwf	__Umul8_16@product,f
  5304  1A83  1803               	skipnc
  5305  1A84  0AF5               	incf	__Umul8_16@product+1,f
  5306  1A85  0877               	movf	__Umul8_16@word_mpld+1,w
  5307  1A86  07F5               	addwf	__Umul8_16@product+1,f
  5308  1A87                     l868:
  5309  1A87  3001               	movlw	1
  5310  1A88                     u2965:
  5311  1A88  1003               	clrc
  5312  1A89  0DF6               	rlf	__Umul8_16@word_mpld,f
  5313  1A8A  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5314  1A8B  3EFF               	addlw	-1
  5315  1A8C  1D03               	skipz
  5316  1A8D  2A88               	goto	u2965
  5317  1A8E  1003               	clrc
  5318  1A8F  0CF8               	rrf	__Umul8_16@multiplier,f
  5319  1A90                     l2395:
  5320  1A90  0878               	movf	__Umul8_16@multiplier,w
  5321  1A91  1D03               	btfss	3,2
  5322  1A92  2A94               	goto	u2971
  5323  1A93  2A95               	goto	u2970
  5324  1A94                     u2971:
  5325  1A94  2A7D               	goto	l2391
  5326  1A95                     u2970:
  5327  1A95                     l2397:
  5328  1A95  0875               	movf	__Umul8_16@product+1,w
  5329  1A96  00F1               	movwf	?__Umul8_16+1
  5330  1A97  0874               	movf	__Umul8_16@product,w
  5331  1A98  00F0               	movwf	?__Umul8_16
  5332  1A99                     l870:
  5333  1A99  0008               	return
  5334  1A9A                     __end_of__Umul8_16:
  5335                           
  5336                           	psect	text11
  5337  1F43                     __ptext11:	
  5338 ;; *************** function __tdiv_to_l_ *****************
  5339 ;; Defined at:
  5340 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  f1              4    0[COMMON] float 
  5343 ;;  f2              4    4[COMMON] float 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  quot            4    0[BANK0 ] unsigned long 
  5346 ;;  exp1            1    5[BANK0 ] unsigned char 
  5347 ;;  cntr            1    4[BANK0 ] unsigned char 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  4    0[COMMON] unsigned long 
  5350 ;; Registers used:
  5351 ;;		wreg, status,2, status,0
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5357 ;;      Params:         8       0       0       0       0
  5358 ;;      Locals:         0       6       0       0       0
  5359 ;;      Temps:          4       0       0       0       0
  5360 ;;      Totals:        12       6       0       0       0
  5361 ;;Total ram usage:       18 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		_sprintf
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           
  5371                           ;psect for function __tdiv_to_l_
  5372  1F43                     __tdiv_to_l_:
  5373  1F43                     l3005:	
  5374                           ;incstack = 0
  5375                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5376                           
  5377  1F43  0870               	movf	__tdiv_to_l_@f1,w
  5378  1F44  00F8               	movwf	??__tdiv_to_l_
  5379  1F45  0871               	movf	__tdiv_to_l_@f1+1,w
  5380  1F46  00F9               	movwf	??__tdiv_to_l_+1
  5381  1F47  0872               	movf	__tdiv_to_l_@f1+2,w
  5382  1F48  00FA               	movwf	??__tdiv_to_l_+2
  5383  1F49  1003               	clrc
  5384  1F4A  0D79               	rlf	??__tdiv_to_l_+1,w
  5385  1F4B  0D7A               	rlf	??__tdiv_to_l_+2,w
  5386  1F4C  00FB               	movwf	??__tdiv_to_l_+3
  5387  1F4D  087B               	movf	??__tdiv_to_l_+3,w
  5388  1F4E  1283               	bcf	3,5	;RP0=0, select bank0
  5389  1F4F  1303               	bcf	3,6	;RP1=0, select bank0
  5390  1F50  00A5               	movwf	__tdiv_to_l_@exp1
  5391  1F51  0825               	movf	__tdiv_to_l_@exp1,w
  5392  1F52  1D03               	btfss	3,2
  5393  1F53  2F55               	goto	u4511
  5394  1F54  2F56               	goto	u4510
  5395  1F55                     u4511:
  5396  1F55  2F5F               	goto	l3011
  5397  1F56                     u4510:
  5398  1F56                     l3007:
  5399  1F56  3000               	movlw	0
  5400  1F57  00F3               	movwf	?__tdiv_to_l_+3
  5401  1F58  3000               	movlw	0
  5402  1F59  00F2               	movwf	?__tdiv_to_l_+2
  5403  1F5A  3000               	movlw	0
  5404  1F5B  00F1               	movwf	?__tdiv_to_l_+1
  5405  1F5C  3000               	movlw	0
  5406  1F5D  00F0               	movwf	?__tdiv_to_l_
  5407  1F5E  2FFF               	goto	l643
  5408  1F5F                     l3011:
  5409  1F5F  0874               	movf	__tdiv_to_l_@f2,w
  5410  1F60  00F8               	movwf	??__tdiv_to_l_
  5411  1F61  0875               	movf	__tdiv_to_l_@f2+1,w
  5412  1F62  00F9               	movwf	??__tdiv_to_l_+1
  5413  1F63  0876               	movf	__tdiv_to_l_@f2+2,w
  5414  1F64  00FA               	movwf	??__tdiv_to_l_+2
  5415  1F65  1003               	clrc
  5416  1F66  0D79               	rlf	??__tdiv_to_l_+1,w
  5417  1F67  0D7A               	rlf	??__tdiv_to_l_+2,w
  5418  1F68  00FB               	movwf	??__tdiv_to_l_+3
  5419  1F69  087B               	movf	??__tdiv_to_l_+3,w
  5420  1F6A  00A4               	movwf	__tdiv_to_l_@cntr
  5421  1F6B  0824               	movf	__tdiv_to_l_@cntr,w
  5422  1F6C  1D03               	btfss	3,2
  5423  1F6D  2F6F               	goto	u4521
  5424  1F6E  2F70               	goto	u4520
  5425  1F6F                     u4521:
  5426  1F6F  2F71               	goto	l644
  5427  1F70                     u4520:
  5428  1F70  2F56               	goto	l3007
  5429  1F71                     l644:
  5430  1F71  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5431  1F72                     l3017:
  5432  1F72  30FF               	movlw	255
  5433  1F73  05F0               	andwf	__tdiv_to_l_@f1,f
  5434  1F74  30FF               	movlw	255
  5435  1F75  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5436  1F76  3000               	movlw	0
  5437  1F77  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5438  1F78                     l3019:
  5439  1F78  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5440  1F79  30FF               	movlw	255
  5441  1F7A  05F4               	andwf	__tdiv_to_l_@f2,f
  5442  1F7B  30FF               	movlw	255
  5443  1F7C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5444  1F7D  3000               	movlw	0
  5445  1F7E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5446  1F7F  3000               	movlw	0
  5447  1F80  00A3               	movwf	__tdiv_to_l_@quot+3
  5448  1F81  3000               	movlw	0
  5449  1F82  00A2               	movwf	__tdiv_to_l_@quot+2
  5450  1F83  3000               	movlw	0
  5451  1F84  00A1               	movwf	__tdiv_to_l_@quot+1
  5452  1F85  3000               	movlw	0
  5453  1F86  00A0               	movwf	__tdiv_to_l_@quot
  5454  1F87                     l3021:
  5455  1F87  307F               	movlw	127
  5456  1F88  02A5               	subwf	__tdiv_to_l_@exp1,f
  5457  1F89                     l3023:
  5458  1F89  3098               	movlw	152
  5459  1F8A  0724               	addwf	__tdiv_to_l_@cntr,w
  5460  1F8B  00F8               	movwf	??__tdiv_to_l_
  5461  1F8C  0878               	movf	??__tdiv_to_l_,w
  5462  1F8D  02A5               	subwf	__tdiv_to_l_@exp1,f
  5463  1F8E  3018               	movlw	24
  5464  1F8F  00F8               	movwf	??__tdiv_to_l_
  5465  1F90  0878               	movf	??__tdiv_to_l_,w
  5466  1F91  00A4               	movwf	__tdiv_to_l_@cntr
  5467  1F92                     l3025:
  5468  1F92  3001               	movlw	1
  5469  1F93  00F8               	movwf	??__tdiv_to_l_
  5470  1F94                     u4535:
  5471  1F94  1003               	clrc
  5472  1F95  0DA0               	rlf	__tdiv_to_l_@quot,f
  5473  1F96  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5474  1F97  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5475  1F98  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5476  1F99  0BF8               	decfsz	??__tdiv_to_l_,f
  5477  1F9A  2F94               	goto	u4535
  5478  1F9B                     l3027:
  5479  1F9B  0876               	movf	__tdiv_to_l_@f2+2,w
  5480  1F9C  0272               	subwf	__tdiv_to_l_@f1+2,w
  5481  1F9D  1D03               	skipz
  5482  1F9E  2FA5               	goto	u4545
  5483  1F9F  0875               	movf	__tdiv_to_l_@f2+1,w
  5484  1FA0  0271               	subwf	__tdiv_to_l_@f1+1,w
  5485  1FA1  1D03               	skipz
  5486  1FA2  2FA5               	goto	u4545
  5487  1FA3  0874               	movf	__tdiv_to_l_@f2,w
  5488  1FA4  0270               	subwf	__tdiv_to_l_@f1,w
  5489  1FA5                     u4545:
  5490  1FA5  1C03               	skipc
  5491  1FA6  2FA8               	goto	u4541
  5492  1FA7  2FA9               	goto	u4540
  5493  1FA8                     u4541:
  5494  1FA8  2FB4               	goto	l3033
  5495  1FA9                     u4540:
  5496  1FA9                     l3029:
  5497  1FA9  0874               	movf	__tdiv_to_l_@f2,w
  5498  1FAA  02F0               	subwf	__tdiv_to_l_@f1,f
  5499  1FAB  0875               	movf	__tdiv_to_l_@f2+1,w
  5500  1FAC  1C03               	skipc
  5501  1FAD  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5502  1FAE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5503  1FAF  0876               	movf	__tdiv_to_l_@f2+2,w
  5504  1FB0  1C03               	skipc
  5505  1FB1  0A76               	incf	__tdiv_to_l_@f2+2,w
  5506  1FB2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5507  1FB3                     l3031:
  5508  1FB3  1420               	bsf	__tdiv_to_l_@quot,0
  5509  1FB4                     l3033:
  5510  1FB4  3001               	movlw	1
  5511  1FB5                     u4555:
  5512  1FB5  1003               	clrc
  5513  1FB6  0DF0               	rlf	__tdiv_to_l_@f1,f
  5514  1FB7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5515  1FB8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5516  1FB9  3EFF               	addlw	-1
  5517  1FBA  1D03               	skipz
  5518  1FBB  2FB5               	goto	u4555
  5519  1FBC                     l3035:
  5520  1FBC  3001               	movlw	1
  5521  1FBD  02A4               	subwf	__tdiv_to_l_@cntr,f
  5522  1FBE  1D03               	btfss	3,2
  5523  1FBF  2FC1               	goto	u4561
  5524  1FC0  2FC2               	goto	u4560
  5525  1FC1                     u4561:
  5526  1FC1  2F92               	goto	l3025
  5527  1FC2                     u4560:
  5528  1FC2                     l647:
  5529  1FC2  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5530  1FC3  2FC5               	goto	u4571
  5531  1FC4  2FC6               	goto	u4570
  5532  1FC5                     u4571:
  5533  1FC5  2FE0               	goto	l3045
  5534  1FC6                     u4570:
  5535  1FC6                     l3037:
  5536  1FC6  0825               	movf	__tdiv_to_l_@exp1,w
  5537  1FC7  3A80               	xorlw	128
  5538  1FC8  3E97               	addlw	151
  5539  1FC9  1803               	skipnc
  5540  1FCA  2FCC               	goto	u4581
  5541  1FCB  2FCD               	goto	u4580
  5542  1FCC                     u4581:
  5543  1FCC  2FCE               	goto	l3043
  5544  1FCD                     u4580:
  5545  1FCD  2F56               	goto	l3007
  5546  1FCE                     l3043:
  5547  1FCE  3001               	movlw	1
  5548  1FCF                     u4595:
  5549  1FCF  1003               	clrc
  5550  1FD0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5551  1FD1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5552  1FD2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5553  1FD3  0CA0               	rrf	__tdiv_to_l_@quot,f
  5554  1FD4  3EFF               	addlw	-1
  5555  1FD5  1D03               	skipz
  5556  1FD6  2FCF               	goto	u4595
  5557  1FD7  3001               	movlw	1
  5558  1FD8  00F8               	movwf	??__tdiv_to_l_
  5559  1FD9  0878               	movf	??__tdiv_to_l_,w
  5560  1FDA  07A5               	addwf	__tdiv_to_l_@exp1,f
  5561  1FDB  1D03               	btfss	3,2
  5562  1FDC  2FDE               	goto	u4601
  5563  1FDD  2FDF               	goto	u4600
  5564  1FDE                     u4601:
  5565  1FDE  2FCE               	goto	l3043
  5566  1FDF                     u4600:
  5567  1FDF  2FF7               	goto	l3053
  5568  1FE0                     l3045:
  5569  1FE0  3018               	movlw	24
  5570  1FE1  0225               	subwf	__tdiv_to_l_@exp1,w
  5571  1FE2  1C03               	skipc
  5572  1FE3  2FE5               	goto	u4611
  5573  1FE4  2FE6               	goto	u4610
  5574  1FE5                     u4611:
  5575  1FE5  2FF2               	goto	l654
  5576  1FE6                     u4610:
  5577  1FE6  2F56               	goto	l3007
  5578  1FE7                     l3051:
  5579  1FE7  3001               	movlw	1
  5580  1FE8  00F8               	movwf	??__tdiv_to_l_
  5581  1FE9                     u4625:
  5582  1FE9  1003               	clrc
  5583  1FEA  0DA0               	rlf	__tdiv_to_l_@quot,f
  5584  1FEB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5585  1FEC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5586  1FED  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5587  1FEE  0BF8               	decfsz	??__tdiv_to_l_,f
  5588  1FEF  2FE9               	goto	u4625
  5589  1FF0  3001               	movlw	1
  5590  1FF1  02A5               	subwf	__tdiv_to_l_@exp1,f
  5591  1FF2                     l654:
  5592  1FF2  0825               	movf	__tdiv_to_l_@exp1,w
  5593  1FF3  1D03               	btfss	3,2
  5594  1FF4  2FF6               	goto	u4631
  5595  1FF5  2FF7               	goto	u4630
  5596  1FF6                     u4631:
  5597  1FF6  2FE7               	goto	l3051
  5598  1FF7                     u4630:
  5599  1FF7                     l3053:
  5600  1FF7  0823               	movf	__tdiv_to_l_@quot+3,w
  5601  1FF8  00F3               	movwf	?__tdiv_to_l_+3
  5602  1FF9  0822               	movf	__tdiv_to_l_@quot+2,w
  5603  1FFA  00F2               	movwf	?__tdiv_to_l_+2
  5604  1FFB  0821               	movf	__tdiv_to_l_@quot+1,w
  5605  1FFC  00F1               	movwf	?__tdiv_to_l_+1
  5606  1FFD  0820               	movf	__tdiv_to_l_@quot,w
  5607  1FFE  00F0               	movwf	?__tdiv_to_l_
  5608  1FFF                     l643:
  5609  1FFF  0008               	return
  5610  2000                     __end_of__tdiv_to_l_:
  5611                           
  5612                           	psect	text12
  5613  0882                     __ptext12:	
  5614 ;; *************** function __div_to_l_ *****************
  5615 ;; Defined at:
  5616 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  f1              4    0[COMMON] unsigned long 
  5619 ;;  f2              4    4[COMMON] unsigned long 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  quot            4    0[BANK0 ] unsigned long 
  5622 ;;  exp1            1    5[BANK0 ] unsigned char 
  5623 ;;  cntr            1    4[BANK0 ] unsigned char 
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  4    0[COMMON] unsigned long 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2, status,0
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5633 ;;      Params:         8       0       0       0       0
  5634 ;;      Locals:         0       6       0       0       0
  5635 ;;      Temps:          1       0       0       0       0
  5636 ;;      Totals:         9       6       0       0       0
  5637 ;;Total ram usage:       15 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; This function calls:
  5640 ;;		Nothing
  5641 ;; This function is called by:
  5642 ;;		_sprintf
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           
  5647                           ;psect for function __div_to_l_
  5648  0882                     __div_to_l_:
  5649  0882                     l3057:	
  5650                           ;incstack = 0
  5651                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5652                           
  5653  0882  1003               	clrc
  5654  0883  0D72               	rlf	__div_to_l_@f1+2,w
  5655  0884  0D73               	rlf	__div_to_l_@f1+3,w
  5656  0885  00F8               	movwf	??__div_to_l_
  5657  0886  0878               	movf	??__div_to_l_,w
  5658  0887  1283               	bcf	3,5	;RP0=0, select bank0
  5659  0888  1303               	bcf	3,6	;RP1=0, select bank0
  5660  0889  00A5               	movwf	__div_to_l_@exp1
  5661  088A  0825               	movf	__div_to_l_@exp1,w
  5662  088B  1D03               	btfss	3,2
  5663  088C  288E               	goto	u4641
  5664  088D  288F               	goto	u4640
  5665  088E                     u4641:
  5666  088E  2898               	goto	l3063
  5667  088F                     u4640:
  5668  088F                     l3059:
  5669  088F  3000               	movlw	0
  5670  0890  00F3               	movwf	?__div_to_l_+3
  5671  0891  3000               	movlw	0
  5672  0892  00F2               	movwf	?__div_to_l_+2
  5673  0893  3000               	movlw	0
  5674  0894  00F1               	movwf	?__div_to_l_+1
  5675  0895  3000               	movlw	0
  5676  0896  00F0               	movwf	?__div_to_l_
  5677  0897  293F               	goto	l596
  5678  0898                     l3063:
  5679  0898  1003               	clrc
  5680  0899  0D76               	rlf	__div_to_l_@f2+2,w
  5681  089A  0D77               	rlf	__div_to_l_@f2+3,w
  5682  089B  00F8               	movwf	??__div_to_l_
  5683  089C  0878               	movf	??__div_to_l_,w
  5684  089D  00A4               	movwf	__div_to_l_@cntr
  5685  089E  0824               	movf	__div_to_l_@cntr,w
  5686  089F  1D03               	btfss	3,2
  5687  08A0  28A2               	goto	u4651
  5688  08A1  28A3               	goto	u4650
  5689  08A2                     u4651:
  5690  08A2  28A4               	goto	l597
  5691  08A3                     u4650:
  5692  08A3  288F               	goto	l3059
  5693  08A4                     l597:
  5694  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  5695  08A5                     l3069:
  5696  08A5  30FF               	movlw	255
  5697  08A6  05F0               	andwf	__div_to_l_@f1,f
  5698  08A7  30FF               	movlw	255
  5699  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  5700  08A9  30FF               	movlw	255
  5701  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  5702  08AB  3000               	movlw	0
  5703  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  5704  08AD                     l3071:
  5705  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  5706  08AE  30FF               	movlw	255
  5707  08AF  05F4               	andwf	__div_to_l_@f2,f
  5708  08B0  30FF               	movlw	255
  5709  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  5710  08B2  30FF               	movlw	255
  5711  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  5712  08B4  3000               	movlw	0
  5713  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  5714  08B6  3000               	movlw	0
  5715  08B7  00A3               	movwf	__div_to_l_@quot+3
  5716  08B8  3000               	movlw	0
  5717  08B9  00A2               	movwf	__div_to_l_@quot+2
  5718  08BA  3000               	movlw	0
  5719  08BB  00A1               	movwf	__div_to_l_@quot+1
  5720  08BC  3000               	movlw	0
  5721  08BD  00A0               	movwf	__div_to_l_@quot
  5722  08BE                     l3073:
  5723  08BE  307F               	movlw	127
  5724  08BF  02A5               	subwf	__div_to_l_@exp1,f
  5725  08C0                     l3075:
  5726  08C0  30A0               	movlw	160
  5727  08C1  0724               	addwf	__div_to_l_@cntr,w
  5728  08C2  00F8               	movwf	??__div_to_l_
  5729  08C3  0878               	movf	??__div_to_l_,w
  5730  08C4  02A5               	subwf	__div_to_l_@exp1,f
  5731  08C5  3020               	movlw	32
  5732  08C6  00F8               	movwf	??__div_to_l_
  5733  08C7  0878               	movf	??__div_to_l_,w
  5734  08C8  00A4               	movwf	__div_to_l_@cntr
  5735  08C9                     l3077:
  5736  08C9  3001               	movlw	1
  5737  08CA  00F8               	movwf	??__div_to_l_
  5738  08CB                     u4665:
  5739  08CB  1003               	clrc
  5740  08CC  0DA0               	rlf	__div_to_l_@quot,f
  5741  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  5742  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  5743  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  5744  08D0  0BF8               	decfsz	??__div_to_l_,f
  5745  08D1  28CB               	goto	u4665
  5746  08D2                     l3079:
  5747  08D2  0877               	movf	__div_to_l_@f2+3,w
  5748  08D3  0273               	subwf	__div_to_l_@f1+3,w
  5749  08D4  1D03               	skipz
  5750  08D5  28E0               	goto	u4675
  5751  08D6  0876               	movf	__div_to_l_@f2+2,w
  5752  08D7  0272               	subwf	__div_to_l_@f1+2,w
  5753  08D8  1D03               	skipz
  5754  08D9  28E0               	goto	u4675
  5755  08DA  0875               	movf	__div_to_l_@f2+1,w
  5756  08DB  0271               	subwf	__div_to_l_@f1+1,w
  5757  08DC  1D03               	skipz
  5758  08DD  28E0               	goto	u4675
  5759  08DE  0874               	movf	__div_to_l_@f2,w
  5760  08DF  0270               	subwf	__div_to_l_@f1,w
  5761  08E0                     u4675:
  5762  08E0  1C03               	skipc
  5763  08E1  28E3               	goto	u4671
  5764  08E2  28E4               	goto	u4670
  5765  08E3                     u4671:
  5766  08E3  28F3               	goto	l3085
  5767  08E4                     u4670:
  5768  08E4                     l3081:
  5769  08E4  0874               	movf	__div_to_l_@f2,w
  5770  08E5  02F0               	subwf	__div_to_l_@f1,f
  5771  08E6  0875               	movf	__div_to_l_@f2+1,w
  5772  08E7  1C03               	skipc
  5773  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  5774  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  5775  08EA  0876               	movf	__div_to_l_@f2+2,w
  5776  08EB  1C03               	skipc
  5777  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  5778  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  5779  08EE  0877               	movf	__div_to_l_@f2+3,w
  5780  08EF  1C03               	skipc
  5781  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  5782  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  5783  08F2                     l3083:
  5784  08F2  1420               	bsf	__div_to_l_@quot,0
  5785  08F3                     l3085:
  5786  08F3  3001               	movlw	1
  5787  08F4  00F8               	movwf	??__div_to_l_
  5788  08F5                     u4685:
  5789  08F5  1003               	clrc
  5790  08F6  0DF0               	rlf	__div_to_l_@f1,f
  5791  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  5792  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  5793  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  5794  08FA  0BF8               	decfsz	??__div_to_l_,f
  5795  08FB  28F5               	goto	u4685
  5796  08FC                     l3087:
  5797  08FC  3001               	movlw	1
  5798  08FD  02A4               	subwf	__div_to_l_@cntr,f
  5799  08FE  1D03               	btfss	3,2
  5800  08FF  2901               	goto	u4691
  5801  0900  2902               	goto	u4690
  5802  0901                     u4691:
  5803  0901  28C9               	goto	l3077
  5804  0902                     u4690:
  5805  0902                     l600:
  5806  0902  1FA5               	btfss	__div_to_l_@exp1,7
  5807  0903  2905               	goto	u4701
  5808  0904  2906               	goto	u4700
  5809  0905                     u4701:
  5810  0905  2920               	goto	l3097
  5811  0906                     u4700:
  5812  0906                     l3089:
  5813  0906  0825               	movf	__div_to_l_@exp1,w
  5814  0907  3A80               	xorlw	128
  5815  0908  3E9F               	addlw	159
  5816  0909  1803               	skipnc
  5817  090A  290C               	goto	u4711
  5818  090B  290D               	goto	u4710
  5819  090C                     u4711:
  5820  090C  290E               	goto	l3095
  5821  090D                     u4710:
  5822  090D  288F               	goto	l3059
  5823  090E                     l3095:
  5824  090E  3001               	movlw	1
  5825  090F                     u4725:
  5826  090F  1003               	clrc
  5827  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  5828  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  5829  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  5830  0913  0CA0               	rrf	__div_to_l_@quot,f
  5831  0914  3EFF               	addlw	-1
  5832  0915  1D03               	skipz
  5833  0916  290F               	goto	u4725
  5834  0917  3001               	movlw	1
  5835  0918  00F8               	movwf	??__div_to_l_
  5836  0919  0878               	movf	??__div_to_l_,w
  5837  091A  07A5               	addwf	__div_to_l_@exp1,f
  5838  091B  1D03               	btfss	3,2
  5839  091C  291E               	goto	u4731
  5840  091D  291F               	goto	u4730
  5841  091E                     u4731:
  5842  091E  290E               	goto	l3095
  5843  091F                     u4730:
  5844  091F  2937               	goto	l3105
  5845  0920                     l3097:
  5846  0920  3020               	movlw	32
  5847  0921  0225               	subwf	__div_to_l_@exp1,w
  5848  0922  1C03               	skipc
  5849  0923  2925               	goto	u4741
  5850  0924  2926               	goto	u4740
  5851  0925                     u4741:
  5852  0925  2932               	goto	l607
  5853  0926                     u4740:
  5854  0926  288F               	goto	l3059
  5855  0927                     l3103:
  5856  0927  3001               	movlw	1
  5857  0928  00F8               	movwf	??__div_to_l_
  5858  0929                     u4755:
  5859  0929  1003               	clrc
  5860  092A  0DA0               	rlf	__div_to_l_@quot,f
  5861  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  5862  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  5863  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  5864  092E  0BF8               	decfsz	??__div_to_l_,f
  5865  092F  2929               	goto	u4755
  5866  0930  3001               	movlw	1
  5867  0931  02A5               	subwf	__div_to_l_@exp1,f
  5868  0932                     l607:
  5869  0932  0825               	movf	__div_to_l_@exp1,w
  5870  0933  1D03               	btfss	3,2
  5871  0934  2936               	goto	u4761
  5872  0935  2937               	goto	u4760
  5873  0936                     u4761:
  5874  0936  2927               	goto	l3103
  5875  0937                     u4760:
  5876  0937                     l3105:
  5877  0937  0823               	movf	__div_to_l_@quot+3,w
  5878  0938  00F3               	movwf	?__div_to_l_+3
  5879  0939  0822               	movf	__div_to_l_@quot+2,w
  5880  093A  00F2               	movwf	?__div_to_l_+2
  5881  093B  0821               	movf	__div_to_l_@quot+1,w
  5882  093C  00F1               	movwf	?__div_to_l_+1
  5883  093D  0820               	movf	__div_to_l_@quot,w
  5884  093E  00F0               	movwf	?__div_to_l_
  5885  093F                     l596:
  5886  093F  0008               	return
  5887  0940                     __end_of__div_to_l_:
  5888                           
  5889                           	psect	text13
  5890  1A4E                     __ptext13:	
  5891 ;; *************** function ___wmul *****************
  5892 ;; Defined at:
  5893 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  multiplier      2    0[COMMON] unsigned int 
  5896 ;;  multiplicand    2    2[COMMON] unsigned int 
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  product         2    4[COMMON] unsigned int 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  2    0[COMMON] unsigned int 
  5901 ;; Registers used:
  5902 ;;		wreg, status,2, status,0
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5908 ;;      Params:         4       0       0       0       0
  5909 ;;      Locals:         2       0       0       0       0
  5910 ;;      Temps:          0       0       0       0       0
  5911 ;;      Totals:         6       0       0       0       0
  5912 ;;Total ram usage:        6 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; This function calls:
  5915 ;;		Nothing
  5916 ;; This function is called by:
  5917 ;;		_sprintf
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           
  5922                           ;psect for function ___wmul
  5923  1A4E                     ___wmul:
  5924  1A4E                     l3109:	
  5925                           ;incstack = 0
  5926                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5927                           
  5928  1A4E  01F4               	clrf	___wmul@product
  5929  1A4F  01F5               	clrf	___wmul@product+1
  5930  1A50                     l3111:
  5931  1A50  1C70               	btfss	___wmul@multiplier,0
  5932  1A51  2A53               	goto	u4771
  5933  1A52  2A54               	goto	u4770
  5934  1A53                     u4771:
  5935  1A53  2A5A               	goto	l426
  5936  1A54                     u4770:
  5937  1A54                     l3113:
  5938  1A54  0872               	movf	___wmul@multiplicand,w
  5939  1A55  07F4               	addwf	___wmul@product,f
  5940  1A56  1803               	skipnc
  5941  1A57  0AF5               	incf	___wmul@product+1,f
  5942  1A58  0873               	movf	___wmul@multiplicand+1,w
  5943  1A59  07F5               	addwf	___wmul@product+1,f
  5944  1A5A                     l426:
  5945  1A5A  3001               	movlw	1
  5946  1A5B                     u4785:
  5947  1A5B  1003               	clrc
  5948  1A5C  0DF2               	rlf	___wmul@multiplicand,f
  5949  1A5D  0DF3               	rlf	___wmul@multiplicand+1,f
  5950  1A5E  3EFF               	addlw	-1
  5951  1A5F  1D03               	skipz
  5952  1A60  2A5B               	goto	u4785
  5953  1A61                     l3115:
  5954  1A61  3001               	movlw	1
  5955  1A62                     u4795:
  5956  1A62  1003               	clrc
  5957  1A63  0CF1               	rrf	___wmul@multiplier+1,f
  5958  1A64  0CF0               	rrf	___wmul@multiplier,f
  5959  1A65  3EFF               	addlw	-1
  5960  1A66  1D03               	skipz
  5961  1A67  2A62               	goto	u4795
  5962  1A68                     l3117:
  5963  1A68  0870               	movf	___wmul@multiplier,w
  5964  1A69  0471               	iorwf	___wmul@multiplier+1,w
  5965  1A6A  1D03               	btfss	3,2
  5966  1A6B  2A6D               	goto	u4801
  5967  1A6C  2A6E               	goto	u4800
  5968  1A6D                     u4801:
  5969  1A6D  2A50               	goto	l3111
  5970  1A6E                     u4800:
  5971  1A6E                     l3119:
  5972  1A6E  0875               	movf	___wmul@product+1,w
  5973  1A6F  00F1               	movwf	?___wmul+1
  5974  1A70  0874               	movf	___wmul@product,w
  5975  1A71  00F0               	movwf	?___wmul
  5976  1A72                     l428:
  5977  1A72  0008               	return
  5978  1A73                     __end_of___wmul:
  5979                           
  5980                           	psect	text14
  5981  00C5                     __ptext14:	
  5982 ;; *************** function ___llmod *****************
  5983 ;; Defined at:
  5984 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;  divisor         4    0[BANK0 ] unsigned long 
  5987 ;;  dividend        4    4[BANK0 ] unsigned long 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  counter         1    9[BANK0 ] unsigned char 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  4    0[BANK0 ] unsigned long 
  5992 ;; Registers used:
  5993 ;;		wreg, status,2, status,0
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5999 ;;      Params:         0       8       0       0       0
  6000 ;;      Locals:         0       1       0       0       0
  6001 ;;      Temps:          0       1       0       0       0
  6002 ;;      Totals:         0      10       0       0       0
  6003 ;;Total ram usage:       10 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; This function calls:
  6006 ;;		Nothing
  6007 ;; This function is called by:
  6008 ;;		_sprintf
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           
  6013                           ;psect for function ___llmod
  6014  00C5                     ___llmod:
  6015  00C5                     l3223:	
  6016                           ;incstack = 0
  6017                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6018                           
  6019  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  6020  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  6021  00C7  0823               	movf	___llmod@divisor+3,w
  6022  00C8  0422               	iorwf	___llmod@divisor+2,w
  6023  00C9  0421               	iorwf	___llmod@divisor+1,w
  6024  00CA  0420               	iorwf	___llmod@divisor,w
  6025  00CB  1903               	skipnz
  6026  00CC  28CE               	goto	u5091
  6027  00CD  28CF               	goto	u5090
  6028  00CE                     u5091:
  6029  00CE  2912               	goto	l3239
  6030  00CF                     u5090:
  6031  00CF                     l3225:
  6032  00CF  01A9               	clrf	___llmod@counter
  6033  00D0  0AA9               	incf	___llmod@counter,f
  6034  00D1  28DF               	goto	l3229
  6035  00D2                     l3227:
  6036  00D2  3001               	movlw	1
  6037  00D3  00A8               	movwf	??___llmod
  6038  00D4                     u5105:
  6039  00D4  1003               	clrc
  6040  00D5  0DA0               	rlf	___llmod@divisor,f
  6041  00D6  0DA1               	rlf	___llmod@divisor+1,f
  6042  00D7  0DA2               	rlf	___llmod@divisor+2,f
  6043  00D8  0DA3               	rlf	___llmod@divisor+3,f
  6044  00D9  0BA8               	decfsz	??___llmod,f
  6045  00DA  28D4               	goto	u5105
  6046  00DB  3001               	movlw	1
  6047  00DC  00A8               	movwf	??___llmod
  6048  00DD  0828               	movf	??___llmod,w
  6049  00DE  07A9               	addwf	___llmod@counter,f
  6050  00DF                     l3229:
  6051  00DF  1FA3               	btfss	___llmod@divisor+3,7
  6052  00E0  28E2               	goto	u5111
  6053  00E1  28E3               	goto	u5110
  6054  00E2                     u5111:
  6055  00E2  28D2               	goto	l3227
  6056  00E3                     u5110:
  6057  00E3                     l3231:
  6058  00E3  0823               	movf	___llmod@divisor+3,w
  6059  00E4  0227               	subwf	___llmod@dividend+3,w
  6060  00E5  1D03               	skipz
  6061  00E6  28F1               	goto	u5125
  6062  00E7  0822               	movf	___llmod@divisor+2,w
  6063  00E8  0226               	subwf	___llmod@dividend+2,w
  6064  00E9  1D03               	skipz
  6065  00EA  28F1               	goto	u5125
  6066  00EB  0821               	movf	___llmod@divisor+1,w
  6067  00EC  0225               	subwf	___llmod@dividend+1,w
  6068  00ED  1D03               	skipz
  6069  00EE  28F1               	goto	u5125
  6070  00EF  0820               	movf	___llmod@divisor,w
  6071  00F0  0224               	subwf	___llmod@dividend,w
  6072  00F1                     u5125:
  6073  00F1  1C03               	skipc
  6074  00F2  28F4               	goto	u5121
  6075  00F3  28F5               	goto	u5120
  6076  00F4                     u5121:
  6077  00F4  2903               	goto	l3235
  6078  00F5                     u5120:
  6079  00F5                     l3233:
  6080  00F5  0820               	movf	___llmod@divisor,w
  6081  00F6  02A4               	subwf	___llmod@dividend,f
  6082  00F7  0821               	movf	___llmod@divisor+1,w
  6083  00F8  1C03               	skipc
  6084  00F9  0F21               	incfsz	___llmod@divisor+1,w
  6085  00FA  02A5               	subwf	___llmod@dividend+1,f
  6086  00FB  0822               	movf	___llmod@divisor+2,w
  6087  00FC  1C03               	skipc
  6088  00FD  0F22               	incfsz	___llmod@divisor+2,w
  6089  00FE  02A6               	subwf	___llmod@dividend+2,f
  6090  00FF  0823               	movf	___llmod@divisor+3,w
  6091  0100  1C03               	skipc
  6092  0101  0F23               	incfsz	___llmod@divisor+3,w
  6093  0102  02A7               	subwf	___llmod@dividend+3,f
  6094  0103                     l3235:
  6095  0103  3001               	movlw	1
  6096  0104                     u5135:
  6097  0104  1003               	clrc
  6098  0105  0CA3               	rrf	___llmod@divisor+3,f
  6099  0106  0CA2               	rrf	___llmod@divisor+2,f
  6100  0107  0CA1               	rrf	___llmod@divisor+1,f
  6101  0108  0CA0               	rrf	___llmod@divisor,f
  6102  0109  3EFF               	addlw	-1
  6103  010A  1D03               	skipz
  6104  010B  2904               	goto	u5135
  6105  010C                     l3237:
  6106  010C  3001               	movlw	1
  6107  010D  02A9               	subwf	___llmod@counter,f
  6108  010E  1D03               	btfss	3,2
  6109  010F  2911               	goto	u5141
  6110  0110  2912               	goto	u5140
  6111  0111                     u5141:
  6112  0111  28E3               	goto	l3231
  6113  0112                     u5140:
  6114  0112                     l3239:
  6115  0112  0827               	movf	___llmod@dividend+3,w
  6116  0113  00A3               	movwf	?___llmod+3
  6117  0114  0826               	movf	___llmod@dividend+2,w
  6118  0115  00A2               	movwf	?___llmod+2
  6119  0116  0825               	movf	___llmod@dividend+1,w
  6120  0117  00A1               	movwf	?___llmod+1
  6121  0118  0824               	movf	___llmod@dividend,w
  6122  0119  00A0               	movwf	?___llmod
  6123  011A                     l682:
  6124  011A  0008               	return
  6125  011B                     __end_of___llmod:
  6126                           
  6127                           	psect	text15
  6128  1D50                     __ptext15:	
  6129 ;; *************** function ___lldiv *****************
  6130 ;; Defined at:
  6131 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;  divisor         4    0[COMMON] unsigned long 
  6134 ;;  dividend        4    4[COMMON] unsigned long 
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;  quotient        4    9[COMMON] unsigned long 
  6137 ;;  counter         1   13[COMMON] unsigned char 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  4    0[COMMON] unsigned long 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6147 ;;      Params:         8       0       0       0       0
  6148 ;;      Locals:         5       0       0       0       0
  6149 ;;      Temps:          1       0       0       0       0
  6150 ;;      Totals:        14       0       0       0       0
  6151 ;;Total ram usage:       14 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; This function calls:
  6154 ;;		Nothing
  6155 ;; This function is called by:
  6156 ;;		_sprintf
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           
  6161                           ;psect for function ___lldiv
  6162  1D50                     ___lldiv:
  6163  1D50                     l3123:	
  6164                           ;incstack = 0
  6165                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6166                           
  6167  1D50  3000               	movlw	0
  6168  1D51  00FC               	movwf	___lldiv@quotient+3
  6169  1D52  3000               	movlw	0
  6170  1D53  00FB               	movwf	___lldiv@quotient+2
  6171  1D54  3000               	movlw	0
  6172  1D55  00FA               	movwf	___lldiv@quotient+1
  6173  1D56  3000               	movlw	0
  6174  1D57  00F9               	movwf	___lldiv@quotient
  6175  1D58  0873               	movf	___lldiv@divisor+3,w
  6176  1D59  0472               	iorwf	___lldiv@divisor+2,w
  6177  1D5A  0471               	iorwf	___lldiv@divisor+1,w
  6178  1D5B  0470               	iorwf	___lldiv@divisor,w
  6179  1D5C  1903               	skipnz
  6180  1D5D  2D5F               	goto	u4811
  6181  1D5E  2D60               	goto	u4810
  6182  1D5F                     u4811:
  6183  1D5F  2DAD               	goto	l3143
  6184  1D60                     u4810:
  6185  1D60                     l3125:
  6186  1D60  01FD               	clrf	___lldiv@counter
  6187  1D61  0AFD               	incf	___lldiv@counter,f
  6188  1D62  2D70               	goto	l3129
  6189  1D63                     l3127:
  6190  1D63  3001               	movlw	1
  6191  1D64  00F8               	movwf	??___lldiv
  6192  1D65                     u4825:
  6193  1D65  1003               	clrc
  6194  1D66  0DF0               	rlf	___lldiv@divisor,f
  6195  1D67  0DF1               	rlf	___lldiv@divisor+1,f
  6196  1D68  0DF2               	rlf	___lldiv@divisor+2,f
  6197  1D69  0DF3               	rlf	___lldiv@divisor+3,f
  6198  1D6A  0BF8               	decfsz	??___lldiv,f
  6199  1D6B  2D65               	goto	u4825
  6200  1D6C  3001               	movlw	1
  6201  1D6D  00F8               	movwf	??___lldiv
  6202  1D6E  0878               	movf	??___lldiv,w
  6203  1D6F  07FD               	addwf	___lldiv@counter,f
  6204  1D70                     l3129:
  6205  1D70  1FF3               	btfss	___lldiv@divisor+3,7
  6206  1D71  2D73               	goto	u4831
  6207  1D72  2D74               	goto	u4830
  6208  1D73                     u4831:
  6209  1D73  2D63               	goto	l3127
  6210  1D74                     u4830:
  6211  1D74                     l3131:
  6212  1D74  3001               	movlw	1
  6213  1D75  00F8               	movwf	??___lldiv
  6214  1D76                     u4845:
  6215  1D76  1003               	clrc
  6216  1D77  0DF9               	rlf	___lldiv@quotient,f
  6217  1D78  0DFA               	rlf	___lldiv@quotient+1,f
  6218  1D79  0DFB               	rlf	___lldiv@quotient+2,f
  6219  1D7A  0DFC               	rlf	___lldiv@quotient+3,f
  6220  1D7B  0BF8               	decfsz	??___lldiv,f
  6221  1D7C  2D76               	goto	u4845
  6222  1D7D                     l3133:
  6223  1D7D  0873               	movf	___lldiv@divisor+3,w
  6224  1D7E  0277               	subwf	___lldiv@dividend+3,w
  6225  1D7F  1D03               	skipz
  6226  1D80  2D8B               	goto	u4855
  6227  1D81  0872               	movf	___lldiv@divisor+2,w
  6228  1D82  0276               	subwf	___lldiv@dividend+2,w
  6229  1D83  1D03               	skipz
  6230  1D84  2D8B               	goto	u4855
  6231  1D85  0871               	movf	___lldiv@divisor+1,w
  6232  1D86  0275               	subwf	___lldiv@dividend+1,w
  6233  1D87  1D03               	skipz
  6234  1D88  2D8B               	goto	u4855
  6235  1D89  0870               	movf	___lldiv@divisor,w
  6236  1D8A  0274               	subwf	___lldiv@dividend,w
  6237  1D8B                     u4855:
  6238  1D8B  1C03               	skipc
  6239  1D8C  2D8E               	goto	u4851
  6240  1D8D  2D8F               	goto	u4850
  6241  1D8E                     u4851:
  6242  1D8E  2D9E               	goto	l3139
  6243  1D8F                     u4850:
  6244  1D8F                     l3135:
  6245  1D8F  0870               	movf	___lldiv@divisor,w
  6246  1D90  02F4               	subwf	___lldiv@dividend,f
  6247  1D91  0871               	movf	___lldiv@divisor+1,w
  6248  1D92  1C03               	skipc
  6249  1D93  0F71               	incfsz	___lldiv@divisor+1,w
  6250  1D94  02F5               	subwf	___lldiv@dividend+1,f
  6251  1D95  0872               	movf	___lldiv@divisor+2,w
  6252  1D96  1C03               	skipc
  6253  1D97  0F72               	incfsz	___lldiv@divisor+2,w
  6254  1D98  02F6               	subwf	___lldiv@dividend+2,f
  6255  1D99  0873               	movf	___lldiv@divisor+3,w
  6256  1D9A  1C03               	skipc
  6257  1D9B  0F73               	incfsz	___lldiv@divisor+3,w
  6258  1D9C  02F7               	subwf	___lldiv@dividend+3,f
  6259  1D9D                     l3137:
  6260  1D9D  1479               	bsf	___lldiv@quotient,0
  6261  1D9E                     l3139:
  6262  1D9E  3001               	movlw	1
  6263  1D9F                     u4865:
  6264  1D9F  1003               	clrc
  6265  1DA0  0CF3               	rrf	___lldiv@divisor+3,f
  6266  1DA1  0CF2               	rrf	___lldiv@divisor+2,f
  6267  1DA2  0CF1               	rrf	___lldiv@divisor+1,f
  6268  1DA3  0CF0               	rrf	___lldiv@divisor,f
  6269  1DA4  3EFF               	addlw	-1
  6270  1DA5  1D03               	skipz
  6271  1DA6  2D9F               	goto	u4865
  6272  1DA7                     l3141:
  6273  1DA7  3001               	movlw	1
  6274  1DA8  02FD               	subwf	___lldiv@counter,f
  6275  1DA9  1D03               	btfss	3,2
  6276  1DAA  2DAC               	goto	u4871
  6277  1DAB  2DAD               	goto	u4870
  6278  1DAC                     u4871:
  6279  1DAC  2D74               	goto	l3131
  6280  1DAD                     u4870:
  6281  1DAD                     l3143:
  6282  1DAD  087C               	movf	___lldiv@quotient+3,w
  6283  1DAE  00F3               	movwf	?___lldiv+3
  6284  1DAF  087B               	movf	___lldiv@quotient+2,w
  6285  1DB0  00F2               	movwf	?___lldiv+2
  6286  1DB1  087A               	movf	___lldiv@quotient+1,w
  6287  1DB2  00F1               	movwf	?___lldiv+1
  6288  1DB3  0879               	movf	___lldiv@quotient,w
  6289  1DB4  00F0               	movwf	?___lldiv
  6290  1DB5                     l462:
  6291  1DB5  0008               	return
  6292  1DB6                     __end_of___lldiv:
  6293                           
  6294                           	psect	text16
  6295  0806                     __ptext16:	
  6296 ;; *************** function ___fltol *****************
  6297 ;; Defined at:
  6298 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  f1              4   49[BANK0 ] unsigned long 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  exp1            1   59[BANK0 ] unsigned char 
  6303 ;;  sign1           1   58[BANK0 ] unsigned char 
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  4   49[BANK0 ] long 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6313 ;;      Params:         0       4       0       0       0
  6314 ;;      Locals:         0       2       0       0       0
  6315 ;;      Temps:          0       5       0       0       0
  6316 ;;      Totals:         0      11       0       0       0
  6317 ;;Total ram usage:       11 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; This function calls:
  6320 ;;		Nothing
  6321 ;; This function is called by:
  6322 ;;		_sprintf
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           
  6327                           ;psect for function ___fltol
  6328  0806                     ___fltol:
  6329  0806                     l3187:	
  6330                           ;incstack = 0
  6331                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6332                           
  6333  0806  1003               	clrc
  6334  0807  1283               	bcf	3,5	;RP0=0, select bank0
  6335  0808  1303               	bcf	3,6	;RP1=0, select bank0
  6336  0809  0D53               	rlf	___fltol@f1+2,w
  6337  080A  0D54               	rlf	___fltol@f1+3,w
  6338  080B  00D5               	movwf	??___fltol
  6339  080C  0855               	movf	??___fltol,w
  6340  080D  00DB               	movwf	___fltol@exp1
  6341  080E  085B               	movf	___fltol@exp1,w
  6342  080F  1D03               	btfss	3,2
  6343  0810  2812               	goto	u4991
  6344  0811  2813               	goto	u4990
  6345  0812                     u4991:
  6346  0812  281C               	goto	l3193
  6347  0813                     u4990:
  6348  0813                     l3189:
  6349  0813  3000               	movlw	0
  6350  0814  00D4               	movwf	?___fltol+3
  6351  0815  3000               	movlw	0
  6352  0816  00D3               	movwf	?___fltol+2
  6353  0817  3000               	movlw	0
  6354  0818  00D2               	movwf	?___fltol+1
  6355  0819  3000               	movlw	0
  6356  081A  00D1               	movwf	?___fltol
  6357  081B  2881               	goto	l629
  6358  081C                     l3193:
  6359  081C  0851               	movf	___fltol@f1,w
  6360  081D  00D5               	movwf	??___fltol
  6361  081E  0852               	movf	___fltol@f1+1,w
  6362  081F  00D6               	movwf	??___fltol+1
  6363  0820  0853               	movf	___fltol@f1+2,w
  6364  0821  00D7               	movwf	??___fltol+2
  6365  0822  0854               	movf	___fltol@f1+3,w
  6366  0823  00D8               	movwf	??___fltol+3
  6367  0824  301F               	movlw	31
  6368  0825                     u5005:
  6369  0825  1003               	clrc
  6370  0826  0CD8               	rrf	??___fltol+3,f
  6371  0827  0CD7               	rrf	??___fltol+2,f
  6372  0828  0CD6               	rrf	??___fltol+1,f
  6373  0829  0CD5               	rrf	??___fltol,f
  6374  082A                     u5000:
  6375  082A  3EFF               	addlw	-1
  6376  082B  1D03               	skipz
  6377  082C  2825               	goto	u5005
  6378  082D  0855               	movf	??___fltol,w
  6379  082E  00D9               	movwf	??___fltol+4
  6380  082F  0859               	movf	??___fltol+4,w
  6381  0830  00DA               	movwf	___fltol@sign1
  6382  0831                     l3195:
  6383  0831  17D3               	bsf	___fltol@f1+2,7
  6384  0832                     l3197:
  6385  0832  30FF               	movlw	255
  6386  0833  05D1               	andwf	___fltol@f1,f
  6387  0834  30FF               	movlw	255
  6388  0835  05D2               	andwf	___fltol@f1+1,f
  6389  0836  30FF               	movlw	255
  6390  0837  05D3               	andwf	___fltol@f1+2,f
  6391  0838  3000               	movlw	0
  6392  0839  05D4               	andwf	___fltol@f1+3,f
  6393  083A                     l3199:
  6394  083A  3096               	movlw	150
  6395  083B  02DB               	subwf	___fltol@exp1,f
  6396  083C                     l3201:
  6397  083C  1FDB               	btfss	___fltol@exp1,7
  6398  083D  283F               	goto	u5011
  6399  083E  2840               	goto	u5010
  6400  083F                     u5011:
  6401  083F  285A               	goto	l3211
  6402  0840                     u5010:
  6403  0840                     l3203:
  6404  0840  085B               	movf	___fltol@exp1,w
  6405  0841  3A80               	xorlw	128
  6406  0842  3E97               	addlw	151
  6407  0843  1803               	skipnc
  6408  0844  2846               	goto	u5021
  6409  0845  2847               	goto	u5020
  6410  0846                     u5021:
  6411  0846  2848               	goto	l3209
  6412  0847                     u5020:
  6413  0847  2813               	goto	l3189
  6414  0848                     l3209:
  6415  0848  3001               	movlw	1
  6416  0849                     u5035:
  6417  0849  1003               	clrc
  6418  084A  0CD4               	rrf	___fltol@f1+3,f
  6419  084B  0CD3               	rrf	___fltol@f1+2,f
  6420  084C  0CD2               	rrf	___fltol@f1+1,f
  6421  084D  0CD1               	rrf	___fltol@f1,f
  6422  084E  3EFF               	addlw	-1
  6423  084F  1D03               	skipz
  6424  0850  2849               	goto	u5035
  6425  0851  3001               	movlw	1
  6426  0852  00D5               	movwf	??___fltol
  6427  0853  0855               	movf	??___fltol,w
  6428  0854  07DB               	addwf	___fltol@exp1,f
  6429  0855  1D03               	btfss	3,2
  6430  0856  2858               	goto	u5041
  6431  0857  2859               	goto	u5040
  6432  0858                     u5041:
  6433  0858  2848               	goto	l3209
  6434  0859                     u5040:
  6435  0859  2871               	goto	l3219
  6436  085A                     l3211:
  6437  085A  3020               	movlw	32
  6438  085B  025B               	subwf	___fltol@exp1,w
  6439  085C  1C03               	skipc
  6440  085D  285F               	goto	u5051
  6441  085E  2860               	goto	u5050
  6442  085F                     u5051:
  6443  085F  286C               	goto	l636
  6444  0860                     u5050:
  6445  0860  2813               	goto	l3189
  6446  0861                     l3217:
  6447  0861  3001               	movlw	1
  6448  0862  00D5               	movwf	??___fltol
  6449  0863                     u5065:
  6450  0863  1003               	clrc
  6451  0864  0DD1               	rlf	___fltol@f1,f
  6452  0865  0DD2               	rlf	___fltol@f1+1,f
  6453  0866  0DD3               	rlf	___fltol@f1+2,f
  6454  0867  0DD4               	rlf	___fltol@f1+3,f
  6455  0868  0BD5               	decfsz	??___fltol,f
  6456  0869  2863               	goto	u5065
  6457  086A  3001               	movlw	1
  6458  086B  02DB               	subwf	___fltol@exp1,f
  6459  086C                     l636:
  6460  086C  085B               	movf	___fltol@exp1,w
  6461  086D  1D03               	btfss	3,2
  6462  086E  2870               	goto	u5071
  6463  086F  2871               	goto	u5070
  6464  0870                     u5071:
  6465  0870  2861               	goto	l3217
  6466  0871                     u5070:
  6467  0871                     l3219:
  6468  0871  085A               	movf	___fltol@sign1,w
  6469  0872  1903               	btfsc	3,2
  6470  0873  2875               	goto	u5081
  6471  0874  2876               	goto	u5080
  6472  0875                     u5081:
  6473  0875  2881               	goto	l639
  6474  0876                     u5080:
  6475  0876                     l3221:
  6476  0876  09D1               	comf	___fltol@f1,f
  6477  0877  09D2               	comf	___fltol@f1+1,f
  6478  0878  09D3               	comf	___fltol@f1+2,f
  6479  0879  09D4               	comf	___fltol@f1+3,f
  6480  087A  0AD1               	incf	___fltol@f1,f
  6481  087B  1903               	skipnz
  6482  087C  0AD2               	incf	___fltol@f1+1,f
  6483  087D  1903               	skipnz
  6484  087E  0AD3               	incf	___fltol@f1+2,f
  6485  087F  1903               	skipnz
  6486  0880  0AD4               	incf	___fltol@f1+3,f
  6487  0881                     l639:
  6488  0881                     l629:
  6489  0881  0008               	return
  6490  0882                     __end_of___fltol:
  6491                           
  6492                           	psect	text17
  6493  1A2A                     __ptext17:	
  6494 ;; *************** function ___flsub *****************
  6495 ;; Defined at:
  6496 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  a               4   70[BANK0 ] long 
  6499 ;;  b               4   74[BANK0 ] long 
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;		None
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  4   70[BANK0 ] long 
  6504 ;; Registers used:
  6505 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6511 ;;      Params:         0       8       0       0       0
  6512 ;;      Locals:         0       0       0       0       0
  6513 ;;      Temps:          0       0       0       0       0
  6514 ;;      Totals:         0       8       0       0       0
  6515 ;;Total ram usage:        8 bytes
  6516 ;; Hardware stack levels used:    1
  6517 ;; Hardware stack levels required when called:    1
  6518 ;; This function calls:
  6519 ;;		___fladd
  6520 ;; This function is called by:
  6521 ;;		_sprintf
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           
  6526                           ;psect for function ___flsub
  6527  1A2A                     ___flsub:
  6528  1A2A                     l3243:	
  6529                           ;incstack = 0
  6530                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6531                           
  6532  1A2A  3080               	movlw	128
  6533  1A2B  1283               	bcf	3,5	;RP0=0, select bank0
  6534  1A2C  1303               	bcf	3,6	;RP1=0, select bank0
  6535  1A2D  06E9               	xorwf	___flsub@a+3,f
  6536  1A2E                     l3245:
  6537  1A2E  086D               	movf	___flsub@b+3,w
  6538  1A2F  00D5               	movwf	___fladd@b+3
  6539  1A30  086C               	movf	___flsub@b+2,w
  6540  1A31  00D4               	movwf	___fladd@b+2
  6541  1A32  086B               	movf	___flsub@b+1,w
  6542  1A33  00D3               	movwf	___fladd@b+1
  6543  1A34  086A               	movf	___flsub@b,w
  6544  1A35  00D2               	movwf	___fladd@b
  6545  1A36  0869               	movf	___flsub@a+3,w
  6546  1A37  00D9               	movwf	___fladd@a+3
  6547  1A38  0868               	movf	___flsub@a+2,w
  6548  1A39  00D8               	movwf	___fladd@a+2
  6549  1A3A  0867               	movf	___flsub@a+1,w
  6550  1A3B  00D7               	movwf	___fladd@a+1
  6551  1A3C  0866               	movf	___flsub@a,w
  6552  1A3D  00D6               	movwf	___fladd@a
  6553  1A3E  160A  118A  22B6  160A  158A  	fcall	___fladd
  6554  1A43  1283               	bcf	3,5	;RP0=0, select bank0
  6555  1A44  1303               	bcf	3,6	;RP1=0, select bank0
  6556  1A45  0855               	movf	?___fladd+3,w
  6557  1A46  00E9               	movwf	?___flsub+3
  6558  1A47  0854               	movf	?___fladd+2,w
  6559  1A48  00E8               	movwf	?___flsub+2
  6560  1A49  0853               	movf	?___fladd+1,w
  6561  1A4A  00E7               	movwf	?___flsub+1
  6562  1A4B  0852               	movf	?___fladd,w
  6563  1A4C  00E6               	movwf	?___flsub
  6564  1A4D                     l799:
  6565  1A4D  0008               	return
  6566  1A4E                     __end_of___flsub:
  6567                           
  6568                           	psect	text18
  6569  12B6                     __ptext18:	
  6570 ;; *************** function ___fladd *****************
  6571 ;; Defined at:
  6572 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  b               4   50[BANK0 ] long 
  6575 ;;  a               4   54[BANK0 ] long 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  grs             1   69[BANK0 ] unsigned char 
  6578 ;;  bexp            1   68[BANK0 ] unsigned char 
  6579 ;;  aexp            1   67[BANK0 ] unsigned char 
  6580 ;;  signs           1   66[BANK0 ] unsigned char 
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  4   50[BANK0 ] unsigned char 
  6583 ;; Registers used:
  6584 ;;		wreg, status,2, status,0, btemp+1
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6590 ;;      Params:         0       8       0       0       0
  6591 ;;      Locals:         0       4       0       0       0
  6592 ;;      Temps:          0       8       0       0       0
  6593 ;;      Totals:         0      20       0       0       0
  6594 ;;Total ram usage:       20 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_sprintf
  6600 ;;		___flsub
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           
  6605                           ;psect for function ___fladd
  6606  12B6                     ___fladd:
  6607  12B6                     l2551:	
  6608                           ;incstack = 0
  6609                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6610                           
  6611  12B6  1283               	bcf	3,5	;RP0=0, select bank0
  6612  12B7  1303               	bcf	3,6	;RP1=0, select bank0
  6613  12B8  0855               	movf	___fladd@b+3,w
  6614  12B9  3980               	andlw	128
  6615  12BA  00DA               	movwf	??___fladd
  6616  12BB  085A               	movf	??___fladd,w
  6617  12BC  00E2               	movwf	___fladd@signs
  6618  12BD                     l2553:
  6619  12BD  0855               	movf	___fladd@b+3,w
  6620  12BE  00DA               	movwf	??___fladd
  6621  12BF  075A               	addwf	??___fladd,w
  6622  12C0  00DB               	movwf	??___fladd+1
  6623  12C1  085B               	movf	??___fladd+1,w
  6624  12C2  00E4               	movwf	___fladd@bexp
  6625  12C3                     l2555:
  6626  12C3  1FD4               	btfss	___fladd@b+2,7
  6627  12C4  2AC6               	goto	u3391
  6628  12C5  2AC7               	goto	u3390
  6629  12C6                     u3391:
  6630  12C6  2AC8               	goto	l2559
  6631  12C7                     u3390:
  6632  12C7                     l2557:
  6633  12C7  1464               	bsf	___fladd@bexp,0
  6634  12C8                     l2559:
  6635  12C8  0864               	movf	___fladd@bexp,w
  6636  12C9  1903               	btfsc	3,2
  6637  12CA  2ACC               	goto	u3401
  6638  12CB  2ACD               	goto	u3400
  6639  12CC                     u3401:
  6640  12CC  2ADD               	goto	l2569
  6641  12CD                     u3400:
  6642  12CD                     l2561:
  6643  12CD  0A64               	incf	___fladd@bexp,w
  6644  12CE  1D03               	btfss	3,2
  6645  12CF  2AD1               	goto	u3411
  6646  12D0  2AD2               	goto	u3410
  6647  12D1                     u3411:
  6648  12D1  2ADA               	goto	l2565
  6649  12D2                     u3410:
  6650  12D2                     l2563:
  6651  12D2  3000               	movlw	0
  6652  12D3  00D5               	movwf	___fladd@b+3
  6653  12D4  3000               	movlw	0
  6654  12D5  00D4               	movwf	___fladd@b+2
  6655  12D6  3000               	movlw	0
  6656  12D7  00D3               	movwf	___fladd@b+1
  6657  12D8  3000               	movlw	0
  6658  12D9  00D2               	movwf	___fladd@b
  6659  12DA                     l2565:
  6660  12DA  17D4               	bsf	___fladd@b+2,7
  6661  12DB                     l2567:
  6662  12DB  01D5               	clrf	___fladd@b+3
  6663  12DC  2AE5               	goto	l2571
  6664  12DD                     l2569:
  6665  12DD  3000               	movlw	0
  6666  12DE  00D5               	movwf	___fladd@b+3
  6667  12DF  3000               	movlw	0
  6668  12E0  00D4               	movwf	___fladd@b+2
  6669  12E1  3000               	movlw	0
  6670  12E2  00D3               	movwf	___fladd@b+1
  6671  12E3  3000               	movlw	0
  6672  12E4  00D2               	movwf	___fladd@b
  6673  12E5                     l2571:
  6674  12E5  0859               	movf	___fladd@a+3,w
  6675  12E6  3980               	andlw	128
  6676  12E7  00DA               	movwf	??___fladd
  6677  12E8  085A               	movf	??___fladd,w
  6678  12E9  00E3               	movwf	___fladd@aexp
  6679  12EA                     l2573:
  6680  12EA  0863               	movf	___fladd@aexp,w
  6681  12EB  0662               	xorwf	___fladd@signs,w
  6682  12EC  1903               	skipnz
  6683  12ED  2AEF               	goto	u3421
  6684  12EE  2AF0               	goto	u3420
  6685  12EF                     u3421:
  6686  12EF  2AF1               	goto	l2577
  6687  12F0                     u3420:
  6688  12F0                     l2575:
  6689  12F0  1762               	bsf	___fladd@signs,6
  6690  12F1                     l2577:
  6691  12F1  0859               	movf	___fladd@a+3,w
  6692  12F2  00DA               	movwf	??___fladd
  6693  12F3  075A               	addwf	??___fladd,w
  6694  12F4  00DB               	movwf	??___fladd+1
  6695  12F5  085B               	movf	??___fladd+1,w
  6696  12F6  00E3               	movwf	___fladd@aexp
  6697  12F7                     l2579:
  6698  12F7  1FD8               	btfss	___fladd@a+2,7
  6699  12F8  2AFA               	goto	u3431
  6700  12F9  2AFB               	goto	u3430
  6701  12FA                     u3431:
  6702  12FA  2AFC               	goto	l2583
  6703  12FB                     u3430:
  6704  12FB                     l2581:
  6705  12FB  1463               	bsf	___fladd@aexp,0
  6706  12FC                     l2583:
  6707  12FC  0863               	movf	___fladd@aexp,w
  6708  12FD  1903               	btfsc	3,2
  6709  12FE  2B00               	goto	u3441
  6710  12FF  2B01               	goto	u3440
  6711  1300                     u3441:
  6712  1300  2B11               	goto	l2593
  6713  1301                     u3440:
  6714  1301                     l2585:
  6715  1301  0A63               	incf	___fladd@aexp,w
  6716  1302  1D03               	btfss	3,2
  6717  1303  2B05               	goto	u3451
  6718  1304  2B06               	goto	u3450
  6719  1305                     u3451:
  6720  1305  2B0E               	goto	l2589
  6721  1306                     u3450:
  6722  1306                     l2587:
  6723  1306  3000               	movlw	0
  6724  1307  00D9               	movwf	___fladd@a+3
  6725  1308  3000               	movlw	0
  6726  1309  00D8               	movwf	___fladd@a+2
  6727  130A  3000               	movlw	0
  6728  130B  00D7               	movwf	___fladd@a+1
  6729  130C  3000               	movlw	0
  6730  130D  00D6               	movwf	___fladd@a
  6731  130E                     l2589:
  6732  130E  17D8               	bsf	___fladd@a+2,7
  6733  130F                     l2591:
  6734  130F  01D9               	clrf	___fladd@a+3
  6735  1310  2B19               	goto	l753
  6736  1311                     l2593:
  6737  1311  3000               	movlw	0
  6738  1312  00D9               	movwf	___fladd@a+3
  6739  1313  3000               	movlw	0
  6740  1314  00D8               	movwf	___fladd@a+2
  6741  1315  3000               	movlw	0
  6742  1316  00D7               	movwf	___fladd@a+1
  6743  1317  3000               	movlw	0
  6744  1318  00D6               	movwf	___fladd@a
  6745  1319                     l753:
  6746  1319  0864               	movf	___fladd@bexp,w
  6747  131A  0263               	subwf	___fladd@aexp,w
  6748  131B  1803               	skipnc
  6749  131C  2B1E               	goto	u3461
  6750  131D  2B1F               	goto	u3460
  6751  131E                     u3461:
  6752  131E  2B63               	goto	l2629
  6753  131F                     u3460:
  6754  131F                     l2595:
  6755  131F  1F62               	btfss	___fladd@signs,6
  6756  1320  2B22               	goto	u3471
  6757  1321  2B23               	goto	u3470
  6758  1322                     u3471:
  6759  1322  2B27               	goto	l2599
  6760  1323                     u3470:
  6761  1323                     l2597:
  6762  1323  3080               	movlw	128
  6763  1324  00DA               	movwf	??___fladd
  6764  1325  085A               	movf	??___fladd,w
  6765  1326  06E2               	xorwf	___fladd@signs,f
  6766  1327                     l2599:
  6767  1327  0864               	movf	___fladd@bexp,w
  6768  1328  00DA               	movwf	??___fladd
  6769  1329  085A               	movf	??___fladd,w
  6770  132A  00E5               	movwf	___fladd@grs
  6771  132B                     l2601:
  6772  132B  0863               	movf	___fladd@aexp,w
  6773  132C  00DA               	movwf	??___fladd
  6774  132D  085A               	movf	??___fladd,w
  6775  132E  00E4               	movwf	___fladd@bexp
  6776  132F                     l2603:
  6777  132F  0865               	movf	___fladd@grs,w
  6778  1330  00DA               	movwf	??___fladd
  6779  1331  085A               	movf	??___fladd,w
  6780  1332  00E3               	movwf	___fladd@aexp
  6781  1333                     l2605:
  6782  1333  0852               	movf	___fladd@b,w
  6783  1334  00DA               	movwf	??___fladd
  6784  1335  085A               	movf	??___fladd,w
  6785  1336  00E5               	movwf	___fladd@grs
  6786  1337                     l2607:
  6787  1337  0856               	movf	___fladd@a,w
  6788  1338  00DA               	movwf	??___fladd
  6789  1339  085A               	movf	??___fladd,w
  6790  133A  00D2               	movwf	___fladd@b
  6791  133B                     l2609:
  6792  133B  0865               	movf	___fladd@grs,w
  6793  133C  00DA               	movwf	??___fladd
  6794  133D  085A               	movf	??___fladd,w
  6795  133E  00D6               	movwf	___fladd@a
  6796  133F                     l2611:
  6797  133F  0853               	movf	___fladd@b+1,w
  6798  1340  00DA               	movwf	??___fladd
  6799  1341  085A               	movf	??___fladd,w
  6800  1342  00E5               	movwf	___fladd@grs
  6801  1343                     l2613:
  6802  1343  0857               	movf	___fladd@a+1,w
  6803  1344  00DA               	movwf	??___fladd
  6804  1345  085A               	movf	??___fladd,w
  6805  1346  00D3               	movwf	___fladd@b+1
  6806  1347                     l2615:
  6807  1347  0865               	movf	___fladd@grs,w
  6808  1348  00DA               	movwf	??___fladd
  6809  1349  085A               	movf	??___fladd,w
  6810  134A  00D7               	movwf	___fladd@a+1
  6811  134B                     l2617:
  6812  134B  0854               	movf	___fladd@b+2,w
  6813  134C  00DA               	movwf	??___fladd
  6814  134D  085A               	movf	??___fladd,w
  6815  134E  00E5               	movwf	___fladd@grs
  6816  134F                     l2619:
  6817  134F  0858               	movf	___fladd@a+2,w
  6818  1350  00DA               	movwf	??___fladd
  6819  1351  085A               	movf	??___fladd,w
  6820  1352  00D4               	movwf	___fladd@b+2
  6821  1353                     l2621:
  6822  1353  0865               	movf	___fladd@grs,w
  6823  1354  00DA               	movwf	??___fladd
  6824  1355  085A               	movf	??___fladd,w
  6825  1356  00D8               	movwf	___fladd@a+2
  6826  1357                     l2623:
  6827  1357  0855               	movf	___fladd@b+3,w
  6828  1358  00DA               	movwf	??___fladd
  6829  1359  085A               	movf	??___fladd,w
  6830  135A  00E5               	movwf	___fladd@grs
  6831  135B                     l2625:
  6832  135B  0859               	movf	___fladd@a+3,w
  6833  135C  00DA               	movwf	??___fladd
  6834  135D  085A               	movf	??___fladd,w
  6835  135E  00D5               	movwf	___fladd@b+3
  6836  135F                     l2627:
  6837  135F  0865               	movf	___fladd@grs,w
  6838  1360  00DA               	movwf	??___fladd
  6839  1361  085A               	movf	??___fladd,w
  6840  1362  00D9               	movwf	___fladd@a+3
  6841  1363                     l2629:
  6842  1363  01E5               	clrf	___fladd@grs
  6843  1364                     l2631:
  6844  1364  0863               	movf	___fladd@aexp,w
  6845  1365  00DA               	movwf	??___fladd
  6846  1366  01DB               	clrf	??___fladd+1
  6847  1367  085B               	movf	??___fladd+1,w
  6848  1368  00DD               	movwf	??___fladd+3
  6849  1369  0864               	movf	___fladd@bexp,w
  6850  136A  025A               	subwf	??___fladd,w
  6851  136B  00DC               	movwf	??___fladd+2
  6852  136C  1C03               	skipc
  6853  136D  03DD               	decf	??___fladd+3,f
  6854  136E  085D               	movf	??___fladd+3,w
  6855  136F  3A80               	xorlw	128
  6856  1370  00FF               	movwf	btemp+1
  6857  1371  3080               	movlw	128
  6858  1372  027F               	subwf	btemp+1,w
  6859  1373  1D03               	skipz
  6860  1374  2B77               	goto	u3485
  6861  1375  301A               	movlw	26
  6862  1376  025C               	subwf	??___fladd+2,w
  6863  1377                     u3485:
  6864  1377  1C03               	skipc
  6865  1378  2B7A               	goto	u3481
  6866  1379  2B7B               	goto	u3480
  6867  137A                     u3481:
  6868  137A  2BB8               	goto	l2647
  6869  137B                     u3480:
  6870  137B                     l2633:
  6871  137B  1283               	bcf	3,5	;RP0=0, select bank0
  6872  137C  1303               	bcf	3,6	;RP1=0, select bank0
  6873  137D  0855               	movf	___fladd@b+3,w
  6874  137E  0454               	iorwf	___fladd@b+2,w
  6875  137F  0453               	iorwf	___fladd@b+1,w
  6876  1380  0452               	iorwf	___fladd@b,w
  6877  1381  1D03               	skipz
  6878  1382  2B84               	goto	u3491
  6879  1383  2B86               	goto	u3490
  6880  1384                     u3491:
  6881  1384  3001               	movlw	1
  6882  1385  2B87               	goto	u3500
  6883  1386                     u3490:
  6884  1386  3000               	movlw	0
  6885  1387                     u3500:
  6886  1387  00DA               	movwf	??___fladd
  6887  1388  085A               	movf	??___fladd,w
  6888  1389  00E5               	movwf	___fladd@grs
  6889  138A  3000               	movlw	0
  6890  138B  00D5               	movwf	___fladd@b+3
  6891  138C  3000               	movlw	0
  6892  138D  00D4               	movwf	___fladd@b+2
  6893  138E  3000               	movlw	0
  6894  138F  00D3               	movwf	___fladd@b+1
  6895  1390  3000               	movlw	0
  6896  1391  00D2               	movwf	___fladd@b
  6897  1392  0863               	movf	___fladd@aexp,w
  6898  1393  00DA               	movwf	??___fladd
  6899  1394  085A               	movf	??___fladd,w
  6900  1395  00E4               	movwf	___fladd@bexp
  6901  1396  2BC0               	goto	l757
  6902  1397                     l759:
  6903  1397  1C65               	btfss	___fladd@grs,0
  6904  1398  2B9A               	goto	u3511
  6905  1399  2B9B               	goto	u3510
  6906  139A                     u3511:
  6907  139A  2BA4               	goto	l2637
  6908  139B                     u3510:
  6909  139B                     l2635:
  6910  139B  0865               	movf	___fladd@grs,w
  6911  139C  00DA               	movwf	??___fladd
  6912  139D  1003               	clrc
  6913  139E  0C5A               	rrf	??___fladd,w
  6914  139F  3801               	iorlw	1
  6915  13A0  00DB               	movwf	??___fladd+1
  6916  13A1  085B               	movf	??___fladd+1,w
  6917  13A2  00E5               	movwf	___fladd@grs
  6918  13A3  2BA6               	goto	l2639
  6919  13A4                     l2637:
  6920  13A4  1003               	clrc
  6921  13A5  0CE5               	rrf	___fladd@grs,f
  6922  13A6                     l2639:
  6923  13A6  1C52               	btfss	___fladd@b,0
  6924  13A7  2BA9               	goto	u3521
  6925  13A8  2BAA               	goto	u3520
  6926  13A9                     u3521:
  6927  13A9  2BAB               	goto	l2643
  6928  13AA                     u3520:
  6929  13AA                     l2641:
  6930  13AA  17E5               	bsf	___fladd@grs,7
  6931  13AB                     l2643:
  6932  13AB  3001               	movlw	1
  6933  13AC  00DA               	movwf	??___fladd
  6934  13AD                     u3535:
  6935  13AD  0D55               	rlf	___fladd@b+3,w
  6936  13AE  0CD5               	rrf	___fladd@b+3,f
  6937  13AF  0CD4               	rrf	___fladd@b+2,f
  6938  13B0  0CD3               	rrf	___fladd@b+1,f
  6939  13B1  0CD2               	rrf	___fladd@b,f
  6940  13B2  0BDA               	decfsz	??___fladd& (0+127),f
  6941  13B3  2BAD               	goto	u3535
  6942  13B4                     l2645:
  6943  13B4  3001               	movlw	1
  6944  13B5  00DA               	movwf	??___fladd
  6945  13B6  085A               	movf	??___fladd,w
  6946  13B7  07E4               	addwf	___fladd@bexp,f
  6947  13B8                     l2647:
  6948  13B8  1283               	bcf	3,5	;RP0=0, select bank0
  6949  13B9  1303               	bcf	3,6	;RP1=0, select bank0
  6950  13BA  0863               	movf	___fladd@aexp,w
  6951  13BB  0264               	subwf	___fladd@bexp,w
  6952  13BC  1C03               	skipc
  6953  13BD  2BBF               	goto	u3541
  6954  13BE  2BC0               	goto	u3540
  6955  13BF                     u3541:
  6956  13BF  2B97               	goto	l759
  6957  13C0                     u3540:
  6958  13C0                     l757:
  6959  13C0  1B62               	btfsc	___fladd@signs,6
  6960  13C1  2BC3               	goto	u3551
  6961  13C2  2BC4               	goto	u3550
  6962  13C3                     u3551:
  6963  13C3  2C0F               	goto	l2673
  6964  13C4                     u3550:
  6965  13C4                     l2649:
  6966  13C4  0864               	movf	___fladd@bexp,w
  6967  13C5  1D03               	btfss	3,2
  6968  13C6  2BC8               	goto	u3561
  6969  13C7  2BC9               	goto	u3560
  6970  13C8                     u3561:
  6971  13C8  2BD2               	goto	l2655
  6972  13C9                     u3560:
  6973  13C9                     l2651:
  6974  13C9  3000               	movlw	0
  6975  13CA  00D5               	movwf	?___fladd+3
  6976  13CB  3000               	movlw	0
  6977  13CC  00D4               	movwf	?___fladd+2
  6978  13CD  3000               	movlw	0
  6979  13CE  00D3               	movwf	?___fladd+1
  6980  13CF  3000               	movlw	0
  6981  13D0  00D2               	movwf	?___fladd
  6982  13D1  2D3D               	goto	l766
  6983  13D2                     l2655:
  6984  13D2  0856               	movf	___fladd@a,w
  6985  13D3  07D2               	addwf	___fladd@b,f
  6986  13D4  0857               	movf	___fladd@a+1,w
  6987  13D5  1103               	clrz
  6988  13D6  1803               	skipnc
  6989  13D7  3E01               	addlw	1
  6990  13D8  1903               	skipnz
  6991  13D9  2BDB               	goto	u3571
  6992  13DA  07D3               	addwf	___fladd@b+1,f
  6993  13DB                     u3571:
  6994  13DB  0858               	movf	___fladd@a+2,w
  6995  13DC  1103               	clrz
  6996  13DD  1803               	skipnc
  6997  13DE  3E01               	addlw	1
  6998  13DF  1903               	skipnz
  6999  13E0  2BE2               	goto	u3572
  7000  13E1  07D4               	addwf	___fladd@b+2,f
  7001  13E2                     u3572:
  7002  13E2  0859               	movf	___fladd@a+3,w
  7003  13E3  1103               	clrz
  7004  13E4  1803               	skipnc
  7005  13E5  3E01               	addlw	1
  7006  13E6  1903               	skipnz
  7007  13E7  2BE9               	goto	u3573
  7008  13E8  07D5               	addwf	___fladd@b+3,f
  7009  13E9                     u3573:
  7010  13E9                     l2657:
  7011  13E9  1C55               	btfss	___fladd@b+3,0
  7012  13EA  2BEC               	goto	u3581
  7013  13EB  2BED               	goto	u3580
  7014  13EC                     u3581:
  7015  13EC  2CC3               	goto	l2707
  7016  13ED                     u3580:
  7017  13ED                     l2659:
  7018  13ED  1C65               	btfss	___fladd@grs,0
  7019  13EE  2BF0               	goto	u3591
  7020  13EF  2BF1               	goto	u3590
  7021  13F0                     u3591:
  7022  13F0  2BFA               	goto	l2663
  7023  13F1                     u3590:
  7024  13F1                     l2661:
  7025  13F1  0865               	movf	___fladd@grs,w
  7026  13F2  00DA               	movwf	??___fladd
  7027  13F3  1003               	clrc
  7028  13F4  0C5A               	rrf	??___fladd,w
  7029  13F5  3801               	iorlw	1
  7030  13F6  00DB               	movwf	??___fladd+1
  7031  13F7  085B               	movf	??___fladd+1,w
  7032  13F8  00E5               	movwf	___fladd@grs
  7033  13F9  2BFC               	goto	l2665
  7034  13FA                     l2663:
  7035  13FA  1003               	clrc
  7036  13FB  0CE5               	rrf	___fladd@grs,f
  7037  13FC                     l2665:
  7038  13FC  1C52               	btfss	___fladd@b,0
  7039  13FD  2BFF               	goto	u3601
  7040  13FE  2C00               	goto	u3600
  7041  13FF                     u3601:
  7042  13FF  2C01               	goto	l2669
  7043  1400                     u3600:
  7044  1400                     l2667:
  7045  1400  17E5               	bsf	___fladd@grs,7
  7046  1401                     l2669:
  7047  1401  3001               	movlw	1
  7048  1402  00DA               	movwf	??___fladd
  7049  1403                     u3615:
  7050  1403  0D55               	rlf	___fladd@b+3,w
  7051  1404  0CD5               	rrf	___fladd@b+3,f
  7052  1405  0CD4               	rrf	___fladd@b+2,f
  7053  1406  0CD3               	rrf	___fladd@b+1,f
  7054  1407  0CD2               	rrf	___fladd@b,f
  7055  1408  0BDA               	decfsz	??___fladd& (0+127),f
  7056  1409  2C03               	goto	u3615
  7057  140A                     l2671:
  7058  140A  3001               	movlw	1
  7059  140B  00DA               	movwf	??___fladd
  7060  140C  085A               	movf	??___fladd,w
  7061  140D  07E4               	addwf	___fladd@bexp,f
  7062  140E  2CC3               	goto	l2707
  7063  140F                     l2673:
  7064  140F  0855               	movf	___fladd@b+3,w
  7065  1410  3A80               	xorlw	128
  7066  1411  00FF               	movwf	btemp+1
  7067  1412  0859               	movf	___fladd@a+3,w
  7068  1413  3A80               	xorlw	128
  7069  1414  027F               	subwf	btemp+1,w
  7070  1415  1D03               	skipz
  7071  1416  2C21               	goto	u3623
  7072  1417  0858               	movf	___fladd@a+2,w
  7073  1418  0254               	subwf	___fladd@b+2,w
  7074  1419  1D03               	skipz
  7075  141A  2C21               	goto	u3623
  7076  141B  0857               	movf	___fladd@a+1,w
  7077  141C  0253               	subwf	___fladd@b+1,w
  7078  141D  1D03               	skipz
  7079  141E  2C21               	goto	u3623
  7080  141F  0856               	movf	___fladd@a,w
  7081  1420  0252               	subwf	___fladd@b,w
  7082  1421                     u3623:
  7083  1421  1803               	skipnc
  7084  1422  2C24               	goto	u3621
  7085  1423  2C25               	goto	u3620
  7086  1424                     u3621:
  7087  1424  2C7D               	goto	l2683
  7088  1425                     u3620:
  7089  1425                     l2675:
  7090  1425  30FF               	movlw	255
  7091  1426  00DA               	movwf	??___fladd
  7092  1427  30FF               	movlw	255
  7093  1428  00DB               	movwf	??___fladd+1
  7094  1429  30FF               	movlw	255
  7095  142A  00DC               	movwf	??___fladd+2
  7096  142B  30FF               	movlw	255
  7097  142C  00DD               	movwf	??___fladd+3
  7098  142D  0856               	movf	___fladd@a,w
  7099  142E  00DE               	movwf	??___fladd+4
  7100  142F  0857               	movf	___fladd@a+1,w
  7101  1430  00DF               	movwf	??___fladd+5
  7102  1431  0858               	movf	___fladd@a+2,w
  7103  1432  00E0               	movwf	??___fladd+6
  7104  1433  0859               	movf	___fladd@a+3,w
  7105  1434  00E1               	movwf	??___fladd+7
  7106  1435  0852               	movf	___fladd@b,w
  7107  1436  02DE               	subwf	??___fladd+4,f
  7108  1437  0853               	movf	___fladd@b+1,w
  7109  1438  1C03               	skipc
  7110  1439  0F53               	incfsz	___fladd@b+1,w
  7111  143A  2C3C               	goto	u3631
  7112  143B  2C3D               	goto	u3632
  7113  143C                     u3631:
  7114  143C  02DF               	subwf	??___fladd+5,f
  7115  143D                     u3632:
  7116  143D  0854               	movf	___fladd@b+2,w
  7117  143E  1C03               	skipc
  7118  143F  0F54               	incfsz	___fladd@b+2,w
  7119  1440  2C42               	goto	u3633
  7120  1441  2C43               	goto	u3634
  7121  1442                     u3633:
  7122  1442  02E0               	subwf	??___fladd+6,f
  7123  1443                     u3634:
  7124  1443  0855               	movf	___fladd@b+3,w
  7125  1444  1C03               	skipc
  7126  1445  0F55               	incfsz	___fladd@b+3,w
  7127  1446  2C48               	goto	u3635
  7128  1447  2C49               	goto	u3636
  7129  1448                     u3635:
  7130  1448  02E1               	subwf	??___fladd+7,f
  7131  1449                     u3636:
  7132  1449  085E               	movf	??___fladd+4,w
  7133  144A  07DA               	addwf	??___fladd,f
  7134  144B  085F               	movf	??___fladd+5,w
  7135  144C  1803               	skipnc
  7136  144D  0F5F               	incfsz	??___fladd+5,w
  7137  144E  2C50               	goto	u3640
  7138  144F  2C51               	goto	u3641
  7139  1450                     u3640:
  7140  1450  07DB               	addwf	??___fladd+1,f
  7141  1451                     u3641:
  7142  1451  0860               	movf	??___fladd+6,w
  7143  1452  1803               	skipnc
  7144  1453  0F60               	incfsz	??___fladd+6,w
  7145  1454  2C56               	goto	u3642
  7146  1455  2C57               	goto	u3643
  7147  1456                     u3642:
  7148  1456  07DC               	addwf	??___fladd+2,f
  7149  1457                     u3643:
  7150  1457  0861               	movf	??___fladd+7,w
  7151  1458  1803               	skipnc
  7152  1459  0A61               	incf	??___fladd+7,w
  7153  145A  07DD               	addwf	??___fladd+3,f
  7154  145B  085D               	movf	??___fladd+3,w
  7155  145C  00D5               	movwf	___fladd@b+3
  7156  145D  085C               	movf	??___fladd+2,w
  7157  145E  00D4               	movwf	___fladd@b+2
  7158  145F  085B               	movf	??___fladd+1,w
  7159  1460  00D3               	movwf	___fladd@b+1
  7160  1461  085A               	movf	??___fladd,w
  7161  1462  00D2               	movwf	___fladd@b
  7162  1463                     l2677:
  7163  1463  3080               	movlw	128
  7164  1464  00DA               	movwf	??___fladd
  7165  1465  085A               	movf	??___fladd,w
  7166  1466  06E2               	xorwf	___fladd@signs,f
  7167  1467  09E5               	comf	___fladd@grs,f
  7168  1468  0AE5               	incf	___fladd@grs,f
  7169  1469                     l2679:
  7170  1469  0865               	movf	___fladd@grs,w
  7171  146A  1D03               	btfss	3,2
  7172  146B  2C6D               	goto	u3651
  7173  146C  2C6E               	goto	u3650
  7174  146D                     u3651:
  7175  146D  2C8B               	goto	l774
  7176  146E                     u3650:
  7177  146E                     l2681:
  7178  146E  3001               	movlw	1
  7179  146F  07D2               	addwf	___fladd@b,f
  7180  1470  3000               	movlw	0
  7181  1471  1803               	skipnc
  7182  1472  3001               	movlw	1
  7183  1473  07D3               	addwf	___fladd@b+1,f
  7184  1474  3000               	movlw	0
  7185  1475  1803               	skipnc
  7186  1476  3001               	movlw	1
  7187  1477  07D4               	addwf	___fladd@b+2,f
  7188  1478  3000               	movlw	0
  7189  1479  1803               	skipnc
  7190  147A  3001               	movlw	1
  7191  147B  07D5               	addwf	___fladd@b+3,f
  7192  147C  2C8B               	goto	l774
  7193  147D                     l2683:
  7194  147D  0856               	movf	___fladd@a,w
  7195  147E  02D2               	subwf	___fladd@b,f
  7196  147F  0857               	movf	___fladd@a+1,w
  7197  1480  1C03               	skipc
  7198  1481  0F57               	incfsz	___fladd@a+1,w
  7199  1482  02D3               	subwf	___fladd@b+1,f
  7200  1483  0858               	movf	___fladd@a+2,w
  7201  1484  1C03               	skipc
  7202  1485  0F58               	incfsz	___fladd@a+2,w
  7203  1486  02D4               	subwf	___fladd@b+2,f
  7204  1487  0859               	movf	___fladd@a+3,w
  7205  1488  1C03               	skipc
  7206  1489  0F59               	incfsz	___fladd@a+3,w
  7207  148A  02D5               	subwf	___fladd@b+3,f
  7208  148B                     l774:
  7209  148B  0855               	movf	___fladd@b+3,w
  7210  148C  0454               	iorwf	___fladd@b+2,w
  7211  148D  0453               	iorwf	___fladd@b+1,w
  7212  148E  0452               	iorwf	___fladd@b,w
  7213  148F  1D03               	skipz
  7214  1490  2C92               	goto	u3661
  7215  1491  2C93               	goto	u3660
  7216  1492                     u3661:
  7217  1492  2CBF               	goto	l2705
  7218  1493                     u3660:
  7219  1493                     l2685:
  7220  1493  0865               	movf	___fladd@grs,w
  7221  1494  1D03               	btfss	3,2
  7222  1495  2C97               	goto	u3671
  7223  1496  2C98               	goto	u3670
  7224  1497                     u3671:
  7225  1497  2CBF               	goto	l2705
  7226  1498                     u3670:
  7227  1498                     l2687:
  7228  1498  3000               	movlw	0
  7229  1499  00D5               	movwf	?___fladd+3
  7230  149A  3000               	movlw	0
  7231  149B  00D4               	movwf	?___fladd+2
  7232  149C  3000               	movlw	0
  7233  149D  00D3               	movwf	?___fladd+1
  7234  149E  3000               	movlw	0
  7235  149F  00D2               	movwf	?___fladd
  7236  14A0  2D3D               	goto	l766
  7237  14A1                     l2691:
  7238  14A1  3001               	movlw	1
  7239  14A2  00DA               	movwf	??___fladd
  7240  14A3                     u3685:
  7241  14A3  1003               	clrc
  7242  14A4  0DD2               	rlf	___fladd@b,f
  7243  14A5  0DD3               	rlf	___fladd@b+1,f
  7244  14A6  0DD4               	rlf	___fladd@b+2,f
  7245  14A7  0DD5               	rlf	___fladd@b+3,f
  7246  14A8  0BDA               	decfsz	??___fladd,f
  7247  14A9  2CA3               	goto	u3685
  7248  14AA                     l2693:
  7249  14AA  1FE5               	btfss	___fladd@grs,7
  7250  14AB  2CAD               	goto	u3691
  7251  14AC  2CAE               	goto	u3690
  7252  14AD                     u3691:
  7253  14AD  2CAF               	goto	l778
  7254  14AE                     u3690:
  7255  14AE                     l2695:
  7256  14AE  1452               	bsf	___fladd@b,0
  7257  14AF                     l778:
  7258  14AF  1C65               	btfss	___fladd@grs,0
  7259  14B0  2CB2               	goto	u3701
  7260  14B1  2CB3               	goto	u3700
  7261  14B2                     u3701:
  7262  14B2  2CB6               	goto	l2699
  7263  14B3                     u3700:
  7264  14B3                     l2697:
  7265  14B3  1403               	setc
  7266  14B4  0DE5               	rlf	___fladd@grs,f
  7267  14B5  2CB8               	goto	l2701
  7268  14B6                     l2699:
  7269  14B6  1003               	clrc
  7270  14B7  0DE5               	rlf	___fladd@grs,f
  7271  14B8                     l2701:
  7272  14B8  0864               	movf	___fladd@bexp,w
  7273  14B9  1903               	btfsc	3,2
  7274  14BA  2CBC               	goto	u3711
  7275  14BB  2CBD               	goto	u3710
  7276  14BC                     u3711:
  7277  14BC  2CBF               	goto	l2705
  7278  14BD                     u3710:
  7279  14BD                     l2703:
  7280  14BD  3001               	movlw	1
  7281  14BE  02E4               	subwf	___fladd@bexp,f
  7282  14BF                     l2705:
  7283  14BF  1FD4               	btfss	___fladd@b+2,7
  7284  14C0  2CC2               	goto	u3721
  7285  14C1  2CC3               	goto	u3720
  7286  14C2                     u3721:
  7287  14C2  2CA1               	goto	l2691
  7288  14C3                     u3720:
  7289  14C3                     l2707:
  7290  14C3  01E3               	clrf	___fladd@aexp
  7291  14C4                     l2709:
  7292  14C4  1FE5               	btfss	___fladd@grs,7
  7293  14C5  2CC7               	goto	u3731
  7294  14C6  2CC8               	goto	u3730
  7295  14C7                     u3731:
  7296  14C7  2CD6               	goto	l2717
  7297  14C8                     u3730:
  7298  14C8                     l2711:
  7299  14C8  0865               	movf	___fladd@grs,w
  7300  14C9  397F               	andlw	127
  7301  14CA  1903               	btfsc	3,2
  7302  14CB  2CCD               	goto	u3741
  7303  14CC  2CCE               	goto	u3740
  7304  14CD                     u3741:
  7305  14CD  2CD1               	goto	l784
  7306  14CE                     u3740:
  7307  14CE                     l2713:
  7308  14CE  01E3               	clrf	___fladd@aexp
  7309  14CF  0AE3               	incf	___fladd@aexp,f
  7310  14D0  2CD6               	goto	l2717
  7311  14D1                     l784:
  7312  14D1  1C52               	btfss	___fladd@b,0
  7313  14D2  2CD4               	goto	u3751
  7314  14D3  2CD5               	goto	u3750
  7315  14D4                     u3751:
  7316  14D4  2CD6               	goto	l2717
  7317  14D5                     u3750:
  7318  14D5  2CCE               	goto	l2713
  7319  14D6                     l2717:
  7320  14D6  0863               	movf	___fladd@aexp,w
  7321  14D7  1903               	btfsc	3,2
  7322  14D8  2CDA               	goto	u3761
  7323  14D9  2CDB               	goto	u3760
  7324  14DA                     u3761:
  7325  14DA  2D0F               	goto	l787
  7326  14DB                     u3760:
  7327  14DB                     l2719:
  7328  14DB  3001               	movlw	1
  7329  14DC  07D2               	addwf	___fladd@b,f
  7330  14DD  3000               	movlw	0
  7331  14DE  1803               	skipnc
  7332  14DF  3001               	movlw	1
  7333  14E0  07D3               	addwf	___fladd@b+1,f
  7334  14E1  3000               	movlw	0
  7335  14E2  1803               	skipnc
  7336  14E3  3001               	movlw	1
  7337  14E4  07D4               	addwf	___fladd@b+2,f
  7338  14E5  3000               	movlw	0
  7339  14E6  1803               	skipnc
  7340  14E7  3001               	movlw	1
  7341  14E8  07D5               	addwf	___fladd@b+3,f
  7342  14E9                     l2721:
  7343  14E9  1C55               	btfss	___fladd@b+3,0
  7344  14EA  2CEC               	goto	u3771
  7345  14EB  2CED               	goto	u3770
  7346  14EC                     u3771:
  7347  14EC  2D0F               	goto	l787
  7348  14ED                     u3770:
  7349  14ED                     l2723:
  7350  14ED  0852               	movf	___fladd@b,w
  7351  14EE  00DA               	movwf	??___fladd
  7352  14EF  0853               	movf	___fladd@b+1,w
  7353  14F0  00DB               	movwf	??___fladd+1
  7354  14F1  0854               	movf	___fladd@b+2,w
  7355  14F2  00DC               	movwf	??___fladd+2
  7356  14F3  0855               	movf	___fladd@b+3,w
  7357  14F4  00DD               	movwf	??___fladd+3
  7358  14F5  3001               	movlw	1
  7359  14F6  00DE               	movwf	??___fladd+4
  7360  14F7                     u3785:
  7361  14F7  0D5D               	rlf	??___fladd+3,w
  7362  14F8  0CDD               	rrf	??___fladd+3,f
  7363  14F9  0CDC               	rrf	??___fladd+2,f
  7364  14FA  0CDB               	rrf	??___fladd+1,f
  7365  14FB  0CDA               	rrf	??___fladd,f
  7366  14FC                     u3780:
  7367  14FC  0BDE               	decfsz	??___fladd+4,f
  7368  14FD  2CF7               	goto	u3785
  7369  14FE  085D               	movf	??___fladd+3,w
  7370  14FF  00D5               	movwf	___fladd@b+3
  7371  1500  085C               	movf	??___fladd+2,w
  7372  1501  00D4               	movwf	___fladd@b+2
  7373  1502  085B               	movf	??___fladd+1,w
  7374  1503  00D3               	movwf	___fladd@b+1
  7375  1504  085A               	movf	??___fladd,w
  7376  1505  00D2               	movwf	___fladd@b
  7377  1506  0A64               	incf	___fladd@bexp,w
  7378  1507  1903               	btfsc	3,2
  7379  1508  2D0A               	goto	u3791
  7380  1509  2D0B               	goto	u3790
  7381  150A                     u3791:
  7382  150A  2D0F               	goto	l787
  7383  150B                     u3790:
  7384  150B                     l2725:
  7385  150B  3001               	movlw	1
  7386  150C  00DA               	movwf	??___fladd
  7387  150D  085A               	movf	??___fladd,w
  7388  150E  07E4               	addwf	___fladd@bexp,f
  7389  150F                     l787:
  7390  150F  0A64               	incf	___fladd@bexp,w
  7391  1510  1903               	btfsc	3,2
  7392  1511  2D13               	goto	u3801
  7393  1512  2D14               	goto	u3800
  7394  1513                     u3801:
  7395  1513  2D19               	goto	l2729
  7396  1514                     u3800:
  7397  1514                     l2727:
  7398  1514  0864               	movf	___fladd@bexp,w
  7399  1515  1D03               	btfss	3,2
  7400  1516  2D18               	goto	u3811
  7401  1517  2D19               	goto	u3810
  7402  1518                     u3811:
  7403  1518  2D27               	goto	l2735
  7404  1519                     u3810:
  7405  1519                     l2729:
  7406  1519  3000               	movlw	0
  7407  151A  00D5               	movwf	___fladd@b+3
  7408  151B  3000               	movlw	0
  7409  151C  00D4               	movwf	___fladd@b+2
  7410  151D  3000               	movlw	0
  7411  151E  00D3               	movwf	___fladd@b+1
  7412  151F  3000               	movlw	0
  7413  1520  00D2               	movwf	___fladd@b
  7414  1521                     l2731:
  7415  1521  0864               	movf	___fladd@bexp,w
  7416  1522  1D03               	btfss	3,2
  7417  1523  2D25               	goto	u3821
  7418  1524  2D26               	goto	u3820
  7419  1525                     u3821:
  7420  1525  2D27               	goto	l2735
  7421  1526                     u3820:
  7422  1526                     l2733:
  7423  1526  01E2               	clrf	___fladd@signs
  7424  1527                     l2735:
  7425  1527  1C64               	btfss	___fladd@bexp,0
  7426  1528  2D2A               	goto	u3831
  7427  1529  2D2B               	goto	u3830
  7428  152A                     u3831:
  7429  152A  2D2D               	goto	l2739
  7430  152B                     u3830:
  7431  152B                     l2737:
  7432  152B  17D4               	bsf	___fladd@b+2,7
  7433  152C  2D31               	goto	l795
  7434  152D                     l2739:
  7435  152D  307F               	movlw	127
  7436  152E  00DA               	movwf	??___fladd
  7437  152F  085A               	movf	??___fladd,w
  7438  1530  05D4               	andwf	___fladd@b+2,f
  7439  1531                     l795:
  7440  1531  0864               	movf	___fladd@bexp,w
  7441  1532  00DA               	movwf	??___fladd
  7442  1533  1003               	clrc
  7443  1534  0C5A               	rrf	??___fladd,w
  7444  1535  00DB               	movwf	??___fladd+1
  7445  1536  085B               	movf	??___fladd+1,w
  7446  1537  00D5               	movwf	___fladd@b+3
  7447  1538                     l2741:
  7448  1538  1FE2               	btfss	___fladd@signs,7
  7449  1539  2D3B               	goto	u3841
  7450  153A  2D3C               	goto	u3840
  7451  153B                     u3841:
  7452  153B  2D3D               	goto	l796
  7453  153C                     u3840:
  7454  153C                     l2743:
  7455  153C  17D5               	bsf	___fladd@b+3,7
  7456  153D                     l796:
  7457  153D                     l766:
  7458  153D  0008               	return
  7459  153E                     __end_of___fladd:
  7460                           
  7461                           	psect	text19
  7462  1957                     __ptext19:	
  7463 ;; *************** function ___flneg *****************
  7464 ;; Defined at:
  7465 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  f1              4    0[COMMON] unsigned char 
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;		None
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  4    0[COMMON] unsigned char 
  7472 ;; Registers used:
  7473 ;;		wreg
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7479 ;;      Params:         4       0       0       0       0
  7480 ;;      Locals:         0       0       0       0       0
  7481 ;;      Temps:          0       0       0       0       0
  7482 ;;      Totals:         4       0       0       0       0
  7483 ;;Total ram usage:        4 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; This function calls:
  7486 ;;		Nothing
  7487 ;; This function is called by:
  7488 ;;		_sprintf
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           
  7493                           ;psect for function ___flneg
  7494  1957                     ___flneg:
  7495  1957                     l3179:	
  7496                           ;incstack = 0
  7497                           ; Regs used in ___flneg: [wreg]
  7498                           
  7499  1957  0873               	movf	___flneg@f1+3,w
  7500  1958  0472               	iorwf	___flneg@f1+2,w
  7501  1959  0471               	iorwf	___flneg@f1+1,w
  7502  195A  0470               	iorwf	___flneg@f1,w
  7503  195B  1903               	skipnz
  7504  195C  295E               	goto	u4981
  7505  195D  295F               	goto	u4980
  7506  195E                     u4981:
  7507  195E  2961               	goto	l3183
  7508  195F                     u4980:
  7509  195F                     l3181:
  7510  195F  3080               	movlw	128
  7511  1960  06F3               	xorwf	___flneg@f1+3,f
  7512  1961                     l3183:
  7513  1961                     l625:
  7514  1961  0008               	return
  7515  1962                     __end_of___flneg:
  7516                           
  7517                           	psect	text20
  7518  1009                     __ptext20:	
  7519 ;; *************** function ___flge *****************
  7520 ;; Defined at:
  7521 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  ff1             4    0[COMMON] unsigned char 
  7524 ;;  ff2             4    4[COMMON] unsigned char 
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;		None
  7527 ;; Return value:  Size  Location     Type
  7528 ;;		None               void
  7529 ;; Registers used:
  7530 ;;		wreg, status,2, status,0
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7536 ;;      Params:         8       0       0       0       0
  7537 ;;      Locals:         0       0       0       0       0
  7538 ;;      Temps:          4       0       0       0       0
  7539 ;;      Totals:        12       0       0       0       0
  7540 ;;Total ram usage:       12 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; This function calls:
  7543 ;;		Nothing
  7544 ;; This function is called by:
  7545 ;;		_sprintf
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           
  7550                           ;psect for function ___flge
  7551  1009                     ___flge:
  7552  1009                     l3159:	
  7553                           ;incstack = 0
  7554                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7555                           
  7556  1009  3000               	movlw	0
  7557  100A  0570               	andwf	___flge@ff1,w
  7558  100B  00F8               	movwf	??___flge
  7559  100C  3000               	movlw	0
  7560  100D  0571               	andwf	___flge@ff1+1,w
  7561  100E  00F9               	movwf	??___flge+1
  7562  100F  3080               	movlw	128
  7563  1010  0572               	andwf	___flge@ff1+2,w
  7564  1011  00FA               	movwf	??___flge+2
  7565  1012  307F               	movlw	127
  7566  1013  0573               	andwf	___flge@ff1+3,w
  7567  1014  00FB               	movwf	??___flge+3
  7568  1015  087B               	movf	??___flge+3,w
  7569  1016  047A               	iorwf	??___flge+2,w
  7570  1017  0479               	iorwf	??___flge+1,w
  7571  1018  0478               	iorwf	??___flge,w
  7572  1019  1D03               	skipz
  7573  101A  281C               	goto	u4911
  7574  101B  281D               	goto	u4910
  7575  101C                     u4911:
  7576  101C  2825               	goto	l617
  7577  101D                     u4910:
  7578  101D                     l3161:
  7579  101D  3000               	movlw	0
  7580  101E  00F3               	movwf	___flge@ff1+3
  7581  101F  3000               	movlw	0
  7582  1020  00F2               	movwf	___flge@ff1+2
  7583  1021  3000               	movlw	0
  7584  1022  00F1               	movwf	___flge@ff1+1
  7585  1023  3000               	movlw	0
  7586  1024  00F0               	movwf	___flge@ff1
  7587  1025                     l617:
  7588  1025  3000               	movlw	0
  7589  1026  0574               	andwf	___flge@ff2,w
  7590  1027  00F8               	movwf	??___flge
  7591  1028  3000               	movlw	0
  7592  1029  0575               	andwf	___flge@ff2+1,w
  7593  102A  00F9               	movwf	??___flge+1
  7594  102B  3080               	movlw	128
  7595  102C  0576               	andwf	___flge@ff2+2,w
  7596  102D  00FA               	movwf	??___flge+2
  7597  102E  307F               	movlw	127
  7598  102F  0577               	andwf	___flge@ff2+3,w
  7599  1030  00FB               	movwf	??___flge+3
  7600  1031  087B               	movf	??___flge+3,w
  7601  1032  047A               	iorwf	??___flge+2,w
  7602  1033  0479               	iorwf	??___flge+1,w
  7603  1034  0478               	iorwf	??___flge,w
  7604  1035  1D03               	skipz
  7605  1036  2838               	goto	u4921
  7606  1037  2839               	goto	u4920
  7607  1038                     u4921:
  7608  1038  2841               	goto	l3165
  7609  1039                     u4920:
  7610  1039                     l3163:
  7611  1039  3000               	movlw	0
  7612  103A  00F7               	movwf	___flge@ff2+3
  7613  103B  3000               	movlw	0
  7614  103C  00F6               	movwf	___flge@ff2+2
  7615  103D  3000               	movlw	0
  7616  103E  00F5               	movwf	___flge@ff2+1
  7617  103F  3000               	movlw	0
  7618  1040  00F4               	movwf	___flge@ff2
  7619  1041                     l3165:
  7620  1041  1FF3               	btfss	___flge@ff1+3,7
  7621  1042  2844               	goto	u4931
  7622  1043  2845               	goto	u4930
  7623  1044                     u4931:
  7624  1044  2869               	goto	l3169
  7625  1045                     u4930:
  7626  1045                     l3167:
  7627  1045  3000               	movlw	0
  7628  1046  00F8               	movwf	??___flge
  7629  1047  3000               	movlw	0
  7630  1048  00F9               	movwf	??___flge+1
  7631  1049  3000               	movlw	0
  7632  104A  00FA               	movwf	??___flge+2
  7633  104B  3080               	movlw	128
  7634  104C  00FB               	movwf	??___flge+3
  7635  104D  0870               	movf	___flge@ff1,w
  7636  104E  02F8               	subwf	??___flge,f
  7637  104F  0871               	movf	___flge@ff1+1,w
  7638  1050  1C03               	skipc
  7639  1051  0F71               	incfsz	___flge@ff1+1,w
  7640  1052  2854               	goto	u4941
  7641  1053  2855               	goto	u4942
  7642  1054                     u4941:
  7643  1054  02F9               	subwf	??___flge+1,f
  7644  1055                     u4942:
  7645  1055  0872               	movf	___flge@ff1+2,w
  7646  1056  1C03               	skipc
  7647  1057  0F72               	incfsz	___flge@ff1+2,w
  7648  1058  285A               	goto	u4943
  7649  1059  285B               	goto	u4944
  7650  105A                     u4943:
  7651  105A  02FA               	subwf	??___flge+2,f
  7652  105B                     u4944:
  7653  105B  0873               	movf	___flge@ff1+3,w
  7654  105C  1C03               	skipc
  7655  105D  0F73               	incfsz	___flge@ff1+3,w
  7656  105E  2860               	goto	u4945
  7657  105F  2861               	goto	u4946
  7658  1060                     u4945:
  7659  1060  02FB               	subwf	??___flge+3,f
  7660  1061                     u4946:
  7661  1061  087B               	movf	??___flge+3,w
  7662  1062  00F3               	movwf	___flge@ff1+3
  7663  1063  087A               	movf	??___flge+2,w
  7664  1064  00F2               	movwf	___flge@ff1+2
  7665  1065  0879               	movf	??___flge+1,w
  7666  1066  00F1               	movwf	___flge@ff1+1
  7667  1067  0878               	movf	??___flge,w
  7668  1068  00F0               	movwf	___flge@ff1
  7669  1069                     l3169:
  7670  1069  1FF7               	btfss	___flge@ff2+3,7
  7671  106A  286C               	goto	u4951
  7672  106B  286D               	goto	u4950
  7673  106C                     u4951:
  7674  106C  2891               	goto	l620
  7675  106D                     u4950:
  7676  106D                     l3171:
  7677  106D  3000               	movlw	0
  7678  106E  00F8               	movwf	??___flge
  7679  106F  3000               	movlw	0
  7680  1070  00F9               	movwf	??___flge+1
  7681  1071  3000               	movlw	0
  7682  1072  00FA               	movwf	??___flge+2
  7683  1073  3080               	movlw	128
  7684  1074  00FB               	movwf	??___flge+3
  7685  1075  0874               	movf	___flge@ff2,w
  7686  1076  02F8               	subwf	??___flge,f
  7687  1077  0875               	movf	___flge@ff2+1,w
  7688  1078  1C03               	skipc
  7689  1079  0F75               	incfsz	___flge@ff2+1,w
  7690  107A  287C               	goto	u4961
  7691  107B  287D               	goto	u4962
  7692  107C                     u4961:
  7693  107C  02F9               	subwf	??___flge+1,f
  7694  107D                     u4962:
  7695  107D  0876               	movf	___flge@ff2+2,w
  7696  107E  1C03               	skipc
  7697  107F  0F76               	incfsz	___flge@ff2+2,w
  7698  1080  2882               	goto	u4963
  7699  1081  2883               	goto	u4964
  7700  1082                     u4963:
  7701  1082  02FA               	subwf	??___flge+2,f
  7702  1083                     u4964:
  7703  1083  0877               	movf	___flge@ff2+3,w
  7704  1084  1C03               	skipc
  7705  1085  0F77               	incfsz	___flge@ff2+3,w
  7706  1086  2888               	goto	u4965
  7707  1087  2889               	goto	u4966
  7708  1088                     u4965:
  7709  1088  02FB               	subwf	??___flge+3,f
  7710  1089                     u4966:
  7711  1089  087B               	movf	??___flge+3,w
  7712  108A  00F7               	movwf	___flge@ff2+3
  7713  108B  087A               	movf	??___flge+2,w
  7714  108C  00F6               	movwf	___flge@ff2+2
  7715  108D  0879               	movf	??___flge+1,w
  7716  108E  00F5               	movwf	___flge@ff2+1
  7717  108F  0878               	movf	??___flge,w
  7718  1090  00F4               	movwf	___flge@ff2
  7719  1091                     l620:
  7720  1091  3080               	movlw	128
  7721  1092  06F3               	xorwf	___flge@ff1+3,f
  7722  1093  3080               	movlw	128
  7723  1094  06F7               	xorwf	___flge@ff2+3,f
  7724  1095  0877               	movf	___flge@ff2+3,w
  7725  1096  0273               	subwf	___flge@ff1+3,w
  7726  1097  1D03               	skipz
  7727  1098  28A3               	goto	u4975
  7728  1099  0876               	movf	___flge@ff2+2,w
  7729  109A  0272               	subwf	___flge@ff1+2,w
  7730  109B  1D03               	skipz
  7731  109C  28A3               	goto	u4975
  7732  109D  0875               	movf	___flge@ff2+1,w
  7733  109E  0271               	subwf	___flge@ff1+1,w
  7734  109F  1D03               	skipz
  7735  10A0  28A3               	goto	u4975
  7736  10A1  0874               	movf	___flge@ff2,w
  7737  10A2  0270               	subwf	___flge@ff1,w
  7738  10A3                     u4975:
  7739  10A3  1803               	skipnc
  7740  10A4  28A6               	goto	u4971
  7741  10A5  28A7               	goto	u4970
  7742  10A6                     u4971:
  7743  10A6  28A9               	goto	l3175
  7744  10A7                     u4970:
  7745  10A7                     l3173:
  7746  10A7  1003               	clrc
  7747  10A8  28AA               	goto	l621
  7748  10A9                     l3175:
  7749  10A9  1403               	setc
  7750  10AA                     l621:
  7751  10AA  0008               	return
  7752  10AB                     __end_of___flge:
  7753                           
  7754                           	psect	text21
  7755  1C43                     __ptext21:	
  7756 ;; *************** function ___fleq *****************
  7757 ;; Defined at:
  7758 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;  ff1             4    0[COMMON] unsigned char 
  7761 ;;  ff2             4    4[COMMON] unsigned char 
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;		None
  7764 ;; Return value:  Size  Location     Type
  7765 ;;		None               void
  7766 ;; Registers used:
  7767 ;;		wreg, status,2, status,0
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7773 ;;      Params:         8       0       0       0       0
  7774 ;;      Locals:         0       0       0       0       0
  7775 ;;      Temps:          4       0       0       0       0
  7776 ;;      Totals:        12       0       0       0       0
  7777 ;;Total ram usage:       12 bytes
  7778 ;; Hardware stack levels used:    1
  7779 ;; This function calls:
  7780 ;;		Nothing
  7781 ;; This function is called by:
  7782 ;;		_sprintf
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786                           
  7787                           ;psect for function ___fleq
  7788  1C43                     ___fleq:
  7789  1C43                     l3147:	
  7790                           ;incstack = 0
  7791                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7792                           
  7793  1C43  3000               	movlw	0
  7794  1C44  0570               	andwf	___fleq@ff1,w
  7795  1C45  00F8               	movwf	??___fleq
  7796  1C46  3000               	movlw	0
  7797  1C47  0571               	andwf	___fleq@ff1+1,w
  7798  1C48  00F9               	movwf	??___fleq+1
  7799  1C49  3080               	movlw	128
  7800  1C4A  0572               	andwf	___fleq@ff1+2,w
  7801  1C4B  00FA               	movwf	??___fleq+2
  7802  1C4C  307F               	movlw	127
  7803  1C4D  0573               	andwf	___fleq@ff1+3,w
  7804  1C4E  00FB               	movwf	??___fleq+3
  7805  1C4F  087B               	movf	??___fleq+3,w
  7806  1C50  047A               	iorwf	??___fleq+2,w
  7807  1C51  0479               	iorwf	??___fleq+1,w
  7808  1C52  0478               	iorwf	??___fleq,w
  7809  1C53  1D03               	skipz
  7810  1C54  2C56               	goto	u4881
  7811  1C55  2C57               	goto	u4880
  7812  1C56                     u4881:
  7813  1C56  2C5F               	goto	l612
  7814  1C57                     u4880:
  7815  1C57                     l3149:
  7816  1C57  3000               	movlw	0
  7817  1C58  00F3               	movwf	___fleq@ff1+3
  7818  1C59  3000               	movlw	0
  7819  1C5A  00F2               	movwf	___fleq@ff1+2
  7820  1C5B  3000               	movlw	0
  7821  1C5C  00F1               	movwf	___fleq@ff1+1
  7822  1C5D  3000               	movlw	0
  7823  1C5E  00F0               	movwf	___fleq@ff1
  7824  1C5F                     l612:
  7825  1C5F  3000               	movlw	0
  7826  1C60  0574               	andwf	___fleq@ff2,w
  7827  1C61  00F8               	movwf	??___fleq
  7828  1C62  3000               	movlw	0
  7829  1C63  0575               	andwf	___fleq@ff2+1,w
  7830  1C64  00F9               	movwf	??___fleq+1
  7831  1C65  3080               	movlw	128
  7832  1C66  0576               	andwf	___fleq@ff2+2,w
  7833  1C67  00FA               	movwf	??___fleq+2
  7834  1C68  307F               	movlw	127
  7835  1C69  0577               	andwf	___fleq@ff2+3,w
  7836  1C6A  00FB               	movwf	??___fleq+3
  7837  1C6B  087B               	movf	??___fleq+3,w
  7838  1C6C  047A               	iorwf	??___fleq+2,w
  7839  1C6D  0479               	iorwf	??___fleq+1,w
  7840  1C6E  0478               	iorwf	??___fleq,w
  7841  1C6F  1D03               	skipz
  7842  1C70  2C72               	goto	u4891
  7843  1C71  2C73               	goto	u4890
  7844  1C72                     u4891:
  7845  1C72  2C7B               	goto	l613
  7846  1C73                     u4890:
  7847  1C73                     l3151:
  7848  1C73  3000               	movlw	0
  7849  1C74  00F7               	movwf	___fleq@ff2+3
  7850  1C75  3000               	movlw	0
  7851  1C76  00F6               	movwf	___fleq@ff2+2
  7852  1C77  3000               	movlw	0
  7853  1C78  00F5               	movwf	___fleq@ff2+1
  7854  1C79  3000               	movlw	0
  7855  1C7A  00F4               	movwf	___fleq@ff2
  7856  1C7B                     l613:
  7857  1C7B  0877               	movf	___fleq@ff2+3,w
  7858  1C7C  0673               	xorwf	___fleq@ff1+3,w
  7859  1C7D  1D03               	skipz
  7860  1C7E  2C89               	goto	u4905
  7861  1C7F  0876               	movf	___fleq@ff2+2,w
  7862  1C80  0672               	xorwf	___fleq@ff1+2,w
  7863  1C81  1D03               	skipz
  7864  1C82  2C89               	goto	u4905
  7865  1C83  0875               	movf	___fleq@ff2+1,w
  7866  1C84  0671               	xorwf	___fleq@ff1+1,w
  7867  1C85  1D03               	skipz
  7868  1C86  2C89               	goto	u4905
  7869  1C87  0874               	movf	___fleq@ff2,w
  7870  1C88  0670               	xorwf	___fleq@ff1,w
  7871  1C89                     u4905:
  7872  1C89  1903               	skipnz
  7873  1C8A  2C8C               	goto	u4901
  7874  1C8B  2C8D               	goto	u4900
  7875  1C8C                     u4901:
  7876  1C8C  2C8F               	goto	l3155
  7877  1C8D                     u4900:
  7878  1C8D                     l3153:
  7879  1C8D  1003               	clrc
  7880  1C8E  2C90               	goto	l614
  7881  1C8F                     l3155:
  7882  1C8F  1403               	setc
  7883  1C90                     l614:
  7884  1C90  0008               	return
  7885  1C91                     __end_of___fleq:
  7886                           
  7887                           	psect	text22
  7888  1A06                     __ptext22:	
  7889 ;; *************** function _setup *****************
  7890 ;; Defined at:
  7891 ;;		line 106 in file "main.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;		None
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      void 
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0, pclath, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7905 ;;      Params:         0       0       0       0       0
  7906 ;;      Locals:         0       0       0       0       0
  7907 ;;      Temps:          0       0       0       0       0
  7908 ;;      Totals:         0       0       0       0       0
  7909 ;;Total ram usage:        0 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; Hardware stack levels required when called:    1
  7912 ;; This function calls:
  7913 ;;		_spiInit
  7914 ;; This function is called by:
  7915 ;;		_main
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           
  7920                           ;psect for function _setup
  7921  1A06                     _setup:
  7922  1A06                     l3355:	
  7923                           ;incstack = 0
  7924                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  7925                           
  7926                           
  7927                           ;main.c: 107:     ANSEL = 0;
  7928  1A06  1683               	bsf	3,5	;RP0=1, select bank3
  7929  1A07  1703               	bsf	3,6	;RP1=1, select bank3
  7930  1A08  0188               	clrf	8	;volatile
  7931                           
  7932                           ;main.c: 108:     ANSELH = 0;
  7933  1A09  0189               	clrf	9	;volatile
  7934                           
  7935                           ;main.c: 109:     TRISB = 0;
  7936  1A0A  1683               	bsf	3,5	;RP0=1, select bank1
  7937  1A0B  1303               	bcf	3,6	;RP1=0, select bank1
  7938  1A0C  0186               	clrf	6	;volatile
  7939                           
  7940                           ;main.c: 110:     TRISE = 0;
  7941  1A0D  0189               	clrf	9	;volatile
  7942                           
  7943                           ;main.c: 111:     TRISD = 0;
  7944  1A0E  0188               	clrf	8	;volatile
  7945                           
  7946                           ;main.c: 113:     PORTC = 0;
  7947  1A0F  1283               	bcf	3,5	;RP0=0, select bank0
  7948  1A10  1303               	bcf	3,6	;RP1=0, select bank0
  7949  1A11  0187               	clrf	7	;volatile
  7950                           
  7951                           ;main.c: 114:     PORTE = 0;
  7952  1A12  0189               	clrf	9	;volatile
  7953                           
  7954                           ;main.c: 115:     PORTD = 0;
  7955  1A13  0188               	clrf	8	;volatile
  7956                           
  7957                           ;main.c: 116:     PORTB = 0;
  7958  1A14  0186               	clrf	6	;volatile
  7959  1A15                     l3357:
  7960                           
  7961                           ;main.c: 118:     TRISC0 = 0;
  7962  1A15  1683               	bsf	3,5	;RP0=1, select bank1
  7963  1A16  1303               	bcf	3,6	;RP1=0, select bank1
  7964  1A17  1007               	bcf	7,0	;volatile
  7965  1A18                     l3359:
  7966                           
  7967                           ;main.c: 119:     TRISC1 = 0;
  7968  1A18  1087               	bcf	7,1	;volatile
  7969  1A19                     l3361:
  7970                           
  7971                           ;main.c: 120:     TRISC2 = 0;
  7972  1A19  1107               	bcf	7,2	;volatile
  7973  1A1A                     l3363:
  7974                           
  7975                           ;main.c: 121:     PORTCbits.RC0 = 1;
  7976  1A1A  1283               	bcf	3,5	;RP0=0, select bank0
  7977  1A1B  1303               	bcf	3,6	;RP1=0, select bank0
  7978  1A1C  1407               	bsf	7,0	;volatile
  7979  1A1D                     l3365:
  7980                           
  7981                           ;main.c: 122:     PORTCbits.RC1 = 1;
  7982  1A1D  1487               	bsf	7,1	;volatile
  7983  1A1E                     l3367:
  7984                           
  7985                           ;main.c: 123:     PORTCbits.RC2 = 1;
  7986  1A1E  1507               	bsf	7,2	;volatile
  7987  1A1F                     l3369:
  7988                           
  7989                           ;main.c: 124:     PORTCbits.RC7 = 1;
  7990  1A1F  1787               	bsf	7,7	;volatile
  7991  1A20                     l3371:
  7992                           
  7993                           ;main.c: 126:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  7994  1A20  01F0               	clrf	spiInit@sDataSample
  7995  1A21  01F1               	clrf	spiInit@sClockIdle
  7996  1A22  01F2               	clrf	spiInit@sTransmitEdge
  7997  1A23  3020               	movlw	32
  7998  1A24  160A  158A  218D  160A  158A  	fcall	_spiInit
  7999  1A29                     l175:
  8000  1A29  0008               	return
  8001  1A2A                     __end_of_setup:
  8002                           
  8003                           	psect	text23
  8004  198D                     __ptext23:	
  8005 ;; *************** function _spiInit *****************
  8006 ;; Defined at:
  8007 ;;		line 12 in file "SPI.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  sType           1    wreg     enum E1292
  8010 ;;  sDataSample     1    0[COMMON] enum E1300
  8011 ;;  sClockIdle      1    1[COMMON] enum E1304
  8012 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;  sType           1    3[COMMON] enum E1292
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  1    wreg      void 
  8017 ;; Registers used:
  8018 ;;		wreg, status,2, status,0
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8024 ;;      Params:         3       0       0       0       0
  8025 ;;      Locals:         1       0       0       0       0
  8026 ;;      Temps:          0       0       0       0       0
  8027 ;;      Totals:         4       0       0       0       0
  8028 ;;Total ram usage:        4 bytes
  8029 ;; Hardware stack levels used:    1
  8030 ;; This function calls:
  8031 ;;		Nothing
  8032 ;; This function is called by:
  8033 ;;		_setup
  8034 ;; This function uses a non-reentrant model
  8035 ;;
  8036                           
  8037                           
  8038                           ;psect for function _spiInit
  8039  198D                     _spiInit:
  8040                           
  8041                           ;incstack = 0
  8042                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  8043                           ;spiInit@sType stored from wreg
  8044  198D  00F3               	movwf	spiInit@sType
  8045  198E                     l2917:
  8046                           
  8047                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  8048  198E  1683               	bsf	3,5	;RP0=1, select bank1
  8049  198F  1303               	bcf	3,6	;RP1=0, select bank1
  8050  1990  1287               	bcf	7,5	;volatile
  8051                           
  8052                           ;SPI.c: 15:     if(sType & 0b00000100)
  8053  1991  1D73               	btfss	spiInit@sType,2
  8054  1992  2994               	goto	u4231
  8055  1993  2995               	goto	u4230
  8056  1994                     u4231:
  8057  1994  2999               	goto	l2923
  8058  1995                     u4230:
  8059  1995                     l2919:
  8060                           
  8061                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  8062  1995  0872               	movf	spiInit@sTransmitEdge,w
  8063  1996  0094               	movwf	20	;volatile
  8064  1997                     l2921:
  8065                           
  8066                           ;SPI.c: 18:         TRISC3 = 1;
  8067  1997  1587               	bsf	7,3	;volatile
  8068                           
  8069                           ;SPI.c: 19:     }
  8070  1998  299D               	goto	l203
  8071  1999                     l2923:
  8072                           
  8073                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  8074  1999  0870               	movf	spiInit@sDataSample,w
  8075  199A  0472               	iorwf	spiInit@sTransmitEdge,w
  8076  199B  0094               	movwf	20	;volatile
  8077  199C                     l2925:
  8078                           
  8079                           ;SPI.c: 23:         TRISC3 = 0;
  8080  199C  1187               	bcf	7,3	;volatile
  8081  199D                     l203:	
  8082                           ;SPI.c: 24:     }
  8083                           
  8084                           
  8085                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  8086  199D  0873               	movf	spiInit@sType,w
  8087  199E  0471               	iorwf	spiInit@sClockIdle,w
  8088  199F  1283               	bcf	3,5	;RP0=0, select bank0
  8089  19A0  1303               	bcf	3,6	;RP1=0, select bank0
  8090  19A1  0094               	movwf	20	;volatile
  8091  19A2                     l204:
  8092  19A2  0008               	return
  8093  19A3                     __end_of_spiInit:
  8094                           
  8095                           	psect	text24
  8096  1BF5                     __ptext24:	
  8097 ;; *************** function _leer_ADC *****************
  8098 ;; Defined at:
  8099 ;;		line 133 in file "main.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;		None
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0, pclath, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8113 ;;      Params:         0       0       0       0       0
  8114 ;;      Locals:         0       0       0       0       0
  8115 ;;      Temps:          0       4       0       0       0
  8116 ;;      Totals:         0       4       0       0       0
  8117 ;;Total ram usage:        4 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    2
  8120 ;; This function calls:
  8121 ;;		___xxtofl
  8122 ;;		_spiRead
  8123 ;;		_spiWrite
  8124 ;; This function is called by:
  8125 ;;		_main
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129                           
  8130                           ;psect for function _leer_ADC
  8131  1BF5                     _leer_ADC:
  8132  1BF5                     l3385:	
  8133                           ;incstack = 0
  8134                           ; Regs used in _leer_ADC: [wreg+status,2+status,0+pclath+cstack]
  8135                           
  8136                           
  8137                           ;main.c: 134:     PORTCbits.RC0 = 0;
  8138  1BF5  1283               	bcf	3,5	;RP0=0, select bank0
  8139  1BF6  1303               	bcf	3,6	;RP1=0, select bank0
  8140  1BF7  1007               	bcf	7,0	;volatile
  8141  1BF8                     l3387:
  8142                           
  8143                           ;main.c: 135:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8144  1BF8  3003               	movlw	3
  8145  1BF9  1283               	bcf	3,5	;RP0=0, select bank0
  8146  1BFA  1303               	bcf	3,6	;RP1=0, select bank0
  8147  1BFB  00A1               	movwf	??_leer_ADC+1
  8148  1BFC  3097               	movlw	151
  8149  1BFD  00A0               	movwf	??_leer_ADC
  8150  1BFE                     u5897:
  8151  1BFE  0BA0               	decfsz	??_leer_ADC,f
  8152  1BFF  2BFE               	goto	u5897
  8153  1C00  0BA1               	decfsz	??_leer_ADC+1,f
  8154  1C01  2BFE               	goto	u5897
  8155  1C02                     l3389:
  8156                           
  8157                           ;main.c: 137:     spiWrite(1);
  8158  1C02  3001               	movlw	1
  8159  1C03  120A  158A  2000  160A  158A  	fcall	_spiWrite
  8160  1C08                     l3391:
  8161                           
  8162                           ;main.c: 139:     volt = spiRead();
  8163  1C08  160A  118A  2000  160A  158A  	fcall	_spiRead
  8164  1C0D  1283               	bcf	3,5	;RP0=0, select bank0
  8165  1C0E  1303               	bcf	3,6	;RP1=0, select bank0
  8166  1C0F  00A0               	movwf	??_leer_ADC
  8167  1C10  01A1               	clrf	??_leer_ADC+1
  8168  1C11  01A2               	clrf	??_leer_ADC+2
  8169  1C12  01A3               	clrf	??_leer_ADC+3
  8170  1C13  0823               	movf	??_leer_ADC+3,w
  8171  1C14  00F3               	movwf	___xxtofl@val+3
  8172  1C15  0822               	movf	??_leer_ADC+2,w
  8173  1C16  00F2               	movwf	___xxtofl@val+2
  8174  1C17  0821               	movf	??_leer_ADC+1,w
  8175  1C18  00F1               	movwf	___xxtofl@val+1
  8176  1C19  0820               	movf	??_leer_ADC,w
  8177  1C1A  00F0               	movwf	___xxtofl@val
  8178  1C1B  3000               	movlw	0
  8179  1C1C  160A  158A  2689  160A  158A  	fcall	___xxtofl
  8180  1C21  0873               	movf	?___xxtofl+3,w
  8181  1C22  1683               	bsf	3,5	;RP0=1, select bank1
  8182  1C23  1303               	bcf	3,6	;RP1=0, select bank1
  8183  1C24  00D5               	movwf	(_volt+3)^(0+128)
  8184  1C25  0872               	movf	?___xxtofl+2,w
  8185  1C26  00D4               	movwf	(_volt+2)^(0+128)
  8186  1C27  0871               	movf	?___xxtofl+1,w
  8187  1C28  00D3               	movwf	(_volt+1)^(0+128)
  8188  1C29  0870               	movf	?___xxtofl,w
  8189  1C2A  00D2               	movwf	_volt^(0+128)
  8190                           
  8191                           ;main.c: 141:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8192  1C2B  3003               	movlw	3
  8193  1C2C  1283               	bcf	3,5	;RP0=0, select bank0
  8194  1C2D  1303               	bcf	3,6	;RP1=0, select bank0
  8195  1C2E  00A1               	movwf	??_leer_ADC+1
  8196  1C2F  3097               	movlw	151
  8197  1C30  00A0               	movwf	??_leer_ADC
  8198  1C31                     u5907:
  8199  1C31  0BA0               	decfsz	??_leer_ADC,f
  8200  1C32  2C31               	goto	u5907
  8201  1C33  0BA1               	decfsz	??_leer_ADC+1,f
  8202  1C34  2C31               	goto	u5907
  8203  1C35                     l3393:
  8204                           
  8205                           ;main.c: 142:     PORTCbits.RC0 = 1;
  8206  1C35  1283               	bcf	3,5	;RP0=0, select bank0
  8207  1C36  1303               	bcf	3,6	;RP1=0, select bank0
  8208  1C37  1407               	bsf	7,0	;volatile
  8209                           
  8210                           ;main.c: 143:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8211  1C38  3003               	movlw	3
  8212  1C39  1283               	bcf	3,5	;RP0=0, select bank0
  8213  1C3A  1303               	bcf	3,6	;RP1=0, select bank0
  8214  1C3B  00A1               	movwf	??_leer_ADC+1
  8215  1C3C  3097               	movlw	151
  8216  1C3D  00A0               	movwf	??_leer_ADC
  8217  1C3E                     u5917:
  8218  1C3E  0BA0               	decfsz	??_leer_ADC,f
  8219  1C3F  2C3E               	goto	u5917
  8220  1C40  0BA1               	decfsz	??_leer_ADC+1,f
  8221  1C41  2C3E               	goto	u5917
  8222  1C42                     l181:
  8223  1C42  0008               	return
  8224  1C43                     __end_of_leer_ADC:
  8225                           
  8226                           	psect	text25
  8227  194D                     __ptext25:	
  8228 ;; *************** function _config_txsta *****************
  8229 ;; Defined at:
  8230 ;;		line 20 in file "./LIB_USART.h"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;		None
  8233 ;; Auto vars:     Size  Location     Type
  8234 ;;		None
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  1    wreg      void 
  8237 ;; Registers used:
  8238 ;;		None
  8239 ;; Tracked objects:
  8240 ;;		On entry : 0/0
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8244 ;;      Params:         0       0       0       0       0
  8245 ;;      Locals:         0       0       0       0       0
  8246 ;;      Temps:          0       0       0       0       0
  8247 ;;      Totals:         0       0       0       0       0
  8248 ;;Total ram usage:        0 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; This function calls:
  8251 ;;		Nothing
  8252 ;; This function is called by:
  8253 ;;		_main
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           
  8258                           ;psect for function _config_txsta
  8259  194D                     _config_txsta:
  8260  194D                     l3341:	
  8261                           ;incstack = 0
  8262                           ; Regs used in _config_txsta: []
  8263                           
  8264                           
  8265                           ;./LIB_USART.h: 21:     TXSTAbits.CSRC = 0;
  8266  194D  1683               	bsf	3,5	;RP0=1, select bank1
  8267  194E  1303               	bcf	3,6	;RP1=0, select bank1
  8268  194F  1398               	bcf	24,7	;volatile
  8269                           
  8270                           ;./LIB_USART.h: 22:     TXSTAbits.TX9 = 0;
  8271  1950  1318               	bcf	24,6	;volatile
  8272                           
  8273                           ;./LIB_USART.h: 23:     TXSTAbits.TXEN = 1;
  8274  1951  1698               	bsf	24,5	;volatile
  8275                           
  8276                           ;./LIB_USART.h: 24:     TXSTAbits.SYNC = 0;
  8277  1952  1218               	bcf	24,4	;volatile
  8278                           
  8279                           ;./LIB_USART.h: 25:     TXSTAbits.BRGH = 0;
  8280  1953  1118               	bcf	24,2	;volatile
  8281                           
  8282                           ;./LIB_USART.h: 26:     TXSTAbits.TRMT = 0;
  8283  1954  1098               	bcf	24,1	;volatile
  8284                           
  8285                           ;./LIB_USART.h: 27:     TXSTAbits.TX9D = 0;
  8286  1955  1018               	bcf	24,0	;volatile
  8287  1956                     l131:
  8288  1956  0008               	return
  8289  1957                     __end_of_config_txsta:
  8290                           
  8291                           	psect	text26
  8292  193D                     __ptext26:	
  8293 ;; *************** function _config_rcsta *****************
  8294 ;; Defined at:
  8295 ;;		line 30 in file "./LIB_USART.h"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;		None
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;		None
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  1    wreg      void 
  8302 ;; Registers used:
  8303 ;;		status,2
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8309 ;;      Params:         0       0       0       0       0
  8310 ;;      Locals:         0       0       0       0       0
  8311 ;;      Temps:          0       0       0       0       0
  8312 ;;      Totals:         0       0       0       0       0
  8313 ;;Total ram usage:        0 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; This function calls:
  8316 ;;		Nothing
  8317 ;; This function is called by:
  8318 ;;		_main
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           
  8323                           ;psect for function _config_rcsta
  8324  193D                     _config_rcsta:
  8325  193D                     l3343:	
  8326                           ;incstack = 0
  8327                           ; Regs used in _config_rcsta: [status,2]
  8328                           
  8329                           
  8330                           ;./LIB_USART.h: 31:     RCSTAbits.SPEN = 1;
  8331  193D  1283               	bcf	3,5	;RP0=0, select bank0
  8332  193E  1303               	bcf	3,6	;RP1=0, select bank0
  8333  193F  1798               	bsf	24,7	;volatile
  8334                           
  8335                           ;./LIB_USART.h: 32:     RCSTAbits.RX9 = 0;
  8336  1940  1318               	bcf	24,6	;volatile
  8337                           
  8338                           ;./LIB_USART.h: 33:     RCSTAbits.SREN = 0;
  8339  1941  1298               	bcf	24,5	;volatile
  8340                           
  8341                           ;./LIB_USART.h: 34:     RCSTAbits.CREN = 1;
  8342  1942  1618               	bsf	24,4	;volatile
  8343  1943                     l3345:
  8344                           
  8345                           ;./LIB_USART.h: 35:     RCREG = 0;
  8346  1943  019A               	clrf	26	;volatile
  8347  1944                     l134:
  8348  1944  0008               	return
  8349  1945                     __end_of_config_rcsta:
  8350                           
  8351                           	psect	text27
  8352  1A9A                     __ptext27:	
  8353 ;; *************** function _Write_USART_String *****************
  8354 ;; Defined at:
  8355 ;;		line 42 in file "./LIB_USART.h"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  a               2    1[COMMON] PTR unsigned char 
  8358 ;;		 -> STR_3(13), data(20), 
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;  i               1    4[COMMON] unsigned char 
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  1    wreg      void 
  8363 ;; Registers used:
  8364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8370 ;;      Params:         2       0       0       0       0
  8371 ;;      Locals:         1       0       0       0       0
  8372 ;;      Temps:          1       0       0       0       0
  8373 ;;      Totals:         4       0       0       0       0
  8374 ;;Total ram usage:        4 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; Hardware stack levels required when called:    1
  8377 ;; This function calls:
  8378 ;;		_Write_USART
  8379 ;; This function is called by:
  8380 ;;		_main
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384                           
  8385                           ;psect for function _Write_USART_String
  8386  1A9A                     _Write_USART_String:
  8387  1A9A                     l3347:	
  8388                           ;incstack = 0
  8389                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8390                           
  8391                           
  8392                           ;./LIB_USART.h: 43:     uint8_t i;;./LIB_USART.h: 44:     for(i=0;a[i]!='\0';i++){
  8393  1A9A  01F4               	clrf	Write_USART_String@i
  8394  1A9B  2AB1               	goto	l3353
  8395  1A9C                     l3349:
  8396                           
  8397                           ;./LIB_USART.h: 45:         Write_USART(a[i]);
  8398  1A9C  0874               	movf	Write_USART_String@i,w
  8399  1A9D  0771               	addwf	Write_USART_String@a,w
  8400  1A9E  0084               	movwf	4
  8401  1A9F  0872               	movf	Write_USART_String@a+1,w
  8402  1AA0  1803               	skipnc
  8403  1AA1  0A72               	incf	Write_USART_String@a+1,w
  8404  1AA2  00FF               	movwf	btemp+1
  8405  1AA3  120A  118A  2003  160A  158A  	fcall	stringtab
  8406  1AA8  160A  158A  2162  160A  158A  	fcall	_Write_USART
  8407  1AAD                     l3351:
  8408                           
  8409                           ;./LIB_USART.h: 46:     }
  8410  1AAD  3001               	movlw	1
  8411  1AAE  00F3               	movwf	??_Write_USART_String
  8412  1AAF  0873               	movf	??_Write_USART_String,w
  8413  1AB0  07F4               	addwf	Write_USART_String@i,f
  8414  1AB1                     l3353:
  8415  1AB1  0874               	movf	Write_USART_String@i,w
  8416  1AB2  0771               	addwf	Write_USART_String@a,w
  8417  1AB3  0084               	movwf	4
  8418  1AB4  0872               	movf	Write_USART_String@a+1,w
  8419  1AB5  1803               	skipnc
  8420  1AB6  0A72               	incf	Write_USART_String@a+1,w
  8421  1AB7  1283               	bcf	3,5	;RP0=0, select bank0
  8422  1AB8  1303               	bcf	3,6	;RP1=0, select bank0
  8423  1AB9  00FF               	movwf	btemp+1
  8424  1ABA  120A  118A  2003  160A  158A  	fcall	stringtab
  8425  1ABF  3A00               	xorlw	0
  8426  1AC0  1D03               	skipz
  8427  1AC1  2AC3               	goto	u5341
  8428  1AC2  2AC4               	goto	u5340
  8429  1AC3                     u5341:
  8430  1AC3  2A9C               	goto	l3349
  8431  1AC4                     u5340:
  8432  1AC4                     l146:
  8433  1AC4  0008               	return
  8434  1AC5                     __end_of_Write_USART_String:
  8435                           
  8436                           	psect	text28
  8437  1962                     __ptext28:	
  8438 ;; *************** function _Write_USART *****************
  8439 ;; Defined at:
  8440 ;;		line 38 in file "./LIB_USART.h"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;  a               1    wreg     unsigned char 
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;  a               1    0[COMMON] unsigned char 
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  1    wreg      void 
  8447 ;; Registers used:
  8448 ;;		wreg
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/0
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8454 ;;      Params:         0       0       0       0       0
  8455 ;;      Locals:         1       0       0       0       0
  8456 ;;      Temps:          0       0       0       0       0
  8457 ;;      Totals:         1       0       0       0       0
  8458 ;;Total ram usage:        1 bytes
  8459 ;; Hardware stack levels used:    1
  8460 ;; This function calls:
  8461 ;;		Nothing
  8462 ;; This function is called by:
  8463 ;;		_Write_USART_String
  8464 ;;		_main
  8465 ;; This function uses a non-reentrant model
  8466 ;;
  8467                           
  8468                           
  8469                           ;psect for function _Write_USART
  8470  1962                     _Write_USART:
  8471                           
  8472                           ;incstack = 0
  8473                           ; Regs used in _Write_USART: [wreg]
  8474                           ;Write_USART@a stored from wreg
  8475  1962  00F0               	movwf	Write_USART@a
  8476  1963                     l2913:
  8477  1963                     l137:	
  8478                           ;./LIB_USART.h: 39:     while(!TRMT);
  8479                           
  8480  1963  1683               	bsf	3,5	;RP0=1, select bank1
  8481  1964  1303               	bcf	3,6	;RP1=0, select bank1
  8482  1965  1C98               	btfss	24,1	;volatile
  8483  1966  2968               	goto	u4221
  8484  1967  2969               	goto	u4220
  8485  1968                     u4221:
  8486  1968  2963               	goto	l137
  8487  1969                     u4220:
  8488  1969                     l2915:
  8489                           
  8490                           ;./LIB_USART.h: 40:     TXREG=a;
  8491  1969  0870               	movf	Write_USART@a,w
  8492  196A  1283               	bcf	3,5	;RP0=0, select bank0
  8493  196B  1303               	bcf	3,6	;RP1=0, select bank0
  8494  196C  0099               	movwf	25	;volatile
  8495  196D                     l140:
  8496  196D  0008               	return
  8497  196E                     __end_of_Write_USART:
  8498                           
  8499                           	psect	text29
  8500  1CEA                     __ptext29:	
  8501 ;; *************** function _Sensor *****************
  8502 ;; Defined at:
  8503 ;;		line 159 in file "main.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;		None
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;		None
  8508 ;; Return value:  Size  Location     Type
  8509 ;;                  4    0[BANK0 ] float 
  8510 ;; Registers used:
  8511 ;;		wreg, status,2, status,0, pclath, cstack
  8512 ;; Tracked objects:
  8513 ;;		On entry : 0/0
  8514 ;;		On exit  : 0/0
  8515 ;;		Unchanged: 0/0
  8516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8517 ;;      Params:         0       4       0       0       0
  8518 ;;      Locals:         0       0       0       0       0
  8519 ;;      Temps:          0       4       0       0       0
  8520 ;;      Totals:         0       8       0       0       0
  8521 ;;Total ram usage:        8 bytes
  8522 ;; Hardware stack levels used:    1
  8523 ;; Hardware stack levels required when called:    2
  8524 ;; This function calls:
  8525 ;;		___xxtofl
  8526 ;;		_spiRead
  8527 ;;		_spiWrite
  8528 ;; This function is called by:
  8529 ;;		_main
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533                           
  8534                           ;psect for function _Sensor
  8535  1CEA                     _Sensor:
  8536  1CEA                     l3395:	
  8537                           ;incstack = 0
  8538                           ; Regs used in _Sensor: [wreg+status,2+status,0+pclath+cstack]
  8539                           
  8540                           
  8541                           ;main.c: 160:     PORTCbits.RC2 = 0;
  8542  1CEA  1283               	bcf	3,5	;RP0=0, select bank0
  8543  1CEB  1303               	bcf	3,6	;RP1=0, select bank0
  8544  1CEC  1107               	bcf	7,2	;volatile
  8545  1CED                     l3397:
  8546                           
  8547                           ;main.c: 161:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8548  1CED  3003               	movlw	3
  8549  1CEE  1283               	bcf	3,5	;RP0=0, select bank0
  8550  1CEF  1303               	bcf	3,6	;RP1=0, select bank0
  8551  1CF0  00A5               	movwf	??_Sensor+1
  8552  1CF1  3097               	movlw	151
  8553  1CF2  00A4               	movwf	??_Sensor
  8554  1CF3                     u5927:
  8555  1CF3  0BA4               	decfsz	??_Sensor,f
  8556  1CF4  2CF3               	goto	u5927
  8557  1CF5  0BA5               	decfsz	??_Sensor+1,f
  8558  1CF6  2CF3               	goto	u5927
  8559  1CF7                     l3399:
  8560                           
  8561                           ;main.c: 163:     spiWrite(1);
  8562  1CF7  3001               	movlw	1
  8563  1CF8  120A  158A  2000  160A  158A  	fcall	_spiWrite
  8564  1CFD                     l3401:
  8565                           
  8566                           ;main.c: 165:     temp = spiRead();
  8567  1CFD  160A  118A  2000  160A  158A  	fcall	_spiRead
  8568  1D02  1283               	bcf	3,5	;RP0=0, select bank0
  8569  1D03  1303               	bcf	3,6	;RP1=0, select bank0
  8570  1D04  00A4               	movwf	??_Sensor
  8571  1D05  01A5               	clrf	??_Sensor+1
  8572  1D06  01A6               	clrf	??_Sensor+2
  8573  1D07  01A7               	clrf	??_Sensor+3
  8574  1D08  0827               	movf	??_Sensor+3,w
  8575  1D09  00F3               	movwf	___xxtofl@val+3
  8576  1D0A  0826               	movf	??_Sensor+2,w
  8577  1D0B  00F2               	movwf	___xxtofl@val+2
  8578  1D0C  0825               	movf	??_Sensor+1,w
  8579  1D0D  00F1               	movwf	___xxtofl@val+1
  8580  1D0E  0824               	movf	??_Sensor,w
  8581  1D0F  00F0               	movwf	___xxtofl@val
  8582  1D10  3000               	movlw	0
  8583  1D11  160A  158A  2689  160A  158A  	fcall	___xxtofl
  8584  1D16  0873               	movf	?___xxtofl+3,w
  8585  1D17  1683               	bsf	3,5	;RP0=1, select bank1
  8586  1D18  1303               	bcf	3,6	;RP1=0, select bank1
  8587  1D19  00D1               	movwf	(_temp+3)^(0+128)
  8588  1D1A  0872               	movf	?___xxtofl+2,w
  8589  1D1B  00D0               	movwf	(_temp+2)^(0+128)
  8590  1D1C  0871               	movf	?___xxtofl+1,w
  8591  1D1D  00CF               	movwf	(_temp+1)^(0+128)
  8592  1D1E  0870               	movf	?___xxtofl,w
  8593  1D1F  00CE               	movwf	_temp^(0+128)
  8594                           
  8595                           ;main.c: 167:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8596  1D20  3003               	movlw	3
  8597  1D21  1283               	bcf	3,5	;RP0=0, select bank0
  8598  1D22  1303               	bcf	3,6	;RP1=0, select bank0
  8599  1D23  00A5               	movwf	??_Sensor+1
  8600  1D24  3097               	movlw	151
  8601  1D25  00A4               	movwf	??_Sensor
  8602  1D26                     u5937:
  8603  1D26  0BA4               	decfsz	??_Sensor,f
  8604  1D27  2D26               	goto	u5937
  8605  1D28  0BA5               	decfsz	??_Sensor+1,f
  8606  1D29  2D26               	goto	u5937
  8607  1D2A                     l3403:
  8608                           
  8609                           ;main.c: 168:     PORTCbits.RC2 = 1;
  8610  1D2A  1283               	bcf	3,5	;RP0=0, select bank0
  8611  1D2B  1303               	bcf	3,6	;RP1=0, select bank0
  8612  1D2C  1507               	bsf	7,2	;volatile
  8613                           
  8614                           ;main.c: 169:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8615  1D2D  3003               	movlw	3
  8616  1D2E  1283               	bcf	3,5	;RP0=0, select bank0
  8617  1D2F  1303               	bcf	3,6	;RP1=0, select bank0
  8618  1D30  00A5               	movwf	??_Sensor+1
  8619  1D31  3097               	movlw	151
  8620  1D32  00A4               	movwf	??_Sensor
  8621  1D33                     u5947:
  8622  1D33  0BA4               	decfsz	??_Sensor,f
  8623  1D34  2D33               	goto	u5947
  8624  1D35  0BA5               	decfsz	??_Sensor+1,f
  8625  1D36  2D33               	goto	u5947
  8626                           
  8627                           ;main.c: 170:     return temp;
  8628  1D37  1683               	bsf	3,5	;RP0=1, select bank1
  8629  1D38  1303               	bcf	3,6	;RP1=0, select bank1
  8630  1D39  0851               	movf	(_temp+3)^(0+128),w
  8631  1D3A  1283               	bcf	3,5	;RP0=0, select bank0
  8632  1D3B  1303               	bcf	3,6	;RP1=0, select bank0
  8633  1D3C  00A3               	movwf	?_Sensor+3
  8634  1D3D  1683               	bsf	3,5	;RP0=1, select bank1
  8635  1D3E  1303               	bcf	3,6	;RP1=0, select bank1
  8636  1D3F  0850               	movf	(_temp+2)^(0+128),w
  8637  1D40  1283               	bcf	3,5	;RP0=0, select bank0
  8638  1D41  1303               	bcf	3,6	;RP1=0, select bank0
  8639  1D42  00A2               	movwf	?_Sensor+2
  8640  1D43  1683               	bsf	3,5	;RP0=1, select bank1
  8641  1D44  1303               	bcf	3,6	;RP1=0, select bank1
  8642  1D45  084F               	movf	(_temp+1)^(0+128),w
  8643  1D46  1283               	bcf	3,5	;RP0=0, select bank0
  8644  1D47  1303               	bcf	3,6	;RP1=0, select bank0
  8645  1D48  00A1               	movwf	?_Sensor+1
  8646  1D49  1683               	bsf	3,5	;RP0=1, select bank1
  8647  1D4A  1303               	bcf	3,6	;RP1=0, select bank1
  8648  1D4B  084E               	movf	_temp^(0+128),w
  8649  1D4C  1283               	bcf	3,5	;RP0=0, select bank0
  8650  1D4D  1303               	bcf	3,6	;RP1=0, select bank0
  8651  1D4E  00A0               	movwf	?_Sensor
  8652  1D4F                     l187:
  8653  1D4F  0008               	return
  8654  1D50                     __end_of_Sensor:
  8655                           
  8656                           	psect	text30
  8657  1E89                     __ptext30:	
  8658 ;; *************** function ___xxtofl *****************
  8659 ;; Defined at:
  8660 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8661 ;; Parameters:    Size  Location     Type
  8662 ;;  sign            1    wreg     unsigned char 
  8663 ;;  val             4    0[COMMON] long 
  8664 ;; Auto vars:     Size  Location     Type
  8665 ;;  sign            1    8[COMMON] unsigned char 
  8666 ;;  arg             4   10[COMMON] unsigned long 
  8667 ;;  exp             1    9[COMMON] unsigned char 
  8668 ;; Return value:  Size  Location     Type
  8669 ;;                  4    0[COMMON] unsigned char 
  8670 ;; Registers used:
  8671 ;;		wreg, status,2, status,0
  8672 ;; Tracked objects:
  8673 ;;		On entry : 0/0
  8674 ;;		On exit  : 0/0
  8675 ;;		Unchanged: 0/0
  8676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8677 ;;      Params:         4       0       0       0       0
  8678 ;;      Locals:         6       0       0       0       0
  8679 ;;      Temps:          4       0       0       0       0
  8680 ;;      Totals:        14       0       0       0       0
  8681 ;;Total ram usage:       14 bytes
  8682 ;; Hardware stack levels used:    1
  8683 ;; This function calls:
  8684 ;;		Nothing
  8685 ;; This function is called by:
  8686 ;;		_leer_ADC
  8687 ;;		_Sensor
  8688 ;;		_sprintf
  8689 ;; This function uses a non-reentrant model
  8690 ;;
  8691                           
  8692                           
  8693                           ;psect for function ___xxtofl
  8694  1E89                     ___xxtofl:
  8695                           
  8696                           ;incstack = 0
  8697                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8698                           ;___xxtofl@sign stored from wreg
  8699  1E89  00F8               	movwf	___xxtofl@sign
  8700  1E8A                     l3249:
  8701  1E8A  0878               	movf	___xxtofl@sign,w
  8702  1E8B  1903               	btfsc	3,2
  8703  1E8C  2E8E               	goto	u5151
  8704  1E8D  2E8F               	goto	u5150
  8705  1E8E                     u5151:
  8706  1E8E  2EA3               	goto	l3255
  8707  1E8F                     u5150:
  8708  1E8F                     l3251:
  8709  1E8F  1FF3               	btfss	___xxtofl@val+3,7
  8710  1E90  2E92               	goto	u5161
  8711  1E91  2E93               	goto	u5160
  8712  1E92                     u5161:
  8713  1E92  2EA3               	goto	l3255
  8714  1E93                     u5160:
  8715  1E93                     l3253:
  8716  1E93  0970               	comf	___xxtofl@val,w
  8717  1E94  00FA               	movwf	___xxtofl@arg
  8718  1E95  0971               	comf	___xxtofl@val+1,w
  8719  1E96  00FB               	movwf	___xxtofl@arg+1
  8720  1E97  0972               	comf	___xxtofl@val+2,w
  8721  1E98  00FC               	movwf	___xxtofl@arg+2
  8722  1E99  0973               	comf	___xxtofl@val+3,w
  8723  1E9A  00FD               	movwf	___xxtofl@arg+3
  8724  1E9B  0AFA               	incf	___xxtofl@arg,f
  8725  1E9C  1903               	skipnz
  8726  1E9D  0AFB               	incf	___xxtofl@arg+1,f
  8727  1E9E  1903               	skipnz
  8728  1E9F  0AFC               	incf	___xxtofl@arg+2,f
  8729  1EA0  1903               	skipnz
  8730  1EA1  0AFD               	incf	___xxtofl@arg+3,f
  8731  1EA2  2EAB               	goto	l893
  8732  1EA3                     l3255:
  8733  1EA3  0873               	movf	___xxtofl@val+3,w
  8734  1EA4  00FD               	movwf	___xxtofl@arg+3
  8735  1EA5  0872               	movf	___xxtofl@val+2,w
  8736  1EA6  00FC               	movwf	___xxtofl@arg+2
  8737  1EA7  0871               	movf	___xxtofl@val+1,w
  8738  1EA8  00FB               	movwf	___xxtofl@arg+1
  8739  1EA9  0870               	movf	___xxtofl@val,w
  8740  1EAA  00FA               	movwf	___xxtofl@arg
  8741  1EAB                     l893:
  8742  1EAB  0873               	movf	___xxtofl@val+3,w
  8743  1EAC  0472               	iorwf	___xxtofl@val+2,w
  8744  1EAD  0471               	iorwf	___xxtofl@val+1,w
  8745  1EAE  0470               	iorwf	___xxtofl@val,w
  8746  1EAF  1D03               	skipz
  8747  1EB0  2EB2               	goto	u5171
  8748  1EB1  2EB3               	goto	u5170
  8749  1EB2                     u5171:
  8750  1EB2  2EBC               	goto	l3261
  8751  1EB3                     u5170:
  8752  1EB3                     l3257:
  8753  1EB3  3000               	movlw	0
  8754  1EB4  00F3               	movwf	?___xxtofl+3
  8755  1EB5  3000               	movlw	0
  8756  1EB6  00F2               	movwf	?___xxtofl+2
  8757  1EB7  3000               	movlw	0
  8758  1EB8  00F1               	movwf	?___xxtofl+1
  8759  1EB9  3000               	movlw	0
  8760  1EBA  00F0               	movwf	?___xxtofl
  8761  1EBB  2F42               	goto	l895
  8762  1EBC                     l3261:
  8763  1EBC  3096               	movlw	150
  8764  1EBD  00F4               	movwf	??___xxtofl
  8765  1EBE  0874               	movf	??___xxtofl,w
  8766  1EBF  00F9               	movwf	___xxtofl@exp
  8767  1EC0  2ECE               	goto	l3265
  8768  1EC1                     l3263:
  8769  1EC1  3001               	movlw	1
  8770  1EC2  00F4               	movwf	??___xxtofl
  8771  1EC3  0874               	movf	??___xxtofl,w
  8772  1EC4  07F9               	addwf	___xxtofl@exp,f
  8773  1EC5  3001               	movlw	1
  8774  1EC6                     u5185:
  8775  1EC6  1003               	clrc
  8776  1EC7  0CFD               	rrf	___xxtofl@arg+3,f
  8777  1EC8  0CFC               	rrf	___xxtofl@arg+2,f
  8778  1EC9  0CFB               	rrf	___xxtofl@arg+1,f
  8779  1ECA  0CFA               	rrf	___xxtofl@arg,f
  8780  1ECB  3EFF               	addlw	-1
  8781  1ECC  1D03               	skipz
  8782  1ECD  2EC6               	goto	u5185
  8783  1ECE                     l3265:
  8784  1ECE  30FE               	movlw	254
  8785  1ECF  057D               	andwf	___xxtofl@arg+3,w
  8786  1ED0  1D03               	btfss	3,2
  8787  1ED1  2ED3               	goto	u5191
  8788  1ED2  2ED4               	goto	u5190
  8789  1ED3                     u5191:
  8790  1ED3  2EC1               	goto	l3263
  8791  1ED4                     u5190:
  8792  1ED4  2EF0               	goto	l899
  8793  1ED5                     l3267:
  8794  1ED5  3001               	movlw	1
  8795  1ED6  00F4               	movwf	??___xxtofl
  8796  1ED7  0874               	movf	??___xxtofl,w
  8797  1ED8  07F9               	addwf	___xxtofl@exp,f
  8798  1ED9                     l3269:
  8799  1ED9  3001               	movlw	1
  8800  1EDA  07FA               	addwf	___xxtofl@arg,f
  8801  1EDB  3000               	movlw	0
  8802  1EDC  1803               	skipnc
  8803  1EDD  3001               	movlw	1
  8804  1EDE  07FB               	addwf	___xxtofl@arg+1,f
  8805  1EDF  3000               	movlw	0
  8806  1EE0  1803               	skipnc
  8807  1EE1  3001               	movlw	1
  8808  1EE2  07FC               	addwf	___xxtofl@arg+2,f
  8809  1EE3  3000               	movlw	0
  8810  1EE4  1803               	skipnc
  8811  1EE5  3001               	movlw	1
  8812  1EE6  07FD               	addwf	___xxtofl@arg+3,f
  8813  1EE7                     l3271:
  8814  1EE7  3001               	movlw	1
  8815  1EE8                     u5205:
  8816  1EE8  1003               	clrc
  8817  1EE9  0CFD               	rrf	___xxtofl@arg+3,f
  8818  1EEA  0CFC               	rrf	___xxtofl@arg+2,f
  8819  1EEB  0CFB               	rrf	___xxtofl@arg+1,f
  8820  1EEC  0CFA               	rrf	___xxtofl@arg,f
  8821  1EED  3EFF               	addlw	-1
  8822  1EEE  1D03               	skipz
  8823  1EEF  2EE8               	goto	u5205
  8824  1EF0                     l899:
  8825  1EF0  30FF               	movlw	255
  8826  1EF1  057D               	andwf	___xxtofl@arg+3,w
  8827  1EF2  1D03               	btfss	3,2
  8828  1EF3  2EF5               	goto	u5211
  8829  1EF4  2EF6               	goto	u5210
  8830  1EF5                     u5211:
  8831  1EF5  2ED5               	goto	l3267
  8832  1EF6                     u5210:
  8833  1EF6  2F02               	goto	l3275
  8834  1EF7                     l3273:
  8835  1EF7  3001               	movlw	1
  8836  1EF8  02F9               	subwf	___xxtofl@exp,f
  8837  1EF9  3001               	movlw	1
  8838  1EFA  00F4               	movwf	??___xxtofl
  8839  1EFB                     u5225:
  8840  1EFB  1003               	clrc
  8841  1EFC  0DFA               	rlf	___xxtofl@arg,f
  8842  1EFD  0DFB               	rlf	___xxtofl@arg+1,f
  8843  1EFE  0DFC               	rlf	___xxtofl@arg+2,f
  8844  1EFF  0DFD               	rlf	___xxtofl@arg+3,f
  8845  1F00  0BF4               	decfsz	??___xxtofl,f
  8846  1F01  2EFB               	goto	u5225
  8847  1F02                     l3275:
  8848  1F02  1BFC               	btfsc	___xxtofl@arg+2,7
  8849  1F03  2F05               	goto	u5231
  8850  1F04  2F06               	goto	u5230
  8851  1F05                     u5231:
  8852  1F05  2F0C               	goto	l906
  8853  1F06                     u5230:
  8854  1F06                     l3277:
  8855  1F06  3002               	movlw	2
  8856  1F07  0279               	subwf	___xxtofl@exp,w
  8857  1F08  1803               	skipnc
  8858  1F09  2F0B               	goto	u5241
  8859  1F0A  2F0C               	goto	u5240
  8860  1F0B                     u5241:
  8861  1F0B  2EF7               	goto	l3273
  8862  1F0C                     u5240:
  8863  1F0C                     l906:
  8864  1F0C  1879               	btfsc	___xxtofl@exp,0
  8865  1F0D  2F0F               	goto	u5251
  8866  1F0E  2F10               	goto	u5250
  8867  1F0F                     u5251:
  8868  1F0F  2F18               	goto	l907
  8869  1F10                     u5250:
  8870  1F10                     l3279:
  8871  1F10  30FF               	movlw	255
  8872  1F11  05FA               	andwf	___xxtofl@arg,f
  8873  1F12  30FF               	movlw	255
  8874  1F13  05FB               	andwf	___xxtofl@arg+1,f
  8875  1F14  307F               	movlw	127
  8876  1F15  05FC               	andwf	___xxtofl@arg+2,f
  8877  1F16  30FF               	movlw	255
  8878  1F17  05FD               	andwf	___xxtofl@arg+3,f
  8879  1F18                     l907:
  8880  1F18  1003               	clrc
  8881  1F19  0CF9               	rrf	___xxtofl@exp,f
  8882  1F1A                     l3281:
  8883  1F1A  0879               	movf	___xxtofl@exp,w
  8884  1F1B  00F4               	movwf	??___xxtofl
  8885  1F1C  01F5               	clrf	??___xxtofl+1
  8886  1F1D  01F6               	clrf	??___xxtofl+2
  8887  1F1E  01F7               	clrf	??___xxtofl+3
  8888  1F1F  3018               	movlw	24
  8889  1F20                     u5265:
  8890  1F20  1003               	clrc
  8891  1F21  0DF4               	rlf	??___xxtofl,f
  8892  1F22  0DF5               	rlf	??___xxtofl+1,f
  8893  1F23  0DF6               	rlf	??___xxtofl+2,f
  8894  1F24  0DF7               	rlf	??___xxtofl+3,f
  8895  1F25                     u5260:
  8896  1F25  3EFF               	addlw	-1
  8897  1F26  1D03               	skipz
  8898  1F27  2F20               	goto	u5265
  8899  1F28  0874               	movf	??___xxtofl,w
  8900  1F29  04FA               	iorwf	___xxtofl@arg,f
  8901  1F2A  0875               	movf	??___xxtofl+1,w
  8902  1F2B  04FB               	iorwf	___xxtofl@arg+1,f
  8903  1F2C  0876               	movf	??___xxtofl+2,w
  8904  1F2D  04FC               	iorwf	___xxtofl@arg+2,f
  8905  1F2E  0877               	movf	??___xxtofl+3,w
  8906  1F2F  04FD               	iorwf	___xxtofl@arg+3,f
  8907  1F30                     l3283:
  8908  1F30  0878               	movf	___xxtofl@sign,w
  8909  1F31  1903               	btfsc	3,2
  8910  1F32  2F34               	goto	u5271
  8911  1F33  2F35               	goto	u5270
  8912  1F34                     u5271:
  8913  1F34  2F3A               	goto	l3289
  8914  1F35                     u5270:
  8915  1F35                     l3285:
  8916  1F35  1FF3               	btfss	___xxtofl@val+3,7
  8917  1F36  2F38               	goto	u5281
  8918  1F37  2F39               	goto	u5280
  8919  1F38                     u5281:
  8920  1F38  2F3A               	goto	l3289
  8921  1F39                     u5280:
  8922  1F39                     l3287:
  8923  1F39  17FD               	bsf	___xxtofl@arg+3,7
  8924  1F3A                     l3289:
  8925  1F3A  087D               	movf	___xxtofl@arg+3,w
  8926  1F3B  00F3               	movwf	?___xxtofl+3
  8927  1F3C  087C               	movf	___xxtofl@arg+2,w
  8928  1F3D  00F2               	movwf	?___xxtofl+2
  8929  1F3E  087B               	movf	___xxtofl@arg+1,w
  8930  1F3F  00F1               	movwf	?___xxtofl+1
  8931  1F40  087A               	movf	___xxtofl@arg,w
  8932  1F41  00F0               	movwf	?___xxtofl
  8933  1F42                     l895:
  8934  1F42  0008               	return
  8935  1F43                     __end_of___xxtofl:
  8936                           
  8937                           	psect	text31
  8938  1931                     __ptext31:	
  8939 ;; *************** function _OSCILADOR *****************
  8940 ;; Defined at:
  8941 ;;		line 129 in file "main.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;		None
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;		None
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      void 
  8948 ;; Registers used:
  8949 ;;		wreg
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8955 ;;      Params:         0       0       0       0       0
  8956 ;;      Locals:         0       0       0       0       0
  8957 ;;      Temps:          0       0       0       0       0
  8958 ;;      Totals:         0       0       0       0       0
  8959 ;;Total ram usage:        0 bytes
  8960 ;; Hardware stack levels used:    1
  8961 ;; This function calls:
  8962 ;;		Nothing
  8963 ;; This function is called by:
  8964 ;;		_main
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           
  8969                           ;psect for function _OSCILADOR
  8970  1931                     _OSCILADOR:
  8971  1931                     l3373:	
  8972                           ;incstack = 0
  8973                           ; Regs used in _OSCILADOR: [wreg]
  8974                           
  8975                           
  8976                           ;main.c: 130:     OSCCON = 0b01110001;
  8977  1931  3071               	movlw	113
  8978  1932  1683               	bsf	3,5	;RP0=1, select bank1
  8979  1933  1303               	bcf	3,6	;RP1=0, select bank1
  8980  1934  008F               	movwf	15	;volatile
  8981  1935                     l178:
  8982  1935  0008               	return
  8983  1936                     __end_of_OSCILADOR:
  8984                           
  8985                           	psect	text32
  8986  1B6F                     __ptext32:	
  8987 ;; *************** function _Lcd_Write_String *****************
  8988 ;; Defined at:
  8989 ;;		line 126 in file "./LIB_LCD.h"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;  a               2    3[COMMON] PTR unsigned char 
  8992 ;;		 -> data(20), STR_1(13), 
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;  i               2    8[COMMON] int 
  8995 ;; Return value:  Size  Location     Type
  8996 ;;                  1    wreg      void 
  8997 ;; Registers used:
  8998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9004 ;;      Params:         2       0       0       0       0
  9005 ;;      Locals:         2       0       0       0       0
  9006 ;;      Temps:          3       0       0       0       0
  9007 ;;      Totals:         7       0       0       0       0
  9008 ;;Total ram usage:        7 bytes
  9009 ;; Hardware stack levels used:    1
  9010 ;; Hardware stack levels required when called:    2
  9011 ;; This function calls:
  9012 ;;		_LCD_CMD
  9013 ;; This function is called by:
  9014 ;;		_main
  9015 ;; This function uses a non-reentrant model
  9016 ;;
  9017                           
  9018                           
  9019                           ;psect for function _Lcd_Write_String
  9020  1B6F                     _Lcd_Write_String:
  9021  1B6F                     l3331:	
  9022                           ;incstack = 0
  9023                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9024                           
  9025                           
  9026                           ;./LIB_LCD.h: 127:  int i;;./LIB_LCD.h: 128:  for(i=0;a[i]!='\0';i++)
  9027  1B6F  01F8               	clrf	Lcd_Write_String@i
  9028  1B70  01F9               	clrf	Lcd_Write_String@i+1
  9029  1B71  2B94               	goto	l3337
  9030  1B72                     l3333:
  9031                           
  9032                           ;./LIB_LCD.h: 129:     LCD_CMD(a[i]);
  9033  1B72  0878               	movf	Lcd_Write_String@i,w
  9034  1B73  0773               	addwf	Lcd_Write_String@a,w
  9035  1B74  00F6               	movwf	??_Lcd_Write_String+1
  9036  1B75  0874               	movf	Lcd_Write_String@a+1,w
  9037  1B76  00F5               	movwf	??_Lcd_Write_String
  9038  1B77  1803               	skipnc
  9039  1B78  0AF5               	incf	??_Lcd_Write_String,f
  9040  1B79  1FF8               	btfss	Lcd_Write_String@i,7
  9041  1B7A  2B7C               	goto	u5310
  9042  1B7B  03F5               	decf	??_Lcd_Write_String,f
  9043  1B7C                     u5310:
  9044  1B7C  0875               	movf	??_Lcd_Write_String,w
  9045  1B7D  00F7               	movwf	??_Lcd_Write_String+2
  9046  1B7E  0877               	movf	??_Lcd_Write_String+2,w
  9047  1B7F  1283               	bcf	3,5	;RP0=0, select bank0
  9048  1B80  1303               	bcf	3,6	;RP1=0, select bank0
  9049  1B81  00FF               	movwf	btemp+1
  9050  1B82  0876               	movf	??_Lcd_Write_String+1,w
  9051  1B83  0084               	movwf	4
  9052  1B84  120A  118A  2003  160A  158A  	fcall	stringtab
  9053  1B89  160A  158A  21A3  160A  158A  	fcall	_LCD_CMD
  9054  1B8E                     l3335:
  9055  1B8E  3001               	movlw	1
  9056  1B8F  07F8               	addwf	Lcd_Write_String@i,f
  9057  1B90  1803               	skipnc
  9058  1B91  0AF9               	incf	Lcd_Write_String@i+1,f
  9059  1B92  3000               	movlw	0
  9060  1B93  07F9               	addwf	Lcd_Write_String@i+1,f
  9061  1B94                     l3337:
  9062  1B94  0878               	movf	Lcd_Write_String@i,w
  9063  1B95  0773               	addwf	Lcd_Write_String@a,w
  9064  1B96  00F6               	movwf	??_Lcd_Write_String+1
  9065  1B97  0874               	movf	Lcd_Write_String@a+1,w
  9066  1B98  00F5               	movwf	??_Lcd_Write_String
  9067  1B99  1803               	skipnc
  9068  1B9A  0AF5               	incf	??_Lcd_Write_String,f
  9069  1B9B  1FF8               	btfss	Lcd_Write_String@i,7
  9070  1B9C  2B9E               	goto	u5320
  9071  1B9D  03F5               	decf	??_Lcd_Write_String,f
  9072  1B9E                     u5320:
  9073  1B9E  0875               	movf	??_Lcd_Write_String,w
  9074  1B9F  00F7               	movwf	??_Lcd_Write_String+2
  9075  1BA0  0877               	movf	??_Lcd_Write_String+2,w
  9076  1BA1  1283               	bcf	3,5	;RP0=0, select bank0
  9077  1BA2  1303               	bcf	3,6	;RP1=0, select bank0
  9078  1BA3  00FF               	movwf	btemp+1
  9079  1BA4  0876               	movf	??_Lcd_Write_String+1,w
  9080  1BA5  0084               	movwf	4
  9081  1BA6  120A  118A  2003  160A  158A  	fcall	stringtab
  9082  1BAB  3A00               	xorlw	0
  9083  1BAC  1D03               	skipz
  9084  1BAD  2BAF               	goto	u5331
  9085  1BAE  2BB0               	goto	u5330
  9086  1BAF                     u5331:
  9087  1BAF  2B72               	goto	l3333
  9088  1BB0                     u5330:
  9089  1BB0                     l125:
  9090  1BB0  0008               	return
  9091  1BB1                     __end_of_Lcd_Write_String:
  9092                           
  9093                           	psect	text33
  9094  19A3                     __ptext33:	
  9095 ;; *************** function _LCD_CMD *****************
  9096 ;; Defined at:
  9097 ;;		line 70 in file "./LIB_LCD.h"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;  a               1    wreg     unsigned char 
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;  a               1    2[COMMON] unsigned char 
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  1    wreg      void 
  9104 ;; Registers used:
  9105 ;;		wreg, status,2, status,0, pclath, cstack
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9111 ;;      Params:         0       0       0       0       0
  9112 ;;      Locals:         1       0       0       0       0
  9113 ;;      Temps:          1       0       0       0       0
  9114 ;;      Totals:         2       0       0       0       0
  9115 ;;Total ram usage:        2 bytes
  9116 ;; Hardware stack levels used:    1
  9117 ;; Hardware stack levels required when called:    1
  9118 ;; This function calls:
  9119 ;;		_Puerto
  9120 ;; This function is called by:
  9121 ;;		_Lcd_Write_String
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           
  9126                           ;psect for function _LCD_CMD
  9127  19A3                     _LCD_CMD:
  9128                           
  9129                           ;incstack = 0
  9130                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  9131                           ;LCD_CMD@a stored from wreg
  9132  19A3  00F2               	movwf	LCD_CMD@a
  9133  19A4                     l2885:
  9134                           
  9135                           ;./LIB_LCD.h: 71:     RE0 = 1;
  9136  19A4  1283               	bcf	3,5	;RP0=0, select bank0
  9137  19A5  1303               	bcf	3,6	;RP1=0, select bank0
  9138  19A6  1409               	bsf	9,0	;volatile
  9139  19A7                     l2887:
  9140                           
  9141                           ;./LIB_LCD.h: 72:     Puerto(a);
  9142  19A7  0872               	movf	LCD_CMD@a,w
  9143  19A8  160A  158A  2331  160A  158A  	fcall	_Puerto
  9144  19AD                     l2889:
  9145                           
  9146                           ;./LIB_LCD.h: 73:     RE1 = 1;
  9147  19AD  1283               	bcf	3,5	;RP0=0, select bank0
  9148  19AE  1303               	bcf	3,6	;RP1=0, select bank0
  9149  19AF  1489               	bsf	9,1	;volatile
  9150  19B0                     l2891:
  9151                           
  9152                           ;./LIB_LCD.h: 74:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9153  19B0  3003               	movlw	3
  9154  19B1  00F1               	movwf	??_LCD_CMD
  9155  19B2                     u5957:
  9156  19B2  0BF1               	decfsz	??_LCD_CMD,f
  9157  19B3  29B2               	goto	u5957
  9158  19B4                     l2893:
  9159                           
  9160                           ;./LIB_LCD.h: 75:     RE1 = 0;
  9161  19B4  1283               	bcf	3,5	;RP0=0, select bank0
  9162  19B5  1303               	bcf	3,6	;RP1=0, select bank0
  9163  19B6  1089               	bcf	9,1	;volatile
  9164  19B7                     l2895:
  9165                           
  9166                           ;./LIB_LCD.h: 76:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9167  19B7  3003               	movlw	3
  9168  19B8  00F1               	movwf	??_LCD_CMD
  9169  19B9                     u5967:
  9170  19B9  0BF1               	decfsz	??_LCD_CMD,f
  9171  19BA  29B9               	goto	u5967
  9172  19BB                     l2897:
  9173                           
  9174                           ;./LIB_LCD.h: 77:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  9175  19BB  3021               	movlw	33
  9176  19BC  00F1               	movwf	??_LCD_CMD
  9177  19BD                     u5977:
  9178  19BD  0BF1               	decfsz	??_LCD_CMD,f
  9179  19BE  29BD               	goto	u5977
  9180  19BF                     l104:
  9181  19BF  0008               	return
  9182  19C0                     __end_of_LCD_CMD:
  9183                           
  9184                           	psect	text34
  9185  19E2                     __ptext34:	
  9186 ;; *************** function _Lcd_Set_Cursor *****************
  9187 ;; Defined at:
  9188 ;;		line 113 in file "./LIB_LCD.h"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  x               1    wreg     unsigned char 
  9191 ;;  y               1    4[COMMON] unsigned char 
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;  x               1    6[COMMON] unsigned char 
  9194 ;;  a               1    7[COMMON] unsigned char 
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  1    wreg      void 
  9197 ;; Registers used:
  9198 ;;		wreg, status,2, status,0, pclath, cstack
  9199 ;; Tracked objects:
  9200 ;;		On entry : 0/0
  9201 ;;		On exit  : 0/0
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9204 ;;      Params:         1       0       0       0       0
  9205 ;;      Locals:         2       0       0       0       0
  9206 ;;      Temps:          1       0       0       0       0
  9207 ;;      Totals:         4       0       0       0       0
  9208 ;;Total ram usage:        4 bytes
  9209 ;; Hardware stack levels used:    1
  9210 ;; Hardware stack levels required when called:    2
  9211 ;; This function calls:
  9212 ;;		_datosLCD
  9213 ;; This function is called by:
  9214 ;;		_main
  9215 ;; This function uses a non-reentrant model
  9216 ;;
  9217                           
  9218                           
  9219                           ;psect for function _Lcd_Set_Cursor
  9220  19E2                     _Lcd_Set_Cursor:
  9221                           
  9222                           ;incstack = 0
  9223                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9224                           ;Lcd_Set_Cursor@x stored from wreg
  9225  19E2  00F6               	movwf	Lcd_Set_Cursor@x
  9226  19E3                     l3319:
  9227                           
  9228                           ;./LIB_LCD.h: 114:  uint8_t a;;./LIB_LCD.h: 115:  if(x == 1){
  9229  19E3  0376               	decf	Lcd_Set_Cursor@x,w
  9230  19E4  1D03               	btfss	3,2
  9231  19E5  29E7               	goto	u5291
  9232  19E6  29E8               	goto	u5290
  9233  19E7                     u5291:
  9234  19E7  29F4               	goto	l3325
  9235  19E8                     u5290:
  9236  19E8                     l3321:
  9237                           
  9238                           ;./LIB_LCD.h: 116:    a = 0x80 + y;
  9239  19E8  0874               	movf	Lcd_Set_Cursor@y,w
  9240  19E9  3E80               	addlw	128
  9241  19EA  00F5               	movwf	??_Lcd_Set_Cursor
  9242  19EB  0875               	movf	??_Lcd_Set_Cursor,w
  9243  19EC  00F7               	movwf	Lcd_Set_Cursor@a
  9244  19ED                     l3323:
  9245                           
  9246                           ;./LIB_LCD.h: 118:   datosLCD(a);
  9247  19ED  0877               	movf	Lcd_Set_Cursor@a,w
  9248  19EE  160A  158A  21C0  160A  158A  	fcall	_datosLCD
  9249                           
  9250                           ;./LIB_LCD.h: 119:     }
  9251  19F3  2A05               	goto	l119
  9252  19F4                     l3325:
  9253  19F4  3002               	movlw	2
  9254  19F5  0676               	xorwf	Lcd_Set_Cursor@x,w
  9255  19F6  1D03               	btfss	3,2
  9256  19F7  29F9               	goto	u5301
  9257  19F8  29FA               	goto	u5300
  9258  19F9                     u5301:
  9259  19F9  2A05               	goto	l119
  9260  19FA                     u5300:
  9261  19FA                     l3327:
  9262                           
  9263                           ;./LIB_LCD.h: 121:    a = 0xC0 + y;
  9264  19FA  0874               	movf	Lcd_Set_Cursor@y,w
  9265  19FB  3EC0               	addlw	192
  9266  19FC  00F5               	movwf	??_Lcd_Set_Cursor
  9267  19FD  0875               	movf	??_Lcd_Set_Cursor,w
  9268  19FE  00F7               	movwf	Lcd_Set_Cursor@a
  9269  19FF                     l3329:
  9270                           
  9271                           ;./LIB_LCD.h: 123:   datosLCD(a);
  9272  19FF  0877               	movf	Lcd_Set_Cursor@a,w
  9273  1A00  160A  158A  21C0  160A  158A  	fcall	_datosLCD
  9274  1A05                     l119:
  9275  1A05  0008               	return
  9276  1A06                     __end_of_Lcd_Set_Cursor:
  9277                           
  9278                           	psect	text35
  9279  1E1F                     __ptext35:	
  9280 ;; *************** function _Lcd_Init *****************
  9281 ;; Defined at:
  9282 ;;		line 93 in file "./LIB_LCD.h"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;		None
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		wreg, status,2, status,0, pclath, cstack
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9296 ;;      Params:         0       0       0       0       0
  9297 ;;      Locals:         0       0       0       0       0
  9298 ;;      Temps:          2       0       0       0       0
  9299 ;;      Totals:         2       0       0       0       0
  9300 ;;Total ram usage:        2 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; Hardware stack levels required when called:    2
  9303 ;; This function calls:
  9304 ;;		_datosLCD
  9305 ;; This function is called by:
  9306 ;;		_main
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           
  9311                           ;psect for function _Lcd_Init
  9312  1E1F                     _Lcd_Init:
  9313  1E1F                     l3295:	
  9314                           ;incstack = 0
  9315                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9316                           
  9317                           
  9318                           ;./LIB_LCD.h: 94:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9319  1E1F  3034               	movlw	52
  9320  1E20  00F5               	movwf	??_Lcd_Init+1
  9321  1E21  30F1               	movlw	241
  9322  1E22  00F4               	movwf	??_Lcd_Init
  9323  1E23                     u5987:
  9324  1E23  0BF4               	decfsz	??_Lcd_Init,f
  9325  1E24  2E23               	goto	u5987
  9326  1E25  0BF5               	decfsz	??_Lcd_Init+1,f
  9327  1E26  2E23               	goto	u5987
  9328  1E27  2E28               	nop2
  9329  1E28                     l3297:
  9330                           
  9331                           ;./LIB_LCD.h: 95:     datosLCD (0x30);
  9332  1E28  3030               	movlw	48
  9333  1E29  160A  158A  21C0  160A  158A  	fcall	_datosLCD
  9334  1E2E                     l3299:
  9335                           
  9336                           ;./LIB_LCD.h: 96:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9337  1E2E  300D               	movlw	13
  9338  1E2F  00F5               	movwf	??_Lcd_Init+1
  9339  1E30  30FB               	movlw	251
  9340  1E31  00F4               	movwf	??_Lcd_Init
  9341  1E32                     u5997:
  9342  1E32  0BF4               	decfsz	??_Lcd_Init,f
  9343  1E33  2E32               	goto	u5997
  9344  1E34  0BF5               	decfsz	??_Lcd_Init+1,f
  9345  1E35  2E32               	goto	u5997
  9346  1E36  2E37               	nop2
  9347                           
  9348                           ;./LIB_LCD.h: 97:     datosLCD (0x30);
  9349  1E37  3030               	movlw	48
  9350  1E38  160A  158A  21C0  160A  158A  	fcall	_datosLCD
  9351  1E3D                     l3301:
  9352                           
  9353                           ;./LIB_LCD.h: 98:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9354  1E3D  3042               	movlw	66
  9355  1E3E  00F4               	movwf	??_Lcd_Init
  9356  1E3F                     u6007:
  9357  1E3F  0BF4               	decfsz	??_Lcd_Init,f
  9358  1E40  2E3F               	goto	u6007
  9359  1E41  0000               	nop
  9360  1E42                     l3303:
  9361                           
  9362                           ;./LIB_LCD.h: 99:     datosLCD (0x30);
  9363  1E42  3030               	movlw	48
  9364  1E43  160A  158A  21C0  160A  158A  	fcall	_datosLCD
  9365                           
  9366                           ;./LIB_LCD.h: 100:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9367  1E48  3042               	movlw	66
  9368  1E49  00F4               	movwf	??_Lcd_Init
  9369  1E4A                     u6017:
  9370  1E4A  0BF4               	decfsz	??_Lcd_Init,f
  9371  1E4B  2E4A               	goto	u6017
  9372  1E4C  0000               	nop
  9373  1E4D                     l3305:
  9374                           
  9375                           ;./LIB_LCD.h: 101:     datosLCD (0x38);
  9376  1E4D  3038               	movlw	56
  9377  1E4E  160A  158A  21C0  160A  158A  	fcall	_datosLCD
  9378  1E53                     l3307:
  9379                           
  9380                           ;./LIB_LCD.h: 102:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9381  1E53  3027               	movlw	39
  9382  1E54  00F4               	movwf	??_Lcd_Init
  9383  1E55                     u6027:
  9384  1E55  0BF4               	decfsz	??_Lcd_Init,f
  9385  1E56  2E55               	goto	u6027
  9386  1E57  2E58               	nop2
  9387                           
  9388                           ;./LIB_LCD.h: 103:     datosLCD (0x08);
  9389  1E58  3008               	movlw	8
  9390  1E59  160A  158A  21C0  160A  158A  	fcall	_datosLCD
  9391  1E5E                     l3309:
  9392                           
  9393                           ;./LIB_LCD.h: 104:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9394  1E5E  3027               	movlw	39
  9395  1E5F  00F4               	movwf	??_Lcd_Init
  9396  1E60                     u6037:
  9397  1E60  0BF4               	decfsz	??_Lcd_Init,f
  9398  1E61  2E60               	goto	u6037
  9399  1E62  2E63               	nop2
  9400  1E63                     l3311:
  9401                           
  9402                           ;./LIB_LCD.h: 105:     datosLCD (0x01);
  9403  1E63  3001               	movlw	1
  9404  1E64  160A  158A  21C0  160A  158A  	fcall	_datosLCD
  9405                           
  9406                           ;./LIB_LCD.h: 106:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9407  1E69  300D               	movlw	13
  9408  1E6A  00F5               	movwf	??_Lcd_Init+1
  9409  1E6B  30FB               	movlw	251
  9410  1E6C  00F4               	movwf	??_Lcd_Init
  9411  1E6D                     u6047:
  9412  1E6D  0BF4               	decfsz	??_Lcd_Init,f
  9413  1E6E  2E6D               	goto	u6047
  9414  1E6F  0BF5               	decfsz	??_Lcd_Init+1,f
  9415  1E70  2E6D               	goto	u6047
  9416  1E71  2E72               	nop2
  9417  1E72                     l3313:
  9418                           
  9419                           ;./LIB_LCD.h: 107:     datosLCD (0x06);
  9420  1E72  3006               	movlw	6
  9421  1E73  160A  158A  21C0  160A  158A  	fcall	_datosLCD
  9422  1E78                     l3315:
  9423                           
  9424                           ;./LIB_LCD.h: 108:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9425  1E78  3027               	movlw	39
  9426  1E79  00F4               	movwf	??_Lcd_Init
  9427  1E7A                     u6057:
  9428  1E7A  0BF4               	decfsz	??_Lcd_Init,f
  9429  1E7B  2E7A               	goto	u6057
  9430  1E7C  2E7D               	nop2
  9431                           
  9432                           ;./LIB_LCD.h: 109:     datosLCD (0x0C);
  9433  1E7D  300C               	movlw	12
  9434  1E7E  160A  158A  21C0  160A  158A  	fcall	_datosLCD
  9435  1E83                     l3317:
  9436                           
  9437                           ;./LIB_LCD.h: 110:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9438  1E83  3027               	movlw	39
  9439  1E84  00F4               	movwf	??_Lcd_Init
  9440  1E85                     u6067:
  9441  1E85  0BF4               	decfsz	??_Lcd_Init,f
  9442  1E86  2E85               	goto	u6067
  9443  1E87  2E88               	nop2
  9444  1E88                     l113:
  9445  1E88  0008               	return
  9446  1E89                     __end_of_Lcd_Init:
  9447                           
  9448                           	psect	text36
  9449  196E                     __ptext36:	
  9450 ;; *************** function _LCD_clean *****************
  9451 ;; Defined at:
  9452 ;;		line 88 in file "./LIB_LCD.h"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;		None
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;		None
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  1    wreg      void 
  9459 ;; Registers used:
  9460 ;;		wreg, status,2, status,0, pclath, cstack
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9466 ;;      Params:         0       0       0       0       0
  9467 ;;      Locals:         0       0       0       0       0
  9468 ;;      Temps:          0       0       0       0       0
  9469 ;;      Totals:         0       0       0       0       0
  9470 ;;Total ram usage:        0 bytes
  9471 ;; Hardware stack levels used:    1
  9472 ;; Hardware stack levels required when called:    2
  9473 ;; This function calls:
  9474 ;;		_datosLCD
  9475 ;; This function is called by:
  9476 ;;		_main
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           
  9480                           
  9481                           ;psect for function _LCD_clean
  9482  196E                     _LCD_clean:
  9483  196E                     l3293:	
  9484                           ;incstack = 0
  9485                           ; Regs used in _LCD_clean: [wreg+status,2+status,0+pclath+cstack]
  9486                           
  9487                           
  9488                           ;./LIB_LCD.h: 89:     datosLCD(0);
  9489  196E  3000               	movlw	0
  9490  196F  160A  158A  21C0  160A  158A  	fcall	_datosLCD
  9491                           
  9492                           ;./LIB_LCD.h: 90:     datosLCD(1);
  9493  1974  3001               	movlw	1
  9494  1975  160A  158A  21C0  160A  158A  	fcall	_datosLCD
  9495  197A                     l110:
  9496  197A  0008               	return
  9497  197B                     __end_of_LCD_clean:
  9498                           
  9499                           	psect	text37
  9500  19C0                     __ptext37:	
  9501 ;; *************** function _datosLCD *****************
  9502 ;; Defined at:
  9503 ;;		line 79 in file "./LIB_LCD.h"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;  x               1    wreg     unsigned char 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;  x               1    3[COMMON] unsigned char 
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      void 
  9510 ;; Registers used:
  9511 ;;		wreg, status,2, status,0, pclath, cstack
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9517 ;;      Params:         0       0       0       0       0
  9518 ;;      Locals:         1       0       0       0       0
  9519 ;;      Temps:          2       0       0       0       0
  9520 ;;      Totals:         3       0       0       0       0
  9521 ;;Total ram usage:        3 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; Hardware stack levels required when called:    1
  9524 ;; This function calls:
  9525 ;;		_Puerto
  9526 ;; This function is called by:
  9527 ;;		_LCD_clean
  9528 ;;		_Lcd_Init
  9529 ;;		_Lcd_Set_Cursor
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533                           
  9534                           ;psect for function _datosLCD
  9535  19C0                     _datosLCD:
  9536                           
  9537                           ;incstack = 0
  9538                           ; Regs used in _datosLCD: [wreg+status,2+status,0+pclath+cstack]
  9539                           ;datosLCD@x stored from wreg
  9540  19C0  00F3               	movwf	datosLCD@x
  9541  19C1                     l2899:
  9542                           
  9543                           ;./LIB_LCD.h: 80:     RE0 = 0;
  9544  19C1  1283               	bcf	3,5	;RP0=0, select bank0
  9545  19C2  1303               	bcf	3,6	;RP1=0, select bank0
  9546  19C3  1009               	bcf	9,0	;volatile
  9547  19C4                     l2901:
  9548                           
  9549                           ;./LIB_LCD.h: 81:     Puerto(x);
  9550  19C4  0873               	movf	datosLCD@x,w
  9551  19C5  160A  158A  2331  160A  158A  	fcall	_Puerto
  9552  19CA                     l2903:
  9553                           
  9554                           ;./LIB_LCD.h: 82:     RE1 = 1;
  9555  19CA  1283               	bcf	3,5	;RP0=0, select bank0
  9556  19CB  1303               	bcf	3,6	;RP1=0, select bank0
  9557  19CC  1489               	bsf	9,1	;volatile
  9558  19CD                     l2905:
  9559                           
  9560                           ;./LIB_LCD.h: 83:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9561  19CD  3003               	movlw	3
  9562  19CE  00F1               	movwf	??_datosLCD
  9563  19CF                     u6077:
  9564  19CF  0BF1               	decfsz	??_datosLCD,f
  9565  19D0  29CF               	goto	u6077
  9566  19D1                     l2907:
  9567                           
  9568                           ;./LIB_LCD.h: 84:     RE1 = 0;
  9569  19D1  1283               	bcf	3,5	;RP0=0, select bank0
  9570  19D2  1303               	bcf	3,6	;RP1=0, select bank0
  9571  19D3  1089               	bcf	9,1	;volatile
  9572  19D4                     l2909:
  9573                           
  9574                           ;./LIB_LCD.h: 85:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9575  19D4  3003               	movlw	3
  9576  19D5  00F1               	movwf	??_datosLCD
  9577  19D6                     u6087:
  9578  19D6  0BF1               	decfsz	??_datosLCD,f
  9579  19D7  29D6               	goto	u6087
  9580  19D8                     l2911:
  9581                           
  9582                           ;./LIB_LCD.h: 86:     _delay((unsigned long)((2)*(8000000/4000.0)));
  9583  19D8  3006               	movlw	6
  9584  19D9  00F2               	movwf	??_datosLCD+1
  9585  19DA  3030               	movlw	48
  9586  19DB  00F1               	movwf	??_datosLCD
  9587  19DC                     u6097:
  9588  19DC  0BF1               	decfsz	??_datosLCD,f
  9589  19DD  29DC               	goto	u6097
  9590  19DE  0BF2               	decfsz	??_datosLCD+1,f
  9591  19DF  29DC               	goto	u6097
  9592  19E0  0000               	nop
  9593  19E1                     l107:
  9594  19E1  0008               	return
  9595  19E2                     __end_of_datosLCD:
  9596                           
  9597                           	psect	text38
  9598  1B31                     __ptext38:	
  9599 ;; *************** function _Puerto *****************
  9600 ;; Defined at:
  9601 ;;		line 59 in file "./LIB_LCD.h"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;  x               1    wreg     unsigned char 
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;  x               1    0[COMMON] unsigned char 
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  1    wreg      void 
  9608 ;; Registers used:
  9609 ;;		wreg
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9615 ;;      Params:         0       0       0       0       0
  9616 ;;      Locals:         1       0       0       0       0
  9617 ;;      Temps:          0       0       0       0       0
  9618 ;;      Totals:         1       0       0       0       0
  9619 ;;Total ram usage:        1 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; This function calls:
  9622 ;;		Nothing
  9623 ;; This function is called by:
  9624 ;;		_LCD_CMD
  9625 ;;		_datosLCD
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           
  9630                           ;psect for function _Puerto
  9631  1B31                     _Puerto:
  9632                           
  9633                           ;incstack = 0
  9634                           ; Regs used in _Puerto: [wreg]
  9635                           ;Puerto@x stored from wreg
  9636  1B31  00F0               	movwf	Puerto@x
  9637  1B32                     l2401:
  9638                           
  9639                           ;./LIB_LCD.h: 60:  if(x & 1){RD0 = 1;}else{RD0 = 0;}
  9640  1B32  1C70               	btfss	Puerto@x,0
  9641  1B33  2B35               	goto	u2981
  9642  1B34  2B36               	goto	u2980
  9643  1B35                     u2981:
  9644  1B35  2B3A               	goto	l85
  9645  1B36                     u2980:
  9646  1B36                     l2403:
  9647  1B36  1283               	bcf	3,5	;RP0=0, select bank0
  9648  1B37  1303               	bcf	3,6	;RP1=0, select bank0
  9649  1B38  1408               	bsf	8,0	;volatile
  9650  1B39  2B3D               	goto	l86
  9651  1B3A                     l85:
  9652  1B3A  1283               	bcf	3,5	;RP0=0, select bank0
  9653  1B3B  1303               	bcf	3,6	;RP1=0, select bank0
  9654  1B3C  1008               	bcf	8,0	;volatile
  9655  1B3D                     l86:
  9656                           
  9657                           ;./LIB_LCD.h: 61:     if(x & 2){RD1 = 1;}else{RD1 = 0;}
  9658  1B3D  1CF0               	btfss	Puerto@x,1
  9659  1B3E  2B40               	goto	u2991
  9660  1B3F  2B41               	goto	u2990
  9661  1B40                     u2991:
  9662  1B40  2B43               	goto	l87
  9663  1B41                     u2990:
  9664  1B41                     l2405:
  9665  1B41  1488               	bsf	8,1	;volatile
  9666  1B42  2B44               	goto	l88
  9667  1B43                     l87:
  9668  1B43  1088               	bcf	8,1	;volatile
  9669  1B44                     l88:
  9670                           
  9671                           ;./LIB_LCD.h: 62:     if(x & 4){RD2 = 1;}else{RD2 = 0;}
  9672  1B44  1D70               	btfss	Puerto@x,2
  9673  1B45  2B47               	goto	u3001
  9674  1B46  2B48               	goto	u3000
  9675  1B47                     u3001:
  9676  1B47  2B4A               	goto	l89
  9677  1B48                     u3000:
  9678  1B48                     l2407:
  9679  1B48  1508               	bsf	8,2	;volatile
  9680  1B49  2B4B               	goto	l90
  9681  1B4A                     l89:
  9682  1B4A  1108               	bcf	8,2	;volatile
  9683  1B4B                     l90:
  9684                           
  9685                           ;./LIB_LCD.h: 63:     if(x & 8){RD3 = 1;}else{RD3 = 0;}
  9686  1B4B  1DF0               	btfss	Puerto@x,3
  9687  1B4C  2B4E               	goto	u3011
  9688  1B4D  2B4F               	goto	u3010
  9689  1B4E                     u3011:
  9690  1B4E  2B51               	goto	l91
  9691  1B4F                     u3010:
  9692  1B4F                     l2409:
  9693  1B4F  1588               	bsf	8,3	;volatile
  9694  1B50  2B52               	goto	l92
  9695  1B51                     l91:
  9696  1B51  1188               	bcf	8,3	;volatile
  9697  1B52                     l92:
  9698                           
  9699                           ;./LIB_LCD.h: 64:     if(x & 16){RD4 = 1;}else{RD4 = 0;}
  9700  1B52  1E70               	btfss	Puerto@x,4
  9701  1B53  2B55               	goto	u3021
  9702  1B54  2B56               	goto	u3020
  9703  1B55                     u3021:
  9704  1B55  2B58               	goto	l93
  9705  1B56                     u3020:
  9706  1B56                     l2411:
  9707  1B56  1608               	bsf	8,4	;volatile
  9708  1B57  2B59               	goto	l94
  9709  1B58                     l93:
  9710  1B58  1208               	bcf	8,4	;volatile
  9711  1B59                     l94:
  9712                           
  9713                           ;./LIB_LCD.h: 65:     if(x & 32){RD5 = 1;}else{RD5 = 0;}
  9714  1B59  1EF0               	btfss	Puerto@x,5
  9715  1B5A  2B5C               	goto	u3031
  9716  1B5B  2B5D               	goto	u3030
  9717  1B5C                     u3031:
  9718  1B5C  2B5F               	goto	l95
  9719  1B5D                     u3030:
  9720  1B5D                     l2413:
  9721  1B5D  1688               	bsf	8,5	;volatile
  9722  1B5E  2B60               	goto	l96
  9723  1B5F                     l95:
  9724  1B5F  1288               	bcf	8,5	;volatile
  9725  1B60                     l96:
  9726                           
  9727                           ;./LIB_LCD.h: 66:     if(x & 64){RD6 = 1;}else{RD6 = 0;}
  9728  1B60  1F70               	btfss	Puerto@x,6
  9729  1B61  2B63               	goto	u3041
  9730  1B62  2B64               	goto	u3040
  9731  1B63                     u3041:
  9732  1B63  2B66               	goto	l97
  9733  1B64                     u3040:
  9734  1B64                     l2415:
  9735  1B64  1708               	bsf	8,6	;volatile
  9736  1B65  2B67               	goto	l98
  9737  1B66                     l97:
  9738  1B66  1308               	bcf	8,6	;volatile
  9739  1B67                     l98:
  9740                           
  9741                           ;./LIB_LCD.h: 67:     if(x & 128){RD7 = 1;}else{RD7 = 0;}
  9742  1B67  1FF0               	btfss	Puerto@x,7
  9743  1B68  2B6A               	goto	u3051
  9744  1B69  2B6B               	goto	u3050
  9745  1B6A                     u3051:
  9746  1B6A  2B6D               	goto	l99
  9747  1B6B                     u3050:
  9748  1B6B                     l2417:
  9749  1B6B  1788               	bsf	8,7	;volatile
  9750  1B6C  2B6E               	goto	l101
  9751  1B6D                     l99:
  9752  1B6D  1388               	bcf	8,7	;volatile
  9753  1B6E                     l101:
  9754  1B6E  0008               	return
  9755  1B6F                     __end_of_Puerto:
  9756                           
  9757                           	psect	text39
  9758  1AC5                     __ptext39:	
  9759 ;; *************** function _Conteo *****************
  9760 ;; Defined at:
  9761 ;;		line 146 in file "main.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;		None
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;		None
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  1    wreg      void 
  9768 ;; Registers used:
  9769 ;;		wreg, status,2, status,0, pclath, cstack
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9775 ;;      Params:         0       0       0       0       0
  9776 ;;      Locals:         0       0       0       0       0
  9777 ;;      Temps:          2       0       0       0       0
  9778 ;;      Totals:         2       0       0       0       0
  9779 ;;Total ram usage:        2 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; Hardware stack levels required when called:    2
  9782 ;; This function calls:
  9783 ;;		_spiRead
  9784 ;;		_spiWrite
  9785 ;; This function is called by:
  9786 ;;		_main
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790                           
  9791                           ;psect for function _Conteo
  9792  1AC5                     _Conteo:
  9793  1AC5                     l3375:	
  9794                           ;incstack = 0
  9795                           ; Regs used in _Conteo: [wreg+status,2+status,0+pclath+cstack]
  9796                           
  9797                           
  9798                           ;main.c: 147:     PORTCbits.RC1 = 0;
  9799  1AC5  1283               	bcf	3,5	;RP0=0, select bank0
  9800  1AC6  1303               	bcf	3,6	;RP1=0, select bank0
  9801  1AC7  1087               	bcf	7,1	;volatile
  9802  1AC8                     l3377:
  9803                           
  9804                           ;main.c: 148:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9805  1AC8  3003               	movlw	3
  9806  1AC9  00F2               	movwf	??_Conteo+1
  9807  1ACA  3097               	movlw	151
  9808  1ACB  00F1               	movwf	??_Conteo
  9809  1ACC                     u6107:
  9810  1ACC  0BF1               	decfsz	??_Conteo,f
  9811  1ACD  2ACC               	goto	u6107
  9812  1ACE  0BF2               	decfsz	??_Conteo+1,f
  9813  1ACF  2ACC               	goto	u6107
  9814  1AD0  2AD1               	nop2
  9815  1AD1                     l3379:
  9816                           
  9817                           ;main.c: 150:     spiWrite(1);
  9818  1AD1  3001               	movlw	1
  9819  1AD2  120A  158A  2000  160A  158A  	fcall	_spiWrite
  9820  1AD7                     l3381:
  9821                           
  9822                           ;main.c: 152:     cont = spiRead();
  9823  1AD7  160A  118A  2000  160A  158A  	fcall	_spiRead
  9824  1ADC  00F1               	movwf	??_Conteo
  9825  1ADD  0871               	movf	??_Conteo,w
  9826  1ADE  1683               	bsf	3,5	;RP0=1, select bank1
  9827  1ADF  1303               	bcf	3,6	;RP1=0, select bank1
  9828  1AE0  00D6               	movwf	_cont^(0+128)
  9829                           
  9830                           ;main.c: 154:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9831  1AE1  3003               	movlw	3
  9832  1AE2  00F2               	movwf	??_Conteo+1
  9833  1AE3  3097               	movlw	151
  9834  1AE4  00F1               	movwf	??_Conteo
  9835  1AE5                     u6117:
  9836  1AE5  0BF1               	decfsz	??_Conteo,f
  9837  1AE6  2AE5               	goto	u6117
  9838  1AE7  0BF2               	decfsz	??_Conteo+1,f
  9839  1AE8  2AE5               	goto	u6117
  9840  1AE9  2AEA               	nop2
  9841  1AEA                     l3383:
  9842                           
  9843                           ;main.c: 155:     PORTCbits.RC1 = 1;
  9844  1AEA  1283               	bcf	3,5	;RP0=0, select bank0
  9845  1AEB  1303               	bcf	3,6	;RP1=0, select bank0
  9846  1AEC  1487               	bsf	7,1	;volatile
  9847                           
  9848                           ;main.c: 156:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9849  1AED  3003               	movlw	3
  9850  1AEE  00F2               	movwf	??_Conteo+1
  9851  1AEF  3097               	movlw	151
  9852  1AF0  00F1               	movwf	??_Conteo
  9853  1AF1                     u6127:
  9854  1AF1  0BF1               	decfsz	??_Conteo,f
  9855  1AF2  2AF1               	goto	u6127
  9856  1AF3  0BF2               	decfsz	??_Conteo+1,f
  9857  1AF4  2AF1               	goto	u6127
  9858  1AF5  2AF6               	nop2
  9859  1AF6                     l184:
  9860  1AF6  0008               	return
  9861  1AF7                     __end_of_Conteo:
  9862                           
  9863                           	psect	text40
  9864  0800                     __ptext40:	
  9865 ;; *************** function _spiWrite *****************
  9866 ;; Defined at:
  9867 ;;		line 34 in file "SPI.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;  dat             1    wreg     unsigned char 
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;  dat             1    0[COMMON] unsigned char 
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  1    wreg      void 
  9874 ;; Registers used:
  9875 ;;		wreg
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9881 ;;      Params:         0       0       0       0       0
  9882 ;;      Locals:         1       0       0       0       0
  9883 ;;      Temps:          0       0       0       0       0
  9884 ;;      Totals:         1       0       0       0       0
  9885 ;;Total ram usage:        1 bytes
  9886 ;; Hardware stack levels used:    1
  9887 ;; This function calls:
  9888 ;;		Nothing
  9889 ;; This function is called by:
  9890 ;;		_leer_ADC
  9891 ;;		_Conteo
  9892 ;;		_Sensor
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           
  9897                           ;psect for function _spiWrite
  9898  0800                     _spiWrite:
  9899                           
  9900                           ;incstack = 0
  9901                           ; Regs used in _spiWrite: [wreg]
  9902                           ;spiWrite@dat stored from wreg
  9903  0800  00F0               	movwf	spiWrite@dat
  9904  0801                     l2927:
  9905                           
  9906                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  9907  0801  0870               	movf	spiWrite@dat,w
  9908  0802  1283               	bcf	3,5	;RP0=0, select bank0
  9909  0803  1303               	bcf	3,6	;RP1=0, select bank0
  9910  0804  0093               	movwf	19	;volatile
  9911  0805                     l213:
  9912  0805  0008               	return
  9913  0806                     __end_of_spiWrite:
  9914                           
  9915                           	psect	text41
  9916  1000                     __ptext41:	
  9917 ;; *************** function _spiRead *****************
  9918 ;; Defined at:
  9919 ;;		line 47 in file "SPI.c"
  9920 ;; Parameters:    Size  Location     Type
  9921 ;;		None
  9922 ;; Auto vars:     Size  Location     Type
  9923 ;;		None
  9924 ;; Return value:  Size  Location     Type
  9925 ;;                  1    wreg      unsigned char 
  9926 ;; Registers used:
  9927 ;;		wreg, status,2, status,0, pclath, cstack
  9928 ;; Tracked objects:
  9929 ;;		On entry : 0/0
  9930 ;;		On exit  : 0/0
  9931 ;;		Unchanged: 0/0
  9932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9933 ;;      Params:         0       0       0       0       0
  9934 ;;      Locals:         0       0       0       0       0
  9935 ;;      Temps:          0       0       0       0       0
  9936 ;;      Totals:         0       0       0       0       0
  9937 ;;Total ram usage:        0 bytes
  9938 ;; Hardware stack levels used:    1
  9939 ;; Hardware stack levels required when called:    1
  9940 ;; This function calls:
  9941 ;;		_spiReceiveWait
  9942 ;; This function is called by:
  9943 ;;		_leer_ADC
  9944 ;;		_Conteo
  9945 ;;		_Sensor
  9946 ;; This function uses a non-reentrant model
  9947 ;;
  9948                           
  9949                           
  9950                           ;psect for function _spiRead
  9951  1000                     _spiRead:
  9952  1000                     l2929:	
  9953                           ;incstack = 0
  9954                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9955                           
  9956                           
  9957                           ;SPI.c: 49:     spiReceiveWait();
  9958  1000  160A  158A  2136  160A  118A  	fcall	_spiReceiveWait
  9959  1005                     l2931:
  9960                           
  9961                           ;SPI.c: 50:     return(SSPBUF);
  9962  1005  1283               	bcf	3,5	;RP0=0, select bank0
  9963  1006  1303               	bcf	3,6	;RP1=0, select bank0
  9964  1007  0813               	movf	19,w	;volatile
  9965  1008                     l221:
  9966  1008  0008               	return
  9967  1009                     __end_of_spiRead:
  9968                           
  9969                           	psect	text42
  9970  1936                     __ptext42:	
  9971 ;; *************** function _spiReceiveWait *****************
  9972 ;; Defined at:
  9973 ;;		line 29 in file "SPI.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;		None
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;		None
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  1    wreg      void 
  9980 ;; Registers used:
  9981 ;;		None
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/0
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9987 ;;      Params:         0       0       0       0       0
  9988 ;;      Locals:         0       0       0       0       0
  9989 ;;      Temps:          0       0       0       0       0
  9990 ;;      Totals:         0       0       0       0       0
  9991 ;;Total ram usage:        0 bytes
  9992 ;; Hardware stack levels used:    1
  9993 ;; This function calls:
  9994 ;;		Nothing
  9995 ;; This function is called by:
  9996 ;;		_spiRead
  9997 ;; This function uses a non-reentrant model
  9998 ;;
  9999                           
 10000                           
 10001                           ;psect for function _spiReceiveWait
 10002  1936                     _spiReceiveWait:
 10003  1936                     l2419:	
 10004                           ;incstack = 0
 10005                           ; Regs used in _spiReceiveWait: []
 10006                           
 10007  1936                     l207:	
 10008                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
 10009                           
 10010  1936  1683               	bsf	3,5	;RP0=1, select bank1
 10011  1937  1303               	bcf	3,6	;RP1=0, select bank1
 10012  1938  1C14               	btfss	20,0	;volatile
 10013  1939  293B               	goto	u3061
 10014  193A  293C               	goto	u3060
 10015  193B                     u3061:
 10016  193B  2936               	goto	l207
 10017  193C                     u3060:
 10018  193C                     l210:
 10019  193C  0008               	return
 10020  193D                     __end_of_spiReceiveWait:
 10021                           
 10022                           	psect	text43
 10023  192C                     __ptext43:	
 10024 ;; *************** function _Baudios *****************
 10025 ;; Defined at:
 10026 ;;		line 16 in file "./LIB_USART.h"
 10027 ;; Parameters:    Size  Location     Type
 10028 ;;		None
 10029 ;; Auto vars:     Size  Location     Type
 10030 ;;		None
 10031 ;; Return value:  Size  Location     Type
 10032 ;;                  1    wreg      void 
 10033 ;; Registers used:
 10034 ;;		wreg
 10035 ;; Tracked objects:
 10036 ;;		On entry : 0/0
 10037 ;;		On exit  : 0/0
 10038 ;;		Unchanged: 0/0
 10039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10040 ;;      Params:         0       0       0       0       0
 10041 ;;      Locals:         0       0       0       0       0
 10042 ;;      Temps:          0       0       0       0       0
 10043 ;;      Totals:         0       0       0       0       0
 10044 ;;Total ram usage:        0 bytes
 10045 ;; Hardware stack levels used:    1
 10046 ;; This function calls:
 10047 ;;		Nothing
 10048 ;; This function is called by:
 10049 ;;		_main
 10050 ;; This function uses a non-reentrant model
 10051 ;;
 10052                           
 10053                           
 10054                           ;psect for function _Baudios
 10055  192C                     _Baudios:
 10056  192C                     l3339:	
 10057                           ;incstack = 0
 10058                           ; Regs used in _Baudios: [wreg]
 10059                           
 10060                           
 10061                           ;./LIB_USART.h: 17:     SPBRG = 12;
 10062  192C  300C               	movlw	12
 10063  192D  1683               	bsf	3,5	;RP0=1, select bank1
 10064  192E  1303               	bcf	3,6	;RP1=0, select bank1
 10065  192F  0099               	movwf	25	;volatile
 10066  1930                     l128:
 10067  1930  0008               	return
 10068  1931                     __end_of_Baudios:
 10069  007E                     btemp	set	126	;btemp
 10070  007E                     wtemp0	set	126
 10071                           
 10072                           	psect	config
 10073                           
 10074                           ;Config register CONFIG1 @ 0x2007
 10075                           ;	Oscillator Selection bits
 10076                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 10077                           ;	Watchdog Timer Enable bit
 10078                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10079                           ;	Power-up Timer Enable bit
 10080                           ;	PWRTE = OFF, PWRT disabled
 10081                           ;	RE3/MCLR pin function select bit
 10082                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10083                           ;	Code Protection bit
 10084                           ;	CP = OFF, Program memory code protection is disabled
 10085                           ;	Data Code Protection bit
 10086                           ;	CPD = OFF, Data memory code protection is disabled
 10087                           ;	Brown Out Reset Selection bits
 10088                           ;	BOREN = OFF, BOR disabled
 10089                           ;	Internal External Switchover bit
 10090                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10091                           ;	Fail-Safe Clock Monitor Enabled bit
 10092                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10093                           ;	Low Voltage Programming Enable bit
 10094                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10095                           ;	In-Circuit Debugger Mode bit
 10096                           ;	DEBUG = 0x1, unprogrammed default
 10097  2007                     	org	8199
 10098  2007  20D1               	dw	8401
 10099                           
 10100                           ;Config register CONFIG2 @ 0x2008
 10101                           ;	Brown-out Reset Selection bit
 10102                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10103                           ;	Flash Program Memory Self Write Enable bits
 10104                           ;	WRT = OFF, Write protection off
 10105  2008                     	org	8200
 10106  2008  3FFF               	dw	16383
 10107                           
 10108                           	psect	text1_split_1
 10109  01E9                     u5480:
 10110  01E9                     l3503:
 10111  01E9  1683               	bsf	3,5	;RP0=1, select bank1
 10112  01EA  1303               	bcf	3,6	;RP1=0, select bank1
 10113  01EB  0846               	movf	(sprintf@fval+3)^(0+128),w
 10114  01EC  00F3               	movwf	___fleq@ff1+3
 10115  01ED  0845               	movf	(sprintf@fval+2)^(0+128),w
 10116  01EE  00F2               	movwf	___fleq@ff1+2
 10117  01EF  0844               	movf	(sprintf@fval+1)^(0+128),w
 10118  01F0  00F1               	movwf	___fleq@ff1+1
 10119  01F1  0843               	movf	sprintf@fval^(0+128),w
 10120  01F2  00F0               	movwf	___fleq@ff1
 10121  01F3  3000               	movlw	0
 10122  01F4  00F7               	movwf	___fleq@ff2+3
 10123  01F5  3000               	movlw	0
 10124  01F6  00F6               	movwf	___fleq@ff2+2
 10125  01F7  3000               	movlw	0
 10126  01F8  00F5               	movwf	___fleq@ff2+1
 10127  01F9  3000               	movlw	0
 10128  01FA  00F4               	movwf	___fleq@ff2
 10129  01FB  160A  158A  2443  120A  118A  	fcall	___fleq
 10130  0200  1803               	btfsc	3,0
 10131  0201  2A03               	goto	u5491
 10132  0202  2A04               	goto	u5490
 10133  0203                     u5491:
 10134  0203  2AAC               	goto	l3523
 10135  0204                     u5490:
 10136  0204                     l3505:
 10137  0204  1683               	bsf	3,5	;RP0=1, select bank1
 10138  0205  1303               	bcf	3,6	;RP1=0, select bank1
 10139  0206  0846               	movf	(sprintf@fval+3)^(0+128),w
 10140  0207  1283               	bcf	3,5	;RP0=0, select bank0
 10141  0208  1303               	bcf	3,6	;RP1=0, select bank0
 10142  0209  00D4               	movwf	___fltol@f1+3
 10143  020A  1683               	bsf	3,5	;RP0=1, select bank1
 10144  020B  1303               	bcf	3,6	;RP1=0, select bank1
 10145  020C  0845               	movf	(sprintf@fval+2)^(0+128),w
 10146  020D  1283               	bcf	3,5	;RP0=0, select bank0
 10147  020E  1303               	bcf	3,6	;RP1=0, select bank0
 10148  020F  00D3               	movwf	___fltol@f1+2
 10149  0210  1683               	bsf	3,5	;RP0=1, select bank1
 10150  0211  1303               	bcf	3,6	;RP1=0, select bank1
 10151  0212  0844               	movf	(sprintf@fval+1)^(0+128),w
 10152  0213  1283               	bcf	3,5	;RP0=0, select bank0
 10153  0214  1303               	bcf	3,6	;RP1=0, select bank0
 10154  0215  00D2               	movwf	___fltol@f1+1
 10155  0216  1683               	bsf	3,5	;RP0=1, select bank1
 10156  0217  1303               	bcf	3,6	;RP1=0, select bank1
 10157  0218  0843               	movf	sprintf@fval^(0+128),w
 10158  0219  1283               	bcf	3,5	;RP0=0, select bank0
 10159  021A  1303               	bcf	3,6	;RP1=0, select bank0
 10160  021B  00D1               	movwf	___fltol@f1
 10161  021C  120A  158A  2006  120A  118A  	fcall	___fltol
 10162  0221  1283               	bcf	3,5	;RP0=0, select bank0
 10163  0222  1303               	bcf	3,6	;RP1=0, select bank0
 10164  0223  0854               	movf	?___fltol+3,w
 10165  0224  0453               	iorwf	?___fltol+2,w
 10166  0225  0452               	iorwf	?___fltol+1,w
 10167  0226  0451               	iorwf	?___fltol,w
 10168  0227  1D03               	skipz
 10169  0228  2A2A               	goto	u5501
 10170  0229  2A2B               	goto	u5500
 10171  022A                     u5501:
 10172  022A  2AAC               	goto	l3523
 10173  022B                     u5500:
 10174  022B                     l3507:
 10175  022B  1683               	bsf	3,5	;RP0=1, select bank1
 10176  022C  1303               	bcf	3,6	;RP1=0, select bank1
 10177  022D  0842               	movf	(sprintf@eexp+1)^(0+128),w
 10178  022E  3A80               	xorlw	128
 10179  022F  00FF               	movwf	btemp+1
 10180  0230  3080               	movlw	128
 10181  0231  027F               	subwf	btemp+1,w
 10182  0232  1D03               	skipz
 10183  0233  2A36               	goto	u5515
 10184  0234  3002               	movlw	2
 10185  0235  0241               	subwf	sprintf@eexp^(0+128),w
 10186  0236                     u5515:
 10187  0236  1C03               	skipc
 10188  0237  2A39               	goto	u5511
 10189  0238  2A3A               	goto	u5510
 10190  0239                     u5511:
 10191  0239  2AAC               	goto	l3523
 10192  023A                     u5510:
 10193  023A                     l3509:
 10194                           
 10195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10196  023A  1683               	bsf	3,5	;RP0=1, select bank1
 10197  023B  1303               	bcf	3,6	;RP1=0, select bank1
 10198  023C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
 10199  023D  00F3               	movwf	___flge@ff1+3
 10200  023E  083B               	movf	(sprintf@tmpval+2)^(0+128),w
 10201  023F  00F2               	movwf	___flge@ff1+2
 10202  0240  083A               	movf	(sprintf@tmpval+1)^(0+128),w
 10203  0241  00F1               	movwf	___flge@ff1+1
 10204  0242  0839               	movf	sprintf@tmpval^(0+128),w
 10205  0243  00F0               	movwf	___flge@ff1
 10206  0244  3040               	movlw	64
 10207  0245  00F7               	movwf	___flge@ff2+3
 10208  0246  3089               	movlw	137
 10209  0247  00F6               	movwf	___flge@ff2+2
 10210  0248  3070               	movlw	112
 10211  0249  00F5               	movwf	___flge@ff2+1
 10212  024A  305F               	movlw	95
 10213  024B  00F4               	movwf	___flge@ff2
 10214  024C  160A  118A  2009  120A  118A  	fcall	___flge
 10215  0251  1803               	btfsc	3,0
 10216  0252  2A54               	goto	u5521
 10217  0253  2A55               	goto	u5520
 10218  0254                     u5521:
 10219  0254  2A5E               	goto	l3513
 10220  0255                     u5520:
 10221  0255                     l3511:
 10222                           
 10223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10224  0255  30F7               	movlw	247
 10225  0256  1683               	bsf	3,5	;RP0=1, select bank1
 10226  0257  1303               	bcf	3,6	;RP1=0, select bank1
 10227  0258  07C1               	addwf	sprintf@eexp^(0+128),f
 10228  0259  1803               	skipnc
 10229  025A  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
 10230  025B  30FF               	movlw	255
 10231  025C  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
 10232                           
 10233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10234  025D  2A66               	goto	l3515
 10235  025E                     l3513:
 10236                           
 10237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10238  025E  30F8               	movlw	248
 10239  025F  1683               	bsf	3,5	;RP0=1, select bank1
 10240  0260  1303               	bcf	3,6	;RP1=0, select bank1
 10241  0261  07C1               	addwf	sprintf@eexp^(0+128),f
 10242  0262  1803               	skipnc
 10243  0263  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
 10244  0264  30FF               	movlw	255
 10245  0265  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
 10246  0266                     l3515:
 10247                           
 10248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10249  0266  0841               	movf	sprintf@eexp^(0+128),w
 10250  0267  120A  158A  2140  120A  118A  	fcall	_scale
 10251  026C  1283               	bcf	3,5	;RP0=0, select bank0
 10252  026D  1303               	bcf	3,6	;RP1=0, select bank0
 10253  026E  0841               	movf	?_scale+3,w
 10254  026F  1683               	bsf	3,5	;RP0=1, select bank1
 10255  0270  1303               	bcf	3,6	;RP1=0, select bank1
 10256  0271  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 10257  0272  1283               	bcf	3,5	;RP0=0, select bank0
 10258  0273  1303               	bcf	3,6	;RP1=0, select bank0
 10259  0274  0840               	movf	?_scale+2,w
 10260  0275  1683               	bsf	3,5	;RP0=1, select bank1
 10261  0276  1303               	bcf	3,6	;RP1=0, select bank1
 10262  0277  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 10263  0278  1283               	bcf	3,5	;RP0=0, select bank0
 10264  0279  1303               	bcf	3,6	;RP1=0, select bank0
 10265  027A  083F               	movf	?_scale+1,w
 10266  027B  1683               	bsf	3,5	;RP0=1, select bank1
 10267  027C  1303               	bcf	3,6	;RP1=0, select bank1
 10268  027D  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 10269  027E  1283               	bcf	3,5	;RP0=0, select bank0
 10270  027F  1303               	bcf	3,6	;RP1=0, select bank0
 10271  0280  083E               	movf	?_scale,w
 10272  0281  1683               	bsf	3,5	;RP0=1, select bank1
 10273  0282  1303               	bcf	3,6	;RP1=0, select bank1
 10274  0283  00B9               	movwf	sprintf@tmpval^(0+128)
 10275  0284                     l3517:
 10276  0284  0846               	movf	(sprintf@fval+3)^(0+128),w
 10277  0285  00F3               	movwf	__div_to_l_@f1+3
 10278  0286  0845               	movf	(sprintf@fval+2)^(0+128),w
 10279  0287  00F2               	movwf	__div_to_l_@f1+2
 10280  0288  0844               	movf	(sprintf@fval+1)^(0+128),w
 10281  0289  00F1               	movwf	__div_to_l_@f1+1
 10282  028A  0843               	movf	sprintf@fval^(0+128),w
 10283  028B  00F0               	movwf	__div_to_l_@f1
 10284  028C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
 10285  028D  00F7               	movwf	__div_to_l_@f2+3
 10286  028E  083B               	movf	(sprintf@tmpval+2)^(0+128),w
 10287  028F  00F6               	movwf	__div_to_l_@f2+2
 10288  0290  083A               	movf	(sprintf@tmpval+1)^(0+128),w
 10289  0291  00F5               	movwf	__div_to_l_@f2+1
 10290  0292  0839               	movf	sprintf@tmpval^(0+128),w
 10291  0293  00F4               	movwf	__div_to_l_@f2
 10292  0294  120A  158A  2082  120A  118A  	fcall	__div_to_l_
 10293  0299  0873               	movf	?__div_to_l_+3,w
 10294  029A  1683               	bsf	3,5	;RP0=1, select bank1
 10295  029B  1303               	bcf	3,6	;RP1=0, select bank1
 10296  029C  00C0               	movwf	(sprintf@val+3)^(0+128)
 10297  029D  0872               	movf	?__div_to_l_+2,w
 10298  029E  00BF               	movwf	(sprintf@val+2)^(0+128)
 10299  029F  0871               	movf	?__div_to_l_+1,w
 10300  02A0  00BE               	movwf	(sprintf@val+1)^(0+128)
 10301  02A1  0870               	movf	?__div_to_l_,w
 10302  02A2  00BD               	movwf	sprintf@val^(0+128)
 10303  02A3                     l3521:
 10304                           
 10305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10306  02A3  3000               	movlw	0
 10307  02A4  00C6               	movwf	(sprintf@fval+3)^(0+128)
 10308  02A5  3000               	movlw	0
 10309  02A6  00C5               	movwf	(sprintf@fval+2)^(0+128)
 10310  02A7  3000               	movlw	0
 10311  02A8  00C4               	movwf	(sprintf@fval+1)^(0+128)
 10312  02A9  3000               	movlw	0
 10313  02AA  00C3               	movwf	sprintf@fval^(0+128)
 10314                           
 10315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10316  02AB  2B30               	goto	l3529
 10317  02AC                     l3523:
 10318                           
 10319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10320  02AC  1683               	bsf	3,5	;RP0=1, select bank1
 10321  02AD  1303               	bcf	3,6	;RP1=0, select bank1
 10322  02AE  0846               	movf	(sprintf@fval+3)^(0+128),w
 10323  02AF  1283               	bcf	3,5	;RP0=0, select bank0
 10324  02B0  1303               	bcf	3,6	;RP1=0, select bank0
 10325  02B1  00D4               	movwf	___fltol@f1+3
 10326  02B2  1683               	bsf	3,5	;RP0=1, select bank1
 10327  02B3  1303               	bcf	3,6	;RP1=0, select bank1
 10328  02B4  0845               	movf	(sprintf@fval+2)^(0+128),w
 10329  02B5  1283               	bcf	3,5	;RP0=0, select bank0
 10330  02B6  1303               	bcf	3,6	;RP1=0, select bank0
 10331  02B7  00D3               	movwf	___fltol@f1+2
 10332  02B8  1683               	bsf	3,5	;RP0=1, select bank1
 10333  02B9  1303               	bcf	3,6	;RP1=0, select bank1
 10334  02BA  0844               	movf	(sprintf@fval+1)^(0+128),w
 10335  02BB  1283               	bcf	3,5	;RP0=0, select bank0
 10336  02BC  1303               	bcf	3,6	;RP1=0, select bank0
 10337  02BD  00D2               	movwf	___fltol@f1+1
 10338  02BE  1683               	bsf	3,5	;RP0=1, select bank1
 10339  02BF  1303               	bcf	3,6	;RP1=0, select bank1
 10340  02C0  0843               	movf	sprintf@fval^(0+128),w
 10341  02C1  1283               	bcf	3,5	;RP0=0, select bank0
 10342  02C2  1303               	bcf	3,6	;RP1=0, select bank0
 10343  02C3  00D1               	movwf	___fltol@f1
 10344  02C4  120A  158A  2006  120A  118A  	fcall	___fltol
 10345  02C9  1283               	bcf	3,5	;RP0=0, select bank0
 10346  02CA  1303               	bcf	3,6	;RP1=0, select bank0
 10347  02CB  0854               	movf	?___fltol+3,w
 10348  02CC  1683               	bsf	3,5	;RP0=1, select bank1
 10349  02CD  1303               	bcf	3,6	;RP1=0, select bank1
 10350  02CE  00C0               	movwf	(sprintf@val+3)^(0+128)
 10351  02CF  1283               	bcf	3,5	;RP0=0, select bank0
 10352  02D0  1303               	bcf	3,6	;RP1=0, select bank0
 10353  02D1  0853               	movf	?___fltol+2,w
 10354  02D2  1683               	bsf	3,5	;RP0=1, select bank1
 10355  02D3  1303               	bcf	3,6	;RP1=0, select bank1
 10356  02D4  00BF               	movwf	(sprintf@val+2)^(0+128)
 10357  02D5  1283               	bcf	3,5	;RP0=0, select bank0
 10358  02D6  1303               	bcf	3,6	;RP1=0, select bank0
 10359  02D7  0852               	movf	?___fltol+1,w
 10360  02D8  1683               	bsf	3,5	;RP0=1, select bank1
 10361  02D9  1303               	bcf	3,6	;RP1=0, select bank1
 10362  02DA  00BE               	movwf	(sprintf@val+1)^(0+128)
 10363  02DB  1283               	bcf	3,5	;RP0=0, select bank0
 10364  02DC  1303               	bcf	3,6	;RP1=0, select bank0
 10365  02DD  0851               	movf	?___fltol,w
 10366  02DE  1683               	bsf	3,5	;RP0=1, select bank1
 10367  02DF  1303               	bcf	3,6	;RP1=0, select bank1
 10368  02E0  00BD               	movwf	sprintf@val^(0+128)
 10369  02E1                     l3525:
 10370                           
 10371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10372  02E1  0840               	movf	(sprintf@val+3)^(0+128),w
 10373  02E2  00F3               	movwf	___xxtofl@val+3
 10374  02E3  083F               	movf	(sprintf@val+2)^(0+128),w
 10375  02E4  00F2               	movwf	___xxtofl@val+2
 10376  02E5  083E               	movf	(sprintf@val+1)^(0+128),w
 10377  02E6  00F1               	movwf	___xxtofl@val+1
 10378  02E7  083D               	movf	sprintf@val^(0+128),w
 10379  02E8  00F0               	movwf	___xxtofl@val
 10380  02E9  3000               	movlw	0
 10381  02EA  160A  158A  2689  120A  118A  	fcall	___xxtofl
 10382  02EF  0873               	movf	?___xxtofl+3,w
 10383  02F0  1283               	bcf	3,5	;RP0=0, select bank0
 10384  02F1  1303               	bcf	3,6	;RP1=0, select bank0
 10385  02F2  00E9               	movwf	___flsub@a+3
 10386  02F3  0872               	movf	?___xxtofl+2,w
 10387  02F4  00E8               	movwf	___flsub@a+2
 10388  02F5  0871               	movf	?___xxtofl+1,w
 10389  02F6  00E7               	movwf	___flsub@a+1
 10390  02F7  0870               	movf	?___xxtofl,w
 10391  02F8  00E6               	movwf	___flsub@a
 10392  02F9  1683               	bsf	3,5	;RP0=1, select bank1
 10393  02FA  1303               	bcf	3,6	;RP1=0, select bank1
 10394  02FB  0846               	movf	(sprintf@fval+3)^(0+128),w
 10395  02FC  1283               	bcf	3,5	;RP0=0, select bank0
 10396  02FD  1303               	bcf	3,6	;RP1=0, select bank0
 10397  02FE  00ED               	movwf	___flsub@b+3
 10398  02FF  1683               	bsf	3,5	;RP0=1, select bank1
 10399  0300  1303               	bcf	3,6	;RP1=0, select bank1
 10400  0301  0845               	movf	(sprintf@fval+2)^(0+128),w
 10401  0302  1283               	bcf	3,5	;RP0=0, select bank0
 10402  0303  1303               	bcf	3,6	;RP1=0, select bank0
 10403  0304  00EC               	movwf	___flsub@b+2
 10404  0305  1683               	bsf	3,5	;RP0=1, select bank1
 10405  0306  1303               	bcf	3,6	;RP1=0, select bank1
 10406  0307  0844               	movf	(sprintf@fval+1)^(0+128),w
 10407  0308  1283               	bcf	3,5	;RP0=0, select bank0
 10408  0309  1303               	bcf	3,6	;RP1=0, select bank0
 10409  030A  00EB               	movwf	___flsub@b+1
 10410  030B  1683               	bsf	3,5	;RP0=1, select bank1
 10411  030C  1303               	bcf	3,6	;RP1=0, select bank1
 10412  030D  0843               	movf	sprintf@fval^(0+128),w
 10413  030E  1283               	bcf	3,5	;RP0=0, select bank0
 10414  030F  1303               	bcf	3,6	;RP1=0, select bank0
 10415  0310  00EA               	movwf	___flsub@b
 10416  0311  160A  158A  222A  120A  118A  	fcall	___flsub
 10417  0316  1283               	bcf	3,5	;RP0=0, select bank0
 10418  0317  1303               	bcf	3,6	;RP1=0, select bank0
 10419  0318  0869               	movf	?___flsub+3,w
 10420  0319  1683               	bsf	3,5	;RP0=1, select bank1
 10421  031A  1303               	bcf	3,6	;RP1=0, select bank1
 10422  031B  00C6               	movwf	(sprintf@fval+3)^(0+128)
 10423  031C  1283               	bcf	3,5	;RP0=0, select bank0
 10424  031D  1303               	bcf	3,6	;RP1=0, select bank0
 10425  031E  0868               	movf	?___flsub+2,w
 10426  031F  1683               	bsf	3,5	;RP0=1, select bank1
 10427  0320  1303               	bcf	3,6	;RP1=0, select bank1
 10428  0321  00C5               	movwf	(sprintf@fval+2)^(0+128)
 10429  0322  1283               	bcf	3,5	;RP0=0, select bank0
 10430  0323  1303               	bcf	3,6	;RP1=0, select bank0
 10431  0324  0867               	movf	?___flsub+1,w
 10432  0325  1683               	bsf	3,5	;RP0=1, select bank1
 10433  0326  1303               	bcf	3,6	;RP1=0, select bank1
 10434  0327  00C4               	movwf	(sprintf@fval+1)^(0+128)
 10435  0328  1283               	bcf	3,5	;RP0=0, select bank0
 10436  0329  1303               	bcf	3,6	;RP1=0, select bank0
 10437  032A  0866               	movf	?___flsub,w
 10438  032B  1683               	bsf	3,5	;RP0=1, select bank1
 10439  032C  1303               	bcf	3,6	;RP1=0, select bank1
 10440  032D  00C3               	movwf	sprintf@fval^(0+128)
 10441  032E                     l3527:
 10442                           
 10443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10444  032E  01C1               	clrf	sprintf@eexp^(0+128)
 10445  032F  01C2               	clrf	(sprintf@eexp+1)^(0+128)
 10446  0330                     l3529:
 10447                           
 10448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10449  0330  01CA               	clrf	sprintf@c^(0+128)
 10450  0331  0ACA               	incf	sprintf@c^(0+128),f
 10451  0332                     l3535:
 10452                           
 10453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10454  0332  084A               	movf	sprintf@c^(0+128),w
 10455  0333  00AB               	movwf	??_sprintf^(0+128)
 10456  0334  3001               	movlw	1
 10457  0335                     u5535:
 10458  0335  1003               	clrc
 10459  0336  0DAB               	rlf	??_sprintf^(0+128),f
 10460  0337  3EFF               	addlw	-1
 10461  0338  1D03               	skipz
 10462  0339  2B35               	goto	u5535
 10463  033A  1003               	clrc
 10464  033B  0D2B               	rlf	??_sprintf^(0+128),w
 10465  033C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10466  033D  0084               	movwf	4
 10467  033E  120A  118A  200D  120A  118A  	fcall	stringdir
 10468  0343  00AC               	movwf	(??_sprintf+1)^(0+128)
 10469  0344  120A  118A  200D  120A  118A  	fcall	stringdir
 10470  0349  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
 10471  034A  120A  118A  200D  120A  118A  	fcall	stringdir
 10472  034F  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
 10473  0350  120A  118A  200D  120A  118A  	fcall	stringdir
 10474  0355  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
 10475  0356  082F               	movf	(??_sprintf+4)^(0+128),w
 10476  0357  0240               	subwf	(sprintf@val+3)^(0+128),w
 10477  0358  1D03               	skipz
 10478  0359  2B64               	goto	u5545
 10479  035A  082E               	movf	(??_sprintf+3)^(0+128),w
 10480  035B  023F               	subwf	(sprintf@val+2)^(0+128),w
 10481  035C  1D03               	skipz
 10482  035D  2B64               	goto	u5545
 10483  035E  082D               	movf	(??_sprintf+2)^(0+128),w
 10484  035F  023E               	subwf	(sprintf@val+1)^(0+128),w
 10485  0360  1D03               	skipz
 10486  0361  2B64               	goto	u5545
 10487  0362  082C               	movf	(??_sprintf+1)^(0+128),w
 10488  0363  023D               	subwf	sprintf@val^(0+128),w
 10489  0364                     u5545:
 10490  0364  1803               	skipnc
 10491  0365  2B67               	goto	u5541
 10492  0366  2B68               	goto	u5540
 10493  0367                     u5541:
 10494  0367  2B69               	goto	l3539
 10495  0368                     u5540:
 10496  0368  2B73               	goto	l3541
 10497  0369                     l3539:
 10498  0369  3001               	movlw	1
 10499  036A  00AB               	movwf	??_sprintf^(0+128)
 10500  036B  082B               	movf	??_sprintf^(0+128),w
 10501  036C  07CA               	addwf	sprintf@c^(0+128),f
 10502  036D  300A               	movlw	10
 10503  036E  064A               	xorwf	sprintf@c^(0+128),w
 10504  036F  1D03               	btfss	3,2
 10505  0370  2B72               	goto	u5551
 10506  0371  2B73               	goto	u5550
 10507  0372                     u5551:
 10508  0372  2B32               	goto	l3535
 10509  0373                     u5550:
 10510  0373                     l3541:
 10511                           
 10512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10513  0373  084A               	movf	sprintf@c^(0+128),w
 10514  0374  0748               	addwf	sprintf@prec^(0+128),w
 10515  0375  00AB               	movwf	??_sprintf^(0+128)
 10516  0376  0849               	movf	(sprintf@prec+1)^(0+128),w
 10517  0377  1803               	skipnc
 10518  0378  0A49               	incf	(sprintf@prec+1)^(0+128),w
 10519  0379  00AC               	movwf	(??_sprintf^(0+128)+1)
 10520  037A  0841               	movf	sprintf@eexp^(0+128),w
 10521  037B  072B               	addwf	??_sprintf^(0+128),w
 10522  037C  00AD               	movwf	(??_sprintf+2)^(0+128)
 10523  037D  0842               	movf	(sprintf@eexp+1)^(0+128),w
 10524  037E  1803               	skipnc
 10525  037F  0A42               	incf	(sprintf@eexp+1)^(0+128),w
 10526  0380  072C               	addwf	(??_sprintf+1)^(0+128),w
 10527  0381  00AE               	movwf	(??_sprintf+3)^(0+128)
 10528  0382  082D               	movf	(??_sprintf+2)^(0+128),w
 10529  0383  02B7               	subwf	sprintf@width^(0+128),f
 10530  0384  082E               	movf	(??_sprintf+3)^(0+128),w
 10531  0385  1C03               	skipc
 10532  0386  03B8               	decf	(sprintf@width+1)^(0+128),f
 10533  0387  02B8               	subwf	(sprintf@width+1)^(0+128),f
 10534                           
 10535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10536  0388  0848               	movf	sprintf@prec^(0+128),w
 10537  0389  0449               	iorwf	(sprintf@prec+1)^(0+128),w
 10538  038A  1903               	btfsc	3,2
 10539  038B  2B8D               	goto	u5561
 10540  038C  2B8E               	goto	u5560
 10541  038D                     u5561:
 10542  038D  2B94               	goto	l3545
 10543  038E                     u5560:
 10544  038E                     l3543:
 10545                           
 10546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10547  038E  30FF               	movlw	255
 10548  038F  07B7               	addwf	sprintf@width^(0+128),f
 10549  0390  1803               	skipnc
 10550  0391  0AB8               	incf	(sprintf@width+1)^(0+128),f
 10551  0392  30FF               	movlw	255
 10552  0393  07B8               	addwf	(sprintf@width+1)^(0+128),f
 10553  0394                     l3545:
 10554                           
 10555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10556  0394  3003               	movlw	3
 10557  0395  0535               	andwf	sprintf@flag^(0+128),w
 10558  0396  00AB               	movwf	??_sprintf^(0+128)
 10559  0397  3000               	movlw	0
 10560  0398  0536               	andwf	(sprintf@flag+1)^(0+128),w
 10561  0399  00AC               	movwf	(??_sprintf+1)^(0+128)
 10562  039A  082B               	movf	??_sprintf^(0+128),w
 10563  039B  042C               	iorwf	(??_sprintf^(0+128)+1),w
 10564  039C  1903               	btfsc	3,2
 10565  039D  2B9F               	goto	u5571
 10566  039E  2BA0               	goto	u5570
 10567  039F                     u5571:
 10568  039F  2BB5               	goto	l3555
 10569  03A0                     u5570:
 10570  03A0                     l3547:
 10571                           
 10572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10573  03A0  30FF               	movlw	255
 10574  03A1  07B7               	addwf	sprintf@width^(0+128),f
 10575  03A2  1803               	skipnc
 10576  03A3  0AB8               	incf	(sprintf@width+1)^(0+128),f
 10577  03A4  30FF               	movlw	255
 10578  03A5  07B8               	addwf	(sprintf@width+1)^(0+128),f
 10579  03A6  2BB5               	goto	l3555
 10580  03A7                     l3549:
 10581                           
 10582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10583  03A7  3020               	movlw	32
 10584  03A8  1683               	bsf	3,5	;RP0=1, select bank1
 10585  03A9  1303               	bcf	3,6	;RP1=0, select bank1
 10586  03AA  00AB               	movwf	??_sprintf^(0+128)
 10587  03AB  0847               	movf	sprintf@sp^(0+128),w
 10588  03AC  0084               	movwf	4
 10589  03AD  082B               	movf	??_sprintf^(0+128),w
 10590  03AE  1383               	bcf	3,7	;select IRP bank0
 10591  03AF  0080               	movwf	0
 10592  03B0                     l3551:
 10593  03B0  3001               	movlw	1
 10594  03B1  00AB               	movwf	??_sprintf^(0+128)
 10595  03B2  082B               	movf	??_sprintf^(0+128),w
 10596  03B3  07C7               	addwf	sprintf@sp^(0+128),f
 10597  03B4  2BA0               	goto	l3547
 10598  03B5                     l3555:
 10599                           
 10600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10601  03B5  0838               	movf	(sprintf@width+1)^(0+128),w
 10602  03B6  3A80               	xorlw	128
 10603  03B7  00FF               	movwf	btemp+1
 10604  03B8  3080               	movlw	128
 10605  03B9  027F               	subwf	btemp+1,w
 10606  03BA  1D03               	skipz
 10607  03BB  2BBE               	goto	u5585
 10608  03BC  3001               	movlw	1
 10609  03BD  0237               	subwf	sprintf@width^(0+128),w
 10610  03BE                     u5585:
 10611  03BE  1803               	skipnc
 10612  03BF  2BC1               	goto	u5581
 10613  03C0  2BC2               	goto	u5580
 10614  03C1                     u5581:
 10615  03C1  2BA7               	goto	l3549
 10616  03C2                     u5580:
 10617  03C2                     l3557:
 10618                           
 10619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10620  03C2  3003               	movlw	3
 10621  03C3  1683               	bsf	3,5	;RP0=1, select bank1
 10622  03C4  1303               	bcf	3,6	;RP1=0, select bank1
 10623  03C5  0535               	andwf	sprintf@flag^(0+128),w
 10624  03C6  00AB               	movwf	??_sprintf^(0+128)
 10625  03C7  3000               	movlw	0
 10626  03C8  0536               	andwf	(sprintf@flag+1)^(0+128),w
 10627  03C9  00AC               	movwf	(??_sprintf+1)^(0+128)
 10628  03CA  082B               	movf	??_sprintf^(0+128),w
 10629  03CB  042C               	iorwf	(??_sprintf^(0+128)+1),w
 10630  03CC  1903               	btfsc	3,2
 10631  03CD  2BCF               	goto	u5591
 10632  03CE  2BD0               	goto	u5590
 10633  03CF                     u5591:
 10634  03CF  2C62               	goto	l385
 10635  03D0                     u5590:
 10636  03D0                     l3559:
 10637                           
 10638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10639  03D0  302D               	movlw	45
 10640  03D1  00AB               	movwf	??_sprintf^(0+128)
 10641  03D2  0847               	movf	sprintf@sp^(0+128),w
 10642  03D3  0084               	movwf	4
 10643  03D4  082B               	movf	??_sprintf^(0+128),w
 10644  03D5  1383               	bcf	3,7	;select IRP bank0
 10645  03D6  0080               	movwf	0
 10646  03D7                     l3561:
 10647  03D7  3001               	movlw	1
 10648  03D8  00AB               	movwf	??_sprintf^(0+128)
 10649  03D9  082B               	movf	??_sprintf^(0+128),w
 10650  03DA  07C7               	addwf	sprintf@sp^(0+128),f
 10651  03DB  2C62               	goto	l385
 10652  03DC                     l3563:
 10653                           
 10654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10655  03DC  084A               	movf	sprintf@c^(0+128),w
 10656  03DD  00AB               	movwf	??_sprintf^(0+128)
 10657  03DE  3001               	movlw	1
 10658  03DF                     u5605:
 10659  03DF  1003               	clrc
 10660  03E0  0DAB               	rlf	??_sprintf^(0+128),f
 10661  03E1  3EFF               	addlw	-1
 10662  03E2  1D03               	skipz
 10663  03E3  2BDF               	goto	u5605
 10664  03E4  1003               	clrc
 10665  03E5  0D2B               	rlf	??_sprintf^(0+128),w
 10666  03E6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10667  03E7  0084               	movwf	4
 10668  03E8  120A  118A  200D  120A  118A  	fcall	stringdir
 10669  03ED  00F0               	movwf	___lldiv@divisor
 10670  03EE  120A  118A  200D  120A  118A  	fcall	stringdir
 10671  03F3  00F1               	movwf	___lldiv@divisor+1
 10672  03F4  120A  118A  200D  120A  118A  	fcall	stringdir
 10673  03F9  00F2               	movwf	___lldiv@divisor+2
 10674  03FA  120A  118A  200D  120A  118A  	fcall	stringdir
 10675  03FF  00F3               	movwf	___lldiv@divisor+3
 10676  0400  0840               	movf	(sprintf@val+3)^(0+128),w
 10677  0401  00F7               	movwf	___lldiv@dividend+3
 10678  0402  083F               	movf	(sprintf@val+2)^(0+128),w
 10679  0403  00F6               	movwf	___lldiv@dividend+2
 10680  0404  083E               	movf	(sprintf@val+1)^(0+128),w
 10681  0405  00F5               	movwf	___lldiv@dividend+1
 10682  0406  083D               	movf	sprintf@val^(0+128),w
 10683  0407  00F4               	movwf	___lldiv@dividend
 10684  0408  160A  158A  2550  120A  118A  	fcall	___lldiv
 10685  040D  0873               	movf	?___lldiv+3,w
 10686  040E  1683               	bsf	3,5	;RP0=1, select bank1
 10687  040F  1303               	bcf	3,6	;RP1=0, select bank1
 10688  0410  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 10689  0411  0872               	movf	?___lldiv+2,w
 10690  0412  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 10691  0413  0871               	movf	?___lldiv+1,w
 10692  0414  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 10693  0415  0870               	movf	?___lldiv,w
 10694  0416  00B9               	movwf	sprintf@tmpval^(0+128)
 10695  0417                     l3565:
 10696                           
 10697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10698  0417  3000               	movlw	0
 10699  0418  1283               	bcf	3,5	;RP0=0, select bank0
 10700  0419  1303               	bcf	3,6	;RP1=0, select bank0
 10701  041A  00A3               	movwf	___llmod@divisor+3
 10702  041B  3000               	movlw	0
 10703  041C  00A2               	movwf	___llmod@divisor+2
 10704  041D  3000               	movlw	0
 10705  041E  00A1               	movwf	___llmod@divisor+1
 10706  041F  300A               	movlw	10
 10707  0420  00A0               	movwf	___llmod@divisor
 10708  0421  1683               	bsf	3,5	;RP0=1, select bank1
 10709  0422  1303               	bcf	3,6	;RP1=0, select bank1
 10710  0423  083C               	movf	(sprintf@tmpval+3)^(0+128),w
 10711  0424  1283               	bcf	3,5	;RP0=0, select bank0
 10712  0425  1303               	bcf	3,6	;RP1=0, select bank0
 10713  0426  00A7               	movwf	___llmod@dividend+3
 10714  0427  1683               	bsf	3,5	;RP0=1, select bank1
 10715  0428  1303               	bcf	3,6	;RP1=0, select bank1
 10716  0429  083B               	movf	(sprintf@tmpval+2)^(0+128),w
 10717  042A  1283               	bcf	3,5	;RP0=0, select bank0
 10718  042B  1303               	bcf	3,6	;RP1=0, select bank0
 10719  042C  00A6               	movwf	___llmod@dividend+2
 10720  042D  1683               	bsf	3,5	;RP0=1, select bank1
 10721  042E  1303               	bcf	3,6	;RP1=0, select bank1
 10722  042F  083A               	movf	(sprintf@tmpval+1)^(0+128),w
 10723  0430  1283               	bcf	3,5	;RP0=0, select bank0
 10724  0431  1303               	bcf	3,6	;RP1=0, select bank0
 10725  0432  00A5               	movwf	___llmod@dividend+1
 10726  0433  1683               	bsf	3,5	;RP0=1, select bank1
 10727  0434  1303               	bcf	3,6	;RP1=0, select bank1
 10728  0435  0839               	movf	sprintf@tmpval^(0+128),w
 10729  0436  1283               	bcf	3,5	;RP0=0, select bank0
 10730  0437  1303               	bcf	3,6	;RP1=0, select bank0
 10731  0438  00A4               	movwf	___llmod@dividend
 10732  0439  120A  118A  20C5  120A  118A  	fcall	___llmod
 10733  043E  1283               	bcf	3,5	;RP0=0, select bank0
 10734  043F  1303               	bcf	3,6	;RP1=0, select bank0
 10735  0440  0823               	movf	?___llmod+3,w
 10736  0441  1683               	bsf	3,5	;RP0=1, select bank1
 10737  0442  1303               	bcf	3,6	;RP1=0, select bank1
 10738  0443  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 10739  0444  1283               	bcf	3,5	;RP0=0, select bank0
 10740  0445  1303               	bcf	3,6	;RP1=0, select bank0
 10741  0446  0822               	movf	?___llmod+2,w
 10742  0447  1683               	bsf	3,5	;RP0=1, select bank1
 10743  0448  1303               	bcf	3,6	;RP1=0, select bank1
 10744  0449  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 10745  044A  1283               	bcf	3,5	;RP0=0, select bank0
 10746  044B  1303               	bcf	3,6	;RP1=0, select bank0
 10747  044C  0821               	movf	?___llmod+1,w
 10748  044D  1683               	bsf	3,5	;RP0=1, select bank1
 10749  044E  1303               	bcf	3,6	;RP1=0, select bank1
 10750  044F  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 10751  0450  1283               	bcf	3,5	;RP0=0, select bank0
 10752  0451  1303               	bcf	3,6	;RP1=0, select bank0
 10753  0452  0820               	movf	?___llmod,w
 10754  0453  1683               	bsf	3,5	;RP0=1, select bank1
 10755  0454  1303               	bcf	3,6	;RP1=0, select bank1
 10756  0455  00B9               	movwf	sprintf@tmpval^(0+128)
 10757  0456                     l3567:
 10758                           
 10759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10760  0456  0839               	movf	sprintf@tmpval^(0+128),w
 10761  0457  3E30               	addlw	48
 10762  0458  00AB               	movwf	??_sprintf^(0+128)
 10763  0459  0847               	movf	sprintf@sp^(0+128),w
 10764  045A  0084               	movwf	4
 10765  045B  082B               	movf	??_sprintf^(0+128),w
 10766  045C  1383               	bcf	3,7	;select IRP bank0
 10767  045D  0080               	movwf	0
 10768  045E  3001               	movlw	1
 10769  045F  00AB               	movwf	??_sprintf^(0+128)
 10770  0460  082B               	movf	??_sprintf^(0+128),w
 10771  0461  07C7               	addwf	sprintf@sp^(0+128),f
 10772  0462                     l385:	
 10773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10774                           
 10775                           
 10776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10777  0462  3001               	movlw	1
 10778  0463  02CA               	subwf	sprintf@c^(0+128),f
 10779  0464  0A4A               	incf	sprintf@c^(0+128),w
 10780  0465  1D03               	btfss	3,2
 10781  0466  2C68               	goto	u5611
 10782  0467  2C69               	goto	u5610
 10783  0468                     u5611:
 10784  0468  2BDC               	goto	l3563
 10785  0469                     u5610:
 10786  0469  2C7D               	goto	l3575
 10787  046A                     l3569:
 10788                           
 10789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10790  046A  3030               	movlw	48
 10791  046B  1683               	bsf	3,5	;RP0=1, select bank1
 10792  046C  1303               	bcf	3,6	;RP1=0, select bank1
 10793  046D  00AB               	movwf	??_sprintf^(0+128)
 10794  046E  0847               	movf	sprintf@sp^(0+128),w
 10795  046F  0084               	movwf	4
 10796  0470  082B               	movf	??_sprintf^(0+128),w
 10797  0471  1383               	bcf	3,7	;select IRP bank0
 10798  0472  0080               	movwf	0
 10799  0473                     l3571:
 10800  0473  3001               	movlw	1
 10801  0474  00AB               	movwf	??_sprintf^(0+128)
 10802  0475  082B               	movf	??_sprintf^(0+128),w
 10803  0476  07C7               	addwf	sprintf@sp^(0+128),f
 10804  0477                     l3573:
 10805                           
 10806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10807  0477  30FF               	movlw	255
 10808  0478  07C1               	addwf	sprintf@eexp^(0+128),f
 10809  0479  1803               	skipnc
 10810  047A  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
 10811  047B  30FF               	movlw	255
 10812  047C  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
 10813  047D                     l3575:
 10814                           
 10815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10816  047D  0842               	movf	(sprintf@eexp+1)^(0+128),w
 10817  047E  3A80               	xorlw	128
 10818  047F  00FF               	movwf	btemp+1
 10819  0480  3080               	movlw	128
 10820  0481  027F               	subwf	btemp+1,w
 10821  0482  1D03               	skipz
 10822  0483  2C86               	goto	u5625
 10823  0484  3001               	movlw	1
 10824  0485  0241               	subwf	sprintf@eexp^(0+128),w
 10825  0486                     u5625:
 10826  0486  1803               	skipnc
 10827  0487  2C89               	goto	u5621
 10828  0488  2C8A               	goto	u5620
 10829  0489                     u5621:
 10830  0489  2C6A               	goto	l3569
 10831  048A                     u5620:
 10832  048A                     l3577:
 10833                           
 10834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10835  048A  1683               	bsf	3,5	;RP0=1, select bank1
 10836  048B  1303               	bcf	3,6	;RP1=0, select bank1
 10837  048C  0849               	movf	(sprintf@prec+1)^(0+128),w
 10838  048D  3A80               	xorlw	128
 10839  048E  00FF               	movwf	btemp+1
 10840  048F  3080               	movlw	128
 10841  0490  027F               	subwf	btemp+1,w
 10842  0491  1D03               	skipz
 10843  0492  2C95               	goto	u5635
 10844  0493  3009               	movlw	9
 10845  0494  0248               	subwf	sprintf@prec^(0+128),w
 10846  0495                     u5635:
 10847  0495  1C03               	skipc
 10848  0496  2C98               	goto	u5631
 10849  0497  2C99               	goto	u5630
 10850  0498                     u5631:
 10851  0498  2CA0               	goto	l3581
 10852  0499                     u5630:
 10853  0499                     l3579:
 10854                           
 10855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10856  0499  3008               	movlw	8
 10857  049A  1683               	bsf	3,5	;RP0=1, select bank1
 10858  049B  1303               	bcf	3,6	;RP1=0, select bank1
 10859  049C  00AB               	movwf	??_sprintf^(0+128)
 10860  049D  082B               	movf	??_sprintf^(0+128),w
 10861  049E  00CA               	movwf	sprintf@c^(0+128)
 10862  049F  2CA6               	goto	l392
 10863  04A0                     l3581:
 10864                           
 10865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10866  04A0  1683               	bsf	3,5	;RP0=1, select bank1
 10867  04A1  1303               	bcf	3,6	;RP1=0, select bank1
 10868  04A2  0848               	movf	sprintf@prec^(0+128),w
 10869  04A3  00AB               	movwf	??_sprintf^(0+128)
 10870  04A4  082B               	movf	??_sprintf^(0+128),w
 10871  04A5  00CA               	movwf	sprintf@c^(0+128)
 10872  04A6                     l392:
 10873                           
 10874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10875  04A6  084A               	movf	sprintf@c^(0+128),w
 10876  04A7  00AB               	movwf	??_sprintf^(0+128)
 10877  04A8  01AC               	clrf	(??_sprintf^(0+128)+1)
 10878  04A9  082B               	movf	??_sprintf^(0+128),w
 10879  04AA  02C8               	subwf	sprintf@prec^(0+128),f
 10880  04AB  082C               	movf	(??_sprintf+1)^(0+128),w
 10881  04AC  1C03               	skipc
 10882  04AD  03C9               	decf	(sprintf@prec+1)^(0+128),f
 10883  04AE  02C9               	subwf	(sprintf@prec+1)^(0+128),f
 10884  04AF                     l3583:
 10885                           
 10886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10887  04AF  084A               	movf	sprintf@c^(0+128),w
 10888  04B0  1903               	btfsc	3,2
 10889  04B1  2CB3               	goto	u5641
 10890  04B2  2CB4               	goto	u5640
 10891  04B3                     u5641:
 10892  04B3  2CBF               	goto	l3589
 10893  04B4                     u5640:
 10894  04B4                     l3585:
 10895                           
 10896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10897  04B4  302E               	movlw	46
 10898  04B5  00AB               	movwf	??_sprintf^(0+128)
 10899  04B6  0847               	movf	sprintf@sp^(0+128),w
 10900  04B7  0084               	movwf	4
 10901  04B8  082B               	movf	??_sprintf^(0+128),w
 10902  04B9  1383               	bcf	3,7	;select IRP bank0
 10903  04BA  0080               	movwf	0
 10904  04BB                     l3587:
 10905  04BB  3001               	movlw	1
 10906  04BC  00AB               	movwf	??_sprintf^(0+128)
 10907  04BD  082B               	movf	??_sprintf^(0+128),w
 10908  04BE  07C7               	addwf	sprintf@sp^(0+128),f
 10909  04BF                     l3589:
 10910                           
 10911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10912  04BF  084A               	movf	sprintf@c^(0+128),w
 10913  04C0  120A  158A  2140  120A  118A  	fcall	_scale
 10914  04C5  1283               	bcf	3,5	;RP0=0, select bank0
 10915  04C6  1303               	bcf	3,6	;RP1=0, select bank0
 10916  04C7  0841               	movf	?_scale+3,w
 10917  04C8  1683               	bsf	3,5	;RP0=1, select bank1
 10918  04C9  1303               	bcf	3,6	;RP1=0, select bank1
 10919  04CA  00B3               	movwf	(_sprintf$1136+3)^(0+128)
 10920  04CB  1283               	bcf	3,5	;RP0=0, select bank0
 10921  04CC  1303               	bcf	3,6	;RP1=0, select bank0
 10922  04CD  0840               	movf	?_scale+2,w
 10923  04CE  1683               	bsf	3,5	;RP0=1, select bank1
 10924  04CF  1303               	bcf	3,6	;RP1=0, select bank1
 10925  04D0  00B2               	movwf	(_sprintf$1136+2)^(0+128)
 10926  04D1  1283               	bcf	3,5	;RP0=0, select bank0
 10927  04D2  1303               	bcf	3,6	;RP1=0, select bank0
 10928  04D3  083F               	movf	?_scale+1,w
 10929  04D4  1683               	bsf	3,5	;RP0=1, select bank1
 10930  04D5  1303               	bcf	3,6	;RP1=0, select bank1
 10931  04D6  00B1               	movwf	(_sprintf$1136+1)^(0+128)
 10932  04D7  1283               	bcf	3,5	;RP0=0, select bank0
 10933  04D8  1303               	bcf	3,6	;RP1=0, select bank0
 10934  04D9  083E               	movf	?_scale,w
 10935  04DA  1683               	bsf	3,5	;RP0=1, select bank1
 10936  04DB  1303               	bcf	3,6	;RP1=0, select bank1
 10937  04DC  00B0               	movwf	_sprintf$1136^(0+128)
 10938  04DD                     l3591:
 10939                           
 10940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10941  04DD  0833               	movf	(_sprintf$1136+3)^(0+128),w
 10942  04DE  1283               	bcf	3,5	;RP0=0, select bank0
 10943  04DF  1303               	bcf	3,6	;RP1=0, select bank0
 10944  04E0  00AB               	movwf	___flmul@a+3
 10945  04E1  1683               	bsf	3,5	;RP0=1, select bank1
 10946  04E2  1303               	bcf	3,6	;RP1=0, select bank1
 10947  04E3  0832               	movf	(_sprintf$1136+2)^(0+128),w
 10948  04E4  1283               	bcf	3,5	;RP0=0, select bank0
 10949  04E5  1303               	bcf	3,6	;RP1=0, select bank0
 10950  04E6  00AA               	movwf	___flmul@a+2
 10951  04E7  1683               	bsf	3,5	;RP0=1, select bank1
 10952  04E8  1303               	bcf	3,6	;RP1=0, select bank1
 10953  04E9  0831               	movf	(_sprintf$1136+1)^(0+128),w
 10954  04EA  1283               	bcf	3,5	;RP0=0, select bank0
 10955  04EB  1303               	bcf	3,6	;RP1=0, select bank0
 10956  04EC  00A9               	movwf	___flmul@a+1
 10957  04ED  1683               	bsf	3,5	;RP0=1, select bank1
 10958  04EE  1303               	bcf	3,6	;RP1=0, select bank1
 10959  04EF  0830               	movf	_sprintf$1136^(0+128),w
 10960  04F0  1283               	bcf	3,5	;RP0=0, select bank0
 10961  04F1  1303               	bcf	3,6	;RP1=0, select bank0
 10962  04F2  00A8               	movwf	___flmul@a
 10963  04F3  1683               	bsf	3,5	;RP0=1, select bank1
 10964  04F4  1303               	bcf	3,6	;RP1=0, select bank1
 10965  04F5  0846               	movf	(sprintf@fval+3)^(0+128),w
 10966  04F6  1283               	bcf	3,5	;RP0=0, select bank0
 10967  04F7  1303               	bcf	3,6	;RP1=0, select bank0
 10968  04F8  00A7               	movwf	___flmul@b+3
 10969  04F9  1683               	bsf	3,5	;RP0=1, select bank1
 10970  04FA  1303               	bcf	3,6	;RP1=0, select bank1
 10971  04FB  0845               	movf	(sprintf@fval+2)^(0+128),w
 10972  04FC  1283               	bcf	3,5	;RP0=0, select bank0
 10973  04FD  1303               	bcf	3,6	;RP1=0, select bank0
 10974  04FE  00A6               	movwf	___flmul@b+2
 10975  04FF  1683               	bsf	3,5	;RP0=1, select bank1
 10976  0500  1303               	bcf	3,6	;RP1=0, select bank1
 10977  0501  0844               	movf	(sprintf@fval+1)^(0+128),w
 10978  0502  1283               	bcf	3,5	;RP0=0, select bank0
 10979  0503  1303               	bcf	3,6	;RP1=0, select bank0
 10980  0504  00A5               	movwf	___flmul@b+1
 10981  0505  1683               	bsf	3,5	;RP0=1, select bank1
 10982  0506  1303               	bcf	3,6	;RP1=0, select bank1
 10983  0507  0843               	movf	sprintf@fval^(0+128),w
 10984  0508  1283               	bcf	3,5	;RP0=0, select bank0
 10985  0509  1303               	bcf	3,6	;RP1=0, select bank0
 10986  050A  00A4               	movwf	___flmul@b
 10987  050B  120A  158A  249F  120A  118A  	fcall	___flmul
 10988  0510  1283               	bcf	3,5	;RP0=0, select bank0
 10989  0511  1303               	bcf	3,6	;RP1=0, select bank0
 10990  0512  0827               	movf	?___flmul+3,w
 10991  0513  00D4               	movwf	___fltol@f1+3
 10992  0514  0826               	movf	?___flmul+2,w
 10993  0515  00D3               	movwf	___fltol@f1+2
 10994  0516  0825               	movf	?___flmul+1,w
 10995  0517  00D2               	movwf	___fltol@f1+1
 10996  0518  0824               	movf	?___flmul,w
 10997  0519  00D1               	movwf	___fltol@f1
 10998  051A  120A  158A  2006  120A  118A  	fcall	___fltol
 10999  051F  1283               	bcf	3,5	;RP0=0, select bank0
 11000  0520  1303               	bcf	3,6	;RP1=0, select bank0
 11001  0521  0854               	movf	?___fltol+3,w
 11002  0522  1683               	bsf	3,5	;RP0=1, select bank1
 11003  0523  1303               	bcf	3,6	;RP1=0, select bank1
 11004  0524  00C0               	movwf	(sprintf@val+3)^(0+128)
 11005  0525  1283               	bcf	3,5	;RP0=0, select bank0
 11006  0526  1303               	bcf	3,6	;RP1=0, select bank0
 11007  0527  0853               	movf	?___fltol+2,w
 11008  0528  1683               	bsf	3,5	;RP0=1, select bank1
 11009  0529  1303               	bcf	3,6	;RP1=0, select bank1
 11010  052A  00BF               	movwf	(sprintf@val+2)^(0+128)
 11011  052B  1283               	bcf	3,5	;RP0=0, select bank0
 11012  052C  1303               	bcf	3,6	;RP1=0, select bank0
 11013  052D  0852               	movf	?___fltol+1,w
 11014  052E  1683               	bsf	3,5	;RP0=1, select bank1
 11015  052F  1303               	bcf	3,6	;RP1=0, select bank1
 11016  0530  00BE               	movwf	(sprintf@val+1)^(0+128)
 11017  0531  1283               	bcf	3,5	;RP0=0, select bank0
 11018  0532  1303               	bcf	3,6	;RP1=0, select bank0
 11019  0533  0851               	movf	?___fltol,w
 11020  0534  1683               	bsf	3,5	;RP0=1, select bank1
 11021  0535  1303               	bcf	3,6	;RP1=0, select bank1
 11022  0536  00BD               	movwf	sprintf@val^(0+128)
 11023                           
 11024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11025  0537  2E19               	goto	l3601
 11026  0538                     l3593:
 11027                           
 11028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11029  0538  084A               	movf	sprintf@c^(0+128),w
 11030  0539  00AB               	movwf	??_sprintf^(0+128)
 11031  053A  3001               	movlw	1
 11032  053B                     u5655:
 11033  053B  1003               	clrc
 11034  053C  0DAB               	rlf	??_sprintf^(0+128),f
 11035  053D  3EFF               	addlw	-1
 11036  053E  1D03               	skipz
 11037  053F  2D3B               	goto	u5655
 11038  0540  1003               	clrc
 11039  0541  0D2B               	rlf	??_sprintf^(0+128),w
 11040  0542  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11041  0543  0084               	movwf	4
 11042  0544  120A  118A  200D  120A  118A  	fcall	stringdir
 11043  0549  00F0               	movwf	___lldiv@divisor
 11044  054A  120A  118A  200D  120A  118A  	fcall	stringdir
 11045  054F  00F1               	movwf	___lldiv@divisor+1
 11046  0550  120A  118A  200D  120A  118A  	fcall	stringdir
 11047  0555  00F2               	movwf	___lldiv@divisor+2
 11048  0556  120A  118A  200D  120A  118A  	fcall	stringdir
 11049  055B  00F3               	movwf	___lldiv@divisor+3
 11050  055C  0840               	movf	(sprintf@val+3)^(0+128),w
 11051  055D  00F7               	movwf	___lldiv@dividend+3
 11052  055E  083F               	movf	(sprintf@val+2)^(0+128),w
 11053  055F  00F6               	movwf	___lldiv@dividend+2
 11054  0560  083E               	movf	(sprintf@val+1)^(0+128),w
 11055  0561  00F5               	movwf	___lldiv@dividend+1
 11056  0562  083D               	movf	sprintf@val^(0+128),w
 11057  0563  00F4               	movwf	___lldiv@dividend
 11058  0564  160A  158A  2550  120A  118A  	fcall	___lldiv
 11059  0569  0873               	movf	?___lldiv+3,w
 11060  056A  1683               	bsf	3,5	;RP0=1, select bank1
 11061  056B  1303               	bcf	3,6	;RP1=0, select bank1
 11062  056C  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 11063  056D  0872               	movf	?___lldiv+2,w
 11064  056E  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 11065  056F  0871               	movf	?___lldiv+1,w
 11066  0570  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 11067  0571  0870               	movf	?___lldiv,w
 11068  0572  00B9               	movwf	sprintf@tmpval^(0+128)
 11069  0573                     l3595:
 11070                           
 11071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11072  0573  3000               	movlw	0
 11073  0574  1283               	bcf	3,5	;RP0=0, select bank0
 11074  0575  1303               	bcf	3,6	;RP1=0, select bank0
 11075  0576  00A3               	movwf	___llmod@divisor+3
 11076  0577  3000               	movlw	0
 11077  0578  00A2               	movwf	___llmod@divisor+2
 11078  0579  3000               	movlw	0
 11079  057A  00A1               	movwf	___llmod@divisor+1
 11080  057B  300A               	movlw	10
 11081  057C  00A0               	movwf	___llmod@divisor
 11082  057D  1683               	bsf	3,5	;RP0=1, select bank1
 11083  057E  1303               	bcf	3,6	;RP1=0, select bank1
 11084  057F  083C               	movf	(sprintf@tmpval+3)^(0+128),w
 11085  0580  1283               	bcf	3,5	;RP0=0, select bank0
 11086  0581  1303               	bcf	3,6	;RP1=0, select bank0
 11087  0582  00A7               	movwf	___llmod@dividend+3
 11088  0583  1683               	bsf	3,5	;RP0=1, select bank1
 11089  0584  1303               	bcf	3,6	;RP1=0, select bank1
 11090  0585  083B               	movf	(sprintf@tmpval+2)^(0+128),w
 11091  0586  1283               	bcf	3,5	;RP0=0, select bank0
 11092  0587  1303               	bcf	3,6	;RP1=0, select bank0
 11093  0588  00A6               	movwf	___llmod@dividend+2
 11094  0589  1683               	bsf	3,5	;RP0=1, select bank1
 11095  058A  1303               	bcf	3,6	;RP1=0, select bank1
 11096  058B  083A               	movf	(sprintf@tmpval+1)^(0+128),w
 11097  058C  1283               	bcf	3,5	;RP0=0, select bank0
 11098  058D  1303               	bcf	3,6	;RP1=0, select bank0
 11099  058E  00A5               	movwf	___llmod@dividend+1
 11100  058F  1683               	bsf	3,5	;RP0=1, select bank1
 11101  0590  1303               	bcf	3,6	;RP1=0, select bank1
 11102  0591  0839               	movf	sprintf@tmpval^(0+128),w
 11103  0592  1283               	bcf	3,5	;RP0=0, select bank0
 11104  0593  1303               	bcf	3,6	;RP1=0, select bank0
 11105  0594  00A4               	movwf	___llmod@dividend
 11106  0595  120A  118A  20C5  120A  118A  	fcall	___llmod
 11107  059A  1283               	bcf	3,5	;RP0=0, select bank0
 11108  059B  1303               	bcf	3,6	;RP1=0, select bank0
 11109  059C  0823               	movf	?___llmod+3,w
 11110  059D  1683               	bsf	3,5	;RP0=1, select bank1
 11111  059E  1303               	bcf	3,6	;RP1=0, select bank1
 11112  059F  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 11113  05A0  1283               	bcf	3,5	;RP0=0, select bank0
 11114  05A1  1303               	bcf	3,6	;RP1=0, select bank0
 11115  05A2  0822               	movf	?___llmod+2,w
 11116  05A3  1683               	bsf	3,5	;RP0=1, select bank1
 11117  05A4  1303               	bcf	3,6	;RP1=0, select bank1
 11118  05A5  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 11119  05A6  1283               	bcf	3,5	;RP0=0, select bank0
 11120  05A7  1303               	bcf	3,6	;RP1=0, select bank0
 11121  05A8  0821               	movf	?___llmod+1,w
 11122  05A9  1683               	bsf	3,5	;RP0=1, select bank1
 11123  05AA  1303               	bcf	3,6	;RP1=0, select bank1
 11124  05AB  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 11125  05AC  1283               	bcf	3,5	;RP0=0, select bank0
 11126  05AD  1303               	bcf	3,6	;RP1=0, select bank0
 11127  05AE  0820               	movf	?___llmod,w
 11128  05AF  1683               	bsf	3,5	;RP0=1, select bank1
 11129  05B0  1303               	bcf	3,6	;RP1=0, select bank1
 11130  05B1  00B9               	movwf	sprintf@tmpval^(0+128)
 11131  05B2                     l3597:
 11132                           
 11133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11134  05B2  0839               	movf	sprintf@tmpval^(0+128),w
 11135  05B3  3E30               	addlw	48
 11136  05B4  00AB               	movwf	??_sprintf^(0+128)
 11137  05B5  0847               	movf	sprintf@sp^(0+128),w
 11138  05B6  0084               	movwf	4
 11139  05B7  082B               	movf	??_sprintf^(0+128),w
 11140  05B8  1383               	bcf	3,7	;select IRP bank0
 11141  05B9  0080               	movwf	0
 11142  05BA  3001               	movlw	1
 11143  05BB  00AB               	movwf	??_sprintf^(0+128)
 11144  05BC  082B               	movf	??_sprintf^(0+128),w
 11145  05BD  07C7               	addwf	sprintf@sp^(0+128),f
 11146  05BE                     l3599:
 11147                           
 11148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11149  05BE  084A               	movf	sprintf@c^(0+128),w
 11150  05BF  00AB               	movwf	??_sprintf^(0+128)
 11151  05C0  3001               	movlw	1
 11152  05C1                     u5665:
 11153  05C1  1003               	clrc
 11154  05C2  0DAB               	rlf	??_sprintf^(0+128),f
 11155  05C3  3EFF               	addlw	-1
 11156  05C4  1D03               	skipz
 11157  05C5  2DC1               	goto	u5665
 11158  05C6  1003               	clrc
 11159  05C7  0D2B               	rlf	??_sprintf^(0+128),w
 11160  05C8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11161  05C9  0084               	movwf	4
 11162  05CA  120A  118A  200D  120A  118A  	fcall	stringdir
 11163  05CF  1283               	bcf	3,5	;RP0=0, select bank0
 11164  05D0  1303               	bcf	3,6	;RP1=0, select bank0
 11165  05D1  00A0               	movwf	___llmod@divisor
 11166  05D2  120A  118A  200D  120A  118A  	fcall	stringdir
 11167  05D7  00A1               	movwf	___llmod@divisor+1
 11168  05D8  120A  118A  200D  120A  118A  	fcall	stringdir
 11169  05DD  00A2               	movwf	___llmod@divisor+2
 11170  05DE  120A  118A  200D  120A  118A  	fcall	stringdir
 11171  05E3  00A3               	movwf	___llmod@divisor+3
 11172  05E4  1683               	bsf	3,5	;RP0=1, select bank1
 11173  05E5  1303               	bcf	3,6	;RP1=0, select bank1
 11174  05E6  0840               	movf	(sprintf@val+3)^(0+128),w
 11175  05E7  1283               	bcf	3,5	;RP0=0, select bank0
 11176  05E8  1303               	bcf	3,6	;RP1=0, select bank0
 11177  05E9  00A7               	movwf	___llmod@dividend+3
 11178  05EA  1683               	bsf	3,5	;RP0=1, select bank1
 11179  05EB  1303               	bcf	3,6	;RP1=0, select bank1
 11180  05EC  083F               	movf	(sprintf@val+2)^(0+128),w
 11181  05ED  1283               	bcf	3,5	;RP0=0, select bank0
 11182  05EE  1303               	bcf	3,6	;RP1=0, select bank0
 11183  05EF  00A6               	movwf	___llmod@dividend+2
 11184  05F0  1683               	bsf	3,5	;RP0=1, select bank1
 11185  05F1  1303               	bcf	3,6	;RP1=0, select bank1
 11186  05F2  083E               	movf	(sprintf@val+1)^(0+128),w
 11187  05F3  1283               	bcf	3,5	;RP0=0, select bank0
 11188  05F4  1303               	bcf	3,6	;RP1=0, select bank0
 11189  05F5  00A5               	movwf	___llmod@dividend+1
 11190  05F6  1683               	bsf	3,5	;RP0=1, select bank1
 11191  05F7  1303               	bcf	3,6	;RP1=0, select bank1
 11192  05F8  083D               	movf	sprintf@val^(0+128),w
 11193  05F9  1283               	bcf	3,5	;RP0=0, select bank0
 11194  05FA  1303               	bcf	3,6	;RP1=0, select bank0
 11195  05FB  00A4               	movwf	___llmod@dividend
 11196  05FC  120A  118A  20C5  120A  118A  	fcall	___llmod
 11197  0601  1283               	bcf	3,5	;RP0=0, select bank0
 11198  0602  1303               	bcf	3,6	;RP1=0, select bank0
 11199  0603  0823               	movf	?___llmod+3,w
 11200  0604  1683               	bsf	3,5	;RP0=1, select bank1
 11201  0605  1303               	bcf	3,6	;RP1=0, select bank1
 11202  0606  00C0               	movwf	(sprintf@val+3)^(0+128)
 11203  0607  1283               	bcf	3,5	;RP0=0, select bank0
 11204  0608  1303               	bcf	3,6	;RP1=0, select bank0
 11205  0609  0822               	movf	?___llmod+2,w
 11206  060A  1683               	bsf	3,5	;RP0=1, select bank1
 11207  060B  1303               	bcf	3,6	;RP1=0, select bank1
 11208  060C  00BF               	movwf	(sprintf@val+2)^(0+128)
 11209  060D  1283               	bcf	3,5	;RP0=0, select bank0
 11210  060E  1303               	bcf	3,6	;RP1=0, select bank0
 11211  060F  0821               	movf	?___llmod+1,w
 11212  0610  1683               	bsf	3,5	;RP0=1, select bank1
 11213  0611  1303               	bcf	3,6	;RP1=0, select bank1
 11214  0612  00BE               	movwf	(sprintf@val+1)^(0+128)
 11215  0613  1283               	bcf	3,5	;RP0=0, select bank0
 11216  0614  1303               	bcf	3,6	;RP1=0, select bank0
 11217  0615  0820               	movf	?___llmod,w
 11218  0616  1683               	bsf	3,5	;RP0=1, select bank1
 11219  0617  1303               	bcf	3,6	;RP1=0, select bank1
 11220  0618  00BD               	movwf	sprintf@val^(0+128)
 11221  0619                     l3601:
 11222                           
 11223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11224  0619  3001               	movlw	1
 11225  061A  02CA               	subwf	sprintf@c^(0+128),f
 11226  061B  0A4A               	incf	sprintf@c^(0+128),w
 11227  061C  1D03               	btfss	3,2
 11228  061D  2E1F               	goto	u5671
 11229  061E  2E20               	goto	u5670
 11230  061F                     u5671:
 11231  061F  2D38               	goto	l3593
 11232  0620                     u5670:
 11233  0620  2E32               	goto	l3609
 11234  0621                     l3603:
 11235                           
 11236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11237  0621  3030               	movlw	48
 11238  0622  00AB               	movwf	??_sprintf^(0+128)
 11239  0623  0847               	movf	sprintf@sp^(0+128),w
 11240  0624  0084               	movwf	4
 11241  0625  082B               	movf	??_sprintf^(0+128),w
 11242  0626  1383               	bcf	3,7	;select IRP bank0
 11243  0627  0080               	movwf	0
 11244  0628                     l3605:
 11245  0628  3001               	movlw	1
 11246  0629  00AB               	movwf	??_sprintf^(0+128)
 11247  062A  082B               	movf	??_sprintf^(0+128),w
 11248  062B  07C7               	addwf	sprintf@sp^(0+128),f
 11249  062C                     l3607:
 11250                           
 11251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11252  062C  30FF               	movlw	255
 11253  062D  07C8               	addwf	sprintf@prec^(0+128),f
 11254  062E  1803               	skipnc
 11255  062F  0AC9               	incf	(sprintf@prec+1)^(0+128),f
 11256  0630  30FF               	movlw	255
 11257  0631  07C9               	addwf	(sprintf@prec+1)^(0+128),f
 11258  0632                     l3609:
 11259                           
 11260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11261  0632  0848               	movf	sprintf@prec^(0+128),w
 11262  0633  0449               	iorwf	(sprintf@prec+1)^(0+128),w
 11263  0634  1D03               	btfss	3,2
 11264  0635  2E37               	goto	u5681
 11265  0636  2E38               	goto	u5680
 11266  0637                     u5681:
 11267  0637  2E21               	goto	l3603
 11268  0638                     u5680:
 11269  0638  2FD6               	goto	l3689
 11270  0639                     l3611:
 11271                           
 11272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11273  0639  0834               	movf	sprintf@ap^(0+128),w
 11274  063A  0084               	movwf	4
 11275  063B  1383               	bcf	3,7	;select IRP bank0
 11276  063C  0800               	movf	0,w
 11277  063D  00AB               	movwf	??_sprintf^(0+128)
 11278  063E  0A84               	incf	4,f
 11279  063F  0800               	movf	0,w
 11280  0640  00AC               	movwf	(??_sprintf^(0+128)+1)
 11281  0641  082B               	movf	??_sprintf^(0+128),w
 11282  0642  00BD               	movwf	sprintf@val^(0+128)
 11283  0643  082C               	movf	(??_sprintf+1)^(0+128),w
 11284  0644  00BE               	movwf	(sprintf@val+1)^(0+128)
 11285  0645  3000               	movlw	0
 11286  0646  1BBE               	btfsc	(sprintf@val+1)^(0+128),7
 11287  0647  30FF               	movlw	255
 11288  0648  00BF               	movwf	(sprintf@val+2)^(0+128)
 11289  0649  00C0               	movwf	(sprintf@val+3)^(0+128)
 11290  064A                     l3613:
 11291  064A  3002               	movlw	2
 11292  064B  00AB               	movwf	??_sprintf^(0+128)
 11293  064C  082B               	movf	??_sprintf^(0+128),w
 11294  064D  07B4               	addwf	sprintf@ap^(0+128),f
 11295  064E                     l3615:
 11296                           
 11297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11298  064E  1FC0               	btfss	(sprintf@val+3)^(0+128),7
 11299  064F  2E51               	goto	u5691
 11300  0650  2E52               	goto	u5690
 11301  0651                     u5691:
 11302  0651  2E61               	goto	l3621
 11303  0652                     u5690:
 11304  0652                     l3617:
 11305                           
 11306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11307  0652  3003               	movlw	3
 11308  0653  04B5               	iorwf	sprintf@flag^(0+128),f
 11309  0654  3000               	movlw	0
 11310  0655  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
 11311  0656                     l3619:
 11312                           
 11313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11314  0656  09BD               	comf	sprintf@val^(0+128),f
 11315  0657  09BE               	comf	(sprintf@val+1)^(0+128),f
 11316  0658  09BF               	comf	(sprintf@val+2)^(0+128),f
 11317  0659  09C0               	comf	(sprintf@val+3)^(0+128),f
 11318  065A  0ABD               	incf	sprintf@val^(0+128),f
 11319  065B  1903               	skipnz
 11320  065C  0ABE               	incf	(sprintf@val+1)^(0+128),f
 11321  065D  1903               	skipnz
 11322  065E  0ABF               	incf	(sprintf@val+2)^(0+128),f
 11323  065F  1903               	skipnz
 11324  0660  0AC0               	incf	(sprintf@val+3)^(0+128),f
 11325  0661                     l3621:
 11326                           
 11327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 11328  0661  0848               	movf	sprintf@prec^(0+128),w
 11329  0662  0449               	iorwf	(sprintf@prec+1)^(0+128),w
 11330  0663  1D03               	btfss	3,2
 11331  0664  2E66               	goto	u5701
 11332  0665  2E67               	goto	u5700
 11333  0666                     u5701:
 11334  0666  2E75               	goto	l3627
 11335  0667                     u5700:
 11336  0667                     l3623:
 11337  0667  0840               	movf	(sprintf@val+3)^(0+128),w
 11338  0668  043F               	iorwf	(sprintf@val+2)^(0+128),w
 11339  0669  043E               	iorwf	(sprintf@val+1)^(0+128),w
 11340  066A  043D               	iorwf	sprintf@val^(0+128),w
 11341  066B  1D03               	skipz
 11342  066C  2E6E               	goto	u5711
 11343  066D  2E6F               	goto	u5710
 11344  066E                     u5711:
 11345  066E  2E75               	goto	l3627
 11346  066F                     u5710:
 11347  066F                     l3625:
 11348                           
 11349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11350  066F  3001               	movlw	1
 11351  0670  07C8               	addwf	sprintf@prec^(0+128),f
 11352  0671  1803               	skipnc
 11353  0672  0AC9               	incf	(sprintf@prec+1)^(0+128),f
 11354  0673  3000               	movlw	0
 11355  0674  07C9               	addwf	(sprintf@prec+1)^(0+128),f
 11356  0675                     l3627:
 11357                           
 11358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11359  0675  01CA               	clrf	sprintf@c^(0+128)
 11360  0676  0ACA               	incf	sprintf@c^(0+128),f
 11361  0677                     l3633:
 11362                           
 11363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11364  0677  084A               	movf	sprintf@c^(0+128),w
 11365  0678  00AB               	movwf	??_sprintf^(0+128)
 11366  0679  3001               	movlw	1
 11367  067A                     u5725:
 11368  067A  1003               	clrc
 11369  067B  0DAB               	rlf	??_sprintf^(0+128),f
 11370  067C  3EFF               	addlw	-1
 11371  067D  1D03               	skipz
 11372  067E  2E7A               	goto	u5725
 11373  067F  1003               	clrc
 11374  0680  0D2B               	rlf	??_sprintf^(0+128),w
 11375  0681  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11376  0682  0084               	movwf	4
 11377  0683  120A  118A  200D  120A  118A  	fcall	stringdir
 11378  0688  00AC               	movwf	(??_sprintf+1)^(0+128)
 11379  0689  120A  118A  200D  120A  118A  	fcall	stringdir
 11380  068E  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
 11381  068F  120A  118A  200D  120A  118A  	fcall	stringdir
 11382  0694  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
 11383  0695  120A  118A  200D  120A  118A  	fcall	stringdir
 11384  069A  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
 11385  069B  082F               	movf	(??_sprintf+4)^(0+128),w
 11386  069C  0240               	subwf	(sprintf@val+3)^(0+128),w
 11387  069D  1D03               	skipz
 11388  069E  2EA9               	goto	u5735
 11389  069F  082E               	movf	(??_sprintf+3)^(0+128),w
 11390  06A0  023F               	subwf	(sprintf@val+2)^(0+128),w
 11391  06A1  1D03               	skipz
 11392  06A2  2EA9               	goto	u5735
 11393  06A3  082D               	movf	(??_sprintf+2)^(0+128),w
 11394  06A4  023E               	subwf	(sprintf@val+1)^(0+128),w
 11395  06A5  1D03               	skipz
 11396  06A6  2EA9               	goto	u5735
 11397  06A7  082C               	movf	(??_sprintf+1)^(0+128),w
 11398  06A8  023D               	subwf	sprintf@val^(0+128),w
 11399  06A9                     u5735:
 11400  06A9  1803               	skipnc
 11401  06AA  2EAC               	goto	u5731
 11402  06AB  2EAD               	goto	u5730
 11403  06AC                     u5731:
 11404  06AC  2EAE               	goto	l3637
 11405  06AD                     u5730:
 11406  06AD  2EB8               	goto	l3639
 11407  06AE                     l3637:
 11408  06AE  3001               	movlw	1
 11409  06AF  00AB               	movwf	??_sprintf^(0+128)
 11410  06B0  082B               	movf	??_sprintf^(0+128),w
 11411  06B1  07CA               	addwf	sprintf@c^(0+128),f
 11412  06B2  300A               	movlw	10
 11413  06B3  064A               	xorwf	sprintf@c^(0+128),w
 11414  06B4  1D03               	btfss	3,2
 11415  06B5  2EB7               	goto	u5741
 11416  06B6  2EB8               	goto	u5740
 11417  06B7                     u5741:
 11418  06B7  2E77               	goto	l3633
 11419  06B8                     u5740:
 11420  06B8                     l3639:
 11421                           
 11422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11423  06B8  0849               	movf	(sprintf@prec+1)^(0+128),w
 11424  06B9  3A80               	xorlw	128
 11425  06BA  3C80               	sublw	128
 11426  06BB  1D03               	skipz
 11427  06BC  2EBF               	goto	u5755
 11428  06BD  0848               	movf	sprintf@prec^(0+128),w
 11429  06BE  024A               	subwf	sprintf@c^(0+128),w
 11430  06BF                     u5755:
 11431  06BF  1803               	skipnc
 11432  06C0  2EC2               	goto	u5751
 11433  06C1  2EC3               	goto	u5750
 11434  06C2                     u5751:
 11435  06C2  2ECA               	goto	l3643
 11436  06C3                     u5750:
 11437  06C3                     l3641:
 11438                           
 11439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11440  06C3  1683               	bsf	3,5	;RP0=1, select bank1
 11441  06C4  1303               	bcf	3,6	;RP1=0, select bank1
 11442  06C5  0848               	movf	sprintf@prec^(0+128),w
 11443  06C6  00AB               	movwf	??_sprintf^(0+128)
 11444  06C7  082B               	movf	??_sprintf^(0+128),w
 11445  06C8  00CA               	movwf	sprintf@c^(0+128)
 11446  06C9  2EE2               	goto	l3647
 11447  06CA                     l3643:
 11448  06CA  1683               	bsf	3,5	;RP0=1, select bank1
 11449  06CB  1303               	bcf	3,6	;RP1=0, select bank1
 11450  06CC  0849               	movf	(sprintf@prec+1)^(0+128),w
 11451  06CD  3A80               	xorlw	128
 11452  06CE  00AB               	movwf	??_sprintf^(0+128)
 11453  06CF  3080               	movlw	128
 11454  06D0  022B               	subwf	??_sprintf^(0+128),w
 11455  06D1  1D03               	skipz
 11456  06D2  2ED5               	goto	u5765
 11457  06D3  084A               	movf	sprintf@c^(0+128),w
 11458  06D4  0248               	subwf	sprintf@prec^(0+128),w
 11459  06D5                     u5765:
 11460  06D5  1803               	skipnc
 11461  06D6  2ED8               	goto	u5761
 11462  06D7  2ED9               	goto	u5760
 11463  06D8                     u5761:
 11464  06D8  2EE2               	goto	l3647
 11465  06D9                     u5760:
 11466  06D9                     l3645:
 11467                           
 11468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11469  06D9  1683               	bsf	3,5	;RP0=1, select bank1
 11470  06DA  1303               	bcf	3,6	;RP1=0, select bank1
 11471  06DB  084A               	movf	sprintf@c^(0+128),w
 11472  06DC  00AB               	movwf	??_sprintf^(0+128)
 11473  06DD  01AC               	clrf	(??_sprintf^(0+128)+1)
 11474  06DE  082B               	movf	??_sprintf^(0+128),w
 11475  06DF  00C8               	movwf	sprintf@prec^(0+128)
 11476  06E0  082C               	movf	(??_sprintf+1)^(0+128),w
 11477  06E1  00C9               	movwf	(sprintf@prec+1)^(0+128)
 11478  06E2                     l3647:
 11479                           
 11480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11481  06E2  1683               	bsf	3,5	;RP0=1, select bank1
 11482  06E3  1303               	bcf	3,6	;RP1=0, select bank1
 11483  06E4  0837               	movf	sprintf@width^(0+128),w
 11484  06E5  0438               	iorwf	(sprintf@width+1)^(0+128),w
 11485  06E6  1903               	btfsc	3,2
 11486  06E7  2EE9               	goto	u5771
 11487  06E8  2EEA               	goto	u5770
 11488  06E9                     u5771:
 11489  06E9  2EFC               	goto	l3653
 11490  06EA                     u5770:
 11491  06EA                     l3649:
 11492  06EA  3003               	movlw	3
 11493  06EB  0535               	andwf	sprintf@flag^(0+128),w
 11494  06EC  00AB               	movwf	??_sprintf^(0+128)
 11495  06ED  3000               	movlw	0
 11496  06EE  0536               	andwf	(sprintf@flag+1)^(0+128),w
 11497  06EF  00AC               	movwf	(??_sprintf+1)^(0+128)
 11498  06F0  082B               	movf	??_sprintf^(0+128),w
 11499  06F1  042C               	iorwf	(??_sprintf^(0+128)+1),w
 11500  06F2  1903               	btfsc	3,2
 11501  06F3  2EF5               	goto	u5781
 11502  06F4  2EF6               	goto	u5780
 11503  06F5                     u5781:
 11504  06F5  2EFC               	goto	l3653
 11505  06F6                     u5780:
 11506  06F6                     l3651:
 11507                           
 11508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11509  06F6  30FF               	movlw	255
 11510  06F7  07B7               	addwf	sprintf@width^(0+128),f
 11511  06F8  1803               	skipnc
 11512  06F9  0AB8               	incf	(sprintf@width+1)^(0+128),f
 11513  06FA  30FF               	movlw	255
 11514  06FB  07B8               	addwf	(sprintf@width+1)^(0+128),f
 11515  06FC                     l3653:
 11516                           
 11517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11518  06FC  1F36               	btfss	(sprintf@flag+1)^(0+128),6
 11519  06FD  2EFF               	goto	u5791
 11520  06FE  2F00               	goto	u5790
 11521  06FF                     u5791:
 11522  06FF  2F1B               	goto	l3661
 11523  0700                     u5790:
 11524  0700                     l3655:
 11525                           
 11526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11527  0700  0849               	movf	(sprintf@prec+1)^(0+128),w
 11528  0701  3A80               	xorlw	128
 11529  0702  00AB               	movwf	??_sprintf^(0+128)
 11530  0703  0838               	movf	(sprintf@width+1)^(0+128),w
 11531  0704  3A80               	xorlw	128
 11532  0705  022B               	subwf	??_sprintf^(0+128),w
 11533  0706  1D03               	skipz
 11534  0707  2F0A               	goto	u5805
 11535  0708  0837               	movf	sprintf@width^(0+128),w
 11536  0709  0248               	subwf	sprintf@prec^(0+128),w
 11537  070A                     u5805:
 11538  070A  1803               	skipnc
 11539  070B  2F0D               	goto	u5801
 11540  070C  2F0E               	goto	u5800
 11541  070D                     u5801:
 11542  070D  2F17               	goto	l3659
 11543  070E                     u5800:
 11544  070E                     l3657:
 11545                           
 11546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11547  070E  1683               	bsf	3,5	;RP0=1, select bank1
 11548  070F  1303               	bcf	3,6	;RP1=0, select bank1
 11549  0710  0848               	movf	sprintf@prec^(0+128),w
 11550  0711  02B7               	subwf	sprintf@width^(0+128),f
 11551  0712  0849               	movf	(sprintf@prec+1)^(0+128),w
 11552  0713  1C03               	skipc
 11553  0714  03B8               	decf	(sprintf@width+1)^(0+128),f
 11554  0715  02B8               	subwf	(sprintf@width+1)^(0+128),f
 11555  0716  2F1B               	goto	l3661
 11556  0717                     l3659:
 11557                           
 11558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11559  0717  1683               	bsf	3,5	;RP0=1, select bank1
 11560  0718  1303               	bcf	3,6	;RP1=0, select bank1
 11561  0719  01B7               	clrf	sprintf@width^(0+128)
 11562  071A  01B8               	clrf	(sprintf@width+1)^(0+128)
 11563  071B                     l3661:
 11564                           
 11565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11566  071B  0838               	movf	(sprintf@width+1)^(0+128),w
 11567  071C  3A80               	xorlw	128
 11568  071D  3C80               	sublw	128
 11569  071E  1D03               	skipz
 11570  071F  2F22               	goto	u5815
 11571  0720  0837               	movf	sprintf@width^(0+128),w
 11572  0721  024A               	subwf	sprintf@c^(0+128),w
 11573  0722                     u5815:
 11574  0722  1803               	skipnc
 11575  0723  2F25               	goto	u5811
 11576  0724  2F26               	goto	u5810
 11577  0725                     u5811:
 11578  0725  2F32               	goto	l3665
 11579  0726                     u5810:
 11580  0726                     l3663:
 11581                           
 11582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11583  0726  1683               	bsf	3,5	;RP0=1, select bank1
 11584  0727  1303               	bcf	3,6	;RP1=0, select bank1
 11585  0728  084A               	movf	sprintf@c^(0+128),w
 11586  0729  00AB               	movwf	??_sprintf^(0+128)
 11587  072A  01AC               	clrf	(??_sprintf^(0+128)+1)
 11588  072B  082B               	movf	??_sprintf^(0+128),w
 11589  072C  02B7               	subwf	sprintf@width^(0+128),f
 11590  072D  082C               	movf	(??_sprintf+1)^(0+128),w
 11591  072E  1C03               	skipc
 11592  072F  03B8               	decf	(sprintf@width+1)^(0+128),f
 11593  0730  02B8               	subwf	(sprintf@width+1)^(0+128),f
 11594  0731  2F36               	goto	l3667
 11595  0732                     l3665:
 11596                           
 11597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11598  0732  1683               	bsf	3,5	;RP0=1, select bank1
 11599  0733  1303               	bcf	3,6	;RP1=0, select bank1
 11600  0734  01B7               	clrf	sprintf@width^(0+128)
 11601  0735  01B8               	clrf	(sprintf@width+1)^(0+128)
 11602  0736                     l3667:
 11603                           
 11604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11605  0736  0837               	movf	sprintf@width^(0+128),w
 11606  0737  0438               	iorwf	(sprintf@width+1)^(0+128),w
 11607  0738  1903               	btfsc	3,2
 11608  0739  2F3B               	goto	u5821
 11609  073A  2F3C               	goto	u5820
 11610  073B                     u5821:
 11611  073B  2F53               	goto	l3675
 11612  073C                     u5820:
 11613  073C                     l3669:
 11614                           
 11615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11616  073C  3020               	movlw	32
 11617  073D  00AB               	movwf	??_sprintf^(0+128)
 11618  073E  0847               	movf	sprintf@sp^(0+128),w
 11619  073F  0084               	movwf	4
 11620  0740  082B               	movf	??_sprintf^(0+128),w
 11621  0741  1383               	bcf	3,7	;select IRP bank0
 11622  0742  0080               	movwf	0
 11623  0743                     l3671:
 11624  0743  3001               	movlw	1
 11625  0744  00AB               	movwf	??_sprintf^(0+128)
 11626  0745  082B               	movf	??_sprintf^(0+128),w
 11627  0746  07C7               	addwf	sprintf@sp^(0+128),f
 11628  0747                     l3673:
 11629  0747  30FF               	movlw	255
 11630  0748  07B7               	addwf	sprintf@width^(0+128),f
 11631  0749  1803               	skipnc
 11632  074A  0AB8               	incf	(sprintf@width+1)^(0+128),f
 11633  074B  30FF               	movlw	255
 11634  074C  07B8               	addwf	(sprintf@width+1)^(0+128),f
 11635  074D  0837               	movf	sprintf@width^(0+128),w
 11636  074E  0438               	iorwf	(sprintf@width+1)^(0+128),w
 11637  074F  1D03               	btfss	3,2
 11638  0750  2F52               	goto	u5831
 11639  0751  2F53               	goto	u5830
 11640  0752                     u5831:
 11641  0752  2F3C               	goto	l3669
 11642  0753                     u5830:
 11643  0753                     l3675:
 11644                           
 11645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11646  0753  3003               	movlw	3
 11647  0754  0535               	andwf	sprintf@flag^(0+128),w
 11648  0755  00AB               	movwf	??_sprintf^(0+128)
 11649  0756  3000               	movlw	0
 11650  0757  0536               	andwf	(sprintf@flag+1)^(0+128),w
 11651  0758  00AC               	movwf	(??_sprintf+1)^(0+128)
 11652  0759  082B               	movf	??_sprintf^(0+128),w
 11653  075A  042C               	iorwf	(??_sprintf^(0+128)+1),w
 11654  075B  1903               	btfsc	3,2
 11655  075C  2F5E               	goto	u5841
 11656  075D  2F5F               	goto	u5840
 11657  075E                     u5841:
 11658  075E  2FC8               	goto	l3687
 11659  075F                     u5840:
 11660  075F                     l3677:
 11661                           
 11662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11663  075F  302D               	movlw	45
 11664  0760  00AB               	movwf	??_sprintf^(0+128)
 11665  0761  0847               	movf	sprintf@sp^(0+128),w
 11666  0762  0084               	movwf	4
 11667  0763  082B               	movf	??_sprintf^(0+128),w
 11668  0764  1383               	bcf	3,7	;select IRP bank0
 11669  0765  0080               	movwf	0
 11670  0766                     l3679:
 11671  0766  3001               	movlw	1
 11672  0767  00AB               	movwf	??_sprintf^(0+128)
 11673  0768  082B               	movf	??_sprintf^(0+128),w
 11674  0769  07C7               	addwf	sprintf@sp^(0+128),f
 11675  076A  2FC8               	goto	l3687
 11676  076B                     l3681:
 11677                           
 11678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11679  076B  3000               	movlw	0
 11680  076C  1283               	bcf	3,5	;RP0=0, select bank0
 11681  076D  1303               	bcf	3,6	;RP1=0, select bank0
 11682  076E  00A3               	movwf	___llmod@divisor+3
 11683  076F  3000               	movlw	0
 11684  0770  00A2               	movwf	___llmod@divisor+2
 11685  0771  3000               	movlw	0
 11686  0772  00A1               	movwf	___llmod@divisor+1
 11687  0773  300A               	movlw	10
 11688  0774  00A0               	movwf	___llmod@divisor
 11689  0775  1683               	bsf	3,5	;RP0=1, select bank1
 11690  0776  1303               	bcf	3,6	;RP1=0, select bank1
 11691  0777  0848               	movf	sprintf@prec^(0+128),w
 11692  0778  00AB               	movwf	??_sprintf^(0+128)
 11693  0779  3001               	movlw	1
 11694  077A                     u5855:
 11695  077A  1003               	clrc
 11696  077B  0DAB               	rlf	??_sprintf^(0+128),f
 11697  077C  3EFF               	addlw	-1
 11698  077D  1D03               	skipz
 11699  077E  2F7A               	goto	u5855
 11700  077F  1003               	clrc
 11701  0780  0D2B               	rlf	??_sprintf^(0+128),w
 11702  0781  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11703  0782  0084               	movwf	4
 11704  0783  120A  118A  200D  120A  118A  	fcall	stringdir
 11705  0788  00F0               	movwf	___lldiv@divisor
 11706  0789  120A  118A  200D  120A  118A  	fcall	stringdir
 11707  078E  00F1               	movwf	___lldiv@divisor+1
 11708  078F  120A  118A  200D  120A  118A  	fcall	stringdir
 11709  0794  00F2               	movwf	___lldiv@divisor+2
 11710  0795  120A  118A  200D  120A  118A  	fcall	stringdir
 11711  079A  00F3               	movwf	___lldiv@divisor+3
 11712  079B  0840               	movf	(sprintf@val+3)^(0+128),w
 11713  079C  00F7               	movwf	___lldiv@dividend+3
 11714  079D  083F               	movf	(sprintf@val+2)^(0+128),w
 11715  079E  00F6               	movwf	___lldiv@dividend+2
 11716  079F  083E               	movf	(sprintf@val+1)^(0+128),w
 11717  07A0  00F5               	movwf	___lldiv@dividend+1
 11718  07A1  083D               	movf	sprintf@val^(0+128),w
 11719  07A2  00F4               	movwf	___lldiv@dividend
 11720  07A3  160A  158A  2550  120A  118A  	fcall	___lldiv
 11721  07A8  0873               	movf	?___lldiv+3,w
 11722  07A9  1283               	bcf	3,5	;RP0=0, select bank0
 11723  07AA  1303               	bcf	3,6	;RP1=0, select bank0
 11724  07AB  00A7               	movwf	___llmod@dividend+3
 11725  07AC  0872               	movf	?___lldiv+2,w
 11726  07AD  00A6               	movwf	___llmod@dividend+2
 11727  07AE  0871               	movf	?___lldiv+1,w
 11728  07AF  00A5               	movwf	___llmod@dividend+1
 11729  07B0  0870               	movf	?___lldiv,w
 11730  07B1  00A4               	movwf	___llmod@dividend
 11731  07B2  120A  118A  20C5  120A  118A  	fcall	___llmod
 11732  07B7  1283               	bcf	3,5	;RP0=0, select bank0
 11733  07B8  1303               	bcf	3,6	;RP1=0, select bank0
 11734  07B9  0820               	movf	?___llmod,w
 11735  07BA  3E30               	addlw	48
 11736  07BB  1683               	bsf	3,5	;RP0=1, select bank1
 11737  07BC  1303               	bcf	3,6	;RP1=0, select bank1
 11738  07BD  00AC               	movwf	(??_sprintf+1)^(0+128)
 11739  07BE  082C               	movf	(??_sprintf+1)^(0+128),w
 11740  07BF  00CA               	movwf	sprintf@c^(0+128)
 11741  07C0                     l3683:
 11742                           
 11743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11744  07C0  084A               	movf	sprintf@c^(0+128),w
 11745  07C1  00AB               	movwf	??_sprintf^(0+128)
 11746  07C2  0847               	movf	sprintf@sp^(0+128),w
 11747  07C3  0084               	movwf	4
 11748  07C4  082B               	movf	??_sprintf^(0+128),w
 11749  07C5  1383               	bcf	3,7	;select IRP bank0
 11750  07C6  0080               	movwf	0
 11751  07C7  2F66               	goto	l3679
 11752  07C8                     l3687:
 11753                           
 11754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11755  07C8  30FF               	movlw	255
 11756  07C9  07C8               	addwf	sprintf@prec^(0+128),f
 11757  07CA  1803               	skipnc
 11758  07CB  0AC9               	incf	(sprintf@prec+1)^(0+128),f
 11759  07CC  30FF               	movlw	255
 11760  07CD  07C9               	addwf	(sprintf@prec+1)^(0+128),f
 11761  07CE  0A48               	incf	sprintf@prec^(0+128),w
 11762  07CF  1D03               	skipz
 11763  07D0  2FD5               	goto	u5861
 11764  07D1  0A49               	incf	(sprintf@prec+1)^(0+128),w
 11765  07D2  1D03               	btfss	3,2
 11766  07D3  2FD5               	goto	u5861
 11767  07D4  2FD6               	goto	u5860
 11768  07D5                     u5861:
 11769  07D5  2F6B               	goto	l3681
 11770  07D6                     u5860:
 11771  07D6                     l3689:
 11772                           
 11773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11774  07D6  3001               	movlw	1
 11775  07D7  07A0               	addwf	sprintf@f^(0+128),f
 11776  07D8  30FF               	movlw	-1
 11777  07D9  0720               	addwf	sprintf@f^(0+128),w
 11778  07DA  0084               	movwf	4
 11779  07DB  120A  118A  200D  120A  118A  	fcall	stringdir
 11780  07E0  00AB               	movwf	??_sprintf^(0+128)
 11781  07E1  082B               	movf	??_sprintf^(0+128),w
 11782  07E2  00CA               	movwf	sprintf@c^(0+128)
 11783  07E3  084A               	movf	sprintf@c^(0+128),w
 11784  07E4  1D03               	btfss	3,2
 11785  07E5  2FE7               	goto	u5871
 11786  07E6  2FEA               	goto	u5870
 11787  07E7                     u5871:
 11788  07E7  160A  118A  2D48   	goto	l3409
 11789  07EA                     u5870:
 11790  07EA                     l3691:
 11791                           
 11792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11793  07EA  0847               	movf	sprintf@sp^(0+128),w
 11794  07EB  0084               	movwf	4
 11795  07EC  1383               	bcf	3,7	;select IRP bank0
 11796  07ED  0180               	clrf	0
 11797  07EE                     l422:
 11798  07EE  0008               	return
 11799  07EF                     __end_of_sprintf:

Data Sizes:
    Strings     32
    Constant    144
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     46      75
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_2(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> data(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[13]), data(BANK1[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> data(BANK1[20]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _setup->_spiInit
    _leer_ADC->___xxtofl
    _Write_USART_String->_Write_USART
    _Sensor->___xxtofl
    _Lcd_Write_String->_LCD_CMD
    _LCD_CMD->_Puerto
    _Lcd_Set_Cursor->_datosLCD
    _Lcd_Init->_datosLCD
    _LCD_clean->_datosLCD
    _datosLCD->_Puerto
    _Conteo->_spiWrite

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34956
                                             43 BANK1      3     3      0
                            _Baudios
                             _Conteo
                          _LCD_clean
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _OSCILADOR
                             _Sensor
                        _Write_USART
                 _Write_USART_String
                       _config_rcsta
                       _config_txsta
                           _leer_ADC
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   31824
                                              0 BANK1     43    32     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _leer_ADC                                             4     4      0     572
                                              0 BANK0      4     4      0
                           ___xxtofl
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _config_txsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rcsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     264
                                              1 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Sensor                                               8     4      4     572
                                              0 BANK0      8     4      4
                           ___xxtofl
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
                            _spiRead (ARG)
 ---------------------------------------------------------------------------------
 (1) _OSCILADOR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     198
                                              1 COMMON     2     2      0
                             _Puerto
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     484
                                              4 COMMON     4     3      1
                           _datosLCD
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                           _datosLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_clean                                            0     0      0     198
                           _datosLCD
 ---------------------------------------------------------------------------------
 (2) _datosLCD                                             3     3      0     198
                                              1 COMMON     3     3      0
                             _Puerto
 ---------------------------------------------------------------------------------
 (3) _Puerto                                               1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Conteo                                               2     2      0      22
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Baudios                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Baudios
   _Conteo
     _spiRead
       _spiReceiveWait
     _spiWrite
   _LCD_clean
     _datosLCD
       _Puerto
   _Lcd_Init
     _datosLCD
       _Puerto
   _Lcd_Set_Cursor
     _datosLCD
       _Puerto
   _Lcd_Write_String
     _LCD_CMD
       _Puerto
   _OSCILADOR
   _Sensor
     ___xxtofl
       _spiRead (ARG)
         _spiReceiveWait
     _spiRead
       _spiReceiveWait
     _spiWrite
   _Write_USART
   _Write_USART_String
     _Write_USART
   _config_rcsta
   _config_txsta
   _leer_ADC
     ___xxtofl
       _spiRead (ARG)
         _spiReceiveWait
     _spiRead
       _spiReceiveWait
     _spiWrite
   _setup
     _spiInit
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         _spiRead (ARG)
           _spiReceiveWait
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
       _spiRead (ARG)
         _spiReceiveWait
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2E      4B       7       93.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 18:27:28 2021

                          pc 0002                  _SSPSTATbits 0094                           l90 1B4B  
                         l91 1B51                           l92 1B52                           l93 1B58  
                         l85 1B3A                           l94 1B59                           l86 1B3D  
                         l95 1B5F                           l87 1B43                           l96 1B60  
                         l88 1B44                           l97 1B66                           l89 1B4A  
                         l98 1B67                           l99 1B6D                 ___awdiv@sign 0021  
                         fsr 0004          ___wmul@multiplicand 0072          __Umul8_16@word_mpld 0076  
       __size_of_Write_USART 000C                          l101 1B6E                          l110 197A  
                        l104 19BF                          l113 1E88                          l210 193C  
                        l107 19E1                          l131 1956                          l203 199D  
                        l140 196D                          l204 19A2                          l221 1008  
                        l213 0805                          l125 1BB0                          l134 1944  
                        l207 1936                          l119 1A05                          l128 1930  
                        l137 1963                          l146 1AC4                          l330 0C9E  
                        l323 12B5                          l181 1C42                          l422 07EE  
                        l175 1A29                          l184 1AF6                          l600 0902  
                        l352 1605                          l169 013E                          l178 1935  
                        l426 1A5A                          l187 1D4F                          l612 1C5F  
                        l620 1091                          l428 1A72                          l613 1C7B  
                        l621 10AA                          l614 1C90                          l462 1DB5  
                        l607 0932                          l392 04A6                          l617 1025  
                        l625 1961                          l385 0462                          l643 1FFF  
                        l636 086C                          l644 1F71                          l732 1BF4  
                        l629 0881                          l654 1FF2                          l742 1B30  
                        l639 0881                          l647 1FC2                          l592 1CE9  
                        l753 1319                          l913 198C                          l906 1F0C  
                        l682 011A                          l907 1F18                          l579 1E1E  
                        l596 093F                          l757 13C0                          l597 08A4  
                        l861 0FF3                          l774 148B                          l766 153D  
                        l870 1A99                          l759 1397                          l855 0F6B  
                        l784 14D1                          l849 0FFF                          l778 14AF  
                        l795 1531                          l787 150F                          l796 153D  
                        l868 1A87                          l893 1EAB                          l895 1F42  
                        l799 1A4D                          l899 1EF0                          _RD0 0040  
                        _RD1 0041                          _RD2 0042                          _RE0 0048  
                        _RD3 0043                          _RE1 0049                          _RD4 0044  
                        _RD5 0045                          _RD6 0046                          _RD7 0047  
                        fsr0 0004                          indf 0000                 ___awmod@sign 0076  
               ___flmul@aexp 0036                 ___flmul@bexp 0037                 ___flmul@sign 0031  
               ___flmul@temp 003C                 ___flmul@prod 0038  __size_of_Write_USART_String 002B  
            __end_of_LCD_CMD 19C0                 ___fltol@exp1 005B                         l3001 198B  
                       l3011 1F5F                         l3021 1F87                         l3005 1F43  
                       l3111 1A50                         l3103 0927                         l3031 1FB3  
                       l3023 1F89                         l3007 1F56                         l2401 1B32  
                       l3201 083C                         l3113 1A54                         l3105 0937  
                       l3033 1FB4                         l3025 1F92                         l3017 1F72  
                       l2411 1B56                         l2403 1B36                         l3203 0840  
                       l3211 085A                         l3131 1D74                         l3123 1D50  
                       l3115 1A61                         l3051 1FE7                         l3043 1FCE  
                       l3035 1FBC                         l3027 1F9B                         l3019 1F78  
                       l2413 1B5D                         l2405 1B41                         l3301 1E3D  
                       l3221 0876                         l3141 1DA7                         l3133 1D7D  
                       l3125 1D60                         l3117 1A68                         l3109 1A4E  
                       l3053 1FF7                         l3037 1FC6                         l3045 1FE0  
                       l3029 1FA9                         l2421 1DB6                         l2415 1B64  
                       l2407 1B48                         l3311 1E63                         l3303 1E42  
                       l3151 1C73                         l3135 1D8F                         l3127 1D63  
                       l3143 1DAD                         l3231 00E3                         l3223 00C5  
                       l3119 1A6E                         l3071 08AD                         l3063 0898  
                       l2511 1BC3                         l2503 1BB1                         l2431 1DC8  
                       l2423 1DB9                         l2417 1B6B                         l2409 1B4F  
                       l3313 1E72                         l3305 1E4D                         l3321 19E8  
                       l3401 1CFD                         l3153 1C8D                         l3161 101D  
                       l2601 132B                         l3217 0861                         l3209 0848  
                       l3137 1D9D                         l3129 1D70                         l3233 00F5  
                       l3225 00CF                         l3081 08E4                         l3073 08BE  
                       l3057 0882                         l2521 1BE3                         l2513 1BC7  
                       l2505 1BB3                         l2441 1DDC                         l2433 1DCD  
                       l2425 1DBD                         l2419 1936                         l3315 1E78  
                       l3307 1E53                         l3323 19ED                         l3331 1B6F  
                       l3251 1E8F                         l3403 1D2A                         l3155 1C8F  
                       l3147 1C43                         l3171 106D                         l3163 1039  
                       l2611 133F                         l2603 132F                         l3243 1A2A  
                       l3219 0871                         l3139 1D9E                         l3235 0103  
                       l3227 00D2                         l3083 08F2                         l3075 08C0  
                       l3059 088F                         l2523 1BEA                         l2515 1BCB  
                       l2507 1BB9                         l2531 1AFD                         l2451 1E02  
                       l2443 1DE3                         l2435 1DD1                         l2427 1DC2  
                       l3411 154E                         l3317 1E83                         l3309 1E5E  
                       l3325 19F4                         l3333 1B72                         l3261 1EBC  
                       l3253 1E93                         l3341 194D                         l3149 1C57  
                       l3173 10A7                         l3165 1041                         l3181 195F  
                       l2701 14B8                         l2621 1353                         l2613 1343  
                       l2605 1333                         l3245 1A2E                         l3237 010C  
                       l3229 00DF                         l3085 08F3                         l3077 08C9  
                       l3069 08A5                         l2517 1BDC                         l2509 1BBC  
                       l2525 1BF0                         l2541 1B19                         l2533 1B00  
                       l2461 1E1A                         l2453 1E03                         l2445 1DE7  
                       l2437 1DD3                         l2429 1DC4                         l3501 17EA  
                       l3421 1572                         l3413 1555                         l3327 19FA  
                       l3319 19E3                         l3335 1B8E                         l3271 1EE7  
                       l3263 1EC1                         l3255 1EA3                         l3351 1AAD  
                       l3343 193D                         l3175 10A9                         l3167 1045  
                       l3159 1009                         l3183 1961                         l2711 14C8  
                       l2703 14BD                         l2631 1364                         l2623 1357  
                       l2615 1347                         l2607 1337                         l2551 12B6  
                       l3239 0112                         l3095 090E                         l3087 08FC  
                       l3079 08D2                         l2391 1A7D                         l2519 1BE2  
                       l2543 1B1F                         l2535 1B07                         l2455 1E0A  
                       l2447 1DEB                         l2439 1DD9                         l2471 1C9B  
                       l3511 0255                         l3503 01E9                         l3431 15BC  
                       l3423 1587                         l3415 155A                         l3407 1541  
                       _ADC1 006F                         _ADC2 006E                         l3329 19FF  
                       l3337 1B94                         l3281 1F1A                         l3273 1EF7  
                       l3265 1ECE                         l3257 1EB3                         l3249 1E8A  
                       l3353 1AB1                         l3345 1943                         l3361 1A19  
                       l3169 1069                         l2721 14E9                         l2713 14CE  
                       l2705 14BF                         l2641 13AA                         l2633 137B  
                       l2625 135B                         l2617 134B                         l2609 133B  
                       l2561 12CD                         l2553 12BD                         l3193 081C  
                       l3089 0906                         l3097 0920                         l2393 1A81  
                       l2801 0DAA                         l2545 1B26                         l2537 1B0B  
                       l2529 1AF7                         l2449 1DFC                         l2457 1E10  
                       l2481 1CAF                         l2473 1C9D                         l2465 1C91  
                       l3601 0619                         l3521 02A3                         l3513 025E  
                       l3505 0204                         l3441 15EC                         l3433 15BD  
                       l3425 159A                         l3417 155E                         l3409 1548  
                       l3339 192C                         l3283 1F30                         l3275 1F02  
                       l3267 1ED5                         l3347 1A9A                         l3371 1A20  
                       l3363 1A1A                         l3355 1A06                         l3179 1957  
                       l2731 1521                         l2723 14ED                         l2707 14C3  
                       l2651 13C9                         l2643 13AB                         l2635 139B  
                       l2627 135F                         l2619 134F                         l2571 12E5  
                       l2563 12D2                         l2555 12C3                         l3195 0831  
                       l3187 0806                         l2395 1A90                         l2387 1A74  
                       l2811 0E0C                         l2803 0DC6                         l2539 1B0F  
                       l2547 1B2C                         l2459 1E15                         l2491 1CCE  
                       l2483 1CB6                         l2475 1CA1                         l2467 1C92  
                       l3603 0621                         l3515 0266                         l3507 022B  
                       l3523 02AC                         l3611 0639                         l3451 1607  
                       l3443 15F0                         l3435 15C1                         l3427 159E  
                       l3419 156E                         l3381 1AD7                         l2901 19C4  
                       l3293 196E                         l3373 1931                         l3285 1F35  
                       l3277 1F06                         l3269 1ED9                         l3349 1A9C  
                       l3365 1A1D                         l3357 1A15                         l2741 1538  
                       l2733 1526                         l2725 150B                         l2717 14D6  
                       l2709 14C4                         l2661 13F1                         l2645 13B4  
                       l2637 13A4                         l2629 1363                         l2581 12FB  
                       l2573 12EA                         l2565 12DA                         l2557 12C7  
                       l3197 0832                         l3189 0813                         l2397 1A95  
                       l2389 1A76                         l2821 0E9C                         l2813 0E29  
                       l2805 0DCF                         l2493 1CD5                         l2485 1CBA  
                       l2477 1CA6                         l2469 1C96                         l3621 0661  
                       l3613 064A                         l3605 0628                         l3541 0373  
                       l3525 02E1                         l3517 0284                         l3509 023A  
                       l3461 164D                         l3453 1629                         l3437 15C4  
                       l3445 1601                         l3429 15AE                         l3701 011B  
                       l3383 1AEA                         l3375 1AC5                         l2911 19D8  
                       l2903 19CA                         l3295 1E1F                         l3287 1F39  
                       l3279 1F10                         l3391 1C08                         l3367 1A1E  
                       l3359 1A18                         l2743 153C                         l2735 1527  
                       l2727 1514                         l2719 14DB                         l2671 140A  
                       l2663 13FA                         l2655 13D2                         l2639 13A6  
                       l2647 13B8                         l2591 130F                         l2583 12FC  
                       l2575 12F0                         l2567 12DB                         l2559 12C8  
                       l3199 083A                         l2831 0F2E                         l2823 0EC9  
                       l2815 0E42                         l2807 0DDF                         l2751 0CB0  
                       l2487 1CBE                         l2479 1CAC                         l2495 1CDB  
                       l3623 0667                         l3615 064E                         l3607 062C  
                       l3551 03B0                         l3543 038E                         l3535 0332  
                       l3527 032E                         l3471 168B                         l3463 1651  
                       l3455 1637                         l3447 1603                         l3439 15D9  
                       l3711 019C                         l3703 012A                         l3377 1AC8  
                       l2905 19CD                         l3297 1E28                         l3289 1F3A  
                       l2913 1963                         l3393 1C35                         l3385 1BF5  
                       l2921 1997                         l3369 1A1F                         l2737 152B  
                       l2729 1519                         l2681 146E                         l2665 13FC  
                       l2657 13E9                         l2649 13C4                         l2673 140F  
                       l2585 1301                         l2593 1311                         l2577 12F1  
                       l2569 12DD                         l2833 0F37                         l2841 0F4B  
                       l2825 0EEF                         l2817 0E5F                         l2809 0DFC  
                       l2761 0CC5                         l2753 0CB1                         l2745 0C9F  
                       l2497 1CE0                         l2489 1CC8                         l3641 06C3  
                       l3633 0677                         l3625 066F                         l3617 0652  
                       l3609 0632                         l3561 03D7                         l3545 0394  
                       l3529 0330                         l3481 16DB                         l3473 16A4  
                       l3465 166A                         l3457 163B                         l3721 01C2  
                       l3713 01A4                         l3705 012F                         l2931 1005  
                       l3379 1AD1                         l2907 19D1                         l3299 1E2E  
                       l3395 1CEA                         l2915 1969                         l3387 1BF8  
                       l2923 1999                         l2739 152D                         l2691 14A1  
                       l2675 1425                         l2683 147D                         l2667 1400  
                       l2659 13ED                         l2595 131F                         l2587 1306  
                       l2579 12F7                         l2843 0F4F                         l2835 0F3B  
                       l2827 0F17                         l2819 0E8C                         l2771 0CDD  
                       l2763 0CCD                         l2755 0CB6                         l2747 0CA6  
                       l2499 1CE5                         l3651 06F6                         l3643 06CA  
                       l3627 0675                         l3619 0656                         l3571 0473  
                       l3563 03DC                         l3547 03A0                         l3555 03B5  
                       l3539 0369                         l3491 1768                         l3483 16DF  
                       l3475 16AF                         l3467 1683                         l3459 163F  
                       l3723 01D7                         l3715 01AD                         l3707 0155  
                       l2909 19D4                         l3397 1CED                         l3389 1C02  
                       l2925 199C                         l2917 198E                         l2693 14AA  
                       l2685 1493                         l2677 1463                         l2669 1401  
                       l2597 1323                         l2589 130E                         l2861 0FA0  
                       l2853 0F70                         l2845 0F50                         l2837 0F3C  
                       l2829 0F20                         l2781 0CF9                         l2773 0CE2  
                       l2765 0CD2                         l2757 0CBB                         l2749 0CAC  
                       l3661 071B                         l3653 06FC                         l3645 06D9  
                       l3637 06AE                         l3581 04A0                         l3573 0477  
                       l3565 0417                         l3557 03C2                         l3549 03A7  
                       l3493 1771                         l3485 16E5                         l3477 16B5  
                       l3469 1687                         l3717 01B6                         l3709 015E  
                       l2927 0801                         l3399 1CF7                         l2919 1995  
                       l2695 14AE                         l2687 1498                         l2679 1469  
                       l2599 1327                         l2871 0FD7                         l2855 0F75  
                       l2863 0FA6                         l2847 0F54                         l2839 0F45  
                       l2791 0D1C                         l2783 0CFE                         l2775 0CE7  
                       l2767 0CD8                         l2759 0CC3                         l2943 11C1  
                       l2935 10AE                         l3671 0743                         l3663 0726  
                       l3655 0700                         l3647 06E2                         l3639 06B8  
                       l3591 04DD                         l3583 04AF                         l3575 047D  
                       l3567 0456                         l3559 03D0                         l3495 178C  
                       l3487 1704                         l3479 16C8                         l3719 01BC  
                       l2929 1000                         l2697 14B3                         l2881 0FF7  
                       l2873 0FD9                         l2865 0FB3                         l2857 0F83  
                       l2849 0F68                         l2793 0D29                         l2785 0D03  
                       l2777 0CEF                         l2769 0CDC                         l2945 11C7  
                       l2937 10B4                         l2953 0943                         l3681 076B  
                       l3673 0747                         l3665 0732                         l3657 070E  
                       l3649 06EA                         l3593 0538                         l3585 04B4  
                       l3577 048A                         l3569 046A                         l3489 174F  
                       l3497 1794                         l2891 19B0                         l2699 14B6  
                       l2875 0FE7                         l2867 0FBE                         l2859 0F87  
                       l2795 0D46                         l2779 0CF1                         l2971 0AC7  
                       l2955 0947                         l3683 07C0                         l3675 0753  
                       l3667 0736                         l3659 0717                         l3595 0573  
                       l3587 04BB                         l3579 0499                         l3499 17A3  
                       l3691 07EA                         l3755 161B                         l2893 19B4  
                       l2885 19A4                         l2877 0FEB                         l2869 0FCD  
                       l2797 0D62                         l2789 0D0C                         l2949 1272  
                       l2965 0A38                         l2957 0949                         l3677 075F  
                       l3669 073C                         l3597 05B2                         l3589 04BF  
                       l2895 19B7                         l2887 19A7                         l2879 0FEC  
                       l2799 0D8E                         l2983 0BE3                         l2967 0A3F  
                       l2959 0950                         l2975 0AF4                         l3679 0766  
                       l3687 07C8                         l3599 05BE                         l2897 19BB  
                       l2889 19AD                         l2993 197C                         l2985 0BEA  
                       l2977 0AFB                         l3689 07D6                         l2899 19C1  
                       l2995 197D                         l2997 1983                         l2989 0C72  
                       l2999 1989                         STR_1 00B6                         STR_2 00A3  
                       STR_3 00B6                         u3000 1B48                         u3001 1B47  
                       u3010 1B4F                         u3011 1B4E                         u3020 1B56  
                       u3021 1B55                         u3030 1B5D                         u3110 1DEB  
                       u3031 1B5C                         u3111 1DEA                         u3040 1B64  
                       u3041 1B63                         u3105 1DDD                         u3050 1B6B  
                       u3130 1DFC                         u3210 1CBE                         u3051 1B6A  
                       u4011 0E51                         u3131 1DFB                         u3211 1CBD  
                       u3060 193C                         u4100 0F3B                         u4012 0E58  
                       u3300 1BDC                         u3220 1CC8                         u3061 193B  
                       u4101 0F3A                         u4021 0E7E                         u4013 0E5F  
                       u4005 0E2B                         u3301 1BDB                         u3125 1DEC  
                       u3221 1CC7                         u3205 1CB0                         u4022 0E85  
                       u3150 1E10                         u3070 1DBD                         u4031 0EAB  
                       u4023 0E8C                         u3151 1E0F                         u3135 1DF8  
                       u3071 1DBC                         u3400 12CD                         u5000 082A  
                       u4200 0FCD                         u4120 0F4F                         u4040 0ED5  
                       u4032 0EB2                         u3320 1BF0                         u3160 1E15  
                       u3080 1DC8                         u3240 1CDB                         u3401 12CC  
                       u4201 0FCC                         u4121 0F4E                         u4033 0EB9  
                       u3321 1BEF                         u3305 1BD8                         u3161 1E14  
                       u3145 1E04                         u3081 1DC7                         u3241 1CDA  
                       u3225 1CC4                         u3410 12D2                         u5010 0840  
                       u4210 0FEB                         u4130 0F54                         u3330 1AFD  
                       u3090 1DD9                         u3250 1CE0                         u3170 1C96  
                       u3411 12D1                         u5011 083F                         u4211 0FEA  
                       u4131 0F53                         u4115 0F3E                         u4051 0EE1  
                       u3315 1BE4                         u3331 1AFC                         u3091 1DD8  
                       u3251 1CDF                         u3235 1CCF                         u3171 1C95  
                       u4220 1969                         u3500 1387                         u3420 12F0  
                       u5020 0847                         u4140 0F68                         u4060 0EFD  
                       u4052 0EE8                         u3260 1BB9                         u3180 1CA1  
                       u4221 1968                         u3421 12EF                         u5021 0846  
                       u5005 0825                         u4205 0FC9                         u4141 0F67  
                       u4053 0EEF                         u4045 0ED0                         u3261 1BB8  
                       u3181 1CA0                         u4230 1995                         u3510 139B  
                       u3430 12FB                         u5110 00E3                         u4150 0F6F  
                       u3350 1B0F                         u3190 1CAC                         u4231 1994  
                       u3511 139A                         u3431 12FA                         u5111 00E2  
                       u4151 0F6E                         u4071 0F09                         u3351 1B0E  
                       u3191 1CAB                         u3600 1400                         u3520 13AA  
                       u3440 1301                         u5040 0859                         u5120 00F5  
                       u4160 0F75                         u4072 0F10                         u3280 1BCB  
                       u3360 1B19                         u4240 10B4                         u4320 0947  
                       u3601 13FF                         u3521 13A9                         u3441 1300  
                       u5041 0858                         u5121 00F4                         u5105 00D4  
                       u4161 0F74                         u4073 0F17                         u4065 0EF8  
                       u3281 1BCA                         u3361 1B18                         u3345 1B01  
                       u4305 1231                         u4241 10B3                         u4321 0946  
                       u5210 1EF6                         u3450 1306                         u5050 0860  
                       u4170 0F87                         u4410 0AFB                         u4330 0950  
                       u5211 1EF5                         u3451 1305                         u5051 085F  
                       u5035 0849                         u4171 0F86                         u3275 1BBD  
                       u4315 127D                         u4411 0AFA                         u4331 094F  
                       u5300 19FA                         u3700 14B3                         u3620 1425  
                       u3540 13C0                         u3460 131F                         u5140 0112  
                       u4180 0F96                         u3380 1B2C                         u4500 1989  
                       u5301 19F9                         u5205 1EE8                         u3701 14B2  
                       u3621 1424                         u3541 13BF                         u3461 131E  
                       u5141 0111                         u5125 00F1                         u4085 0F19  
                       u3381 1B2B                         u3365 1B15                         u4501 1988  
                       u4405 0ACA                         u5310 1B7C                         u5230 1F06  
                       u5150 1E8F                         u3710 14BD                         u3550 13C4  
                       u3470 1323                         u3390 12C7                         u5070 0871  
                       u4510 1F56                         u4190 0FB3                         u6007 1E3F  
                       u5231 1F05                         u5151 1E8E                         u3711 14BC  
                       u3631 143C                         u3623 1421                         u3615 1403  
                       u3551 13C3                         u3535 13AD                         u3471 1322  
                       u3391 12C6                         u5071 0870                         u5135 0104  
                       u4511 1F55                         u4191 0FB2                         u4095 0F30  
                       u3295 1BCC                         u3375 1B20                         u4255 10D1  
                       u5320 1B9E                         u5240 1F0C                         u5160 1E93  
                       u3800 1514                         u3720 14C3                         u3640 1450  
                       u3632 143D                         u3560 13C9                         u3480 137B  
                       u5080 0876                         u4600 1FDF                         u4520 1F70  
                       u4280 11C7                         u5400 1637                         u6017 1E4A  
                       u5241 1F0B                         u5225 1EFB                         u5161 1E92  
                       u3801 1513                         u3721 14C2                         u3641 1451  
                       u3633 1442                         u3561 13C8                         u3481 137A  
                       u5081 0875                         u5065 0863                         u4601 1FDE  
                       u4521 1F6F                         u4185 0F91                         u4281 11C6  
                       u4265 112B                         u4425 0B1B                         u4345 0970  
                       u5401 1634                         u5330 1BB0                         u5250 1F10  
                       u5170 1EB3                         u3810 1519                         u3730 14C8  
                       u3650 146E                         u3642 1456                         u3634 1443  
                       u3490 1386                         u5090 00CF                         u4610 1FE6  
                       u4450 0BEA                         u4370 0A3F                         u5410 163B  
                       u6107 1ACC                         u6027 1E55                         u5331 1BAF  
                       u5251 1F0F                         u5171 1EB2                         u3811 1518  
                       u3731 14C7                         u3651 146D                         u3643 1457  
                       u3635 1448                         u3571 13DB                         u3491 1384  
                       u5091 00CE                         u4611 1FE5                         u4195 0FAF  
                       u4275 1180                         u4451 0BE9                         u4435 0B57  
                       u4371 0A3E                         u4355 09AC                         u5411 163A  
                       u5260 1F25                         u5340 1AC4                         u3820 1526  
                       u3740 14CE                         u3660 1493                         u3636 1449  
                       u3580 13ED                         u3572 13E2                         u4700 0906  
                       u4540 1FA9                         u3900 0CE7                         u5500 022B  
                       u5420 166A                         u6117 1AE5                         u6037 1E60  
                       u5341 1AC3                         u3821 1525                         u3741 14CD  
                       u3661 1492                         u3581 13EC                         u3573 13E9  
                       u3485 1377                         u4701 0905                         u4541 1FA8  
                       u3901 0CE6                         u4445 0BA2                         u4365 09F7  
                       u5501 022A                         u5421 1669                         u5270 1F35  
                       u5190 1ED4                         u3830 152B                         u3750 14D5  
                       u3670 1498                         u3590 13F1                         u4710 090D  
                       u4630 1FF7                         u2950 1A81                         u3910 0CFE  
                       u5510 023A                         u5430 16A4                         u5350 154E  
                       u6127 1AF1                         u6047 1E6D                         u5271 1F34  
                       u5191 1ED3                         u3831 152A                         u3751 14D4  
                       u3671 1497                         u3591 13F0                         u4711 090C  
                       u4631 1FF6                         u4535 1F94                         u2951 1A80  
                       u3911 0CFD                         u4295 11E4                         u5511 0239  
                       u5431 16A3                         u5351 154D                         u5280 1F39  
                       u3840 153C                         u3760 14DB                         u4800 1A6E  
                       u4640 088F                         u4560 1FC2                         u3920 0D03  
                       u5520 0255                         u5440 16DF                         u5360 156E  
                       u6057 1E7A                         u5281 1F38                         u5265 1F20  
                       u5185 1EC6                         u3841 153B                         u3761 14DA  
                       u4801 1A6D                         u4641 088E                         u4625 1FE9  
                       u4561 1FC1                         u4545 1FA5                         u3921 0D02  
                       u4465 0BFD                         u4385 0A52                         u5521 0254  
                       u5441 16DE                         u5361 156D                         u5290 19E8  
                       u3770 14ED                         u3690 14AE                         u4810 1D60  
                       u4730 091F                         u4650 08A3                         u4570 1FC6  
                       u2970 1A95                         u3850 0CB0                         u4490 1983  
                       u5610 0469                         u5450 1768                         u5370 15AE  
                       u6067 1E85                         u5291 19E7                         u3771 14EC  
                       u3691 14AD                         u4811 1D5F                         u4731 091E  
                       u4651 08A2                         u4571 1FC5                         u4555 1FB5  
                       u2971 1A94                         u3931 0D54                         u3851 0CAF  
                       u4491 1982                         u4475 0C39                         u4395 0A8E  
                       u5611 0468                         u5515 0236                         u5451 1767  
                       u5371 15AD                         u2980 1B36                         u4900 1C8D  
                       u3780 14FC                         u4740 0926                         u4580 1FCD  
                       u3932 0D5B                         u3860 0CB6                         u5700 0667  
                       u5620 048A                         u5540 0368                         u5460 178C  
                       u5380 15BC                         _RCIF 0065                         u2981 1B35  
                       u6077 19CF                         u4901 1C8C                         u3685 14A3  
                       u4741 0925                         u4725 090F                         u4581 1FCC  
                       u2965 1A88                         u3941 0D70                         u3933 0D62  
                       u3861 0CB5                         u4485 0C75                         u5701 0666  
                       u5621 0489                         u5605 03DF                         u5541 0367  
                       u5461 178B                         u5381 15BB                         u2990 1B41  
                       u4910 101D                         u3790 150B                         u4830 1D74  
                       u4670 08E4                         u3942 0D77                         u3870 0CBB  
                       u5710 066F                         u5630 0499                         u5550 0373  
                       u5470 17A3                         u5390 1600                         u2991 1B40  
                       u6087 19D6                         u4911 101C                         u3791 150A  
                       u4831 1D73                         u4671 08E3                         u3951 0D9C  
                       u3943 0D7E                         u3871 0CBA                         u5711 066E  
                       u5631 0498                         u5551 0372                         u5535 0335  
                       u5471 17A2                         u5391 15FF                         u4920 1039  
                       u4760 0937                         u3952 0DA3                         u3880 0CDC  
                       u5800 070E                         u5640 04B4                         u5560 038E  
                       u5480 01E9                         u6097 19DC                         u4905 1C89  
                       u4921 1038                         u3785 14F7                         u4825 1D65  
                       u4761 0936                         u4665 08CB                         u3961 0DB8  
                       u3953 0DAA                         u3881 0CDB                         u5801 070D  
                       u5641 04B3                         u5625 0486                         u5561 038D  
                       u5545 0364                         u5481 17FA                         u4930 1045  
                       u4850 1D8F                         u4770 1A54                         u4690 0902  
                       u3962 0DBF                         u3890 0CE2                         u5810 0726  
                       u5730 06AD                         u5570 03A0                         u5490 0204  
                       u4931 1044                         u4851 1D8E                         u4771 1A53  
                       u4755 0929                         u4691 0901                         u4675 08E0  
                       u4595 1FCF                         u3963 0DC6                         u3891 0CE1  
                       u5811 0725                         u5731 06AC                         u5635 0495  
                       u5571 039F                         u5491 0203                         u5475 179F  
                       u5820 073C                         u5740 06B8                         u5580 03C2  
                       u4941 1054                         u4845 1D76                         u4685 08F5  
                       u3981 0DEE                         u5821 073B                         u5805 070A  
                       u5741 06B7                         u5725 067A                         u5581 03C1  
                       u5485 17F5                         u4950 106D                         u4942 1055  
                       u4870 1DAD                         u3982 0DF5                         u5830 0753  
                       u5750 06C3                         u5670 0620                         u5590 03D0  
                       u4951 106C                         u4943 105A                         u4871 1DAC  
                       u4855 1D8B                         u3991 0E1B                         u3983 0DFC  
                       u3975 0DC8                         u5831 0752                         u5815 0722  
                       u5751 06C2                         u5735 06A9                         u5671 061F  
                       u5655 053B                         u5591 03CF                         u4880 1C57  
                       u4944 105B                         u3992 0E22                         u5840 075F  
                       u5760 06D9                         u5680 0638                         u4881 1C56  
                       u4961 107C                         u4945 1060                         u4865 1D9F  
                       u4785 1A5B                         u3993 0E29                         u5841 075E  
                       u5761 06D8                         u5681 0637                         u5665 05C1  
                       u5585 03BE                         u4890 1C73                         u4970 10A7  
                       u4962 107D                         u4946 1061                         u5770 06EA  
                       u5690 0652                         u5907 1C31                         u4891 1C72  
                       u4971 10A6                         u4963 1082                         u4795 1A62  
                       u5771 06E9                         u5755 06BF                         u5691 0651  
                       u4964 1083                         u4980 195F                         u5860 07D6  
                       u5780 06F6                         u5917 1C3E                         u4965 1088  
                       u4981 195E                         u5861 07D5                         u5781 06F5  
                       u5765 06D5                         u4966 1089                         u4990 0813  
                       u5870 07EA                         u5790 0700                         u5927 1CF3  
                       u4975 10A3                         u4991 0812                         u5871 07E7  
                       u5855 077A                         u5791 06FF                         u5937 1D26  
                       u5947 1D33                         u5957 19B2                         u5967 19B9  
                       u5887 01DF                         u5977 19BD                         u5897 1BFE  
                       u5987 1E23                         u5997 1E32                         _TRMT 04C1  
                       _data 00D7            ?_Lcd_Write_String 0073                         _cont 00D6  
                       _main 011B                         _temp 00CE                         btemp 007E  
                       _volt 00D2                         start 0000               ??_config_rcsta 0070  
         ??_Lcd_Write_String 0075              __end_of_Baudios 1931           __size_of_LCD_clean 000D  
             ??_config_txsta 0070                 _sprintf$1136 00B0           __size_of_OSCILADOR 0005  
              ___fltol@sign1 005A              __end_of___fladd 153E                        ?_main 0070  
            __end_of___awdiv 1E1F              __end_of___flneg 1962              __end_of___awmod 1CEA  
            __end_of___flmul 1000              __end_of___flsub 1A4E              __end_of___fltol 0882  
                      _ANSEL 0188              __end_of___lldiv 1DB6              ___awdiv@divisor 0077  
            __end_of___llmod 011B              __end_of___lwdiv 1BF5              __end_of___lwmod 1B31  
            ___awdiv@counter 0020                        _RCREG 001A                        _SPBRG 0099  
                      _PORTB 0006                        _PORTC 0007                        _PORTD 0008  
                      _PORTE 0009      __size_of_Lcd_Set_Cursor 0024                        _TRISB 0086  
                      _TRISD 0088                        _TRISE 0089                        _TXREG 0019  
            __end_of_dpowers 00A3                        _scale 0940              __end_of_isdigit 198D  
                      _setup 1A06                        pclath 000A              __end_of_spiInit 19A3  
            __end_of_spiRead 1009                        status 0003                        wtemp0 007E  
            __end_of_sprintf 07EF             __end_of_Lcd_Init 1E89              __initialization 07EF  
               __end_of_main 01E9                       ??_main 00CB                    ??_LCD_CMD 0071  
       __size_of__tdiv_to_l_ 00BD            __end_of_LCD_clean 197B             ___llmod@dividend 0024  
                     ?_scale 003E             ___awdiv@dividend 0079                       ?_setup 0070  
                     _ANSELH 0189                    ??_Baudios 0070            __end_of_OSCILADOR 1936  
                     _OSCCON 008F                       _TRISC0 0438                       _TRISC1 0439  
                     _TRISC2 043A                       _TRISC3 043B                       _TRISC5 043D  
                     _SSPCON 0014                       _SSPBUF 0013             __end_of___xxtofl 1F43  
           __end_of_datosLCD 19E2                       _Conteo 1AC5             __end_of__powers_ 0047  
                     _Sensor 1CEA                       _Puerto 1B31             __end_of_leer_ADC 1C43  
                     ___flge 1009                       ___fleq 1C43                    ??___fladd 005A  
                     ___wmul 1A4E                    ??___awdiv 007B                    ??___flneg 0074  
                  ??___awmod 0074                    ??___flmul 002C                    ??___flsub 007E  
                  ??___fltol 0055                    ??___lldiv 0078                    ??___llmod 0028  
                  ??___lwdiv 007A                    ??___lwmod 0074                       _fround 10AB  
           ___awdiv@quotient 0022              ___awmod@divisor 0070              ___awmod@counter 0075  
                  ??_isdigit 0070           __size_of__Umul8_16 0027         __end_of_config_rcsta 1945  
           __end_of_spiWrite 0806         __end_of_config_txsta 1957                    ??_spiInit 0073  
                  ??_spiRead 0070                    ??_sprintf 00AB              Lcd_Set_Cursor@a 0077  
            Lcd_Set_Cursor@x 0076              Lcd_Set_Cursor@y 0074                   ___flge@ff1 0070  
                 ___flge@ff2 0074                 ___xxtofl@arg 007A                 ___xxtofl@exp 0079  
               ___xxtofl@val 0070                   ___fleq@ff1 0070                   ___fleq@ff2 0074  
    __end_of__initialization 07FC                   ___flneg@f1 0070                   ___fltol@f1 0051  
             __pcstackCOMMON 0070                __end_of_scale 0C9F                __end_of_setup 1A2A  
             _Lcd_Set_Cursor 19E2                   __div_to_l_ 0882                    ?_Lcd_Init 0070  
            __div_to_l_@exp1 0025              __div_to_l_@cntr 0024                      ??_scale 0042  
            __div_to_l_@quot 0020                 sprintf@width 00B7                      ??_setup 0074  
               Write_USART@a 0070                   __pbssBANK0 006E                   __pbssBANK1 00CE  
              __div_to_l_@f1 0070                __div_to_l_@f2 0074                      ?_Conteo 0070  
          __end_of__Umul8_16 1A9A                   __pmaintext 011B                      ?_Sensor 0020  
                    ?_Puerto 0070                      ?___flge 0070                      ?___fleq 0070  
                    ?___wmul 0070                ??_Write_USART 0070      __size_of_spiReceiveWait 0007  
                    ?_fround 003E    __size_of_Lcd_Write_String 0042       __end_of_Lcd_Set_Cursor 1A06  
                    _LCD_CMD 19A3   __end_of_Write_USART_String 1AC5                    ?___xxtofl 0070  
                  ?_datosLCD 0070                   ??_Lcd_Init 0074                      _SSPSTAT 0094  
                  ?_leer_ADC 0070                   __stringtab 0003                      _Baudios 192C  
          __end_of__npowers_ 007B              __size_of_Conteo 0032                   _scale$1135 004C  
            __size_of_Sensor 0066              __size_of_Puerto 003E                    ?_spiWrite 0070  
                    Puerto@x 0070              __size_of___flge 00A2              __size_of___fleq 004E  
                    ___fladd 12B6                      ___awdiv 1DB6                      ___flneg 1957  
                    ___awmod 1C91                      ___flmul 0C9F                      ___flsub 1A2A  
                    ___fltol 0806                      ___lldiv 1D50              __size_of___wmul 0025  
                    ___llmod 00C5                      ___lwdiv 1BB1                      ___lwmod 1AF7  
      __size_of_config_rcsta 0008              __size_of_fround 020B              ?_Lcd_Set_Cursor 0074  
                    __ptext1 153E                      __ptext2 0940        __size_of_config_txsta 000A  
                    __ptext3 1C91                      __ptext4 1DB6                      __ptext5 197B  
                    __ptext6 10AB                      __ptext7 1AF7                      __ptext8 1BB1  
                    __ptext9 0C9F                  ?__div_to_l_ 0070                      _dpowers 007B  
        __end_of_Write_USART 196E                      _isdigit 197B                   ??___xxtofl 0074  
           ___awmod@dividend 0072                   ??_datosLCD 0071                      _spiInit 198D  
                    _spiRead 1000                      _sprintf 153E                      clrloop0 1946  
                 ??_leer_ADC 0020                    _LCD_clean 196E         end_of_initialization 07FC  
            ___lldiv@divisor 0070                    _OSCILADOR 1931              ___lldiv@counter 007D  
               _config_rcsta 193D                 _config_txsta 194D                    _RCSTAbits 0018  
                 ??_spiWrite 0070                      psplit$0 B0037               __tdiv_to_l_@f1 0070  
             __tdiv_to_l_@f2 0074                ??__tdiv_to_l_ 0078                    _PORTCbits 0007  
                ___fladd@grs 0065                ___xxtofl@sign 0078                  spiWrite@dat 0070  
                 ?_LCD_clean 0070            Lcd_Write_String@a 0073            Lcd_Write_String@i 0078  
                ___flmul@grs 0032                    _TXSTAbits 0098          __size_of__div_to_l_ 00BE  
                 ?_OSCILADOR 0070               __end_of_Conteo 1AF7               __end_of_Sensor 1D50  
             __end_of_Puerto 1B6F               _spiReceiveWait 1936               __end_of___flge 10AB  
             __end_of___fleq 1C91                  _Write_USART 1962               __end_of___wmul 1A73  
           _Lcd_Write_String 1B6F            pnum$text1_split_1 0037               __end_of_fround 12B6  
        start_initialization 07EF          __end_of__tdiv_to_l_ 2000            __size_of_Lcd_Init 006A  
            ___llmod@divisor 0020              ___llmod@counter 0029                     ??_Conteo 0071  
                   ??_Sensor 0024       __end_of_spiReceiveWait 193D                     ??_Puerto 0070  
                   ??___flge 0078                     ??___fleq 0078                     ??___wmul 0074  
                  __Umul8_16 1A73                     ??_fround 0042                sprintf@tmpval 00B9  
                  ___fladd@a 0056                    ___fladd@b 0052                     LCD_CMD@a 0072  
                   ?_LCD_CMD 0070                   fround@prec 0051                    ___flmul@a 0028  
                  ___flmul@b 0024                    ___flsub@a 0066                    ___flsub@b 006A  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
          __size_of___xxtofl 00BA            __size_of_datosLCD 0022                  ??_LCD_clean 0074  
                   ?_Baudios 0070                  sprintf@flag 00B5            __size_of_leer_ADC 004E  
                sprintf@eexp 00C1                  sprintf@fval 00C3           _Write_USART_String 1A9A  
                sprintf@prec 00C8                  ??_OSCILADOR 0070             ___lwdiv@dividend 0078  
            ?_spiReceiveWait 0070             ??_Lcd_Set_Cursor 0075          ?_Write_USART_String 0071  
                   ?___fladd 0052                     ?___awdiv 0077                     ?___flneg 0070  
                   ?___awmod 0070                     ?___flmul 0024                     ?___flsub 0066  
                   ?___fltol 0051                     ?___lldiv 0070                     ?___llmod 0020  
                  __npowers_ 0047                   ?__Umul8_16 0070                     ?___lwdiv 0076  
                   ?___lwmod 0070            __size_of_spiWrite 0006                    __pstrings 0003  
                __tdiv_to_l_ 1F43                 ??__div_to_l_ 0078                     ?_isdigit 0070  
                   ?_spiInit 0070                     ?_spiRead 0070         ??_Write_USART_String 0073  
           ___lwdiv@quotient 007B                     ?_sprintf 00A0               __size_of_scale 035F  
             __size_of_setup 0024         spiInit@sTransmitEdge 0072                    datosLCD@x 0073  
             ___wmul@product 0074                    clear_ram0 1945           spiInit@sDataSample 0070  
         __end_of__div_to_l_ 0940                  __stringbase 0012            ___wmul@multiplier 0070  
           __size_of_LCD_CMD 001D                     _Lcd_Init 1E1F     __end_of_Lcd_Write_String 1BB1  
           __size_of_Baudios 0005                  ??__Umul8_16 0072                 ?_Write_USART 0070  
           __size_of___fladd 0288             __size_of___awdiv 0069             __size_of___flneg 000B  
           __size_of___awmod 0059             __size_of___flmul 0361             __size_of___flsub 0024  
           __size_of___fltol 007C             __size_of___lldiv 0066             __size_of___llmod 0056  
           __size_of___lwdiv 0044             __size_of___lwmod 003A                  _fround$1133 004D  
                _fround$1134 0049           __end_of__stringtab 0013                  _isdigit$935 0070  
                 sprintf@val 00BD                     ___xxtofl 1E89             __size_of_isdigit 0012  
                   _datosLCD 19C0              ___lwdiv@divisor 0076              ___lwdiv@counter 007D  
                   __ptext10 1A73                     __ptext11 1F43                     __ptext20 1009  
                   __ptext12 0882                     __ptext21 1C43                     __ptext13 1A4E  
                   __ptext30 1E89                     __ptext22 1A06                     __ptext14 00C5  
                   __ptext31 1931                     __ptext23 198D                     __ptext15 1D50  
                   __ptext40 0800                     __ptext32 1B6F                     __ptext24 1BF5  
                   __ptext16 0806                     __ptext41 1000                     __ptext33 19A3  
                   __ptext25 194D                     __ptext17 1A2A                     __ptext42 1936  
                   __ptext34 19E2                     __ptext26 193D                     __ptext18 12B6  
                   __ptext43 192C                     __ptext35 1E1F                     __ptext27 1A9A  
                   __ptext19 1957                     __ptext36 196E                     __ptext28 1962  
                   __ptext37 19C0                     __ptext29 1CEA                     __ptext38 1B31  
                   __ptext39 1AC5             __size_of_spiInit 0016             __size_of_spiRead 0009  
                   __powers_ 0013                     _leer_ADC 1BF5             __size_of_sprintf F2B1  
              __size_of_main 00CE                    pnum$text1 000B                     _spiWrite 0800  
               spiInit@sType 0073            spiInit@sClockIdle 0071          Write_USART_String@a 0071  
        Write_USART_String@i 0074                     isdigit@c 0071                     scale@scl 0050  
                  sprintf@ap 00B4             __tdiv_to_l_@exp1 0025             __tdiv_to_l_@cntr 0024  
                  sprintf@sp 00C7             __tdiv_to_l_@quot 0020             ___lwmod@dividend 0072  
           ___lldiv@dividend 0074             ??_spiReceiveWait 0070                    stringcode 000D  
               ?__tdiv_to_l_ 0070       __Umul8_16@multiplicand 0070                     sprintf@c 00CA  
                   sprintf@f 00A0             ___lldiv@quotient 0079              ___lwmod@divisor 0070  
            ___lwmod@counter 0075                     stringdir 000D                     stringtab 0003  
              ___fladd@signs 0062                 ___fladd@aexp 0063                 ___fladd@bexp 0064  
       __Umul8_16@multiplier 0078                ?_config_rcsta 0070            __Umul8_16@product 0074  
              ?_config_txsta 0070  
