

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 01:17:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.31
    26                           ; Generated 13/10/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0013                     _SSPBUF	set	19
   295  0014                     _SSPCON	set	20
   296  0008                     _PORTD	set	8
   297  0006                     _PORTB	set	6
   298  0007                     _PORTCbits	set	7
   299  0049                     _RE1	set	73
   300  0048                     _RE0	set	72
   301  0047                     _RD7	set	71
   302  0046                     _RD6	set	70
   303  0045                     _RD5	set	69
   304  0044                     _RD4	set	68
   305  0043                     _RD3	set	67
   306  0042                     _RD2	set	66
   307  0041                     _RD1	set	65
   308  0040                     _RD0	set	64
   309  0094                     _SSPSTATbits	set	148
   310  0094                     _SSPSTAT	set	148
   311  0088                     _TRISD	set	136
   312  0086                     _TRISB	set	134
   313  043B                     _TRISC3	set	1083
   314  043D                     _TRISC5	set	1085
   315  043A                     _TRISC2	set	1082
   316  0189                     _ANSELH	set	393
   317  0188                     _ANSEL	set	392
   318                           
   319                           	psect	strings
   320  0000'                    __pstrings:
   321  0000'                    stringtab:
   322  0000'                    __stringtab:
   323                           
   324                           ;	String table - string pointers are 1 byte each
   325  0000' 1BFF               	btfsc	btemp+1,7
   326  0001' 2800'              	ljmp	stringcode
   327  0002' 1383               	bcf	3,7
   328  0003' 187F               	btfsc	btemp+1,0
   329  0004' 1783               	bsf	3,7
   330  0005' 0800               	movf	0,w
   331  0006' 0A84               	incf	4,f
   332  0007' 1903               	skipnz
   333  0008' 0AFF               	incf	btemp+1,f
   334  0009' 0008               	return
   335  000A'                    stringcode:
   336  000A'                    stringdir:
   337  000A' 3000'              	movlw	high stringdir
   338  000B' 008A               	movwf	10
   339  000C' 0804               	movf	4,w
   340  000D' 0A84               	incf	4,f
   341  000E' 0782               	addwf	2,f
   342  000F'                    __stringbase:
   343  000F' 3400               	retlw	0
   344  0010'                    __end_of__stringtab:
   345  0010'                    STR_1:
   346  0010' 3453               	retlw	83	;'S'
   347  0011' 3431               	retlw	49	;'1'
   348  0012' 343A               	retlw	58	;':'
   349  0013' 3420               	retlw	32	;' '
   350  0014' 3420               	retlw	32	;' '
   351  0015' 3420               	retlw	32	;' '
   352  0016' 3420               	retlw	32	;' '
   353  0017' 3453               	retlw	83	;'S'
   354  0018' 3432               	retlw	50	;'2'
   355  0019' 343A               	retlw	58	;':'
   356  001A' 3420               	retlw	32	;' '
   357  001B' 3420               	retlw	32	;' '
   358  001C' 3420               	retlw	32	;' '
   359  001D' 3420               	retlw	32	;' '
   360  001E' 3453               	retlw	83	;'S'
   361  001F' 3433               	retlw	51	;'3'
   362  0020' 343A               	retlw	58	;':'
   363  0021' 3400               	retlw	0
   364  0022'                    STR_2:
   365  0022' 3425               	retlw	37	;'%'
   366  0023' 3431               	retlw	49	;'1'
   367  0024' 342E               	retlw	46	;'.'
   368  0025' 3432               	retlw	50	;'2'
   369  0026' 3466               	retlw	102	;'f'
   370  0027' 3400               	retlw	0
   371                           
   372                           	psect	cinit
   373  0000'                    start_initialization:	
   374                           ; #config settings
   375                           
   376  0000'                    __initialization:
   377                           
   378                           ; Clear objects allocated to COMMON
   379  0000' 0180'              	clrf	__pbssCOMMON& (0+127)
   380                           
   381                           ; Clear objects allocated to BANK0
   382  0001' 1383               	bcf	3,7	;select IRP bank0
   383  0002' 3000'              	movlw	low __pbssBANK0
   384  0003' 0084               	movwf	4
   385  0004' 3000'              	movlw	low (__pbssBANK0+16)
   386  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	clear_ram0
   387  000A'                    end_of_initialization:	
   388                           ;End of C runtime variable initialization code
   389                           
   390  000A'                    __end_of__initialization:
   391  000A' 0183               	clrf	3
   392  000B' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   393                           
   394                           	psect	bssCOMMON
   395  0000'                    __pbssCOMMON:
   396  0000'                    _volt:
   397  0000'                    	ds	1
   398                           
   399                           	psect	bssBANK0
   400  0000'                    __pbssBANK0:
   401  0000'                    _data:
   402  0000'                    	ds	16
   403                           
   404                           	psect	clrtext
   405  0000'                    clear_ram0:	
   406                           ;	Called with FSR containing the base address, and
   407                           ;	W with the last address+1
   408                           
   409  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   410  0001'                    clrloop0:
   411  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   412  0002' 0A84               	incf	4,f	;increment pointer
   413  0003' 0604               	xorwf	4,w	;XOR with final address
   414  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   415  0005' 3400               	retlw	0	;all done for this memory range, return
   416  0006' 0604               	xorwf	4,w	;XOR again to restore value
   417  0007' 2800'              	goto	clrloop0	;do the next byte
   418                           
   419                           	psect	cstackCOMMON
   420  0000'                    __pcstackCOMMON:
   421  0000'                    ?_setup:
   422  0000'                    ?_OSCILADOR:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0000'                    ??_OSCILADOR:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0000'                    ?_Baudios:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0000'                    ??_Baudios:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0000'                    ?_config_txsta:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0000'                    ??_config_txsta:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0000'                    ?_config_rcsta:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0000'                    ??_config_rcsta:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0000'                    ?_Lcd_Init:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0000'                    ?_spiWrite:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0000'                    ??_spiWrite:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0000'                    ?_spiRead:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0000'                    ??_spiRead:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0000'                    ??_sprint:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0000'                    ?_spiInit:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0000'                    ?_Lcd_Port:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0000'                    ??_Lcd_Port:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0000'                    ?_Lcd_Cmd:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0000'                    ?_Lcd_Write_Char:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0000'                    ?_main:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0000'                    ?_spiReceiveWait:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0000'                    ??_spiReceiveWait:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0000'                    ?_sprint:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0000'                    Lcd_Port@a:	
   492                           ; 2 bytes @ 0x0
   493                           
   494  0000'                    spiInit@sDataSample:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0000'                    spiWrite@dat:	
   498                           ; 1 bytes @ 0x0
   499                           
   500                           
   501                           ; 1 bytes @ 0x0
   502  0000'                    	ds	1
   503  0001'                    ??_Lcd_Cmd:
   504  0001'                    ??_Lcd_Write_Char:	
   505                           ; 1 bytes @ 0x1
   506                           
   507  0001'                    spiInit@sClockIdle:	
   508                           ; 1 bytes @ 0x1
   509                           
   510                           
   511                           ; 1 bytes @ 0x1
   512  0001'                    	ds	1
   513  0002'                    Lcd_Write_Char@a:
   514  0002'                    spiInit@sTransmitEdge:	
   515                           ; 1 bytes @ 0x2
   516                           
   517                           
   518                           ; 1 bytes @ 0x2
   519  0002'                    	ds	1
   520  0003'                    ??_spiInit:
   521  0003'                    ?_Lcd_Write_String:	
   522                           ; 1 bytes @ 0x3
   523                           
   524  0003'                    Lcd_Cmd@a:	
   525                           ; 1 bytes @ 0x3
   526                           
   527  0003'                    spiInit@sType:	
   528                           ; 1 bytes @ 0x3
   529                           
   530  0003'                    Lcd_Write_String@a:	
   531                           ; 1 bytes @ 0x3
   532                           
   533                           
   534                           ; 2 bytes @ 0x3
   535  0003'                    	ds	1
   536  0004'                    ??_setup:
   537  0004'                    ??_Lcd_Init:	
   538                           ; 1 bytes @ 0x4
   539                           
   540  0004'                    ?_Lcd_Set_Cursor:	
   541                           ; 1 bytes @ 0x4
   542                           
   543  0004'                    Lcd_Set_Cursor@b:	
   544                           ; 1 bytes @ 0x4
   545                           
   546                           
   547                           ; 1 bytes @ 0x4
   548  0004'                    	ds	1
   549  0005'                    ??_Lcd_Set_Cursor:
   550  0005'                    ??_Lcd_Write_String:	
   551                           ; 1 bytes @ 0x5
   552                           
   553                           
   554                           ; 1 bytes @ 0x5
   555  0005'                    	ds	1
   556  0006'                    Lcd_Set_Cursor@a:
   557                           
   558                           ; 1 bytes @ 0x6
   559  0006'                    	ds	1
   560  0007'                    Lcd_Set_Cursor@temp:
   561                           
   562                           ; 1 bytes @ 0x7
   563  0007'                    	ds	1
   564  0008'                    Lcd_Write_String@i:
   565                           
   566                           ; 2 bytes @ 0x8
   567  0008'                    	ds	2
   568  000A'                    ??_main:
   569                           
   570                           ; 1 bytes @ 0xA
   571  000A'                    	ds	3
   572                           
   573                           	psect	maintext
   574  0000'                    __pmaintext:	
   575 ;;
   576 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   577 ;;
   578 ;; *************** function _main *****************
   579 ;; Defined at:
   580 ;;		line 62 in file "main.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   589 ;; Tracked objects:
   590 ;;		On entry : B00/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0
   596 ;;      Temps:          3       0       0       0       0
   597 ;;      Totals:         3       0       0       0       0
   598 ;;Total ram usage:        3 bytes
   599 ;; Hardware stack levels required when called:    3
   600 ;; This function calls:
   601 ;;		_Baudios
   602 ;;		_Lcd_Init
   603 ;;		_Lcd_Set_Cursor
   604 ;;		_Lcd_Write_String
   605 ;;		_OSCILADOR
   606 ;;		_config_rcsta
   607 ;;		_config_txsta
   608 ;;		_setup
   609 ;;		_spiRead
   610 ;;		_spiWrite
   611 ;;		_sprint
   612 ;; This function is called by:
   613 ;;		Startup code after reset
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           
   618                           ;psect for function _main
   619  0000'                    _main:
   620  0000'                    l940:	
   621                           ;incstack = 0
   622                           ; Regs used in _main: [allreg]
   623                           
   624                           
   625                           ;main.c: 63:     setup();
   626  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_setup
   627  0005'                    l942:
   628                           
   629                           ;main.c: 64:     OSCILADOR();
   630  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_OSCILADOR
   631  000A'                    l944:
   632                           
   633                           ;main.c: 65:     Baudios();
   634  000A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Baudios
   635  000F'                    l946:
   636                           
   637                           ;main.c: 66:     config_txsta();
   638  000F' 120A' 118A' 2000' 120A' 118A' 	fcall	_config_txsta
   639  0014'                    l948:
   640                           
   641                           ;main.c: 67:     config_rcsta();
   642  0014' 120A' 118A' 2000' 120A' 118A' 	fcall	_config_rcsta
   643                           
   644                           ;main.c: 68:     Lcd_Init();
   645  0019' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Init
   646                           
   647                           ;main.c: 70:     Lcd_Set_Cursor(1, 1);
   648  001E' 0184'              	clrf	Lcd_Set_Cursor@b
   649  001F' 0A84'              	incf	Lcd_Set_Cursor@b,f
   650  0020' 3001               	movlw	1
   651  0021' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
   652  0026'                    l950:
   653                           
   654                           ;main.c: 71:     Lcd_Write_String("S1:    S2:    S3:");
   655  0026' 3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   656  0027' 0083'              	movwf	Lcd_Write_String@a
   657  0028' 3080               	movlw	128
   658  0029' 0084'              	movwf	Lcd_Write_String@a+1
   659  002A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
   660  002F'                    l952:
   661                           
   662                           ;main.c: 76:        PORTCbits.RC2 = 0;
   663  002F' 1283               	bcf	3,5	;RP0=0, select bank0
   664  0030' 1303               	bcf	3,6	;RP1=0, select bank0
   665  0031' 1107               	bcf	7,2	;volatile
   666  0032'                    l954:
   667                           
   668                           ;main.c: 77:        _delay((unsigned long)((1)*(8000000/4000.0)));
   669  0032' 3003               	movlw	3
   670  0033' 008B'              	movwf	??_main+1
   671  0034' 3097               	movlw	151
   672  0035' 008A'              	movwf	??_main
   673  0036'                    u227:
   674  0036' 0B8A'              	decfsz	??_main,f
   675  0037' 2800'              	goto	u227
   676  0038' 0B8B'              	decfsz	??_main+1,f
   677  0039' 2800'              	goto	u227
   678  003A' 2800'              	nop2
   679  003B'                    l956:
   680                           
   681                           ;main.c: 79:        spiWrite(PORTB);
   682  003B' 1283               	bcf	3,5	;RP0=0, select bank0
   683  003C' 1303               	bcf	3,6	;RP1=0, select bank0
   684  003D' 0806               	movf	6,w	;volatile
   685  003E' 120A' 118A' 2000' 120A' 118A' 	fcall	_spiWrite
   686  0043'                    l958:
   687                           
   688                           ;main.c: 80:        volt = spiRead();
   689  0043' 120A' 118A' 2000' 120A' 118A' 	fcall	_spiRead
   690  0048' 008A'              	movwf	??_main
   691  0049' 080A'              	movf	??_main,w
   692  004A' 0080'              	movwf	_volt
   693  004B'                    l960:
   694                           
   695                           ;main.c: 82:        _delay((unsigned long)((1)*(8000000/4000.0)));
   696  004B' 3003               	movlw	3
   697  004C' 008B'              	movwf	??_main+1
   698  004D' 3097               	movlw	151
   699  004E' 008A'              	movwf	??_main
   700  004F'                    u237:
   701  004F' 0B8A'              	decfsz	??_main,f
   702  0050' 2800'              	goto	u237
   703  0051' 0B8B'              	decfsz	??_main+1,f
   704  0052' 2800'              	goto	u237
   705  0053' 2800'              	nop2
   706  0054'                    l962:
   707                           
   708                           ;main.c: 83:        PORTCbits.RC2 = 1;
   709  0054' 1283               	bcf	3,5	;RP0=0, select bank0
   710  0055' 1303               	bcf	3,6	;RP1=0, select bank0
   711  0056' 1507               	bsf	7,2	;volatile
   712  0057'                    l964:
   713                           
   714                           ;main.c: 85:        _delay((unsigned long)((250)*(8000000/4000.0)));
   715  0057' 3003               	movlw	3
   716  0058' 008C'              	movwf	??_main+2
   717  0059' 308A               	movlw	138
   718  005A' 008B'              	movwf	??_main+1
   719  005B' 3055               	movlw	85
   720  005C' 008A'              	movwf	??_main
   721  005D'                    u247:
   722  005D' 0B8A'              	decfsz	??_main,f
   723  005E' 2800'              	goto	u247
   724  005F' 0B8B'              	decfsz	??_main+1,f
   725  0060' 2800'              	goto	u247
   726  0061' 0B8C'              	decfsz	??_main+2,f
   727  0062' 2800'              	goto	u247
   728  0063' 2800'              	nop2
   729  0064'                    l966:
   730                           
   731                           ;main.c: 87:         sprint(data, "%1.2f", volt);
   732  0064' 3000'              	movlw	(low (_data| 0))& (0+255)
   733  0065' 0080'              	movwf	?_sprint
   734  0066' 3000               	movlw	0
   735  0067' 0081'              	movwf	?_sprint+1
   736  0068' 3013               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   737  0069' 0082'              	movwf	?_sprint+2
   738  006A' 3080               	movlw	128
   739  006B' 0083'              	movwf	?_sprint+3
   740  006C' 0800'              	movf	_volt,w
   741  006D' 008A'              	movwf	??_main
   742  006E' 018B'              	clrf	??_main+1
   743  006F' 080A'              	movf	??_main,w
   744  0070' 0084'              	movwf	?_sprint+4
   745  0071' 080B'              	movf	??_main+1,w
   746  0072' 0085'              	movwf	?_sprint+5
   747  0073' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprint
   748  0078'                    l968:
   749                           
   750                           ;main.c: 89:         Lcd_Set_Cursor(2, 1);
   751  0078' 0184'              	clrf	Lcd_Set_Cursor@b
   752  0079' 0A84'              	incf	Lcd_Set_Cursor@b,f
   753  007A' 3002               	movlw	2
   754  007B' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
   755  0080'                    l970:
   756                           
   757                           ;main.c: 91:         Lcd_Write_String(data);
   758  0080' 3000'              	movlw	(low (_data| 0))& (0+255)
   759  0081' 0083'              	movwf	Lcd_Write_String@a
   760  0082' 3000               	movlw	0
   761  0083' 0084'              	movwf	Lcd_Write_String@a+1
   762  0084' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
   763  0089' 2800'              	goto	l952
   764  008A' 120A' 118A' 2800'  	ljmp	start
   765  008D'                    __end_of_main:
   766                           
   767                           	psect	text1
   768  0000'                    __ptext1:	
   769 ;; *************** function _spiWrite *****************
   770 ;; Defined at:
   771 ;;		line 34 in file "SPI.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  dat             1    wreg     unsigned char 
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  dat             1    0[COMMON] unsigned char 
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         1       0       0       0       0
   787 ;;      Temps:          0       0       0       0       0
   788 ;;      Totals:         1       0       0       0       0
   789 ;;Total ram usage:        1 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		_main
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           
   799                           ;psect for function _spiWrite
   800  0000'                    _spiWrite:
   801                           
   802                           ;incstack = 0
   803                           ; Regs used in _spiWrite: [wreg]
   804                           ;spiWrite@dat stored from wreg
   805  0000' 0080'              	movwf	spiWrite@dat
   806  0001'                    l850:
   807                           
   808                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   809  0001' 0800'              	movf	spiWrite@dat,w
   810  0002' 1283               	bcf	3,5	;RP0=0, select bank0
   811  0003' 1303               	bcf	3,6	;RP1=0, select bank0
   812  0004' 0093               	movwf	19	;volatile
   813  0005'                    l148:
   814  0005' 0008               	return
   815  0006'                    __end_of_spiWrite:
   816                           
   817                           	psect	text2
   818  0000'                    __ptext2:	
   819 ;; *************** function _spiRead *****************
   820 ;; Defined at:
   821 ;;		line 47 in file "SPI.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      unsigned char 
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0, pclath, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   835 ;;      Params:         0       0       0       0       0
   836 ;;      Locals:         0       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0
   838 ;;      Totals:         0       0       0       0       0
   839 ;;Total ram usage:        0 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; Hardware stack levels required when called:    1
   842 ;; This function calls:
   843 ;;		_spiReceiveWait
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function _spiRead
   851  0000'                    _spiRead:
   852  0000'                    l852:	
   853                           ;incstack = 0
   854                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   855                           
   856                           
   857                           ;SPI.c: 49:     spiReceiveWait();
   858  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_spiReceiveWait
   859  0005'                    l854:
   860                           
   861                           ;SPI.c: 50:     return(SSPBUF);
   862  0005' 1283               	bcf	3,5	;RP0=0, select bank0
   863  0006' 1303               	bcf	3,6	;RP1=0, select bank0
   864  0007' 0813               	movf	19,w	;volatile
   865  0008'                    l156:
   866  0008' 0008               	return
   867  0009'                    __end_of_spiRead:
   868                           
   869                           	psect	text3
   870  0000'                    __ptext3:	
   871 ;; *************** function _spiReceiveWait *****************
   872 ;; Defined at:
   873 ;;		line 29 in file "SPI.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		None
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0
   890 ;;      Totals:         0       0       0       0       0
   891 ;;Total ram usage:        0 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_spiRead
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           
   901                           ;psect for function _spiReceiveWait
   902  0000'                    _spiReceiveWait:
   903  0000'                    l796:	
   904                           ;incstack = 0
   905                           ; Regs used in _spiReceiveWait: []
   906                           
   907  0000'                    l142:	
   908                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   909                           
   910  0000' 1683               	bsf	3,5	;RP0=1, select bank1
   911  0001' 1303               	bcf	3,6	;RP1=0, select bank1
   912  0002' 1C14               	btfss	20,0	;volatile
   913  0003' 2800'              	goto	u101
   914  0004' 2800'              	goto	u100
   915  0005'                    u101:
   916  0005' 2800'              	goto	l142
   917  0006'                    u100:
   918  0006'                    l145:
   919  0006' 0008               	return
   920  0007'                    __end_of_spiReceiveWait:
   921                           
   922                           	psect	text4
   923  0000'                    __ptext4:	
   924 ;; *************** function _setup *****************
   925 ;; Defined at:
   926 ;;		line 98 in file "main.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0, pclath, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   940 ;;      Params:         0       0       0       0       0
   941 ;;      Locals:         0       0       0       0       0
   942 ;;      Temps:          0       0       0       0       0
   943 ;;      Totals:         0       0       0       0       0
   944 ;;Total ram usage:        0 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    1
   947 ;; This function calls:
   948 ;;		_spiInit
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           
   955                           ;psect for function _setup
   956  0000'                    _setup:
   957  0000'                    l932:	
   958                           ;incstack = 0
   959                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   960                           
   961                           
   962                           ;main.c: 99:     ANSEL = 0;
   963  0000' 1683               	bsf	3,5	;RP0=1, select bank3
   964  0001' 1703               	bsf	3,6	;RP1=1, select bank3
   965  0002' 0188               	clrf	8	;volatile
   966                           
   967                           ;main.c: 100:     ANSELH = 0;
   968  0003' 0189               	clrf	9	;volatile
   969  0004'                    l934:
   970                           
   971                           ;main.c: 101:     TRISC2 = 0;
   972  0004' 1683               	bsf	3,5	;RP0=1, select bank1
   973  0005' 1303               	bcf	3,6	;RP1=0, select bank1
   974  0006' 1107               	bcf	7,2	;volatile
   975                           
   976                           ;main.c: 102:     TRISB = 0;
   977  0007' 0186               	clrf	6	;volatile
   978                           
   979                           ;main.c: 103:     TRISD = 0;
   980  0008' 0188               	clrf	8	;volatile
   981                           
   982                           ;main.c: 104:     PORTB = 0;
   983  0009' 1283               	bcf	3,5	;RP0=0, select bank0
   984  000A' 1303               	bcf	3,6	;RP1=0, select bank0
   985  000B' 0186               	clrf	6	;volatile
   986                           
   987                           ;main.c: 105:     PORTD = 0;
   988  000C' 0188               	clrf	8	;volatile
   989  000D'                    l936:
   990                           
   991                           ;main.c: 106:     PORTCbits.RC2 = 1;
   992  000D' 1507               	bsf	7,2	;volatile
   993  000E'                    l938:
   994                           
   995                           ;main.c: 107:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   996  000E' 0180'              	clrf	spiInit@sDataSample
   997  000F' 0181'              	clrf	spiInit@sClockIdle
   998  0010' 0182'              	clrf	spiInit@sTransmitEdge
   999  0011' 3020               	movlw	32
  1000  0012' 120A' 118A' 2000' 120A' 118A' 	fcall	_spiInit
  1001  0017'                    l122:
  1002  0017' 0008               	return
  1003  0018'                    __end_of_setup:
  1004                           
  1005                           	psect	text5
  1006  0000'                    __ptext5:	
  1007 ;; *************** function _spiInit *****************
  1008 ;; Defined at:
  1009 ;;		line 12 in file "SPI.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  sType           1    wreg     enum E1292
  1012 ;;  sDataSample     1    0[COMMON] enum E1300
  1013 ;;  sClockIdle      1    1[COMMON] enum E1304
  1014 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  sType           1    3[COMMON] enum E1292
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         3       0       0       0       0
  1027 ;;      Locals:         1       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0
  1029 ;;      Totals:         4       0       0       0       0
  1030 ;;Total ram usage:        4 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		_setup
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           
  1040                           ;psect for function _spiInit
  1041  0000'                    _spiInit:
  1042                           
  1043                           ;incstack = 0
  1044                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1045                           ;spiInit@sType stored from wreg
  1046  0000' 0083'              	movwf	spiInit@sType
  1047  0001'                    l902:
  1048                           
  1049                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1050  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  1051  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  1052  0003' 1287               	bcf	7,5	;volatile
  1053                           
  1054                           ;SPI.c: 15:     if(sType & 0b00000100)
  1055  0004' 1D03'              	btfss	spiInit@sType,2
  1056  0005' 2800'              	goto	u161
  1057  0006' 2800'              	goto	u160
  1058  0007'                    u161:
  1059  0007' 2800'              	goto	l908
  1060  0008'                    u160:
  1061  0008'                    l904:
  1062                           
  1063                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1064  0008' 0802'              	movf	spiInit@sTransmitEdge,w
  1065  0009' 0094               	movwf	20	;volatile
  1066  000A'                    l906:
  1067                           
  1068                           ;SPI.c: 18:         TRISC3 = 1;
  1069  000A' 1587               	bsf	7,3	;volatile
  1070                           
  1071                           ;SPI.c: 19:     }
  1072  000B' 2800'              	goto	l138
  1073  000C'                    l908:
  1074                           
  1075                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1076  000C' 0800'              	movf	spiInit@sDataSample,w
  1077  000D' 0402'              	iorwf	spiInit@sTransmitEdge,w
  1078  000E' 0094               	movwf	20	;volatile
  1079  000F'                    l910:
  1080                           
  1081                           ;SPI.c: 23:         TRISC3 = 0;
  1082  000F' 1187               	bcf	7,3	;volatile
  1083  0010'                    l138:	
  1084                           ;SPI.c: 24:     }
  1085                           
  1086                           
  1087                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1088  0010' 0803'              	movf	spiInit@sType,w
  1089  0011' 0401'              	iorwf	spiInit@sClockIdle,w
  1090  0012' 1283               	bcf	3,5	;RP0=0, select bank0
  1091  0013' 1303               	bcf	3,6	;RP1=0, select bank0
  1092  0014' 0094               	movwf	20	;volatile
  1093  0015'                    l139:
  1094  0015' 0008               	return
  1095  0016'                    __end_of_spiInit:
  1096                           
  1097                           	psect	text6
  1098  0000'                    __ptext6:	
  1099 ;; *************** function _Lcd_Write_String *****************
  1100 ;; Defined at:
  1101 ;;		line 165 in file "./LIB_LCD.h"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  a               2    3[COMMON] PTR unsigned char 
  1104 ;;		 -> data(16), STR_1(18), 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  i               2    8[COMMON] int 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1116 ;;      Params:         2       0       0       0       0
  1117 ;;      Locals:         2       0       0       0       0
  1118 ;;      Temps:          3       0       0       0       0
  1119 ;;      Totals:         7       0       0       0       0
  1120 ;;Total ram usage:        7 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    2
  1123 ;; This function calls:
  1124 ;;		_Lcd_Write_Char
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           
  1131                           ;psect for function _Lcd_Write_String
  1132  0000'                    _Lcd_Write_String:
  1133  0000'                    l924:	
  1134                           ;incstack = 0
  1135                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1136                           
  1137                           
  1138                           ;./LIB_LCD.h: 166:     int i;;./LIB_LCD.h: 167:     for (i = 0; a[i] != '\0'; i++)
  1139  0000' 0188'              	clrf	Lcd_Write_String@i
  1140  0001' 0189'              	clrf	Lcd_Write_String@i+1
  1141  0002' 2800'              	goto	l930
  1142  0003'                    l926:
  1143                           
  1144                           ;./LIB_LCD.h: 168:         Lcd_Write_Char(a[i]);
  1145  0003' 0808'              	movf	Lcd_Write_String@i,w
  1146  0004' 0703'              	addwf	Lcd_Write_String@a,w
  1147  0005' 0086'              	movwf	??_Lcd_Write_String+1
  1148  0006' 0804'              	movf	Lcd_Write_String@a+1,w
  1149  0007' 0085'              	movwf	??_Lcd_Write_String
  1150  0008' 1803               	skipnc
  1151  0009' 0A85'              	incf	??_Lcd_Write_String,f
  1152  000A' 1F88'              	btfss	Lcd_Write_String@i,7
  1153  000B' 2800'              	goto	u190
  1154  000C' 0385'              	decf	??_Lcd_Write_String,f
  1155  000D'                    u190:
  1156  000D' 0805'              	movf	??_Lcd_Write_String,w
  1157  000E' 0087'              	movwf	??_Lcd_Write_String+2
  1158  000F' 0807'              	movf	??_Lcd_Write_String+2,w
  1159  0010' 1283               	bcf	3,5	;RP0=0, select bank0
  1160  0011' 1303               	bcf	3,6	;RP1=0, select bank0
  1161  0012' 00FF               	movwf	btemp+1
  1162  0013' 0806'              	movf	??_Lcd_Write_String+1,w
  1163  0014' 0084               	movwf	4
  1164  0015' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  1165  001A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  1166  001F'                    l928:
  1167  001F' 3001               	movlw	1
  1168  0020' 0788'              	addwf	Lcd_Write_String@i,f
  1169  0021' 1803               	skipnc
  1170  0022' 0A89'              	incf	Lcd_Write_String@i+1,f
  1171  0023' 3000               	movlw	0
  1172  0024' 0789'              	addwf	Lcd_Write_String@i+1,f
  1173  0025'                    l930:
  1174  0025' 0808'              	movf	Lcd_Write_String@i,w
  1175  0026' 0703'              	addwf	Lcd_Write_String@a,w
  1176  0027' 0086'              	movwf	??_Lcd_Write_String+1
  1177  0028' 0804'              	movf	Lcd_Write_String@a+1,w
  1178  0029' 0085'              	movwf	??_Lcd_Write_String
  1179  002A' 1803               	skipnc
  1180  002B' 0A85'              	incf	??_Lcd_Write_String,f
  1181  002C' 1F88'              	btfss	Lcd_Write_String@i,7
  1182  002D' 2800'              	goto	u200
  1183  002E' 0385'              	decf	??_Lcd_Write_String,f
  1184  002F'                    u200:
  1185  002F' 0805'              	movf	??_Lcd_Write_String,w
  1186  0030' 0087'              	movwf	??_Lcd_Write_String+2
  1187  0031' 0807'              	movf	??_Lcd_Write_String+2,w
  1188  0032' 1283               	bcf	3,5	;RP0=0, select bank0
  1189  0033' 1303               	bcf	3,6	;RP1=0, select bank0
  1190  0034' 00FF               	movwf	btemp+1
  1191  0035' 0806'              	movf	??_Lcd_Write_String+1,w
  1192  0036' 0084               	movwf	4
  1193  0037' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  1194  003C' 3A00               	xorlw	0
  1195  003D' 1D03               	skipz
  1196  003E' 2800'              	goto	u211
  1197  003F' 2800'              	goto	u210
  1198  0040'                    u211:
  1199  0040' 2800'              	goto	l926
  1200  0041'                    u210:
  1201  0041'                    l101:
  1202  0041' 0008               	return
  1203  0042'                    __end_of_Lcd_Write_String:
  1204                           
  1205                           	psect	text7
  1206  0000'                    __ptext7:	
  1207 ;; *************** function _Lcd_Write_Char *****************
  1208 ;; Defined at:
  1209 ;;		line 156 in file "./LIB_LCD.h"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  a               1    wreg     unsigned char 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  a               1    2[COMMON] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0, pclath, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       0       0       0       0
  1224 ;;      Locals:         1       0       0       0       0
  1225 ;;      Temps:          1       0       0       0       0
  1226 ;;      Totals:         2       0       0       0       0
  1227 ;;Total ram usage:        2 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    1
  1230 ;; This function calls:
  1231 ;;		_Lcd_Port
  1232 ;; This function is called by:
  1233 ;;		_Lcd_Write_String
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           
  1238                           ;psect for function _Lcd_Write_Char
  1239  0000'                    _Lcd_Write_Char:
  1240                           
  1241                           ;incstack = 0
  1242                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1243                           ;Lcd_Write_Char@a stored from wreg
  1244  0000' 0082'              	movwf	Lcd_Write_Char@a
  1245  0001'                    l776:
  1246                           
  1247                           ;./LIB_LCD.h: 158:     RE0 = 1;
  1248  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  1249  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  1250  0003' 1409               	bsf	9,0	;volatile
  1251  0004'                    l778:
  1252                           
  1253                           ;./LIB_LCD.h: 159:     Lcd_Port(a);
  1254  0004' 0802'              	movf	Lcd_Write_Char@a,w
  1255  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
  1256  000A'                    l780:
  1257                           
  1258                           ;./LIB_LCD.h: 160:     RE1 = 1;
  1259  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  1260  000B' 1303               	bcf	3,6	;RP1=0, select bank0
  1261  000C' 1489               	bsf	9,1	;volatile
  1262  000D'                    l782:
  1263                           
  1264                           ;./LIB_LCD.h: 161:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1265  000D' 301A               	movlw	26
  1266  000E' 0081'              	movwf	??_Lcd_Write_Char
  1267  000F'                    u257:
  1268  000F' 0B81'              	decfsz	??_Lcd_Write_Char,f
  1269  0010' 2800'              	goto	u257
  1270  0011' 0000               	nop
  1271  0012'                    l784:
  1272                           
  1273                           ;./LIB_LCD.h: 162:     RE1 = 0;
  1274  0012' 1283               	bcf	3,5	;RP0=0, select bank0
  1275  0013' 1303               	bcf	3,6	;RP1=0, select bank0
  1276  0014' 1089               	bcf	9,1	;volatile
  1277  0015'                    l95:
  1278  0015' 0008               	return
  1279  0016'                    __end_of_Lcd_Write_Char:
  1280                           
  1281                           	psect	text8
  1282  0000'                    __ptext8:	
  1283 ;; *************** function _Lcd_Set_Cursor *****************
  1284 ;; Defined at:
  1285 ;;		line 115 in file "./LIB_LCD.h"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  a               1    wreg     unsigned char 
  1288 ;;  b               1    4[COMMON] unsigned char 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  a               1    6[COMMON] unsigned char 
  1291 ;;  temp            1    7[COMMON] unsigned char 
  1292 ;;  z               1    0        unsigned char 
  1293 ;;  y               1    0        unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, pclath, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1303 ;;      Params:         1       0       0       0       0
  1304 ;;      Locals:         2       0       0       0       0
  1305 ;;      Temps:          1       0       0       0       0
  1306 ;;      Totals:         4       0       0       0       0
  1307 ;;Total ram usage:        4 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    2
  1310 ;; This function calls:
  1311 ;;		_Lcd_Cmd
  1312 ;; This function is called by:
  1313 ;;		_main
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           
  1318                           ;psect for function _Lcd_Set_Cursor
  1319  0000'                    _Lcd_Set_Cursor:
  1320                           
  1321                           ;incstack = 0
  1322                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1323                           ;Lcd_Set_Cursor@a stored from wreg
  1324  0000' 0086'              	movwf	Lcd_Set_Cursor@a
  1325  0001'                    l912:
  1326                           
  1327                           ;./LIB_LCD.h: 116:     char temp, y, z;;./LIB_LCD.h: 117:     if (a == 1) {
  1328  0001' 0306'              	decf	Lcd_Set_Cursor@a,w
  1329  0002' 1D03               	btfss	3,2
  1330  0003' 2800'              	goto	u171
  1331  0004' 2800'              	goto	u170
  1332  0005'                    u171:
  1333  0005' 2800'              	goto	l918
  1334  0006'                    u170:
  1335  0006'                    l914:
  1336                           
  1337                           ;./LIB_LCD.h: 118:         temp = 0x80 + b - 1;
  1338  0006' 0804'              	movf	Lcd_Set_Cursor@b,w
  1339  0007' 3E7F               	addlw	127
  1340  0008' 0085'              	movwf	??_Lcd_Set_Cursor
  1341  0009' 0805'              	movf	??_Lcd_Set_Cursor,w
  1342  000A' 0087'              	movwf	Lcd_Set_Cursor@temp
  1343  000B'                    l916:
  1344                           
  1345                           ;./LIB_LCD.h: 122:         Lcd_Cmd(temp);
  1346  000B' 0807'              	movf	Lcd_Set_Cursor@temp,w
  1347  000C' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  1348                           
  1349                           ;./LIB_LCD.h: 124:     } else if (a == 2) {
  1350  0011' 2800'              	goto	l89
  1351  0012'                    l918:
  1352  0012' 3002               	movlw	2
  1353  0013' 0606'              	xorwf	Lcd_Set_Cursor@a,w
  1354  0014' 1D03               	btfss	3,2
  1355  0015' 2800'              	goto	u181
  1356  0016' 2800'              	goto	u180
  1357  0017'                    u181:
  1358  0017' 2800'              	goto	l89
  1359  0018'                    u180:
  1360  0018'                    l920:
  1361                           
  1362                           ;./LIB_LCD.h: 125:         temp = 0xC0 + b - 1;
  1363  0018' 0804'              	movf	Lcd_Set_Cursor@b,w
  1364  0019' 3EBF               	addlw	191
  1365  001A' 0085'              	movwf	??_Lcd_Set_Cursor
  1366  001B' 0805'              	movf	??_Lcd_Set_Cursor,w
  1367  001C' 0087'              	movwf	Lcd_Set_Cursor@temp
  1368  001D'                    l922:
  1369                           
  1370                           ;./LIB_LCD.h: 129:         Lcd_Cmd(temp);
  1371  001D' 0807'              	movf	Lcd_Set_Cursor@temp,w
  1372  001E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  1373  0023'                    l89:
  1374  0023' 0008               	return
  1375  0024'                    __end_of_Lcd_Set_Cursor:
  1376                           
  1377                           	psect	text9
  1378  0000'                    __ptext9:	
  1379 ;; *************** function _Lcd_Init *****************
  1380 ;; Defined at:
  1381 ;;		line 134 in file "./LIB_LCD.h"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1395 ;;      Params:         0       0       0       0       0
  1396 ;;      Locals:         0       0       0       0       0
  1397 ;;      Temps:          2       0       0       0       0
  1398 ;;      Totals:         2       0       0       0       0
  1399 ;;Total ram usage:        2 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    2
  1402 ;; This function calls:
  1403 ;;		_Lcd_Cmd
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           
  1410                           ;psect for function _Lcd_Init
  1411  0000'                    _Lcd_Init:
  1412  0000'                    l810:	
  1413                           ;incstack = 0
  1414                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1415                           
  1416                           
  1417                           ;./LIB_LCD.h: 135:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1418  0000' 3034               	movlw	52
  1419  0001' 0085'              	movwf	??_Lcd_Init+1
  1420  0002' 30F1               	movlw	241
  1421  0003' 0084'              	movwf	??_Lcd_Init
  1422  0004'                    u267:
  1423  0004' 0B84'              	decfsz	??_Lcd_Init,f
  1424  0005' 2800'              	goto	u267
  1425  0006' 0B85'              	decfsz	??_Lcd_Init+1,f
  1426  0007' 2800'              	goto	u267
  1427  0008' 2800'              	nop2
  1428  0009'                    l812:
  1429                           
  1430                           ;./LIB_LCD.h: 136:     Lcd_Cmd (0x30);
  1431  0009' 3030               	movlw	48
  1432  000A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  1433  000F'                    l814:
  1434                           
  1435                           ;./LIB_LCD.h: 137:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1436  000F' 300D               	movlw	13
  1437  0010' 0085'              	movwf	??_Lcd_Init+1
  1438  0011' 30FB               	movlw	251
  1439  0012' 0084'              	movwf	??_Lcd_Init
  1440  0013'                    u277:
  1441  0013' 0B84'              	decfsz	??_Lcd_Init,f
  1442  0014' 2800'              	goto	u277
  1443  0015' 0B85'              	decfsz	??_Lcd_Init+1,f
  1444  0016' 2800'              	goto	u277
  1445  0017' 2800'              	nop2
  1446                           
  1447                           ;./LIB_LCD.h: 138:     Lcd_Cmd (0x30);
  1448  0018' 3030               	movlw	48
  1449  0019' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  1450  001E'                    l816:
  1451                           
  1452                           ;./LIB_LCD.h: 139:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1453  001E' 3042               	movlw	66
  1454  001F' 0084'              	movwf	??_Lcd_Init
  1455  0020'                    u287:
  1456  0020' 0B84'              	decfsz	??_Lcd_Init,f
  1457  0021' 2800'              	goto	u287
  1458  0022' 0000               	nop
  1459  0023'                    l818:
  1460                           
  1461                           ;./LIB_LCD.h: 140:     Lcd_Cmd (0x30);
  1462  0023' 3030               	movlw	48
  1463  0024' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  1464                           
  1465                           ;./LIB_LCD.h: 141:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1466  0029' 3042               	movlw	66
  1467  002A' 0084'              	movwf	??_Lcd_Init
  1468  002B'                    u297:
  1469  002B' 0B84'              	decfsz	??_Lcd_Init,f
  1470  002C' 2800'              	goto	u297
  1471  002D' 0000               	nop
  1472  002E'                    l820:
  1473                           
  1474                           ;./LIB_LCD.h: 142:     Lcd_Cmd (0x38);
  1475  002E' 3038               	movlw	56
  1476  002F' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  1477  0034'                    l822:
  1478                           
  1479                           ;./LIB_LCD.h: 143:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  1480  0034' 3027               	movlw	39
  1481  0035' 0084'              	movwf	??_Lcd_Init
  1482  0036'                    u307:
  1483  0036' 0B84'              	decfsz	??_Lcd_Init,f
  1484  0037' 2800'              	goto	u307
  1485  0038' 2800'              	nop2
  1486                           
  1487                           ;./LIB_LCD.h: 144:     Lcd_Cmd (0x08);
  1488  0039' 3008               	movlw	8
  1489  003A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  1490  003F'                    l824:
  1491                           
  1492                           ;./LIB_LCD.h: 145:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  1493  003F' 3027               	movlw	39
  1494  0040' 0084'              	movwf	??_Lcd_Init
  1495  0041'                    u317:
  1496  0041' 0B84'              	decfsz	??_Lcd_Init,f
  1497  0042' 2800'              	goto	u317
  1498  0043' 2800'              	nop2
  1499  0044'                    l826:
  1500                           
  1501                           ;./LIB_LCD.h: 146:     Lcd_Cmd (0x01);
  1502  0044' 3001               	movlw	1
  1503  0045' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  1504                           
  1505                           ;./LIB_LCD.h: 147:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1506  004A' 300D               	movlw	13
  1507  004B' 0085'              	movwf	??_Lcd_Init+1
  1508  004C' 30FB               	movlw	251
  1509  004D' 0084'              	movwf	??_Lcd_Init
  1510  004E'                    u327:
  1511  004E' 0B84'              	decfsz	??_Lcd_Init,f
  1512  004F' 2800'              	goto	u327
  1513  0050' 0B85'              	decfsz	??_Lcd_Init+1,f
  1514  0051' 2800'              	goto	u327
  1515  0052' 2800'              	nop2
  1516  0053'                    l828:
  1517                           
  1518                           ;./LIB_LCD.h: 148:     Lcd_Cmd (0x06);
  1519  0053' 3006               	movlw	6
  1520  0054' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  1521  0059'                    l830:
  1522                           
  1523                           ;./LIB_LCD.h: 149:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  1524  0059' 3027               	movlw	39
  1525  005A' 0084'              	movwf	??_Lcd_Init
  1526  005B'                    u337:
  1527  005B' 0B84'              	decfsz	??_Lcd_Init,f
  1528  005C' 2800'              	goto	u337
  1529  005D' 2800'              	nop2
  1530                           
  1531                           ;./LIB_LCD.h: 150:     Lcd_Cmd (0x0C);
  1532  005E' 300C               	movlw	12
  1533  005F' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  1534  0064'                    l832:
  1535                           
  1536                           ;./LIB_LCD.h: 151:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  1537  0064' 3027               	movlw	39
  1538  0065' 0084'              	movwf	??_Lcd_Init
  1539  0066'                    u347:
  1540  0066' 0B84'              	decfsz	??_Lcd_Init,f
  1541  0067' 2800'              	goto	u347
  1542  0068' 2800'              	nop2
  1543  0069'                    l92:
  1544  0069' 0008               	return
  1545  006A'                    __end_of_Lcd_Init:
  1546                           
  1547                           	psect	text10
  1548  0000'                    __ptext10:	
  1549 ;; *************** function _Lcd_Cmd *****************
  1550 ;; Defined at:
  1551 ;;		line 102 in file "./LIB_LCD.h"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  a               1    wreg     unsigned char 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  a               1    3[COMMON] unsigned char 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0, pclath, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1565 ;;      Params:         0       0       0       0       0
  1566 ;;      Locals:         1       0       0       0       0
  1567 ;;      Temps:          2       0       0       0       0
  1568 ;;      Totals:         3       0       0       0       0
  1569 ;;Total ram usage:        3 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    1
  1572 ;; This function calls:
  1573 ;;		_Lcd_Port
  1574 ;; This function is called by:
  1575 ;;		_Lcd_Set_Cursor
  1576 ;;		_Lcd_Init
  1577 ;;		_Lcd_Clear
  1578 ;;		_Lcd_Shift_Right
  1579 ;;		_Lcd_Shift_Left
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           
  1584                           ;psect for function _Lcd_Cmd
  1585  0000'                    _Lcd_Cmd:
  1586                           
  1587                           ;incstack = 0
  1588                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1589                           ;Lcd_Cmd@a stored from wreg
  1590  0000' 0083'              	movwf	Lcd_Cmd@a
  1591  0001'                    l766:
  1592                           
  1593                           ;./LIB_LCD.h: 103:     RE0 = 0;
  1594  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  1595  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  1596  0003' 1009               	bcf	9,0	;volatile
  1597  0004'                    l768:
  1598                           
  1599                           ;./LIB_LCD.h: 104:     Lcd_Port(a);
  1600  0004' 0803'              	movf	Lcd_Cmd@a,w
  1601  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
  1602  000A'                    l770:
  1603                           
  1604                           ;./LIB_LCD.h: 105:     RE1 = 1;
  1605  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  1606  000B' 1303               	bcf	3,6	;RP1=0, select bank0
  1607  000C' 1489               	bsf	9,1	;volatile
  1608  000D'                    l772:
  1609                           
  1610                           ;./LIB_LCD.h: 106:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1611  000D' 300B               	movlw	11
  1612  000E' 0082'              	movwf	??_Lcd_Cmd+1
  1613  000F' 3062               	movlw	98
  1614  0010' 0081'              	movwf	??_Lcd_Cmd
  1615  0011'                    u357:
  1616  0011' 0B81'              	decfsz	??_Lcd_Cmd,f
  1617  0012' 2800'              	goto	u357
  1618  0013' 0B82'              	decfsz	??_Lcd_Cmd+1,f
  1619  0014' 2800'              	goto	u357
  1620  0015' 0000               	nop
  1621  0016'                    l774:
  1622                           
  1623                           ;./LIB_LCD.h: 107:     RE1 = 0;
  1624  0016' 1283               	bcf	3,5	;RP0=0, select bank0
  1625  0017' 1303               	bcf	3,6	;RP1=0, select bank0
  1626  0018' 1089               	bcf	9,1	;volatile
  1627  0019'                    l80:
  1628  0019' 0008               	return
  1629  001A'                    __end_of_Lcd_Cmd:
  1630                           
  1631                           	psect	text11
  1632  0000'                    __ptext11:	
  1633 ;; *************** function _Lcd_Port *****************
  1634 ;; Defined at:
  1635 ;;		line 59 in file "./LIB_LCD.h"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  a               1    wreg     unsigned char 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  a               1    0[COMMON] unsigned char 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1649 ;;      Params:         0       0       0       0       0
  1650 ;;      Locals:         1       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0
  1652 ;;      Totals:         1       0       0       0       0
  1653 ;;Total ram usage:        1 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_Lcd_Cmd
  1659 ;;		_Lcd_Write_Char
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function _Lcd_Port
  1665  0000'                    _Lcd_Port:
  1666                           
  1667                           ;incstack = 0
  1668                           ; Regs used in _Lcd_Port: [wreg]
  1669                           ;Lcd_Port@a stored from wreg
  1670  0000' 0080'              	movwf	Lcd_Port@a
  1671  0001'                    l748:
  1672                           
  1673                           ;./LIB_LCD.h: 60:     if (a & 1)
  1674  0001' 1C00'              	btfss	Lcd_Port@a,0
  1675  0002' 2800'              	goto	u11
  1676  0003' 2800'              	goto	u10
  1677  0004'                    u11:
  1678  0004' 2800'              	goto	l61
  1679  0005'                    u10:
  1680  0005'                    l750:
  1681                           
  1682                           ;./LIB_LCD.h: 61:         RD0 = 1;
  1683  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  1684  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  1685  0007' 1408               	bsf	8,0	;volatile
  1686  0008' 2800'              	goto	l62
  1687  0009'                    l61:	
  1688                           ;./LIB_LCD.h: 62:     else
  1689                           
  1690                           
  1691                           ;./LIB_LCD.h: 63:         RD0 = 0;
  1692  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  1693  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  1694  000B' 1008               	bcf	8,0	;volatile
  1695  000C'                    l62:
  1696                           
  1697                           ;./LIB_LCD.h: 65:     if (a & 2)
  1698  000C' 1C80'              	btfss	Lcd_Port@a,1
  1699  000D' 2800'              	goto	u21
  1700  000E' 2800'              	goto	u20
  1701  000F'                    u21:
  1702  000F' 2800'              	goto	l63
  1703  0010'                    u20:
  1704  0010'                    l752:
  1705                           
  1706                           ;./LIB_LCD.h: 66:         RD1 = 1;
  1707  0010' 1488               	bsf	8,1	;volatile
  1708  0011' 2800'              	goto	l64
  1709  0012'                    l63:	
  1710                           ;./LIB_LCD.h: 67:     else
  1711                           
  1712                           
  1713                           ;./LIB_LCD.h: 68:         RD1 = 0;
  1714  0012' 1088               	bcf	8,1	;volatile
  1715  0013'                    l64:
  1716                           
  1717                           ;./LIB_LCD.h: 70:     if (a & 4)
  1718  0013' 1D00'              	btfss	Lcd_Port@a,2
  1719  0014' 2800'              	goto	u31
  1720  0015' 2800'              	goto	u30
  1721  0016'                    u31:
  1722  0016' 2800'              	goto	l65
  1723  0017'                    u30:
  1724  0017'                    l754:
  1725                           
  1726                           ;./LIB_LCD.h: 71:         RD2 = 1;
  1727  0017' 1508               	bsf	8,2	;volatile
  1728  0018' 2800'              	goto	l66
  1729  0019'                    l65:	
  1730                           ;./LIB_LCD.h: 72:     else
  1731                           
  1732                           
  1733                           ;./LIB_LCD.h: 73:         RD2 = 0;
  1734  0019' 1108               	bcf	8,2	;volatile
  1735  001A'                    l66:
  1736                           
  1737                           ;./LIB_LCD.h: 75:     if (a & 8)
  1738  001A' 1D80'              	btfss	Lcd_Port@a,3
  1739  001B' 2800'              	goto	u41
  1740  001C' 2800'              	goto	u40
  1741  001D'                    u41:
  1742  001D' 2800'              	goto	l67
  1743  001E'                    u40:
  1744  001E'                    l756:
  1745                           
  1746                           ;./LIB_LCD.h: 76:         RD3 = 1;
  1747  001E' 1588               	bsf	8,3	;volatile
  1748  001F' 2800'              	goto	l68
  1749  0020'                    l67:	
  1750                           ;./LIB_LCD.h: 77:     else
  1751                           
  1752                           
  1753                           ;./LIB_LCD.h: 78:         RD3 = 0;
  1754  0020' 1188               	bcf	8,3	;volatile
  1755  0021'                    l68:
  1756                           
  1757                           ;./LIB_LCD.h: 80:     if (a & 16)
  1758  0021' 1E00'              	btfss	Lcd_Port@a,4
  1759  0022' 2800'              	goto	u51
  1760  0023' 2800'              	goto	u50
  1761  0024'                    u51:
  1762  0024' 2800'              	goto	l69
  1763  0025'                    u50:
  1764  0025'                    l758:
  1765                           
  1766                           ;./LIB_LCD.h: 81:         RD4 = 1;
  1767  0025' 1608               	bsf	8,4	;volatile
  1768  0026' 2800'              	goto	l70
  1769  0027'                    l69:	
  1770                           ;./LIB_LCD.h: 82:     else
  1771                           
  1772                           
  1773                           ;./LIB_LCD.h: 83:         RD4 = 0;
  1774  0027' 1208               	bcf	8,4	;volatile
  1775  0028'                    l70:
  1776                           
  1777                           ;./LIB_LCD.h: 85:     if (a & 32)
  1778  0028' 1E80'              	btfss	Lcd_Port@a,5
  1779  0029' 2800'              	goto	u61
  1780  002A' 2800'              	goto	u60
  1781  002B'                    u61:
  1782  002B' 2800'              	goto	l71
  1783  002C'                    u60:
  1784  002C'                    l760:
  1785                           
  1786                           ;./LIB_LCD.h: 86:         RD5 = 1;
  1787  002C' 1688               	bsf	8,5	;volatile
  1788  002D' 2800'              	goto	l72
  1789  002E'                    l71:	
  1790                           ;./LIB_LCD.h: 87:     else
  1791                           
  1792                           
  1793                           ;./LIB_LCD.h: 88:         RD5 = 0;
  1794  002E' 1288               	bcf	8,5	;volatile
  1795  002F'                    l72:
  1796                           
  1797                           ;./LIB_LCD.h: 90:     if (a & 64)
  1798  002F' 1F00'              	btfss	Lcd_Port@a,6
  1799  0030' 2800'              	goto	u71
  1800  0031' 2800'              	goto	u70
  1801  0032'                    u71:
  1802  0032' 2800'              	goto	l73
  1803  0033'                    u70:
  1804  0033'                    l762:
  1805                           
  1806                           ;./LIB_LCD.h: 91:         RD6 = 1;
  1807  0033' 1708               	bsf	8,6	;volatile
  1808  0034' 2800'              	goto	l74
  1809  0035'                    l73:	
  1810                           ;./LIB_LCD.h: 92:     else
  1811                           
  1812                           
  1813                           ;./LIB_LCD.h: 93:         RD6 = 0;
  1814  0035' 1308               	bcf	8,6	;volatile
  1815  0036'                    l74:
  1816                           
  1817                           ;./LIB_LCD.h: 95:     if (a & 128)
  1818  0036' 1F80'              	btfss	Lcd_Port@a,7
  1819  0037' 2800'              	goto	u81
  1820  0038' 2800'              	goto	u80
  1821  0039'                    u81:
  1822  0039' 2800'              	goto	l75
  1823  003A'                    u80:
  1824  003A'                    l764:
  1825                           
  1826                           ;./LIB_LCD.h: 96:         RD7 = 1;
  1827  003A' 1788               	bsf	8,7	;volatile
  1828  003B' 2800'              	goto	l77
  1829  003C'                    l75:	
  1830                           ;./LIB_LCD.h: 97:     else
  1831                           
  1832                           
  1833                           ;./LIB_LCD.h: 98:         RD7 = 0;
  1834  003C' 1388               	bcf	8,7	;volatile
  1835  003D'                    l77:
  1836  003D' 0008               	return
  1837  003E'                    __end_of_Lcd_Port:
  1838  007E                     btemp	set	126	;btemp
  1839  007E                     wtemp0	set	126
  1840                           
  1841                           	psect	config
  1842                           
  1843                           ;Config register CONFIG1 @ 0x2007
  1844                           ;	Oscillator Selection bits
  1845                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1846                           ;	Watchdog Timer Enable bit
  1847                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1848                           ;	Power-up Timer Enable bit
  1849                           ;	PWRTE = OFF, PWRT disabled
  1850                           ;	RE3/MCLR pin function select bit
  1851                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1852                           ;	Code Protection bit
  1853                           ;	CP = OFF, Program memory code protection is disabled
  1854                           ;	Data Code Protection bit
  1855                           ;	CPD = OFF, Data memory code protection is disabled
  1856                           ;	Brown Out Reset Selection bits
  1857                           ;	BOREN = OFF, BOR disabled
  1858                           ;	Internal External Switchover bit
  1859                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1860                           ;	Fail-Safe Clock Monitor Enabled bit
  1861                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1862                           ;	Low Voltage Programming Enable bit
  1863                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1864                           ;	In-Circuit Debugger Mode bit
  1865                           ;	DEBUG = 0x1, unprogrammed default
  1866  2007                     	org	8199
  1867  2007  20D6               	dw	8406
  1868                           
  1869                           ;Config register CONFIG2 @ 0x2008
  1870                           ;	Brown-out Reset Selection bit
  1871                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1872                           ;	Flash Program Memory Self Write Enable bits
  1873                           ;	WRT = OFF, Write protection off
  1874  2008                     	org	8200
  1875  2008  3FFF               	dw	16383

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 18
		 -> data(BANK0[16]), STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _setup->_spiInit
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1308
                                             10 COMMON     3     3      0
                            _Baudios
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _OSCILADOR
                       _config_rcsta
                       _config_txsta
                              _setup
                            _spiRead
                           _spiWrite
                             _sprint
 ---------------------------------------------------------------------------------
 (1) _sprint                                               6     0      6       0
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _config_txsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rcsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILADOR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     377
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     135
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     421
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     135
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     120
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Baudios                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Baudios
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _OSCILADOR
   _config_rcsta
   _config_txsta
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprint

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 01:17:55 2021

                        pc 0002                _SSPSTATbits 0094                         l61 0009  
                       l70 0028                         l62 000C                         l71 002E  
                       l63 0012                         l72 002F                         l64 0013  
                       l80 0019                         l73 0035                         l65 0019  
                       l74 0036                         l66 001A                         l75 003C  
                       l67 0020                         l68 0021                         l92 0069  
                       l77 003D                         l69 0027                         l95 0015  
                       l89 0023                         u10 0005                         u11 0004  
                       u20 0010                         u21 000F                         u30 0017  
                       u31 0016                         u40 001E                         u41 001D  
                       u50 0025                         u51 0024                         u60 002C  
                       u61 002B                         u70 0033                         u71 0032  
                       u80 003A                         u81 0039                         fsr 0004  
                      l101 0041                        l122 0017                        l142 0000  
                      l145 0006                        l138 0010                        l139 0015  
                      l156 0008                        l148 0005                        l810 0000  
                      l820 002E                        l812 0009                        l750 0005  
                      l830 0059                        l822 0034                        l814 000F  
                      l910 000F                        l902 0001                        l760 002C  
                      l752 0010                        l832 0064                        l824 003F  
                      l816 001E                        l920 0018                        l912 0001  
                      l904 0008                        l762 0033                        l754 0017  
                      l770 000A                        l826 0044                        l818 0023  
                      l922 001D                        l914 0006                        l930 0025  
                      l906 000A                        l850 0001                        l764 003A  
                      l756 001E                        l748 0001                        l772 000D  
                      l828 0053                        l916 000B                        l780 000A  
                      l924 0000                        l908 000C                        l932 0000  
                      l852 0000                        l940 0000                        l758 0025  
                      l774 0016                        l766 0001                        l918 0012  
                      l782 000D                        l926 0003                        l934 0004  
                      l854 0005                        l950 0026                        l942 0005  
                      l768 0004                        l784 0012                        l776 0001  
                      l928 001F                        l936 000D                        l960 004B  
                      l952 002F                        l944 000A                        l778 0004  
                      l938 000E                        l970 0080                        l962 0054  
                      l954 0032                        l946 000F                        l796 0000  
                      l964 0057                        l956 003B                        l948 0014  
                      l966 0064                        l958 0043                        l968 0078  
                      _RD0 0040                        _RD1 0041                        _RD2 0042  
                      _RE0 0048                        _RD3 0043                        _RE1 0049  
                      u100 0006                        _RD4 0044                        u101 0005  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      u200 002F                        u210 0041                        u211 0040  
                      u160 0008                        u161 0007                        u170 0006  
                      u307 0036                        u171 0005                        u227 0036  
                      u180 0018                        u317 0041                        u181 0017  
                      u237 004F                        u190 000D                        u327 004E  
                      u247 005D                        u337 005B                        u257 000F  
                      u347 0066                        u267 0004                        u357 0011  
                      u277 0013                        u287 0020                        u297 002B  
                      fsr0 0004                        indf 0000                       STR_1 0010  
                     STR_2 0022                       _data 0000          ?_Lcd_Write_String 0003  
                     _main 0000                       btemp 007E                       _volt 0000  
                     start 0000*            ??_config_rcsta 0000         ??_Lcd_Write_String 0005  
           ??_config_txsta 0000            __end_of_Lcd_Cmd 001A                      ?_main 0000  
                    _ANSEL 0188                      _PORTB 0006                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 0024                      _TRISB 0086                      _TRISD 0088  
                    _setup 0000                      pclath 000A            __end_of_spiInit 0016  
          __end_of_spiRead 0009                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 006A           __end_of_Lcd_Port 003E            __initialization 0000  
             __end_of_main 008D                     ??_main 000A                     ?_setup 0000  
                   _ANSELH 0189                  ??_Baudios 0000                  ??_Lcd_Cmd 0001  
  __size_of_Lcd_Write_Char 0016                     _TRISC2 043A                     _TRISC3 043B  
                   _TRISC5 043D                     _SSPCON 0014                     _SSPBUF 0013  
                   _sprint 0000*          __end_of_spiWrite 0006                  ??_spiInit 0003  
                ??_spiRead 0000            Lcd_Set_Cursor@a 0006            Lcd_Set_Cursor@b 0004  
  __end_of__initialization 000A             __pcstackCOMMON 0000              __end_of_setup 0018  
           _Lcd_Set_Cursor 0000                  ?_Lcd_Init 0000                  ?_Lcd_Port 0000  
                  ??_setup 0004                 __pbssBANK0 0000                 __pmaintext 0000  
  __size_of_spiReceiveWait 0007  __size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 0024  
                  ?_sprint 0000                 ??_Lcd_Init 0004                 ??_Lcd_Port 0000  
                  _SSPSTAT 0094                 __stringtab 0000                    _Baudios 0000* 
           _Lcd_Write_Char 0000                    _Lcd_Cmd 0000                  ?_spiWrite 0000  
          ?_Lcd_Set_Cursor 0004                    __ptext1 0000                    __ptext2 0000  
                  __ptext3 0000                    __ptext4 0000                    __ptext5 0000  
                  __ptext6 0000                    __ptext7 0000                    __ptext8 0000  
                  __ptext9 0000                    _spiInit 0000                    _spiRead 0000  
                  clrloop0 0001     __end_of_Lcd_Write_Char 0016       end_of_initialization 000A  
                _OSCILADOR 0000*              _config_rcsta 0000*              _config_txsta 0000* 
               ??_spiWrite 0000                  Lcd_Port@a 0000                  _PORTCbits 0007  
              spiWrite@dat 0000            ?_Lcd_Write_Char 0000          Lcd_Write_String@a 0003  
        Lcd_Write_String@i 0008                 ?_OSCILADOR 0000             _spiReceiveWait 0000  
         _Lcd_Write_String 0000        start_initialization 0000          __size_of_Lcd_Init 006A  
        __size_of_Lcd_Port 003E     __end_of_spiReceiveWait 0007            Lcd_Write_Char@a 0002  
                 ??_sprint 0000                __pbssCOMMON 0000                  ___latbits 0002  
                 ?_Baudios 0000                   ?_Lcd_Cmd 0000                ??_OSCILADOR 0000  
          ?_spiReceiveWait 0000           ??_Lcd_Set_Cursor 0005          __size_of_spiWrite 0006  
                __pstrings 0000                   ?_spiInit 0000                   ?_spiRead 0000  
           __size_of_setup 0018       spiInit@sTransmitEdge 0002                  clear_ram0 0000  
       spiInit@sDataSample 0000                   Lcd_Cmd@a 0003                __stringbase 000F  
         ??_Lcd_Write_Char 0001                   _Lcd_Init 0000                   _Lcd_Port 0000  
 __end_of_Lcd_Write_String 0042           __size_of_Lcd_Cmd 001A         __end_of__stringtab 0010  
                 __ptext10 0000                   __ptext11 0000           __size_of_spiInit 0016  
         __size_of_spiRead 0009              __size_of_main 008D                   _spiWrite 0000  
             spiInit@sType 0003          spiInit@sClockIdle 0001           ??_spiReceiveWait 0000  
                stringcode 000A         Lcd_Set_Cursor@temp 0007                   stringdir 000A  
                 stringtab 0000              ?_config_rcsta 0000              ?_config_txsta 0000  
