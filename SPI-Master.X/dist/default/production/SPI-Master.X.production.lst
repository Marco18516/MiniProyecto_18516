

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 17:02:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    57                           	psect	text2_split_1,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 2.31
    61                           ; Generated 13/10/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F887 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001B                     	;# 
   126  001C                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  0081                     	;# 
   131  0085                     	;# 
   132  0086                     	;# 
   133  0087                     	;# 
   134  0088                     	;# 
   135  0089                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  008F                     	;# 
   140  0090                     	;# 
   141  0091                     	;# 
   142  0092                     	;# 
   143  0093                     	;# 
   144  0093                     	;# 
   145  0093                     	;# 
   146  0094                     	;# 
   147  0095                     	;# 
   148  0096                     	;# 
   149  0097                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009A                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  0105                     	;# 
   159  0107                     	;# 
   160  0108                     	;# 
   161  0109                     	;# 
   162  010C                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  0185                     	;# 
   168  0187                     	;# 
   169  0188                     	;# 
   170  0189                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  0088                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  008F                     	;# 
   218  0090                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0097                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236  0105                     	;# 
   237  0107                     	;# 
   238  0108                     	;# 
   239  0109                     	;# 
   240  010C                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  0185                     	;# 
   246  0187                     	;# 
   247  0188                     	;# 
   248  0189                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0008                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001D                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  0088                     	;# 
   291  0089                     	;# 
   292  008C                     	;# 
   293  008D                     	;# 
   294  008E                     	;# 
   295  008F                     	;# 
   296  0090                     	;# 
   297  0091                     	;# 
   298  0092                     	;# 
   299  0093                     	;# 
   300  0093                     	;# 
   301  0093                     	;# 
   302  0094                     	;# 
   303  0095                     	;# 
   304  0096                     	;# 
   305  0097                     	;# 
   306  0098                     	;# 
   307  0099                     	;# 
   308  009A                     	;# 
   309  009B                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  009F                     	;# 
   314  0105                     	;# 
   315  0107                     	;# 
   316  0108                     	;# 
   317  0109                     	;# 
   318  010C                     	;# 
   319  010C                     	;# 
   320  010D                     	;# 
   321  010E                     	;# 
   322  010F                     	;# 
   323  0185                     	;# 
   324  0187                     	;# 
   325  0188                     	;# 
   326  0189                     	;# 
   327  018C                     	;# 
   328  018D                     	;# 
   329                           
   330                           	psect	strings
   331  0003                     __pstrings:
   332  0003                     stringtab:
   333  0003                     __stringtab:
   334                           
   335                           ;	String table - string pointers are 1 byte each
   336  0003  1BFF               	btfsc	btemp+1,7
   337  0004  280D               	ljmp	stringcode
   338  0005  1383               	bcf	3,7
   339  0006  187F               	btfsc	btemp+1,0
   340  0007  1783               	bsf	3,7
   341  0008  0800               	movf	0,w
   342  0009  0A84               	incf	4,f
   343  000A  1903               	skipnz
   344  000B  0AFF               	incf	btemp+1,f
   345  000C  0008               	return
   346  000D                     stringcode:
   347  000D                     stringdir:
   348  000D  3000               	movlw	high stringdir
   349  000E  008A               	movwf	10
   350  000F  0804               	movf	4,w
   351  0010  0A84               	incf	4,f
   352  0011  0782               	addwf	2,f
   353  0012                     __stringbase:
   354  0012  3400               	retlw	0
   355  0013                     __end_of__stringtab:
   356  0013                     __powers_:
   357  0013  3400               	retlw	0
   358  0014  3400               	retlw	0
   359  0015  3480               	retlw	128
   360  0016  343F               	retlw	63
   361  0017  3400               	retlw	0
   362  0018  3400               	retlw	0
   363  0019  3420               	retlw	32
   364  001A  3441               	retlw	65
   365  001B  3400               	retlw	0
   366  001C  3400               	retlw	0
   367  001D  34C8               	retlw	200
   368  001E  3442               	retlw	66
   369  001F  3400               	retlw	0
   370  0020  3400               	retlw	0
   371  0021  347A               	retlw	122
   372  0022  3444               	retlw	68
   373  0023  3400               	retlw	0
   374  0024  3440               	retlw	64
   375  0025  341C               	retlw	28
   376  0026  3446               	retlw	70
   377  0027  3400               	retlw	0
   378  0028  3450               	retlw	80
   379  0029  34C3               	retlw	195
   380  002A  3447               	retlw	71
   381  002B  3400               	retlw	0
   382  002C  3424               	retlw	36
   383  002D  3474               	retlw	116
   384  002E  3449               	retlw	73
   385  002F  3480               	retlw	128
   386  0030  3496               	retlw	150
   387  0031  3418               	retlw	24
   388  0032  344B               	retlw	75
   389  0033  3420               	retlw	32
   390  0034  34BC               	retlw	188
   391  0035  34BE               	retlw	190
   392  0036  344C               	retlw	76
   393  0037  3428               	retlw	40
   394  0038  346B               	retlw	107
   395  0039  346E               	retlw	110
   396  003A  344E               	retlw	78
   397  003B  34F9               	retlw	249
   398  003C  3402               	retlw	2
   399  003D  3415               	retlw	21
   400  003E  3450               	retlw	80
   401  003F  34EC               	retlw	236
   402  0040  3478               	retlw	120
   403  0041  34AD               	retlw	173
   404  0042  3460               	retlw	96
   405  0043  34CA               	retlw	202
   406  0044  34F2               	retlw	242
   407  0045  3449               	retlw	73
   408  0046  3471               	retlw	113
   409  0047                     __end_of__powers_:
   410  0047                     __npowers_:
   411  0047  3400               	retlw	0
   412  0048  3400               	retlw	0
   413  0049  3480               	retlw	128
   414  004A  343F               	retlw	63
   415  004B  34CD               	retlw	205
   416  004C  34CC               	retlw	204
   417  004D  34CC               	retlw	204
   418  004E  343D               	retlw	61
   419  004F  340A               	retlw	10
   420  0050  34D7               	retlw	215
   421  0051  3423               	retlw	35
   422  0052  343C               	retlw	60
   423  0053  346F               	retlw	111
   424  0054  3412               	retlw	18
   425  0055  3483               	retlw	131
   426  0056  343A               	retlw	58
   427  0057  3417               	retlw	23
   428  0058  34B7               	retlw	183
   429  0059  34D1               	retlw	209
   430  005A  3438               	retlw	56
   431  005B  34AC               	retlw	172
   432  005C  34C5               	retlw	197
   433  005D  3427               	retlw	39
   434  005E  3437               	retlw	55
   435  005F  34BD               	retlw	189
   436  0060  3437               	retlw	55
   437  0061  3486               	retlw	134
   438  0062  3435               	retlw	53
   439  0063  3495               	retlw	149
   440  0064  34BF               	retlw	191
   441  0065  34D6               	retlw	214
   442  0066  3433               	retlw	51
   443  0067  3477               	retlw	119
   444  0068  34CC               	retlw	204
   445  0069  342B               	retlw	43
   446  006A  3432               	retlw	50
   447  006B  345F               	retlw	95
   448  006C  3470               	retlw	112
   449  006D  3489               	retlw	137
   450  006E  3430               	retlw	48
   451  006F  34FF               	retlw	255
   452  0070  34E6               	retlw	230
   453  0071  34DB               	retlw	219
   454  0072  342E               	retlw	46
   455  0073  3408               	retlw	8
   456  0074  34E5               	retlw	229
   457  0075  343C               	retlw	60
   458  0076  341E               	retlw	30
   459  0077  3460               	retlw	96
   460  0078  3442               	retlw	66
   461  0079  34A2               	retlw	162
   462  007A  340D               	retlw	13
   463  007B                     __end_of__npowers_:
   464  007B                     _dpowers:
   465  007B  3401               	retlw	1
   466  007C  3400               	retlw	0
   467  007D  3400               	retlw	0
   468  007E  3400               	retlw	0
   469  007F  340A               	retlw	10
   470  0080  3400               	retlw	0
   471  0081  3400               	retlw	0
   472  0082  3400               	retlw	0
   473  0083  3464               	retlw	100
   474  0084  3400               	retlw	0
   475  0085  3400               	retlw	0
   476  0086  3400               	retlw	0
   477  0087  34E8               	retlw	232
   478  0088  3403               	retlw	3
   479  0089  3400               	retlw	0
   480  008A  3400               	retlw	0
   481  008B  3410               	retlw	16
   482  008C  3427               	retlw	39
   483  008D  3400               	retlw	0
   484  008E  3400               	retlw	0
   485  008F  34A0               	retlw	160
   486  0090  3486               	retlw	134
   487  0091  3401               	retlw	1
   488  0092  3400               	retlw	0
   489  0093  3440               	retlw	64
   490  0094  3442               	retlw	66
   491  0095  340F               	retlw	15
   492  0096  3400               	retlw	0
   493  0097  3480               	retlw	128
   494  0098  3496               	retlw	150
   495  0099  3498               	retlw	152
   496  009A  3400               	retlw	0
   497  009B  3400               	retlw	0
   498  009C  34E1               	retlw	225
   499  009D  34F5               	retlw	245
   500  009E  3405               	retlw	5
   501  009F  3400               	retlw	0
   502  00A0  34CA               	retlw	202
   503  00A1  349A               	retlw	154
   504  00A2  343B               	retlw	59
   505  00A3                     __end_of_dpowers:
   506  0013                     _SSPBUF	set	19
   507  0014                     _SSPCON	set	20
   508  0007                     _PORTCbits	set	7
   509  0006                     _PORTB	set	6
   510  0008                     _PORTD	set	8
   511  0009                     _PORTE	set	9
   512  0019                     _TXREG	set	25
   513  001A                     _RCREG	set	26
   514  0018                     _RCSTAbits	set	24
   515  0065                     _RCIF	set	101
   516  0049                     _RE1	set	73
   517  0048                     _RE0	set	72
   518  0047                     _RD7	set	71
   519  0046                     _RD6	set	70
   520  0045                     _RD5	set	69
   521  0044                     _RD4	set	68
   522  0043                     _RD3	set	67
   523  0042                     _RD2	set	66
   524  0041                     _RD1	set	65
   525  0040                     _RD0	set	64
   526  0094                     _SSPSTATbits	set	148
   527  0094                     _SSPSTAT	set	148
   528  008F                     _OSCCON	set	143
   529  0088                     _TRISD	set	136
   530  0089                     _TRISE	set	137
   531  0086                     _TRISB	set	134
   532  0098                     _TXSTAbits	set	152
   533  0099                     _SPBRG	set	153
   534  043B                     _TRISC3	set	1083
   535  043D                     _TRISC5	set	1085
   536  043A                     _TRISC2	set	1082
   537  0439                     _TRISC1	set	1081
   538  0438                     _TRISC0	set	1080
   539  04C1                     _TRMT	set	1217
   540  0189                     _ANSELH	set	393
   541  0188                     _ANSEL	set	392
   542  00A3                     STR_2:
   543  00A3  3425               	retlw	37	;'%'
   544  00A4  3431               	retlw	49	;'1'
   545  00A5  342E               	retlw	46	;'.'
   546  00A6  3430               	retlw	48	;'0'
   547  00A7  3466               	retlw	102	;'f'
   548  00A8  3420               	retlw	32	;' '
   549  00A9  3420               	retlw	32	;' '
   550  00AA  3420               	retlw	32	;' '
   551  00AB  3425               	retlw	37	;'%'
   552  00AC  3464               	retlw	100	;'d'
   553  00AD  3420               	retlw	32	;' '
   554  00AE  3420               	retlw	32	;' '
   555  00AF  3420               	retlw	32	;' '
   556  00B0  3425               	retlw	37	;'%'
   557  00B1  3433               	retlw	51	;'3'
   558  00B2  342E               	retlw	46	;'.'
   559  00B3  3430               	retlw	48	;'0'
   560  00B4  3466               	retlw	102	;'f'
   561  00B5  3400               	retlw	0
   562  00B6                     STR_1:
   563  00B6  3453               	retlw	83	;'S'
   564  00B7  3431               	retlw	49	;'1'
   565  00B8  3420               	retlw	32	;' '
   566  00B9  3420               	retlw	32	;' '
   567  00BA  3420               	retlw	32	;' '
   568  00BB  3453               	retlw	83	;'S'
   569  00BC  3432               	retlw	50	;'2'
   570  00BD  3420               	retlw	32	;' '
   571  00BE  3420               	retlw	32	;' '
   572  00BF  3420               	retlw	32	;' '
   573  00C0  3453               	retlw	83	;'S'
   574  00C1  3433               	retlw	51	;'3'
   575  00C2  3400               	retlw	0
   576  00B6                     
   577                           	psect	cinit
   578  07EF                     start_initialization:	
   579                           ; #config settings
   580                           
   581  07EF                     __initialization:
   582                           
   583                           ; Clear objects allocated to BANK0
   584  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   585  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   586  07F1  01EE               	clrf	__pbssBANK0& (0+127)
   587  07F2  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   588                           
   589                           ; Clear objects allocated to BANK1
   590  07F3  1383               	bcf	3,7	;select IRP bank0
   591  07F4  30CE               	movlw	low __pbssBANK1
   592  07F5  0084               	movwf	4
   593  07F6  30EB               	movlw	low (__pbssBANK1+29)
   594  07F7  160A  158A  213E  120A  118A  	fcall	clear_ram0
   595  07FC                     end_of_initialization:	
   596                           ;End of C runtime variable initialization code
   597                           
   598  07FC                     __end_of__initialization:
   599  07FC  0183               	clrf	3
   600  07FD  120A  118A  2917   	ljmp	_main	;jump to C main() function
   601                           
   602                           	psect	bssBANK0
   603  006E                     __pbssBANK0:
   604  006E                     _ADC1:
   605  006E                     	ds	1
   606  006F                     _cont:
   607  006F                     	ds	1
   608                           
   609                           	psect	bssBANK1
   610  00CE                     __pbssBANK1:
   611  00CE                     _temp:
   612  00CE                     	ds	4
   613  00D2                     _volt:
   614  00D2                     	ds	4
   615  00D6                     _ADC2:
   616  00D6                     	ds	1
   617  00D7                     _data:
   618  00D7                     	ds	20
   619                           
   620                           	psect	clrtext
   621  193E                     clear_ram0:	
   622                           ;	Called with FSR containing the base address, and
   623                           ;	W with the last address+1
   624                           
   625  193E  0064               	clrwdt	;clear the watchdog before getting into this loop
   626  193F                     clrloop0:
   627  193F  0180               	clrf	0	;clear RAM location pointed to by FSR
   628  1940  0A84               	incf	4,f	;increment pointer
   629  1941  0604               	xorwf	4,w	;XOR with final address
   630  1942  1903               	btfsc	3,2	;have we reached the end yet?
   631  1943  3400               	retlw	0	;all done for this memory range, return
   632  1944  0604               	xorwf	4,w	;XOR again to restore value
   633  1945  293F               	goto	clrloop0	;do the next byte
   634                           
   635                           	psect	cstackBANK1
   636  00A0                     __pcstackBANK1:
   637  00A0                     ?_sprintf:
   638  00A0                     sprintf@f:	
   639                           ; 2 bytes @ 0x0
   640                           
   641                           
   642                           ; 1 bytes @ 0x0
   643  00A0                     	ds	11
   644  00AB                     ??_sprintf:
   645                           
   646                           ; 1 bytes @ 0xB
   647  00AB                     	ds	5
   648  00B0                     _sprintf$1135:
   649                           
   650                           ; 4 bytes @ 0x10
   651  00B0                     	ds	4
   652  00B4                     sprintf@ap:
   653                           
   654                           ; 1 bytes @ 0x14
   655  00B4                     	ds	1
   656  00B5                     sprintf@flag:
   657                           
   658                           ; 2 bytes @ 0x15
   659  00B5                     	ds	2
   660  00B7                     sprintf@width:
   661                           
   662                           ; 2 bytes @ 0x17
   663  00B7                     	ds	2
   664  00B9                     sprintf@tmpval:
   665                           
   666                           ; 4 bytes @ 0x19
   667  00B9                     	ds	4
   668  00BD                     sprintf@val:
   669                           
   670                           ; 4 bytes @ 0x1D
   671  00BD                     	ds	4
   672  00C1                     sprintf@eexp:
   673                           
   674                           ; 2 bytes @ 0x21
   675  00C1                     	ds	2
   676  00C3                     sprintf@fval:
   677                           
   678                           ; 4 bytes @ 0x23
   679  00C3                     	ds	4
   680  00C7                     sprintf@sp:
   681                           
   682                           ; 1 bytes @ 0x27
   683  00C7                     	ds	1
   684  00C8                     sprintf@prec:
   685                           
   686                           ; 2 bytes @ 0x28
   687  00C8                     	ds	2
   688  00CA                     sprintf@c:
   689                           
   690                           ; 1 bytes @ 0x2A
   691  00CA                     	ds	1
   692  00CB                     ??_main:
   693                           
   694                           ; 1 bytes @ 0x2B
   695  00CB                     	ds	3
   696                           
   697                           	psect	cstackCOMMON
   698  0070                     __pcstackCOMMON:
   699  0070                     ?_isdigit:
   700  0070                     ?___fleq:	
   701                           ; 1 bit 
   702                           
   703  0070                     ?___flge:	
   704                           ; 1 bit 
   705                           
   706  0070                     ?_setup:	
   707                           ; 1 bit 
   708                           
   709  0070                     ?_OSCILADOR:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ??_OSCILADOR:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_Conteo:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_leer_ADC:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_spiInit:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_spiWrite:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ??_spiWrite:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_spiRead:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ??_spiRead:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ??_isdigit:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_Puerto:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ??_Puerto:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_LCD_CMD:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_datosLCD:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_LCD_clean:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_Lcd_Init:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_Baudios:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ??_Baudios:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_config_txsta:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ??_config_txsta:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_config_rcsta:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ??_config_rcsta:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_Write_USART:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ??_Write_USART:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_main:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_spiReceiveWait:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ??_spiReceiveWait:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?__Umul8_16:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ?___wmul:	
   794                           ; 2 bytes @ 0x0
   795                           
   796  0070                     ?___awmod:	
   797                           ; 2 bytes @ 0x0
   798                           
   799  0070                     ?___lwmod:	
   800                           ; 2 bytes @ 0x0
   801                           
   802  0070                     ?__tdiv_to_l_:	
   803                           ; 2 bytes @ 0x0
   804                           
   805  0070                     ?__div_to_l_:	
   806                           ; 4 bytes @ 0x0
   807                           
   808  0070                     ?___lldiv:	
   809                           ; 4 bytes @ 0x0
   810                           
   811  0070                     ?___flneg:	
   812                           ; 4 bytes @ 0x0
   813                           
   814  0070                     ?___xxtofl:	
   815                           ; 4 bytes @ 0x0
   816                           
   817  0070                     Puerto@x:	
   818                           ; 4 bytes @ 0x0
   819                           
   820  0070                     Write_USART@a:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     spiInit@sDataSample:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     spiWrite@dat:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     __Umul8_16@multiplicand:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     _isdigit$934:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ___wmul@multiplier:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ___awmod@divisor:	
   839                           ; 2 bytes @ 0x0
   840                           
   841  0070                     ___lwmod@divisor:	
   842                           ; 2 bytes @ 0x0
   843                           
   844  0070                     ___lldiv@divisor:	
   845                           ; 2 bytes @ 0x0
   846                           
   847  0070                     __div_to_l_@f1:	
   848                           ; 4 bytes @ 0x0
   849                           
   850  0070                     ___fleq@ff1:	
   851                           ; 4 bytes @ 0x0
   852                           
   853  0070                     ___flge@ff1:	
   854                           ; 4 bytes @ 0x0
   855                           
   856  0070                     ___flneg@f1:	
   857                           ; 4 bytes @ 0x0
   858                           
   859  0070                     __tdiv_to_l_@f1:	
   860                           ; 4 bytes @ 0x0
   861                           
   862  0070                     ___xxtofl@val:	
   863                           ; 4 bytes @ 0x0
   864                           
   865                           
   866                           ; 4 bytes @ 0x0
   867  0070                     	ds	1
   868  0071                     ??_Conteo:
   869  0071                     ??_LCD_CMD:	
   870                           ; 1 bytes @ 0x1
   871                           
   872  0071                     ??_datosLCD:	
   873                           ; 1 bytes @ 0x1
   874                           
   875  0071                     ?_Write_USART_String:	
   876                           ; 1 bytes @ 0x1
   877                           
   878  0071                     spiInit@sClockIdle:	
   879                           ; 1 bytes @ 0x1
   880                           
   881  0071                     isdigit@c:	
   882                           ; 1 bytes @ 0x1
   883                           
   884  0071                     Write_USART_String@a:	
   885                           ; 1 bytes @ 0x1
   886                           
   887                           
   888                           ; 2 bytes @ 0x1
   889  0071                     	ds	1
   890  0072                     ??__Umul8_16:
   891  0072                     LCD_CMD@a:	
   892                           ; 1 bytes @ 0x2
   893                           
   894  0072                     spiInit@sTransmitEdge:	
   895                           ; 1 bytes @ 0x2
   896                           
   897  0072                     ___wmul@multiplicand:	
   898                           ; 1 bytes @ 0x2
   899                           
   900  0072                     ___awmod@dividend:	
   901                           ; 2 bytes @ 0x2
   902                           
   903  0072                     ___lwmod@dividend:	
   904                           ; 2 bytes @ 0x2
   905                           
   906                           
   907                           ; 2 bytes @ 0x2
   908  0072                     	ds	1
   909  0073                     ??_spiInit:
   910  0073                     ?_Lcd_Write_String:	
   911                           ; 1 bytes @ 0x3
   912                           
   913  0073                     ??_Write_USART_String:	
   914                           ; 1 bytes @ 0x3
   915                           
   916  0073                     datosLCD@x:	
   917                           ; 1 bytes @ 0x3
   918                           
   919  0073                     spiInit@sType:	
   920                           ; 1 bytes @ 0x3
   921                           
   922  0073                     Lcd_Write_String@a:	
   923                           ; 1 bytes @ 0x3
   924                           
   925                           
   926                           ; 2 bytes @ 0x3
   927  0073                     	ds	1
   928  0074                     ??_setup:
   929  0074                     ??_LCD_clean:	
   930                           ; 1 bytes @ 0x4
   931                           
   932  0074                     ??_Lcd_Init:	
   933                           ; 1 bytes @ 0x4
   934                           
   935  0074                     ?_Lcd_Set_Cursor:	
   936                           ; 1 bytes @ 0x4
   937                           
   938  0074                     ??___wmul:	
   939                           ; 1 bytes @ 0x4
   940                           
   941  0074                     ??___awmod:	
   942                           ; 1 bytes @ 0x4
   943                           
   944  0074                     ??___flneg:	
   945                           ; 1 bytes @ 0x4
   946                           
   947  0074                     ??___lwmod:	
   948                           ; 1 bytes @ 0x4
   949                           
   950  0074                     ??___xxtofl:	
   951                           ; 1 bytes @ 0x4
   952                           
   953  0074                     Lcd_Set_Cursor@y:	
   954                           ; 1 bytes @ 0x4
   955                           
   956  0074                     Write_USART_String@i:	
   957                           ; 1 bytes @ 0x4
   958                           
   959  0074                     ___wmul@product:	
   960                           ; 1 bytes @ 0x4
   961                           
   962  0074                     __Umul8_16@product:	
   963                           ; 2 bytes @ 0x4
   964                           
   965  0074                     ___lldiv@dividend:	
   966                           ; 2 bytes @ 0x4
   967                           
   968  0074                     __div_to_l_@f2:	
   969                           ; 4 bytes @ 0x4
   970                           
   971  0074                     ___fleq@ff2:	
   972                           ; 4 bytes @ 0x4
   973                           
   974  0074                     ___flge@ff2:	
   975                           ; 4 bytes @ 0x4
   976                           
   977  0074                     __tdiv_to_l_@f2:	
   978                           ; 4 bytes @ 0x4
   979                           
   980                           
   981                           ; 4 bytes @ 0x4
   982  0074                     	ds	1
   983  0075                     ??_Lcd_Set_Cursor:
   984  0075                     ??_Lcd_Write_String:	
   985                           ; 1 bytes @ 0x5
   986                           
   987  0075                     ___awmod@counter:	
   988                           ; 1 bytes @ 0x5
   989                           
   990  0075                     ___lwmod@counter:	
   991                           ; 1 bytes @ 0x5
   992                           
   993                           
   994                           ; 1 bytes @ 0x5
   995  0075                     	ds	1
   996  0076                     ?___lwdiv:
   997  0076                     Lcd_Set_Cursor@x:	
   998                           ; 2 bytes @ 0x6
   999                           
  1000  0076                     ___awmod@sign:	
  1001                           ; 1 bytes @ 0x6
  1002                           
  1003  0076                     ___lwdiv@divisor:	
  1004                           ; 1 bytes @ 0x6
  1005                           
  1006  0076                     __Umul8_16@word_mpld:	
  1007                           ; 2 bytes @ 0x6
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x6
  1011  0076                     	ds	1
  1012  0077                     ?___awdiv:
  1013  0077                     Lcd_Set_Cursor@a:	
  1014                           ; 2 bytes @ 0x7
  1015                           
  1016  0077                     ___awdiv@divisor:	
  1017                           ; 1 bytes @ 0x7
  1018                           
  1019                           
  1020                           ; 2 bytes @ 0x7
  1021  0077                     	ds	1
  1022  0078                     ??__tdiv_to_l_:
  1023  0078                     ??__div_to_l_:	
  1024                           ; 1 bytes @ 0x8
  1025                           
  1026  0078                     ??___lldiv:	
  1027                           ; 1 bytes @ 0x8
  1028                           
  1029  0078                     ??___fleq:	
  1030                           ; 1 bytes @ 0x8
  1031                           
  1032  0078                     ??___flge:	
  1033                           ; 1 bytes @ 0x8
  1034                           
  1035  0078                     __Umul8_16@multiplier:	
  1036                           ; 1 bytes @ 0x8
  1037                           
  1038  0078                     ___xxtofl@sign:	
  1039                           ; 1 bytes @ 0x8
  1040                           
  1041  0078                     Lcd_Write_String@i:	
  1042                           ; 1 bytes @ 0x8
  1043                           
  1044  0078                     ___lwdiv@dividend:	
  1045                           ; 2 bytes @ 0x8
  1046                           
  1047                           
  1048                           ; 2 bytes @ 0x8
  1049  0078                     	ds	1
  1050  0079                     ___xxtofl@exp:
  1051  0079                     ___awdiv@dividend:	
  1052                           ; 1 bytes @ 0x9
  1053                           
  1054  0079                     ___lldiv@quotient:	
  1055                           ; 2 bytes @ 0x9
  1056                           
  1057                           
  1058                           ; 4 bytes @ 0x9
  1059  0079                     	ds	1
  1060  007A                     ??___lwdiv:
  1061  007A                     ___xxtofl@arg:	
  1062                           ; 1 bytes @ 0xA
  1063                           
  1064                           
  1065                           ; 4 bytes @ 0xA
  1066  007A                     	ds	1
  1067  007B                     ??___awdiv:
  1068  007B                     ___lwdiv@quotient:	
  1069                           ; 1 bytes @ 0xB
  1070                           
  1071                           
  1072                           ; 2 bytes @ 0xB
  1073  007B                     	ds	2
  1074  007D                     ___lldiv@counter:
  1075  007D                     ___lwdiv@counter:	
  1076                           ; 1 bytes @ 0xD
  1077                           
  1078                           
  1079                           ; 1 bytes @ 0xD
  1080  007D                     	ds	1
  1081  007E                     ??___flsub:
  1082                           
  1083                           	psect	cstackBANK0
  1084  0020                     __pcstackBANK0:	
  1085                           ; 1 bytes @ 0xE
  1086                           
  1087  0020                     ??_leer_ADC:
  1088  0020                     ?_temperatura:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0020                     ?___llmod:	
  1092                           ; 4 bytes @ 0x0
  1093                           
  1094  0020                     ___awdiv@counter:	
  1095                           ; 4 bytes @ 0x0
  1096                           
  1097  0020                     __div_to_l_@quot:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0020                     __tdiv_to_l_@quot:	
  1101                           ; 4 bytes @ 0x0
  1102                           
  1103  0020                     ___llmod@divisor:	
  1104                           ; 4 bytes @ 0x0
  1105                           
  1106                           
  1107                           ; 4 bytes @ 0x0
  1108  0020                     	ds	1
  1109  0021                     ___awdiv@sign:
  1110                           
  1111                           ; 1 bytes @ 0x1
  1112  0021                     	ds	1
  1113  0022                     ___awdiv@quotient:
  1114                           
  1115                           ; 2 bytes @ 0x2
  1116  0022                     	ds	2
  1117  0024                     ??_temperatura:
  1118  0024                     ?___flmul:	
  1119                           ; 1 bytes @ 0x4
  1120                           
  1121  0024                     __div_to_l_@cntr:	
  1122                           ; 4 bytes @ 0x4
  1123                           
  1124  0024                     __tdiv_to_l_@cntr:	
  1125                           ; 1 bytes @ 0x4
  1126                           
  1127  0024                     ___llmod@dividend:	
  1128                           ; 1 bytes @ 0x4
  1129                           
  1130  0024                     ___flmul@b:	
  1131                           ; 4 bytes @ 0x4
  1132                           
  1133                           
  1134                           ; 4 bytes @ 0x4
  1135  0024                     	ds	1
  1136  0025                     __div_to_l_@exp1:
  1137  0025                     __tdiv_to_l_@exp1:	
  1138                           ; 1 bytes @ 0x5
  1139                           
  1140                           
  1141                           ; 1 bytes @ 0x5
  1142  0025                     	ds	3
  1143  0028                     ??___llmod:
  1144  0028                     ___flmul@a:	
  1145                           ; 1 bytes @ 0x8
  1146                           
  1147                           
  1148                           ; 4 bytes @ 0x8
  1149  0028                     	ds	1
  1150  0029                     ___llmod@counter:
  1151                           
  1152                           ; 1 bytes @ 0x9
  1153  0029                     	ds	3
  1154  002C                     ??___flmul:
  1155                           
  1156                           ; 1 bytes @ 0xC
  1157  002C                     	ds	5
  1158  0031                     ___flmul@sign:
  1159                           
  1160                           ; 1 bytes @ 0x11
  1161  0031                     	ds	1
  1162  0032                     ___flmul@grs:
  1163                           
  1164                           ; 4 bytes @ 0x12
  1165  0032                     	ds	4
  1166  0036                     ___flmul@aexp:
  1167                           
  1168                           ; 1 bytes @ 0x16
  1169  0036                     	ds	1
  1170  0037                     ___flmul@bexp:
  1171                           
  1172                           ; 1 bytes @ 0x17
  1173  0037                     	ds	1
  1174  0038                     ___flmul@prod:
  1175                           
  1176                           ; 4 bytes @ 0x18
  1177  0038                     	ds	4
  1178  003C                     ___flmul@temp:
  1179                           
  1180                           ; 2 bytes @ 0x1C
  1181  003C                     	ds	2
  1182  003E                     ?_fround:
  1183  003E                     ?_scale:	
  1184                           ; 4 bytes @ 0x1E
  1185                           
  1186                           
  1187                           ; 4 bytes @ 0x1E
  1188  003E                     	ds	4
  1189  0042                     ??_fround:
  1190  0042                     ??_scale:	
  1191                           ; 1 bytes @ 0x22
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0x22
  1195  0042                     	ds	7
  1196  0049                     _fround$1133:
  1197                           
  1198                           ; 4 bytes @ 0x29
  1199  0049                     	ds	3
  1200  004C                     _scale$1134:
  1201                           
  1202                           ; 4 bytes @ 0x2C
  1203  004C                     	ds	1
  1204  004D                     _fround$1132:
  1205                           
  1206                           ; 4 bytes @ 0x2D
  1207  004D                     	ds	3
  1208  0050                     scale@scl:
  1209                           
  1210                           ; 1 bytes @ 0x30
  1211  0050                     	ds	1
  1212  0051                     ?___fltol:
  1213  0051                     fround@prec:	
  1214                           ; 4 bytes @ 0x31
  1215                           
  1216  0051                     ___fltol@f1:	
  1217                           ; 1 bytes @ 0x31
  1218                           
  1219                           
  1220                           ; 4 bytes @ 0x31
  1221  0051                     	ds	1
  1222  0052                     ?___fladd:
  1223  0052                     ___fladd@b:	
  1224                           ; 4 bytes @ 0x32
  1225                           
  1226                           
  1227                           ; 4 bytes @ 0x32
  1228  0052                     	ds	3
  1229  0055                     ??___fltol:
  1230                           
  1231                           ; 1 bytes @ 0x35
  1232  0055                     	ds	1
  1233  0056                     ___fladd@a:
  1234                           
  1235                           ; 4 bytes @ 0x36
  1236  0056                     	ds	4
  1237  005A                     ??___fladd:
  1238  005A                     ___fltol@sign1:	
  1239                           ; 1 bytes @ 0x3A
  1240                           
  1241                           
  1242                           ; 1 bytes @ 0x3A
  1243  005A                     	ds	1
  1244  005B                     ___fltol@exp1:
  1245                           
  1246                           ; 1 bytes @ 0x3B
  1247  005B                     	ds	7
  1248  0062                     ___fladd@signs:
  1249                           
  1250                           ; 1 bytes @ 0x42
  1251  0062                     	ds	1
  1252  0063                     ___fladd@aexp:
  1253                           
  1254                           ; 1 bytes @ 0x43
  1255  0063                     	ds	1
  1256  0064                     ___fladd@bexp:
  1257                           
  1258                           ; 1 bytes @ 0x44
  1259  0064                     	ds	1
  1260  0065                     ___fladd@grs:
  1261                           
  1262                           ; 1 bytes @ 0x45
  1263  0065                     	ds	1
  1264  0066                     ?___flsub:
  1265  0066                     ___flsub@a:	
  1266                           ; 4 bytes @ 0x46
  1267                           
  1268                           
  1269                           ; 4 bytes @ 0x46
  1270  0066                     	ds	4
  1271  006A                     ___flsub@b:
  1272                           
  1273                           ; 4 bytes @ 0x4A
  1274  006A                     	ds	4
  1275                           
  1276                           	psect	maintext
  1277  0117                     __pmaintext:	
  1278 ;;
  1279 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1280 ;;
  1281 ;; *************** function _main *****************
  1282 ;; Defined at:
  1283 ;;		line 65 in file "main.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : B00/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1297 ;;      Params:         0       0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0
  1299 ;;      Temps:          0       0       3       0       0
  1300 ;;      Totals:         0       0       3       0       0
  1301 ;;Total ram usage:        3 bytes
  1302 ;; Hardware stack levels required when called:    4
  1303 ;; This function calls:
  1304 ;;		_Baudios
  1305 ;;		_Conteo
  1306 ;;		_LCD_clean
  1307 ;;		_Lcd_Init
  1308 ;;		_Lcd_Set_Cursor
  1309 ;;		_Lcd_Write_String
  1310 ;;		_OSCILADOR
  1311 ;;		_Write_USART
  1312 ;;		_Write_USART_String
  1313 ;;		_config_rcsta
  1314 ;;		_config_txsta
  1315 ;;		_leer_ADC
  1316 ;;		_setup
  1317 ;;		_sprintf
  1318 ;;		_temperatura
  1319 ;; This function is called by:
  1320 ;;		Startup code after reset
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           
  1325                           ;psect for function _main
  1326  0117                     _main:
  1327  0117                     l3699:	
  1328                           ;incstack = 0
  1329                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1330                           
  1331                           
  1332                           ;main.c: 66:     setup();
  1333  0117  160A  158A  21DB  120A  118A  	fcall	_setup
  1334                           
  1335                           ;main.c: 67:     OSCILADOR();
  1336  011C  120A  158A  2001  120A  118A  	fcall	_OSCILADOR
  1337                           
  1338                           ;main.c: 68:     Baudios();
  1339  0121  160A  158A  212A  120A  118A  	fcall	_Baudios
  1340  0126                     l3701:
  1341                           
  1342                           ;main.c: 69:     config_txsta();
  1343  0126  160A  158A  2146  120A  118A  	fcall	_config_txsta
  1344  012B                     l3703:
  1345                           
  1346                           ;main.c: 70:     config_rcsta();
  1347  012B  160A  158A  2136  120A  118A  	fcall	_config_rcsta
  1348                           
  1349                           ;main.c: 71:     Lcd_Init();
  1350  0130  160A  158A  261F  120A  118A  	fcall	_Lcd_Init
  1351                           
  1352                           ;main.c: 72:     LCD_clean();
  1353  0135  160A  158A  2167  120A  118A  	fcall	_LCD_clean
  1354  013A                     l167:	
  1355                           ;main.c: 76:     while(1){
  1356                           
  1357                           
  1358                           ;main.c: 77:         Conteo();
  1359  013A  160A  158A  22BD  120A  118A  	fcall	_Conteo
  1360                           
  1361                           ;main.c: 78:         leer_ADC();
  1362  013F  160A  158A  23ED  120A  118A  	fcall	_leer_ADC
  1363                           
  1364                           ;main.c: 79:         LCD_clean();
  1365  0144  160A  158A  2167  120A  118A  	fcall	_LCD_clean
  1366                           
  1367                           ;main.c: 80:         Lcd_Set_Cursor(1,1);
  1368  0149  01F4               	clrf	Lcd_Set_Cursor@y
  1369  014A  0AF4               	incf	Lcd_Set_Cursor@y,f
  1370  014B  3001               	movlw	1
  1371  014C  160A  158A  21FE  120A  118A  	fcall	_Lcd_Set_Cursor
  1372  0151                     l3705:
  1373                           
  1374                           ;main.c: 81:         Lcd_Write_String("S1   S2   S3");
  1375  0151  30A4               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1376  0152  00F3               	movwf	Lcd_Write_String@a
  1377  0153  3080               	movlw	128
  1378  0154  00F4               	movwf	Lcd_Write_String@a+1
  1379  0155  160A  158A  2367  120A  118A  	fcall	_Lcd_Write_String
  1380  015A                     l3707:
  1381                           
  1382                           ;main.c: 84:         temp = temperatura();
  1383  015A  160A  158A  2550  120A  118A  	fcall	_temperatura
  1384  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0161  0823               	movf	?_temperatura+3,w
  1387  0162  1683               	bsf	3,5	;RP0=1, select bank1
  1388  0163  1303               	bcf	3,6	;RP1=0, select bank1
  1389  0164  00D1               	movwf	(_temp+3)^(0+128)
  1390  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1392  0167  0822               	movf	?_temperatura+2,w
  1393  0168  1683               	bsf	3,5	;RP0=1, select bank1
  1394  0169  1303               	bcf	3,6	;RP1=0, select bank1
  1395  016A  00D0               	movwf	(_temp+2)^(0+128)
  1396  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1397  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1398  016D  0821               	movf	?_temperatura+1,w
  1399  016E  1683               	bsf	3,5	;RP0=1, select bank1
  1400  016F  1303               	bcf	3,6	;RP1=0, select bank1
  1401  0170  00CF               	movwf	(_temp+1)^(0+128)
  1402  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1403  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1404  0173  0820               	movf	?_temperatura,w
  1405  0174  1683               	bsf	3,5	;RP0=1, select bank1
  1406  0175  1303               	bcf	3,6	;RP1=0, select bank1
  1407  0176  00CE               	movwf	_temp^(0+128)
  1408                           
  1409                           ;main.c: 85:         sprintf(data, "%1.0f   %d   %3.0f" ,volt,cont,temp);
  1410  0177  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1411  0178  00CB               	movwf	??_main^(0+128)
  1412  0179  084B               	movf	??_main^(0+128),w
  1413  017A  00A0               	movwf	sprintf@f^(0+128)
  1414  017B  0855               	movf	(_volt+3)^(0+128),w
  1415  017C  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1416  017D  0854               	movf	(_volt+2)^(0+128),w
  1417  017E  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1418  017F  0853               	movf	(_volt+1)^(0+128),w
  1419  0180  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1420  0181  0852               	movf	_volt^(0+128),w
  1421  0182  00A1               	movwf	(?_sprintf^(0+128)+1)
  1422  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1424  0185  086F               	movf	_cont,w
  1425  0186  1683               	bsf	3,5	;RP0=1, select bank1
  1426  0187  1303               	bcf	3,6	;RP1=0, select bank1
  1427  0188  00CC               	movwf	(??_main+1)^(0+128)
  1428  0189  01CD               	clrf	((??_main+1)^(0+128)+1)
  1429  018A  084C               	movf	(??_main+1)^(0+128),w
  1430  018B  00A5               	movwf	(?_sprintf^(0+128)+5)
  1431  018C  084D               	movf	(??_main+2)^(0+128),w
  1432  018D  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1433  018E  0851               	movf	(_temp+3)^(0+128),w
  1434  018F  00AA               	movwf	((?_sprintf+3)^(0+128)+7)
  1435  0190  0850               	movf	(_temp+2)^(0+128),w
  1436  0191  00A9               	movwf	((?_sprintf+2)^(0+128)+7)
  1437  0192  084F               	movf	(_temp+1)^(0+128),w
  1438  0193  00A8               	movwf	((?_sprintf+1)^(0+128)+7)
  1439  0194  084E               	movf	_temp^(0+128),w
  1440  0195  00A7               	movwf	(?_sprintf^(0+128)+7)
  1441  0196  30D7               	movlw	(low (_data| 0))& (0+255)
  1442  0197  160A  118A  253E  120A  118A  	fcall	_sprintf
  1443  019C                     l3709:
  1444                           
  1445                           ;main.c: 87:         Lcd_Set_Cursor(2,1);
  1446  019C  01F4               	clrf	Lcd_Set_Cursor@y
  1447  019D  0AF4               	incf	Lcd_Set_Cursor@y,f
  1448  019E  3002               	movlw	2
  1449  019F  160A  158A  21FE  120A  118A  	fcall	_Lcd_Set_Cursor
  1450  01A4                     l3711:
  1451                           
  1452                           ;main.c: 88:         Lcd_Write_String(data);
  1453  01A4  30D7               	movlw	(low (_data| 0))& (0+255)
  1454  01A5  00F3               	movwf	Lcd_Write_String@a
  1455  01A6  3000               	movlw	0
  1456  01A7  00F4               	movwf	Lcd_Write_String@a+1
  1457  01A8  160A  158A  2367  120A  118A  	fcall	_Lcd_Write_String
  1458  01AD                     l3713:
  1459                           
  1460                           ;main.c: 90:         Write_USART_String("S1   S2   S3");
  1461  01AD  30A4               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1462  01AE  00F1               	movwf	Write_USART_String@a
  1463  01AF  3080               	movlw	128
  1464  01B0  00F2               	movwf	Write_USART_String@a+1
  1465  01B1  160A  158A  2292  120A  118A  	fcall	_Write_USART_String
  1466  01B6                     l3715:
  1467                           
  1468                           ;main.c: 91:         Write_USART(13);
  1469  01B6  300D               	movlw	13
  1470  01B7  160A  158A  215B  120A  118A  	fcall	_Write_USART
  1471  01BC                     l3717:
  1472                           
  1473                           ;main.c: 92:         Write_USART(10);
  1474  01BC  300A               	movlw	10
  1475  01BD  160A  158A  215B  120A  118A  	fcall	_Write_USART
  1476  01C2                     l3719:
  1477                           
  1478                           ;main.c: 94:         Write_USART_String(data);
  1479  01C2  30D7               	movlw	(low (_data| 0))& (0+255)
  1480  01C3  00F1               	movwf	Write_USART_String@a
  1481  01C4  3000               	movlw	0
  1482  01C5  00F2               	movwf	Write_USART_String@a+1
  1483  01C6  160A  158A  2292  120A  118A  	fcall	_Write_USART_String
  1484                           
  1485                           ;main.c: 95:         Write_USART(13);
  1486  01CB  300D               	movlw	13
  1487  01CC  160A  158A  215B  120A  118A  	fcall	_Write_USART
  1488                           
  1489                           ;main.c: 96:         Write_USART(10);
  1490  01D1  300A               	movlw	10
  1491  01D2  160A  158A  215B  120A  118A  	fcall	_Write_USART
  1492  01D7                     l3721:
  1493                           
  1494                           ;main.c: 97:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1495  01D7  3006               	movlw	6
  1496  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  1497  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  1498  01DA  00CD               	movwf	(??_main^(0+128)+2)
  1499  01DB  3013               	movlw	19
  1500  01DC  00CC               	movwf	(??_main^(0+128)+1)
  1501  01DD  30AD               	movlw	173
  1502  01DE  00CB               	movwf	??_main^(0+128)
  1503  01DF                     u5887:
  1504  01DF  0BCB               	decfsz	??_main^(0+128),f
  1505  01E0  29DF               	goto	u5887
  1506  01E1  0BCC               	decfsz	(??_main^(0+128)+1),f
  1507  01E2  29DF               	goto	u5887
  1508  01E3  0BCD               	decfsz	(??_main^(0+128)+2),f
  1509  01E4  29DF               	goto	u5887
  1510  01E5  293A               	goto	l167
  1511  01E6  120A  118A  2800   	ljmp	start
  1512  01E9                     __end_of_main:
  1513                           
  1514                           	psect	text1
  1515  1D50                     __ptext1:	
  1516 ;; *************** function _temperatura *****************
  1517 ;; Defined at:
  1518 ;;		line 155 in file "main.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  4    0[BANK0 ] float 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0, pclath, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1532 ;;      Params:         0       4       0       0       0
  1533 ;;      Locals:         0       0       0       0       0
  1534 ;;      Temps:          0       4       0       0       0
  1535 ;;      Totals:         0       8       0       0       0
  1536 ;;Total ram usage:        8 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    2
  1539 ;; This function calls:
  1540 ;;		___xxtofl
  1541 ;;		_spiRead
  1542 ;;		_spiWrite
  1543 ;; This function is called by:
  1544 ;;		_main
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           
  1549                           ;psect for function _temperatura
  1550  1D50                     _temperatura:
  1551  1D50                     l3393:	
  1552                           ;incstack = 0
  1553                           ; Regs used in _temperatura: [wreg+status,2+status,0+pclath+cstack]
  1554                           
  1555                           
  1556                           ;main.c: 156:     PORTCbits.RC2 = 0;
  1557  1D50  1283               	bcf	3,5	;RP0=0, select bank0
  1558  1D51  1303               	bcf	3,6	;RP1=0, select bank0
  1559  1D52  1107               	bcf	7,2	;volatile
  1560  1D53                     l3395:
  1561                           
  1562                           ;main.c: 157:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1563  1D53  3003               	movlw	3
  1564  1D54  1283               	bcf	3,5	;RP0=0, select bank0
  1565  1D55  1303               	bcf	3,6	;RP1=0, select bank0
  1566  1D56  00A5               	movwf	??_temperatura+1
  1567  1D57  3097               	movlw	151
  1568  1D58  00A4               	movwf	??_temperatura
  1569  1D59                     u5897:
  1570  1D59  0BA4               	decfsz	??_temperatura,f
  1571  1D5A  2D59               	goto	u5897
  1572  1D5B  0BA5               	decfsz	??_temperatura+1,f
  1573  1D5C  2D59               	goto	u5897
  1574  1D5D                     l3397:
  1575                           
  1576                           ;main.c: 159:     spiWrite(1);
  1577  1D5D  3001               	movlw	1
  1578  1D5E  120A  118A  20C3  160A  158A  	fcall	_spiWrite
  1579  1D63                     l3399:
  1580                           
  1581                           ;main.c: 160:     temp = spiRead();
  1582  1D63  160A  118A  2000  160A  158A  	fcall	_spiRead
  1583  1D68  1283               	bcf	3,5	;RP0=0, select bank0
  1584  1D69  1303               	bcf	3,6	;RP1=0, select bank0
  1585  1D6A  00A4               	movwf	??_temperatura
  1586  1D6B  01A5               	clrf	??_temperatura+1
  1587  1D6C  01A6               	clrf	??_temperatura+2
  1588  1D6D  01A7               	clrf	??_temperatura+3
  1589  1D6E  0827               	movf	??_temperatura+3,w
  1590  1D6F  00F3               	movwf	___xxtofl@val+3
  1591  1D70  0826               	movf	??_temperatura+2,w
  1592  1D71  00F2               	movwf	___xxtofl@val+2
  1593  1D72  0825               	movf	??_temperatura+1,w
  1594  1D73  00F1               	movwf	___xxtofl@val+1
  1595  1D74  0824               	movf	??_temperatura,w
  1596  1D75  00F0               	movwf	___xxtofl@val
  1597  1D76  3000               	movlw	0
  1598  1D77  160A  158A  2689  160A  158A  	fcall	___xxtofl
  1599  1D7C  0873               	movf	?___xxtofl+3,w
  1600  1D7D  1683               	bsf	3,5	;RP0=1, select bank1
  1601  1D7E  1303               	bcf	3,6	;RP1=0, select bank1
  1602  1D7F  00D1               	movwf	(_temp+3)^(0+128)
  1603  1D80  0872               	movf	?___xxtofl+2,w
  1604  1D81  00D0               	movwf	(_temp+2)^(0+128)
  1605  1D82  0871               	movf	?___xxtofl+1,w
  1606  1D83  00CF               	movwf	(_temp+1)^(0+128)
  1607  1D84  0870               	movf	?___xxtofl,w
  1608  1D85  00CE               	movwf	_temp^(0+128)
  1609                           
  1610                           ;main.c: 162:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1611  1D86  3003               	movlw	3
  1612  1D87  1283               	bcf	3,5	;RP0=0, select bank0
  1613  1D88  1303               	bcf	3,6	;RP1=0, select bank0
  1614  1D89  00A5               	movwf	??_temperatura+1
  1615  1D8A  3097               	movlw	151
  1616  1D8B  00A4               	movwf	??_temperatura
  1617  1D8C                     u5907:
  1618  1D8C  0BA4               	decfsz	??_temperatura,f
  1619  1D8D  2D8C               	goto	u5907
  1620  1D8E  0BA5               	decfsz	??_temperatura+1,f
  1621  1D8F  2D8C               	goto	u5907
  1622  1D90                     l3401:
  1623                           
  1624                           ;main.c: 163:     PORTCbits.RC2 = 1;
  1625  1D90  1283               	bcf	3,5	;RP0=0, select bank0
  1626  1D91  1303               	bcf	3,6	;RP1=0, select bank0
  1627  1D92  1507               	bsf	7,2	;volatile
  1628                           
  1629                           ;main.c: 164:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1630  1D93  3003               	movlw	3
  1631  1D94  1283               	bcf	3,5	;RP0=0, select bank0
  1632  1D95  1303               	bcf	3,6	;RP1=0, select bank0
  1633  1D96  00A5               	movwf	??_temperatura+1
  1634  1D97  3097               	movlw	151
  1635  1D98  00A4               	movwf	??_temperatura
  1636  1D99                     u5917:
  1637  1D99  0BA4               	decfsz	??_temperatura,f
  1638  1D9A  2D99               	goto	u5917
  1639  1D9B  0BA5               	decfsz	??_temperatura+1,f
  1640  1D9C  2D99               	goto	u5917
  1641                           
  1642                           ;main.c: 165:     return temp;
  1643  1D9D  1683               	bsf	3,5	;RP0=1, select bank1
  1644  1D9E  1303               	bcf	3,6	;RP1=0, select bank1
  1645  1D9F  0851               	movf	(_temp+3)^(0+128),w
  1646  1DA0  1283               	bcf	3,5	;RP0=0, select bank0
  1647  1DA1  1303               	bcf	3,6	;RP1=0, select bank0
  1648  1DA2  00A3               	movwf	?_temperatura+3
  1649  1DA3  1683               	bsf	3,5	;RP0=1, select bank1
  1650  1DA4  1303               	bcf	3,6	;RP1=0, select bank1
  1651  1DA5  0850               	movf	(_temp+2)^(0+128),w
  1652  1DA6  1283               	bcf	3,5	;RP0=0, select bank0
  1653  1DA7  1303               	bcf	3,6	;RP1=0, select bank0
  1654  1DA8  00A2               	movwf	?_temperatura+2
  1655  1DA9  1683               	bsf	3,5	;RP0=1, select bank1
  1656  1DAA  1303               	bcf	3,6	;RP1=0, select bank1
  1657  1DAB  084F               	movf	(_temp+1)^(0+128),w
  1658  1DAC  1283               	bcf	3,5	;RP0=0, select bank0
  1659  1DAD  1303               	bcf	3,6	;RP1=0, select bank0
  1660  1DAE  00A1               	movwf	?_temperatura+1
  1661  1DAF  1683               	bsf	3,5	;RP0=1, select bank1
  1662  1DB0  1303               	bcf	3,6	;RP1=0, select bank1
  1663  1DB1  084E               	movf	_temp^(0+128),w
  1664  1DB2  1283               	bcf	3,5	;RP0=0, select bank0
  1665  1DB3  1303               	bcf	3,6	;RP1=0, select bank0
  1666  1DB4  00A0               	movwf	?_temperatura
  1667  1DB5                     l185:
  1668  1DB5  0008               	return
  1669  1DB6                     __end_of_temperatura:
  1670                           
  1671                           	psect	text2
  1672  153E                     __ptext2:	
  1673 ;; *************** function _sprintf *****************
  1674 ;; Defined at:
  1675 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  sp              1    wreg     PTR unsigned char 
  1678 ;;		 -> data(20), 
  1679 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1680 ;;		 -> STR_2(19), 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  sp              1   39[BANK1 ] PTR unsigned char 
  1683 ;;		 -> data(20), 
  1684 ;;  fval            4   35[BANK1 ] PTR unsigned char 
  1685 ;;  val             4   29[BANK1 ] unsigned long 
  1686 ;;  tmpval          4   25[BANK1 ] struct .
  1687 ;;  prec            2   40[BANK1 ] int 
  1688 ;;  eexp            2   33[BANK1 ] int 
  1689 ;;  width           2   23[BANK1 ] int 
  1690 ;;  flag            2   21[BANK1 ] unsigned short 
  1691 ;;  cp              2    0        PTR const unsigned char 
  1692 ;;  len             2    0        unsigned int 
  1693 ;;  c               1   42[BANK1 ] unsigned char 
  1694 ;;  ap              1   20[BANK1 ] PTR void [1]
  1695 ;;		 -> ?_sprintf(2), 
  1696 ;;  d               1    0        unsigned char 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  2    0[BANK1 ] int 
  1699 ;; Registers used:
  1700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1706 ;;      Params:         0       0      11       0       0
  1707 ;;      Locals:         0       0      27       0       0
  1708 ;;      Temps:          0       0       5       0       0
  1709 ;;      Totals:         0       0      43       0       0
  1710 ;;Total ram usage:       43 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    3
  1713 ;; This function calls:
  1714 ;;		___awdiv
  1715 ;;		___fladd
  1716 ;;		___fleq
  1717 ;;		___flge
  1718 ;;		___flmul
  1719 ;;		___flneg
  1720 ;;		___flsub
  1721 ;;		___fltol
  1722 ;;		___lldiv
  1723 ;;		___llmod
  1724 ;;		___wmul
  1725 ;;		___xxtofl
  1726 ;;		__div_to_l_
  1727 ;;		__tdiv_to_l_
  1728 ;;		_fround
  1729 ;;		_isdigit
  1730 ;;		_scale
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           
  1737                           ;psect for function _sprintf
  1738  153E                     _sprintf:
  1739                           
  1740                           ;incstack = 0
  1741                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1742                           ;sprintf@sp stored from wreg
  1743  153E  1683               	bsf	3,5	;RP0=1, select bank1
  1744  153F  1303               	bcf	3,6	;RP1=0, select bank1
  1745  1540  00C7               	movwf	sprintf@sp^(0+128)
  1746  1541                     l3405:
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1749  1541  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1750  1542  00AB               	movwf	??_sprintf^(0+128)
  1751  1543  082B               	movf	??_sprintf^(0+128),w
  1752  1544  00B4               	movwf	sprintf@ap^(0+128)
  1753  1545                     L1:
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1756  1545  120A  118A  2FD6   	goto	l3687
  1757  1548                     l3407:
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1760  1548  3025               	movlw	37
  1761  1549  064A               	xorwf	sprintf@c^(0+128),w
  1762  154A  1903               	btfsc	3,2
  1763  154B  2D4D               	goto	u5351
  1764  154C  2D4E               	goto	u5350
  1765  154D                     u5351:
  1766  154D  2D5A               	goto	l3413
  1767  154E                     u5350:
  1768  154E                     l3409:
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1771  154E  084A               	movf	sprintf@c^(0+128),w
  1772  154F  00AB               	movwf	??_sprintf^(0+128)
  1773  1550  0847               	movf	sprintf@sp^(0+128),w
  1774  1551  0084               	movwf	4
  1775  1552  082B               	movf	??_sprintf^(0+128),w
  1776  1553  1383               	bcf	3,7	;select IRP bank0
  1777  1554  0080               	movwf	0
  1778  1555                     l3411:
  1779  1555  3001               	movlw	1
  1780  1556  00AB               	movwf	??_sprintf^(0+128)
  1781  1557  082B               	movf	??_sprintf^(0+128),w
  1782  1558  07C7               	addwf	sprintf@sp^(0+128),f
  1783                           
  1784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1785  1559  2D45               	goto	L1
  1786  155A                     l3413:
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1789  155A  01B7               	clrf	sprintf@width^(0+128)
  1790  155B  01B8               	clrf	(sprintf@width+1)^(0+128)
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1793  155C  01B5               	clrf	sprintf@flag^(0+128)
  1794  155D  01B6               	clrf	(sprintf@flag+1)^(0+128)
  1795  155E                     l3415:
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1798  155E  0820               	movf	sprintf@f^(0+128),w
  1799  155F  0084               	movwf	4
  1800  1560  120A  118A  200D  160A  118A  	fcall	stringdir
  1801  1565  160A  158A  2174  160A  118A  	fcall	_isdigit
  1802  156A  1C03               	btfss	3,0
  1803  156B  2D6D               	goto	u5361
  1804  156C  2D6E               	goto	u5360
  1805  156D                     u5361:
  1806  156D  2DAE               	goto	l3427
  1807  156E                     u5360:
  1808  156E                     l3417:
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1811  156E  1683               	bsf	3,5	;RP0=1, select bank1
  1812  156F  1303               	bcf	3,6	;RP1=0, select bank1
  1813  1570  01B7               	clrf	sprintf@width^(0+128)
  1814  1571  01B8               	clrf	(sprintf@width+1)^(0+128)
  1815  1572                     l3419:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1818  1572  300A               	movlw	10
  1819  1573  00F0               	movwf	___wmul@multiplier
  1820  1574  3000               	movlw	0
  1821  1575  00F1               	movwf	___wmul@multiplier+1
  1822  1576  1683               	bsf	3,5	;RP0=1, select bank1
  1823  1577  1303               	bcf	3,6	;RP1=0, select bank1
  1824  1578  0838               	movf	(sprintf@width+1)^(0+128),w
  1825  1579  00F3               	movwf	___wmul@multiplicand+1
  1826  157A  0837               	movf	sprintf@width^(0+128),w
  1827  157B  00F2               	movwf	___wmul@multiplicand
  1828  157C  160A  158A  2246  160A  118A  	fcall	___wmul
  1829  1581  0871               	movf	?___wmul+1,w
  1830  1582  1683               	bsf	3,5	;RP0=1, select bank1
  1831  1583  1303               	bcf	3,6	;RP1=0, select bank1
  1832  1584  00B8               	movwf	(sprintf@width+1)^(0+128)
  1833  1585  0870               	movf	?___wmul,w
  1834  1586  00B7               	movwf	sprintf@width^(0+128)
  1835  1587                     l3421:
  1836                           
  1837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1838  1587  0820               	movf	sprintf@f^(0+128),w
  1839  1588  0084               	movwf	4
  1840  1589  120A  118A  200D  160A  118A  	fcall	stringdir
  1841  158E  3ED0               	addlw	208
  1842  158F  00AB               	movwf	??_sprintf^(0+128)
  1843  1590  30FF               	movlw	255
  1844  1591  1803               	skipnc
  1845  1592  3000               	movlw	0
  1846  1593  00AC               	movwf	(??_sprintf^(0+128)+1)
  1847  1594  082B               	movf	??_sprintf^(0+128),w
  1848  1595  07B7               	addwf	sprintf@width^(0+128),f
  1849  1596  1803               	skipnc
  1850  1597  0AB8               	incf	(sprintf@width+1)^(0+128),f
  1851  1598  082C               	movf	(??_sprintf+1)^(0+128),w
  1852  1599  07B8               	addwf	(sprintf@width+1)^(0+128),f
  1853  159A                     l3423:
  1854  159A  3001               	movlw	1
  1855  159B  00AB               	movwf	??_sprintf^(0+128)
  1856  159C  082B               	movf	??_sprintf^(0+128),w
  1857  159D  07A0               	addwf	sprintf@f^(0+128),f
  1858  159E                     l3425:
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1861  159E  0820               	movf	sprintf@f^(0+128),w
  1862  159F  0084               	movwf	4
  1863  15A0  120A  118A  200D  160A  118A  	fcall	stringdir
  1864  15A5  160A  158A  2174  160A  118A  	fcall	_isdigit
  1865  15AA  1803               	btfsc	3,0
  1866  15AB  2DAD               	goto	u5371
  1867  15AC  2DAE               	goto	u5370
  1868  15AD                     u5371:
  1869  15AD  2D72               	goto	l3419
  1870  15AE                     u5370:
  1871  15AE                     l3427:
  1872                           
  1873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1874  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  1875  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  1876  15B0  0820               	movf	sprintf@f^(0+128),w
  1877  15B1  0084               	movwf	4
  1878  15B2  120A  118A  200D  160A  118A  	fcall	stringdir
  1879  15B7  3A2E               	xorlw	46
  1880  15B8  1D03               	skipz
  1881  15B9  2DBB               	goto	u5381
  1882  15BA  2DBC               	goto	u5380
  1883  15BB                     u5381:
  1884  15BB  2E01               	goto	l3443
  1885  15BC                     u5380:
  1886  15BC                     l3429:
  1887                           
  1888                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1889  15BC  1736               	bsf	(sprintf@flag^(0+128)+1),6
  1890  15BD                     l3431:
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1893  15BD  3001               	movlw	1
  1894  15BE  00AB               	movwf	??_sprintf^(0+128)
  1895  15BF  082B               	movf	??_sprintf^(0+128),w
  1896  15C0  07A0               	addwf	sprintf@f^(0+128),f
  1897  15C1                     l3433:
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1900  15C1  01C8               	clrf	sprintf@prec^(0+128)
  1901  15C2  01C9               	clrf	(sprintf@prec+1)^(0+128)
  1902                           
  1903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1904  15C3  2DF0               	goto	l3441
  1905  15C4                     l3435:
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1908  15C4  300A               	movlw	10
  1909  15C5  00F0               	movwf	___wmul@multiplier
  1910  15C6  3000               	movlw	0
  1911  15C7  00F1               	movwf	___wmul@multiplier+1
  1912  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  1913  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  1914  15CA  0849               	movf	(sprintf@prec+1)^(0+128),w
  1915  15CB  00F3               	movwf	___wmul@multiplicand+1
  1916  15CC  0848               	movf	sprintf@prec^(0+128),w
  1917  15CD  00F2               	movwf	___wmul@multiplicand
  1918  15CE  160A  158A  2246  160A  118A  	fcall	___wmul
  1919  15D3  0871               	movf	?___wmul+1,w
  1920  15D4  1683               	bsf	3,5	;RP0=1, select bank1
  1921  15D5  1303               	bcf	3,6	;RP1=0, select bank1
  1922  15D6  00C9               	movwf	(sprintf@prec+1)^(0+128)
  1923  15D7  0870               	movf	?___wmul,w
  1924  15D8  00C8               	movwf	sprintf@prec^(0+128)
  1925  15D9                     l3437:
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1928  15D9  0820               	movf	sprintf@f^(0+128),w
  1929  15DA  0084               	movwf	4
  1930  15DB  120A  118A  200D  160A  118A  	fcall	stringdir
  1931  15E0  3ED0               	addlw	208
  1932  15E1  00AB               	movwf	??_sprintf^(0+128)
  1933  15E2  30FF               	movlw	255
  1934  15E3  1803               	skipnc
  1935  15E4  3000               	movlw	0
  1936  15E5  00AC               	movwf	(??_sprintf^(0+128)+1)
  1937  15E6  082B               	movf	??_sprintf^(0+128),w
  1938  15E7  07C8               	addwf	sprintf@prec^(0+128),f
  1939  15E8  1803               	skipnc
  1940  15E9  0AC9               	incf	(sprintf@prec+1)^(0+128),f
  1941  15EA  082C               	movf	(??_sprintf+1)^(0+128),w
  1942  15EB  07C9               	addwf	(sprintf@prec+1)^(0+128),f
  1943  15EC                     l3439:
  1944  15EC  3001               	movlw	1
  1945  15ED  00AB               	movwf	??_sprintf^(0+128)
  1946  15EE  082B               	movf	??_sprintf^(0+128),w
  1947  15EF  07A0               	addwf	sprintf@f^(0+128),f
  1948  15F0                     l3441:
  1949                           
  1950                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1951  15F0  0820               	movf	sprintf@f^(0+128),w
  1952  15F1  0084               	movwf	4
  1953  15F2  120A  118A  200D  160A  118A  	fcall	stringdir
  1954  15F7  160A  158A  2174  160A  118A  	fcall	_isdigit
  1955  15FC  1803               	btfsc	3,0
  1956  15FD  2DFF               	goto	u5391
  1957  15FE  2E00               	goto	u5390
  1958  15FF                     u5391:
  1959  15FF  2DC4               	goto	l3435
  1960  1600                     u5390:
  1961  1600  2E07               	goto	l3449
  1962  1601                     l3443:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1965  1601  01C8               	clrf	sprintf@prec^(0+128)
  1966  1602  01C9               	clrf	(sprintf@prec+1)^(0+128)
  1967  1603                     l3445:
  1968                           
  1969                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1970  1603  1636               	bsf	(sprintf@flag^(0+128)+1),4
  1971  1604  2E07               	goto	l3449
  1972  1605                     l350:	
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1974                           
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1977  1605  1536               	bsf	(sprintf@flag^(0+128)+1),2
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1980  1606  2E29               	goto	l3451
  1981  1607                     l3449:
  1982  1607  3001               	movlw	1
  1983  1608  1683               	bsf	3,5	;RP0=1, select bank1
  1984  1609  1303               	bcf	3,6	;RP1=0, select bank1
  1985  160A  07A0               	addwf	sprintf@f^(0+128),f
  1986  160B  30FF               	movlw	-1
  1987  160C  0720               	addwf	sprintf@f^(0+128),w
  1988  160D  0084               	movwf	4
  1989  160E  120A  118A  200D  160A  118A  	fcall	stringdir
  1990  1613  00CA               	movwf	sprintf@c^(0+128)
  1991  1614  00AB               	movwf	??_sprintf^(0+128)
  1992  1615  01AC               	clrf	(??_sprintf^(0+128)+1)
  1993                           
  1994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1995                           ; Switch size 1, requested type "simple"
  1996                           ; Number of cases is 1, Range of values is 0 to 0
  1997                           ; switch strategies available:
  1998                           ; Name         Instructions Cycles
  1999                           ; simple_byte            4     3 (average)
  2000                           ; direct_byte           11     8 (fixed)
  2001                           ; jumptable            260     6 (fixed)
  2002                           ;	Chosen strategy is simple_byte
  2003  1616  082C               	movf	(??_sprintf+1)^(0+128),w
  2004  1617  3A00               	xorlw	0	; case 0
  2005  1618  1903               	skipnz
  2006  1619  2E1B               	goto	l3753
  2007  161A  2D45               	goto	L1
  2008  161B                     l3753:
  2009                           
  2010                           ; Switch size 1, requested type "simple"
  2011                           ; Number of cases is 4, Range of values is 0 to 105
  2012                           ; switch strategies available:
  2013                           ; Name         Instructions Cycles
  2014                           ; simple_byte           13     7 (average)
  2015                           ; jumptable            260     6 (fixed)
  2016                           ;	Chosen strategy is simple_byte
  2017  161B  082B               	movf	??_sprintf^(0+128),w
  2018  161C  3A00               	xorlw	0	; case 0
  2019  161D  1903               	skipnz
  2020  161E  2FFD               	goto	L3
  2021  161F  3A64               	xorlw	100	; case 100
  2022  1620  1903               	skipnz
  2023  1621  2E29               	goto	l3451
  2024  1622  3A02               	xorlw	2	; case 102
  2025  1623  1903               	skipnz
  2026  1624  2E05               	goto	l350
  2027  1625  3A0F               	xorlw	15	; case 105
  2028  1626  1903               	skipnz
  2029  1627  2E29               	goto	l3451
  2030  1628  2D45               	goto	L1
  2031  1629                     l3451:
  2032                           
  2033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2034  1629  3000               	movlw	0
  2035  162A  0535               	andwf	sprintf@flag^(0+128),w
  2036  162B  00AB               	movwf	??_sprintf^(0+128)
  2037  162C  3007               	movlw	7
  2038  162D  0536               	andwf	(sprintf@flag+1)^(0+128),w
  2039  162E  00AC               	movwf	(??_sprintf+1)^(0+128)
  2040  162F  082B               	movf	??_sprintf^(0+128),w
  2041  1630  042C               	iorwf	(??_sprintf^(0+128)+1),w
  2042  1631  1903               	btfsc	3,2
  2043  1632  2E34               	goto	u5401
  2044  1633  2E37               	goto	u5400
  2045  1634                     u5401:
  2046  1634  120A  118A  2E39   	goto	l3609
  2047  1637                     u5400:
  2048  1637                     l3453:
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2051  1637  1E36               	btfss	(sprintf@flag+1)^(0+128),4
  2052  1638  2E3A               	goto	u5411
  2053  1639  2E3B               	goto	u5410
  2054  163A                     u5411:
  2055  163A  2E3F               	goto	l3457
  2056  163B                     u5410:
  2057  163B                     l3455:
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2060  163B  3006               	movlw	6
  2061  163C  00C8               	movwf	sprintf@prec^(0+128)
  2062  163D  3000               	movlw	0
  2063  163E  00C9               	movwf	(sprintf@prec^(0+128)+1)
  2064  163F                     l3457:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2067  163F  0834               	movf	sprintf@ap^(0+128),w
  2068  1640  0084               	movwf	4
  2069  1641  1383               	bcf	3,7	;select IRP bank0
  2070  1642  0800               	movf	0,w
  2071  1643  00C3               	movwf	sprintf@fval^(0+128)
  2072  1644  0A84               	incf	4,f
  2073  1645  0800               	movf	0,w
  2074  1646  00C4               	movwf	(sprintf@fval+1)^(0+128)
  2075  1647  0A84               	incf	4,f
  2076  1648  0800               	movf	0,w
  2077  1649  00C5               	movwf	(sprintf@fval+2)^(0+128)
  2078  164A  0A84               	incf	4,f
  2079  164B  0800               	movf	0,w
  2080  164C  00C6               	movwf	(sprintf@fval+3)^(0+128)
  2081  164D                     l3459:
  2082  164D  3004               	movlw	4
  2083  164E  00AB               	movwf	??_sprintf^(0+128)
  2084  164F  082B               	movf	??_sprintf^(0+128),w
  2085  1650  07B4               	addwf	sprintf@ap^(0+128),f
  2086  1651                     l3461:
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2089  1651  0846               	movf	(sprintf@fval+3)^(0+128),w
  2090  1652  00F3               	movwf	___flge@ff1+3
  2091  1653  0845               	movf	(sprintf@fval+2)^(0+128),w
  2092  1654  00F2               	movwf	___flge@ff1+2
  2093  1655  0844               	movf	(sprintf@fval+1)^(0+128),w
  2094  1656  00F1               	movwf	___flge@ff1+1
  2095  1657  0843               	movf	sprintf@fval^(0+128),w
  2096  1658  00F0               	movwf	___flge@ff1
  2097  1659  3000               	movlw	0
  2098  165A  00F7               	movwf	___flge@ff2+3
  2099  165B  3000               	movlw	0
  2100  165C  00F6               	movwf	___flge@ff2+2
  2101  165D  3000               	movlw	0
  2102  165E  00F5               	movwf	___flge@ff2+1
  2103  165F  3000               	movlw	0
  2104  1660  00F4               	movwf	___flge@ff2
  2105  1661  160A  118A  2009  160A  118A  	fcall	___flge
  2106  1666  1803               	btfsc	3,0
  2107  1667  2E69               	goto	u5421
  2108  1668  2E6A               	goto	u5420
  2109  1669                     u5421:
  2110  1669  2E87               	goto	l3467
  2111  166A                     u5420:
  2112  166A                     l3463:
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2115  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2116  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2117  166C  0846               	movf	(sprintf@fval+3)^(0+128),w
  2118  166D  00F3               	movwf	___flneg@f1+3
  2119  166E  0845               	movf	(sprintf@fval+2)^(0+128),w
  2120  166F  00F2               	movwf	___flneg@f1+2
  2121  1670  0844               	movf	(sprintf@fval+1)^(0+128),w
  2122  1671  00F1               	movwf	___flneg@f1+1
  2123  1672  0843               	movf	sprintf@fval^(0+128),w
  2124  1673  00F0               	movwf	___flneg@f1
  2125  1674  160A  158A  2150  160A  118A  	fcall	___flneg
  2126  1679  0873               	movf	?___flneg+3,w
  2127  167A  1683               	bsf	3,5	;RP0=1, select bank1
  2128  167B  1303               	bcf	3,6	;RP1=0, select bank1
  2129  167C  00C6               	movwf	(sprintf@fval+3)^(0+128)
  2130  167D  0872               	movf	?___flneg+2,w
  2131  167E  00C5               	movwf	(sprintf@fval+2)^(0+128)
  2132  167F  0871               	movf	?___flneg+1,w
  2133  1680  00C4               	movwf	(sprintf@fval+1)^(0+128)
  2134  1681  0870               	movf	?___flneg,w
  2135  1682  00C3               	movwf	sprintf@fval^(0+128)
  2136  1683                     l3465:
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2139  1683  3003               	movlw	3
  2140  1684  04B5               	iorwf	sprintf@flag^(0+128),f
  2141  1685  3000               	movlw	0
  2142  1686  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
  2143  1687                     l3467:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2146  1687  1683               	bsf	3,5	;RP0=1, select bank1
  2147  1688  1303               	bcf	3,6	;RP1=0, select bank1
  2148  1689  01C1               	clrf	sprintf@eexp^(0+128)
  2149  168A  01C2               	clrf	(sprintf@eexp+1)^(0+128)
  2150  168B                     l3469:
  2151                           
  2152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2153  168B  0846               	movf	(sprintf@fval+3)^(0+128),w
  2154  168C  00F3               	movwf	___fleq@ff1+3
  2155  168D  0845               	movf	(sprintf@fval+2)^(0+128),w
  2156  168E  00F2               	movwf	___fleq@ff1+2
  2157  168F  0844               	movf	(sprintf@fval+1)^(0+128),w
  2158  1690  00F1               	movwf	___fleq@ff1+1
  2159  1691  0843               	movf	sprintf@fval^(0+128),w
  2160  1692  00F0               	movwf	___fleq@ff1
  2161  1693  3000               	movlw	0
  2162  1694  00F7               	movwf	___fleq@ff2+3
  2163  1695  3000               	movlw	0
  2164  1696  00F6               	movwf	___fleq@ff2+2
  2165  1697  3000               	movlw	0
  2166  1698  00F5               	movwf	___fleq@ff2+1
  2167  1699  3000               	movlw	0
  2168  169A  00F4               	movwf	___fleq@ff2
  2169  169B  120A  118A  20C9  160A  118A  	fcall	___fleq
  2170  16A0  1803               	btfsc	3,0
  2171  16A1  2EA3               	goto	u5431
  2172  16A2  2EA4               	goto	u5430
  2173  16A3                     u5431:
  2174  16A3  2F94               	goto	l3495
  2175  16A4                     u5430:
  2176  16A4                     l3471:
  2177                           
  2178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2179  16A4  1003               	clrc
  2180  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  2181  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  2182  16A7  0D45               	rlf	(sprintf@fval+2)^(0+128),w
  2183  16A8  0D46               	rlf	(sprintf@fval+3)^(0+128),w
  2184  16A9  3E82               	addlw	130
  2185  16AA  00C1               	movwf	sprintf@eexp^(0+128)
  2186  16AB  30FF               	movlw	255
  2187  16AC  1803               	skipnc
  2188  16AD  3000               	movlw	0
  2189  16AE  00C2               	movwf	(sprintf@eexp^(0+128)+1)
  2190  16AF                     l3473:
  2191                           
  2192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2193  16AF  30FF               	movlw	255
  2194  16B0  07C1               	addwf	sprintf@eexp^(0+128),f
  2195  16B1  1803               	skipnc
  2196  16B2  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2197  16B3  30FF               	movlw	255
  2198  16B4  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2199  16B5                     l3475:
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2202  16B5  3003               	movlw	3
  2203  16B6  00F0               	movwf	___wmul@multiplier
  2204  16B7  3000               	movlw	0
  2205  16B8  00F1               	movwf	___wmul@multiplier+1
  2206  16B9  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2207  16BA  00F3               	movwf	___wmul@multiplicand+1
  2208  16BB  0841               	movf	sprintf@eexp^(0+128),w
  2209  16BC  00F2               	movwf	___wmul@multiplicand
  2210  16BD  160A  158A  2246  160A  118A  	fcall	___wmul
  2211  16C2  0871               	movf	?___wmul+1,w
  2212  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  2213  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  2214  16C5  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  2215  16C6  0870               	movf	?___wmul,w
  2216  16C7  00C1               	movwf	sprintf@eexp^(0+128)
  2217  16C8                     l3477:
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2220  16C8  300A               	movlw	10
  2221  16C9  00F7               	movwf	___awdiv@divisor
  2222  16CA  3000               	movlw	0
  2223  16CB  00F8               	movwf	___awdiv@divisor+1
  2224  16CC  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2225  16CD  00FA               	movwf	___awdiv@dividend+1
  2226  16CE  0841               	movf	sprintf@eexp^(0+128),w
  2227  16CF  00F9               	movwf	___awdiv@dividend
  2228  16D0  160A  158A  25B6  160A  118A  	fcall	___awdiv
  2229  16D5  0878               	movf	?___awdiv+1,w
  2230  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  2231  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  2232  16D8  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  2233  16D9  0877               	movf	?___awdiv,w
  2234  16DA  00C1               	movwf	sprintf@eexp^(0+128)
  2235  16DB                     l3479:
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2238  16DB  1FC2               	btfss	(sprintf@eexp+1)^(0+128),7
  2239  16DC  2EDE               	goto	u5441
  2240  16DD  2EDF               	goto	u5440
  2241  16DE                     u5441:
  2242  16DE  2EE5               	goto	l3483
  2243  16DF                     u5440:
  2244  16DF                     l3481:
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2247  16DF  30FF               	movlw	255
  2248  16E0  07C1               	addwf	sprintf@eexp^(0+128),f
  2249  16E1  1803               	skipnc
  2250  16E2  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2251  16E3  30FF               	movlw	255
  2252  16E4  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2253  16E5                     l3483:
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2256  16E5  0341               	decf	sprintf@eexp^(0+128),w
  2257  16E6  3AFF               	xorlw	255
  2258  16E7  120A  158A  2140  160A  118A  	fcall	_scale
  2259  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2260  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2261  16EE  0841               	movf	?_scale+3,w
  2262  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2263  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2264  16F1  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2265  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2266  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2267  16F4  0840               	movf	?_scale+2,w
  2268  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2269  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2270  16F7  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2271  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2272  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2273  16FA  083F               	movf	?_scale+1,w
  2274  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2275  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2276  16FD  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2277  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2278  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2279  1700  083E               	movf	?_scale,w
  2280  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2281  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2282  1703  00B9               	movwf	sprintf@tmpval^(0+128)
  2283  1704                     l3485:
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2286  1704  0846               	movf	(sprintf@fval+3)^(0+128),w
  2287  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2288  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2289  1707  00A7               	movwf	___flmul@b+3
  2290  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2291  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2292  170A  0845               	movf	(sprintf@fval+2)^(0+128),w
  2293  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2294  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2295  170D  00A6               	movwf	___flmul@b+2
  2296  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2297  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2298  1710  0844               	movf	(sprintf@fval+1)^(0+128),w
  2299  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2300  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2301  1713  00A5               	movwf	___flmul@b+1
  2302  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2303  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2304  1716  0843               	movf	sprintf@fval^(0+128),w
  2305  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2306  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2307  1719  00A4               	movwf	___flmul@b
  2308  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2309  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2310  171C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2311  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2312  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2313  171F  00AB               	movwf	___flmul@a+3
  2314  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2315  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2316  1722  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2317  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2318  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2319  1725  00AA               	movwf	___flmul@a+2
  2320  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2321  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2322  1728  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2323  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2324  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2325  172B  00A9               	movwf	___flmul@a+1
  2326  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2327  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2328  172E  0839               	movf	sprintf@tmpval^(0+128),w
  2329  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2330  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2331  1731  00A8               	movwf	___flmul@a
  2332  1732  120A  158A  249F  160A  118A  	fcall	___flmul
  2333  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2334  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2335  1739  0827               	movf	?___flmul+3,w
  2336  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2337  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2338  173C  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  2339  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2340  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2341  173F  0826               	movf	?___flmul+2,w
  2342  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2343  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2344  1742  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  2345  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2346  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2347  1745  0825               	movf	?___flmul+1,w
  2348  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2349  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2350  1748  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  2351  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2352  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2353  174B  0824               	movf	?___flmul,w
  2354  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2355  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2356  174E  00B9               	movwf	sprintf@tmpval^(0+128)
  2357  174F                     l3487:
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2360  174F  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2361  1750  00F3               	movwf	___flge@ff1+3
  2362  1751  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2363  1752  00F2               	movwf	___flge@ff1+2
  2364  1753  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2365  1754  00F1               	movwf	___flge@ff1+1
  2366  1755  0839               	movf	sprintf@tmpval^(0+128),w
  2367  1756  00F0               	movwf	___flge@ff1
  2368  1757  303F               	movlw	63
  2369  1758  00F7               	movwf	___flge@ff2+3
  2370  1759  3080               	movlw	128
  2371  175A  00F6               	movwf	___flge@ff2+2
  2372  175B  3000               	movlw	0
  2373  175C  00F5               	movwf	___flge@ff2+1
  2374  175D  3000               	movlw	0
  2375  175E  00F4               	movwf	___flge@ff2
  2376  175F  160A  118A  2009  160A  118A  	fcall	___flge
  2377  1764  1803               	btfsc	3,0
  2378  1765  2F67               	goto	u5451
  2379  1766  2F68               	goto	u5450
  2380  1767                     u5451:
  2381  1767  2F71               	goto	l3491
  2382  1768                     u5450:
  2383  1768                     l3489:
  2384                           
  2385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2386  1768  30FF               	movlw	255
  2387  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2388  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2389  176B  07C1               	addwf	sprintf@eexp^(0+128),f
  2390  176C  1803               	skipnc
  2391  176D  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2392  176E  30FF               	movlw	255
  2393  176F  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2394  1770  2F94               	goto	l3495
  2395  1771                     l3491:
  2396  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2397  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2398  1773  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  2399  1774  00F3               	movwf	___flge@ff1+3
  2400  1775  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  2401  1776  00F2               	movwf	___flge@ff1+2
  2402  1777  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  2403  1778  00F1               	movwf	___flge@ff1+1
  2404  1779  0839               	movf	sprintf@tmpval^(0+128),w
  2405  177A  00F0               	movwf	___flge@ff1
  2406  177B  3041               	movlw	65
  2407  177C  00F7               	movwf	___flge@ff2+3
  2408  177D  3020               	movlw	32
  2409  177E  00F6               	movwf	___flge@ff2+2
  2410  177F  3000               	movlw	0
  2411  1780  00F5               	movwf	___flge@ff2+1
  2412  1781  3000               	movlw	0
  2413  1782  00F4               	movwf	___flge@ff2
  2414  1783  160A  118A  2009  160A  118A  	fcall	___flge
  2415  1788  1C03               	btfss	3,0
  2416  1789  2F8B               	goto	u5461
  2417  178A  2F8C               	goto	u5460
  2418  178B                     u5461:
  2419  178B  2F94               	goto	l3495
  2420  178C                     u5460:
  2421  178C                     l3493:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2424  178C  3001               	movlw	1
  2425  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2426  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2427  178F  07C1               	addwf	sprintf@eexp^(0+128),f
  2428  1790  1803               	skipnc
  2429  1791  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  2430  1792  3000               	movlw	0
  2431  1793  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  2432  1794                     l3495:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2435  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2436  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2437  1796  0849               	movf	(sprintf@prec+1)^(0+128),w
  2438  1797  3A80               	xorlw	128
  2439  1798  00FF               	movwf	btemp+1
  2440  1799  3080               	movlw	128
  2441  179A  027F               	subwf	btemp+1,w
  2442  179B  1D03               	skipz
  2443  179C  2F9F               	goto	u5475
  2444  179D  300D               	movlw	13
  2445  179E  0248               	subwf	sprintf@prec^(0+128),w
  2446  179F                     u5475:
  2447  179F  1803               	skipnc
  2448  17A0  2FA2               	goto	u5471
  2449  17A1  2FA3               	goto	u5470
  2450  17A2                     u5471:
  2451  17A2  2FEA               	goto	l3499
  2452  17A3                     u5470:
  2453  17A3                     l3497:
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2456  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2457  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2458  17A5  0848               	movf	sprintf@prec^(0+128),w
  2459  17A6  160A  118A  20AB  160A  118A  	fcall	_fround
  2460  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2461  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2462  17AD  0841               	movf	?_fround+3,w
  2463  17AE  00D5               	movwf	___fladd@b+3
  2464  17AF  0840               	movf	?_fround+2,w
  2465  17B0  00D4               	movwf	___fladd@b+2
  2466  17B1  083F               	movf	?_fround+1,w
  2467  17B2  00D3               	movwf	___fladd@b+1
  2468  17B3  083E               	movf	?_fround,w
  2469  17B4  00D2               	movwf	___fladd@b
  2470  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2471  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2472  17B7  0846               	movf	(sprintf@fval+3)^(0+128),w
  2473  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2474  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2475  17BA  00D9               	movwf	___fladd@a+3
  2476  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2477  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2478  17BD  0845               	movf	(sprintf@fval+2)^(0+128),w
  2479  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2480  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2481  17C0  00D8               	movwf	___fladd@a+2
  2482  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2483  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2484  17C3  0844               	movf	(sprintf@fval+1)^(0+128),w
  2485  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2486  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2487  17C6  00D7               	movwf	___fladd@a+1
  2488  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2489  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2490  17C9  0843               	movf	sprintf@fval^(0+128),w
  2491  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2492  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2493  17CC  00D6               	movwf	___fladd@a
  2494  17CD  160A  118A  22B6  160A  118A  	fcall	___fladd
  2495  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2496  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2497  17D4  0855               	movf	?___fladd+3,w
  2498  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2499  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2500  17D7  00C6               	movwf	(sprintf@fval+3)^(0+128)
  2501  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2502  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2503  17DA  0854               	movf	?___fladd+2,w
  2504  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2505  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2506  17DD  00C5               	movwf	(sprintf@fval+2)^(0+128)
  2507  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2508  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2509  17E0  0853               	movf	?___fladd+1,w
  2510  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2511  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2512  17E3  00C4               	movwf	(sprintf@fval+1)^(0+128)
  2513  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2514  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2515  17E6  0852               	movf	?___fladd,w
  2516  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2517  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2518  17E9  00C3               	movwf	sprintf@fval^(0+128)
  2519  17EA                     l3499:
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2522  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2523  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2524  17EC  0842               	movf	(sprintf@eexp+1)^(0+128),w
  2525  17ED  3A80               	xorlw	128
  2526  17EE  00FF               	movwf	btemp+1
  2527  17EF  3080               	movlw	128
  2528  17F0  027F               	subwf	btemp+1,w
  2529  17F1  1D03               	skipz
  2530  17F2  2FF5               	goto	u5485
  2531  17F3  300A               	movlw	10
  2532  17F4  0241               	subwf	sprintf@eexp^(0+128),w
  2533  17F5                     u5485:
  2534  17F5  1803               	skipnc
  2535  17F6  2FFA               	goto	u5481
  2536  17F7  120A  118A  29E9   	goto	u5480
  2537  17FA                     u5481:
  2538  17FA  120A  118A  2A3A   	goto	l3507
  2539  17FD                     L3:
  2540  17FD                     L2:
  2541  17FD  120A  118A  2FEA   	ljmp	l3689
  2542                           
  2543                           	psect	text3
  2544  0940                     __ptext3:	
  2545 ;; *************** function _scale *****************
  2546 ;; Defined at:
  2547 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  scl             1    wreg     char 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  scl             1   48[BANK0 ] char 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  4   30[BANK0 ] char 
  2554 ;; Registers used:
  2555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         0       4       0       0       0
  2562 ;;      Locals:         0       5       0       0       0
  2563 ;;      Temps:          0      10       0       0       0
  2564 ;;      Totals:         0      19       0       0       0
  2565 ;;Total ram usage:       19 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:    2
  2568 ;; This function calls:
  2569 ;;		___awdiv
  2570 ;;		___awmod
  2571 ;;		___flmul
  2572 ;; This function is called by:
  2573 ;;		_sprintf
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           
  2578                           ;psect for function _scale
  2579  0940                     _scale:
  2580                           
  2581                           ;incstack = 0
  2582                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2583                           ;scale@scl stored from wreg
  2584  0940  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0941  1303               	bcf	3,6	;RP1=0, select bank0
  2586  0942  00D0               	movwf	scale@scl
  2587  0943                     l2951:
  2588                           
  2589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2590  0943  1FD0               	btfss	scale@scl,7
  2591  0944  2946               	goto	u4321
  2592  0945  2947               	goto	u4320
  2593  0946                     u4321:
  2594  0946  2AF4               	goto	l2973
  2595  0947                     u4320:
  2596  0947                     l2953:
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2599  0947  09D0               	comf	scale@scl,f
  2600  0948  0AD0               	incf	scale@scl,f
  2601  0949                     l2955:
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2604  0949  0850               	movf	scale@scl,w
  2605  094A  3A80               	xorlw	128
  2606  094B  3E12               	addlw	-238
  2607  094C  1C03               	skipc
  2608  094D  294F               	goto	u4331
  2609  094E  2950               	goto	u4330
  2610  094F                     u4331:
  2611  094F  2A38               	goto	l2963
  2612  0950                     u4330:
  2613  0950                     l2957:
  2614                           
  2615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2616  0950  300A               	movlw	10
  2617  0951  00F7               	movwf	___awdiv@divisor
  2618  0952  3000               	movlw	0
  2619  0953  00F8               	movwf	___awdiv@divisor+1
  2620  0954  0850               	movf	scale@scl,w
  2621  0955  00F2               	movwf	___awmod@dividend
  2622  0956  01F3               	clrf	___awmod@dividend+1
  2623  0957  1BF2               	btfsc	___awmod@dividend,7
  2624  0958  03F3               	decf	___awmod@dividend+1,f
  2625  0959  3064               	movlw	100
  2626  095A  00F0               	movwf	___awmod@divisor
  2627  095B  3000               	movlw	0
  2628  095C  00F1               	movwf	___awmod@divisor+1
  2629  095D  160A  158A  2491  120A  158A  	fcall	___awmod
  2630  0962  0871               	movf	?___awmod+1,w
  2631  0963  00FA               	movwf	___awdiv@dividend+1
  2632  0964  0870               	movf	?___awmod,w
  2633  0965  00F9               	movwf	___awdiv@dividend
  2634  0966  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2635  096B  0877               	movf	?___awdiv,w
  2636  096C  1283               	bcf	3,5	;RP0=0, select bank0
  2637  096D  1303               	bcf	3,6	;RP1=0, select bank0
  2638  096E  00C2               	movwf	??_scale
  2639  096F  3001               	movlw	1
  2640  0970                     u4345:
  2641  0970  1003               	clrc
  2642  0971  0DC2               	rlf	??_scale,f
  2643  0972  3EFF               	addlw	-1
  2644  0973  1D03               	skipz
  2645  0974  2970               	goto	u4345
  2646  0975  1003               	clrc
  2647  0976  0D42               	rlf	??_scale,w
  2648  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2649  0978  0084               	movwf	4
  2650  0979  120A  118A  200D  120A  158A  	fcall	stringdir
  2651  097E  00C3               	movwf	??_scale+1
  2652  097F  120A  118A  200D  120A  158A  	fcall	stringdir
  2653  0984  00C4               	movwf	??_scale+2
  2654  0985  120A  118A  200D  120A  158A  	fcall	stringdir
  2655  098A  00C5               	movwf	??_scale+3
  2656  098B  120A  118A  200D  120A  158A  	fcall	stringdir
  2657  0990  00C6               	movwf	??_scale+4
  2658  0991  0846               	movf	??_scale+4,w
  2659  0992  00A7               	movwf	___flmul@b+3
  2660  0993  0845               	movf	??_scale+3,w
  2661  0994  00A6               	movwf	___flmul@b+2
  2662  0995  0844               	movf	??_scale+2,w
  2663  0996  00A5               	movwf	___flmul@b+1
  2664  0997  0843               	movf	??_scale+1,w
  2665  0998  00A4               	movwf	___flmul@b
  2666  0999  3064               	movlw	100
  2667  099A  00F7               	movwf	___awdiv@divisor
  2668  099B  3000               	movlw	0
  2669  099C  00F8               	movwf	___awdiv@divisor+1
  2670  099D  0850               	movf	scale@scl,w
  2671  099E  00F9               	movwf	___awdiv@dividend
  2672  099F  01FA               	clrf	___awdiv@dividend+1
  2673  09A0  1BF9               	btfsc	___awdiv@dividend,7
  2674  09A1  03FA               	decf	___awdiv@dividend+1,f
  2675  09A2  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2676  09A7  0877               	movf	?___awdiv,w
  2677  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  2678  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  2679  09AA  00C7               	movwf	??_scale+5
  2680  09AB  3001               	movlw	1
  2681  09AC                     u4355:
  2682  09AC  1003               	clrc
  2683  09AD  0DC7               	rlf	??_scale+5,f
  2684  09AE  3EFF               	addlw	-1
  2685  09AF  1D03               	skipz
  2686  09B0  29AC               	goto	u4355
  2687  09B1  1003               	clrc
  2688  09B2  0D47               	rlf	??_scale+5,w
  2689  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2690  09B4  0084               	movwf	4
  2691  09B5  120A  118A  200D  120A  158A  	fcall	stringdir
  2692  09BA  00C8               	movwf	??_scale+6
  2693  09BB  120A  118A  200D  120A  158A  	fcall	stringdir
  2694  09C0  00C9               	movwf	??_scale+7
  2695  09C1  120A  118A  200D  120A  158A  	fcall	stringdir
  2696  09C6  00CA               	movwf	??_scale+8
  2697  09C7  120A  118A  200D  120A  158A  	fcall	stringdir
  2698  09CC  00CB               	movwf	??_scale+9
  2699  09CD  084B               	movf	??_scale+9,w
  2700  09CE  00AB               	movwf	___flmul@a+3
  2701  09CF  084A               	movf	??_scale+8,w
  2702  09D0  00AA               	movwf	___flmul@a+2
  2703  09D1  0849               	movf	??_scale+7,w
  2704  09D2  00A9               	movwf	___flmul@a+1
  2705  09D3  0848               	movf	??_scale+6,w
  2706  09D4  00A8               	movwf	___flmul@a
  2707  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  2708  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  2709  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  2710  09DC  0827               	movf	?___flmul+3,w
  2711  09DD  00CF               	movwf	_scale$1134+3
  2712  09DE  0826               	movf	?___flmul+2,w
  2713  09DF  00CE               	movwf	_scale$1134+2
  2714  09E0  0825               	movf	?___flmul+1,w
  2715  09E1  00CD               	movwf	_scale$1134+1
  2716  09E2  0824               	movf	?___flmul,w
  2717  09E3  00CC               	movwf	_scale$1134
  2718                           
  2719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2720  09E4  300A               	movlw	10
  2721  09E5  00F0               	movwf	___awmod@divisor
  2722  09E6  3000               	movlw	0
  2723  09E7  00F1               	movwf	___awmod@divisor+1
  2724  09E8  0850               	movf	scale@scl,w
  2725  09E9  00F2               	movwf	___awmod@dividend
  2726  09EA  01F3               	clrf	___awmod@dividend+1
  2727  09EB  1BF2               	btfsc	___awmod@dividend,7
  2728  09EC  03F3               	decf	___awmod@dividend+1,f
  2729  09ED  160A  158A  2491  120A  158A  	fcall	___awmod
  2730  09F2  0870               	movf	?___awmod,w
  2731  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  2732  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  2733  09F5  00C2               	movwf	??_scale
  2734  09F6  3001               	movlw	1
  2735  09F7                     u4365:
  2736  09F7  1003               	clrc
  2737  09F8  0DC2               	rlf	??_scale,f
  2738  09F9  3EFF               	addlw	-1
  2739  09FA  1D03               	skipz
  2740  09FB  29F7               	goto	u4365
  2741  09FC  1003               	clrc
  2742  09FD  0D42               	rlf	??_scale,w
  2743  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2744  09FF  0084               	movwf	4
  2745  0A00  120A  118A  200D  120A  158A  	fcall	stringdir
  2746  0A05  00C3               	movwf	??_scale+1
  2747  0A06  120A  118A  200D  120A  158A  	fcall	stringdir
  2748  0A0B  00C4               	movwf	??_scale+2
  2749  0A0C  120A  118A  200D  120A  158A  	fcall	stringdir
  2750  0A11  00C5               	movwf	??_scale+3
  2751  0A12  120A  118A  200D  120A  158A  	fcall	stringdir
  2752  0A17  00C6               	movwf	??_scale+4
  2753  0A18  0846               	movf	??_scale+4,w
  2754  0A19  00A7               	movwf	___flmul@b+3
  2755  0A1A  0845               	movf	??_scale+3,w
  2756  0A1B  00A6               	movwf	___flmul@b+2
  2757  0A1C  0844               	movf	??_scale+2,w
  2758  0A1D  00A5               	movwf	___flmul@b+1
  2759  0A1E  0843               	movf	??_scale+1,w
  2760  0A1F  00A4               	movwf	___flmul@b
  2761  0A20  084F               	movf	_scale$1134+3,w
  2762  0A21  00AB               	movwf	___flmul@a+3
  2763  0A22  084E               	movf	_scale$1134+2,w
  2764  0A23  00AA               	movwf	___flmul@a+2
  2765  0A24  084D               	movf	_scale$1134+1,w
  2766  0A25  00A9               	movwf	___flmul@a+1
  2767  0A26  084C               	movf	_scale$1134,w
  2768  0A27  00A8               	movwf	___flmul@a
  2769  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  2770  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  2771  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  2772  0A2F  0827               	movf	?___flmul+3,w
  2773  0A30  00C1               	movwf	?_scale+3
  2774  0A31  0826               	movf	?___flmul+2,w
  2775  0A32  00C0               	movwf	?_scale+2
  2776  0A33  0825               	movf	?___flmul+1,w
  2777  0A34  00BF               	movwf	?_scale+1
  2778  0A35  0824               	movf	?___flmul,w
  2779  0A36  00BE               	movwf	?_scale
  2780  0A37  2C9E               	goto	l328
  2781  0A38                     l2963:
  2782  0A38  0850               	movf	scale@scl,w
  2783  0A39  3A80               	xorlw	128
  2784  0A3A  3E75               	addlw	-139
  2785  0A3B  1C03               	skipc
  2786  0A3C  2A3E               	goto	u4371
  2787  0A3D  2A3F               	goto	u4370
  2788  0A3E                     u4371:
  2789  0A3E  2AC7               	goto	l2969
  2790  0A3F                     u4370:
  2791  0A3F                     l2965:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2794  0A3F  300A               	movlw	10
  2795  0A40  00F0               	movwf	___awmod@divisor
  2796  0A41  3000               	movlw	0
  2797  0A42  00F1               	movwf	___awmod@divisor+1
  2798  0A43  0850               	movf	scale@scl,w
  2799  0A44  00F2               	movwf	___awmod@dividend
  2800  0A45  01F3               	clrf	___awmod@dividend+1
  2801  0A46  1BF2               	btfsc	___awmod@dividend,7
  2802  0A47  03F3               	decf	___awmod@dividend+1,f
  2803  0A48  160A  158A  2491  120A  158A  	fcall	___awmod
  2804  0A4D  0870               	movf	?___awmod,w
  2805  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  2806  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  2807  0A50  00C2               	movwf	??_scale
  2808  0A51  3001               	movlw	1
  2809  0A52                     u4385:
  2810  0A52  1003               	clrc
  2811  0A53  0DC2               	rlf	??_scale,f
  2812  0A54  3EFF               	addlw	-1
  2813  0A55  1D03               	skipz
  2814  0A56  2A52               	goto	u4385
  2815  0A57  1003               	clrc
  2816  0A58  0D42               	rlf	??_scale,w
  2817  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2818  0A5A  0084               	movwf	4
  2819  0A5B  120A  118A  200D  120A  158A  	fcall	stringdir
  2820  0A60  00C3               	movwf	??_scale+1
  2821  0A61  120A  118A  200D  120A  158A  	fcall	stringdir
  2822  0A66  00C4               	movwf	??_scale+2
  2823  0A67  120A  118A  200D  120A  158A  	fcall	stringdir
  2824  0A6C  00C5               	movwf	??_scale+3
  2825  0A6D  120A  118A  200D  120A  158A  	fcall	stringdir
  2826  0A72  00C6               	movwf	??_scale+4
  2827  0A73  0846               	movf	??_scale+4,w
  2828  0A74  00A7               	movwf	___flmul@b+3
  2829  0A75  0845               	movf	??_scale+3,w
  2830  0A76  00A6               	movwf	___flmul@b+2
  2831  0A77  0844               	movf	??_scale+2,w
  2832  0A78  00A5               	movwf	___flmul@b+1
  2833  0A79  0843               	movf	??_scale+1,w
  2834  0A7A  00A4               	movwf	___flmul@b
  2835  0A7B  300A               	movlw	10
  2836  0A7C  00F7               	movwf	___awdiv@divisor
  2837  0A7D  3000               	movlw	0
  2838  0A7E  00F8               	movwf	___awdiv@divisor+1
  2839  0A7F  0850               	movf	scale@scl,w
  2840  0A80  00F9               	movwf	___awdiv@dividend
  2841  0A81  01FA               	clrf	___awdiv@dividend+1
  2842  0A82  1BF9               	btfsc	___awdiv@dividend,7
  2843  0A83  03FA               	decf	___awdiv@dividend+1,f
  2844  0A84  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2845  0A89  0877               	movf	?___awdiv,w
  2846  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  2848  0A8C  00C7               	movwf	??_scale+5
  2849  0A8D  3001               	movlw	1
  2850  0A8E                     u4395:
  2851  0A8E  1003               	clrc
  2852  0A8F  0DC7               	rlf	??_scale+5,f
  2853  0A90  3EFF               	addlw	-1
  2854  0A91  1D03               	skipz
  2855  0A92  2A8E               	goto	u4395
  2856  0A93  1003               	clrc
  2857  0A94  0D47               	rlf	??_scale+5,w
  2858  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2859  0A96  0084               	movwf	4
  2860  0A97  120A  118A  200D  120A  158A  	fcall	stringdir
  2861  0A9C  00C8               	movwf	??_scale+6
  2862  0A9D  120A  118A  200D  120A  158A  	fcall	stringdir
  2863  0AA2  00C9               	movwf	??_scale+7
  2864  0AA3  120A  118A  200D  120A  158A  	fcall	stringdir
  2865  0AA8  00CA               	movwf	??_scale+8
  2866  0AA9  120A  118A  200D  120A  158A  	fcall	stringdir
  2867  0AAE  00CB               	movwf	??_scale+9
  2868  0AAF  084B               	movf	??_scale+9,w
  2869  0AB0  00AB               	movwf	___flmul@a+3
  2870  0AB1  084A               	movf	??_scale+8,w
  2871  0AB2  00AA               	movwf	___flmul@a+2
  2872  0AB3  0849               	movf	??_scale+7,w
  2873  0AB4  00A9               	movwf	___flmul@a+1
  2874  0AB5  0848               	movf	??_scale+6,w
  2875  0AB6  00A8               	movwf	___flmul@a
  2876  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  2877  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0ABE  0827               	movf	?___flmul+3,w
  2880  0ABF  00C1               	movwf	?_scale+3
  2881  0AC0  0826               	movf	?___flmul+2,w
  2882  0AC1  00C0               	movwf	?_scale+2
  2883  0AC2  0825               	movf	?___flmul+1,w
  2884  0AC3  00BF               	movwf	?_scale+1
  2885  0AC4  0824               	movf	?___flmul,w
  2886  0AC5  00BE               	movwf	?_scale
  2887  0AC6  2C9E               	goto	l328
  2888  0AC7                     l2969:
  2889                           
  2890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2891  0AC7  0850               	movf	scale@scl,w
  2892  0AC8  00C2               	movwf	??_scale
  2893  0AC9  3001               	movlw	1
  2894  0ACA                     u4405:
  2895  0ACA  1003               	clrc
  2896  0ACB  0DC2               	rlf	??_scale,f
  2897  0ACC  3EFF               	addlw	-1
  2898  0ACD  1D03               	skipz
  2899  0ACE  2ACA               	goto	u4405
  2900  0ACF  1003               	clrc
  2901  0AD0  0D42               	rlf	??_scale,w
  2902  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2903  0AD2  0084               	movwf	4
  2904  0AD3  120A  118A  200D  120A  158A  	fcall	stringdir
  2905  0AD8  00C3               	movwf	??_scale+1
  2906  0AD9  120A  118A  200D  120A  158A  	fcall	stringdir
  2907  0ADE  00C4               	movwf	??_scale+2
  2908  0ADF  120A  118A  200D  120A  158A  	fcall	stringdir
  2909  0AE4  00C5               	movwf	??_scale+3
  2910  0AE5  120A  118A  200D  120A  158A  	fcall	stringdir
  2911  0AEA  00C6               	movwf	??_scale+4
  2912  0AEB  0846               	movf	??_scale+4,w
  2913  0AEC  00C1               	movwf	?_scale+3
  2914  0AED  0845               	movf	??_scale+3,w
  2915  0AEE  00C0               	movwf	?_scale+2
  2916  0AEF  0844               	movf	??_scale+2,w
  2917  0AF0  00BF               	movwf	?_scale+1
  2918  0AF1  0843               	movf	??_scale+1,w
  2919  0AF2  00BE               	movwf	?_scale
  2920  0AF3  2C9E               	goto	l328
  2921  0AF4                     l2973:
  2922                           
  2923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2924  0AF4  0850               	movf	scale@scl,w
  2925  0AF5  3A80               	xorlw	128
  2926  0AF6  3E12               	addlw	-238
  2927  0AF7  1C03               	skipc
  2928  0AF8  2AFA               	goto	u4411
  2929  0AF9  2AFB               	goto	u4410
  2930  0AFA                     u4411:
  2931  0AFA  2BE3               	goto	l2981
  2932  0AFB                     u4410:
  2933  0AFB                     l2975:
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2936  0AFB  300A               	movlw	10
  2937  0AFC  00F7               	movwf	___awdiv@divisor
  2938  0AFD  3000               	movlw	0
  2939  0AFE  00F8               	movwf	___awdiv@divisor+1
  2940  0AFF  0850               	movf	scale@scl,w
  2941  0B00  00F2               	movwf	___awmod@dividend
  2942  0B01  01F3               	clrf	___awmod@dividend+1
  2943  0B02  1BF2               	btfsc	___awmod@dividend,7
  2944  0B03  03F3               	decf	___awmod@dividend+1,f
  2945  0B04  3064               	movlw	100
  2946  0B05  00F0               	movwf	___awmod@divisor
  2947  0B06  3000               	movlw	0
  2948  0B07  00F1               	movwf	___awmod@divisor+1
  2949  0B08  160A  158A  2491  120A  158A  	fcall	___awmod
  2950  0B0D  0871               	movf	?___awmod+1,w
  2951  0B0E  00FA               	movwf	___awdiv@dividend+1
  2952  0B0F  0870               	movf	?___awmod,w
  2953  0B10  00F9               	movwf	___awdiv@dividend
  2954  0B11  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2955  0B16  0877               	movf	?___awdiv,w
  2956  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  2957  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  2958  0B19  00C2               	movwf	??_scale
  2959  0B1A  3001               	movlw	1
  2960  0B1B                     u4425:
  2961  0B1B  1003               	clrc
  2962  0B1C  0DC2               	rlf	??_scale,f
  2963  0B1D  3EFF               	addlw	-1
  2964  0B1E  1D03               	skipz
  2965  0B1F  2B1B               	goto	u4425
  2966  0B20  1003               	clrc
  2967  0B21  0D42               	rlf	??_scale,w
  2968  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2969  0B23  0084               	movwf	4
  2970  0B24  120A  118A  200D  120A  158A  	fcall	stringdir
  2971  0B29  00C3               	movwf	??_scale+1
  2972  0B2A  120A  118A  200D  120A  158A  	fcall	stringdir
  2973  0B2F  00C4               	movwf	??_scale+2
  2974  0B30  120A  118A  200D  120A  158A  	fcall	stringdir
  2975  0B35  00C5               	movwf	??_scale+3
  2976  0B36  120A  118A  200D  120A  158A  	fcall	stringdir
  2977  0B3B  00C6               	movwf	??_scale+4
  2978  0B3C  0846               	movf	??_scale+4,w
  2979  0B3D  00A7               	movwf	___flmul@b+3
  2980  0B3E  0845               	movf	??_scale+3,w
  2981  0B3F  00A6               	movwf	___flmul@b+2
  2982  0B40  0844               	movf	??_scale+2,w
  2983  0B41  00A5               	movwf	___flmul@b+1
  2984  0B42  0843               	movf	??_scale+1,w
  2985  0B43  00A4               	movwf	___flmul@b
  2986  0B44  3064               	movlw	100
  2987  0B45  00F7               	movwf	___awdiv@divisor
  2988  0B46  3000               	movlw	0
  2989  0B47  00F8               	movwf	___awdiv@divisor+1
  2990  0B48  0850               	movf	scale@scl,w
  2991  0B49  00F9               	movwf	___awdiv@dividend
  2992  0B4A  01FA               	clrf	___awdiv@dividend+1
  2993  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  2994  0B4C  03FA               	decf	___awdiv@dividend+1,f
  2995  0B4D  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2996  0B52  0877               	movf	?___awdiv,w
  2997  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0B55  00C7               	movwf	??_scale+5
  3000  0B56  3001               	movlw	1
  3001  0B57                     u4435:
  3002  0B57  1003               	clrc
  3003  0B58  0DC7               	rlf	??_scale+5,f
  3004  0B59  3EFF               	addlw	-1
  3005  0B5A  1D03               	skipz
  3006  0B5B  2B57               	goto	u4435
  3007  0B5C  1003               	clrc
  3008  0B5D  0D47               	rlf	??_scale+5,w
  3009  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3010  0B5F  0084               	movwf	4
  3011  0B60  120A  118A  200D  120A  158A  	fcall	stringdir
  3012  0B65  00C8               	movwf	??_scale+6
  3013  0B66  120A  118A  200D  120A  158A  	fcall	stringdir
  3014  0B6B  00C9               	movwf	??_scale+7
  3015  0B6C  120A  118A  200D  120A  158A  	fcall	stringdir
  3016  0B71  00CA               	movwf	??_scale+8
  3017  0B72  120A  118A  200D  120A  158A  	fcall	stringdir
  3018  0B77  00CB               	movwf	??_scale+9
  3019  0B78  084B               	movf	??_scale+9,w
  3020  0B79  00AB               	movwf	___flmul@a+3
  3021  0B7A  084A               	movf	??_scale+8,w
  3022  0B7B  00AA               	movwf	___flmul@a+2
  3023  0B7C  0849               	movf	??_scale+7,w
  3024  0B7D  00A9               	movwf	___flmul@a+1
  3025  0B7E  0848               	movf	??_scale+6,w
  3026  0B7F  00A8               	movwf	___flmul@a
  3027  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  3028  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  3030  0B87  0827               	movf	?___flmul+3,w
  3031  0B88  00CF               	movwf	_scale$1134+3
  3032  0B89  0826               	movf	?___flmul+2,w
  3033  0B8A  00CE               	movwf	_scale$1134+2
  3034  0B8B  0825               	movf	?___flmul+1,w
  3035  0B8C  00CD               	movwf	_scale$1134+1
  3036  0B8D  0824               	movf	?___flmul,w
  3037  0B8E  00CC               	movwf	_scale$1134
  3038                           
  3039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3040  0B8F  300A               	movlw	10
  3041  0B90  00F0               	movwf	___awmod@divisor
  3042  0B91  3000               	movlw	0
  3043  0B92  00F1               	movwf	___awmod@divisor+1
  3044  0B93  0850               	movf	scale@scl,w
  3045  0B94  00F2               	movwf	___awmod@dividend
  3046  0B95  01F3               	clrf	___awmod@dividend+1
  3047  0B96  1BF2               	btfsc	___awmod@dividend,7
  3048  0B97  03F3               	decf	___awmod@dividend+1,f
  3049  0B98  160A  158A  2491  120A  158A  	fcall	___awmod
  3050  0B9D  0870               	movf	?___awmod,w
  3051  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3052  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  3053  0BA0  00C2               	movwf	??_scale
  3054  0BA1  3001               	movlw	1
  3055  0BA2                     u4445:
  3056  0BA2  1003               	clrc
  3057  0BA3  0DC2               	rlf	??_scale,f
  3058  0BA4  3EFF               	addlw	-1
  3059  0BA5  1D03               	skipz
  3060  0BA6  2BA2               	goto	u4445
  3061  0BA7  1003               	clrc
  3062  0BA8  0D42               	rlf	??_scale,w
  3063  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3064  0BAA  0084               	movwf	4
  3065  0BAB  120A  118A  200D  120A  158A  	fcall	stringdir
  3066  0BB0  00C3               	movwf	??_scale+1
  3067  0BB1  120A  118A  200D  120A  158A  	fcall	stringdir
  3068  0BB6  00C4               	movwf	??_scale+2
  3069  0BB7  120A  118A  200D  120A  158A  	fcall	stringdir
  3070  0BBC  00C5               	movwf	??_scale+3
  3071  0BBD  120A  118A  200D  120A  158A  	fcall	stringdir
  3072  0BC2  00C6               	movwf	??_scale+4
  3073  0BC3  0846               	movf	??_scale+4,w
  3074  0BC4  00A7               	movwf	___flmul@b+3
  3075  0BC5  0845               	movf	??_scale+3,w
  3076  0BC6  00A6               	movwf	___flmul@b+2
  3077  0BC7  0844               	movf	??_scale+2,w
  3078  0BC8  00A5               	movwf	___flmul@b+1
  3079  0BC9  0843               	movf	??_scale+1,w
  3080  0BCA  00A4               	movwf	___flmul@b
  3081  0BCB  084F               	movf	_scale$1134+3,w
  3082  0BCC  00AB               	movwf	___flmul@a+3
  3083  0BCD  084E               	movf	_scale$1134+2,w
  3084  0BCE  00AA               	movwf	___flmul@a+2
  3085  0BCF  084D               	movf	_scale$1134+1,w
  3086  0BD0  00A9               	movwf	___flmul@a+1
  3087  0BD1  084C               	movf	_scale$1134,w
  3088  0BD2  00A8               	movwf	___flmul@a
  3089  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  3090  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  3091  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  3092  0BDA  0827               	movf	?___flmul+3,w
  3093  0BDB  00C1               	movwf	?_scale+3
  3094  0BDC  0826               	movf	?___flmul+2,w
  3095  0BDD  00C0               	movwf	?_scale+2
  3096  0BDE  0825               	movf	?___flmul+1,w
  3097  0BDF  00BF               	movwf	?_scale+1
  3098  0BE0  0824               	movf	?___flmul,w
  3099  0BE1  00BE               	movwf	?_scale
  3100  0BE2  2C9E               	goto	l328
  3101  0BE3                     l2981:
  3102  0BE3  0850               	movf	scale@scl,w
  3103  0BE4  3A80               	xorlw	128
  3104  0BE5  3E75               	addlw	-139
  3105  0BE6  1C03               	skipc
  3106  0BE7  2BE9               	goto	u4451
  3107  0BE8  2BEA               	goto	u4450
  3108  0BE9                     u4451:
  3109  0BE9  2C72               	goto	l2987
  3110  0BEA                     u4450:
  3111  0BEA                     l2983:
  3112                           
  3113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3114  0BEA  300A               	movlw	10
  3115  0BEB  00F0               	movwf	___awmod@divisor
  3116  0BEC  3000               	movlw	0
  3117  0BED  00F1               	movwf	___awmod@divisor+1
  3118  0BEE  0850               	movf	scale@scl,w
  3119  0BEF  00F2               	movwf	___awmod@dividend
  3120  0BF0  01F3               	clrf	___awmod@dividend+1
  3121  0BF1  1BF2               	btfsc	___awmod@dividend,7
  3122  0BF2  03F3               	decf	___awmod@dividend+1,f
  3123  0BF3  160A  158A  2491  120A  158A  	fcall	___awmod
  3124  0BF8  0870               	movf	?___awmod,w
  3125  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3126  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3127  0BFB  00C2               	movwf	??_scale
  3128  0BFC  3001               	movlw	1
  3129  0BFD                     u4465:
  3130  0BFD  1003               	clrc
  3131  0BFE  0DC2               	rlf	??_scale,f
  3132  0BFF  3EFF               	addlw	-1
  3133  0C00  1D03               	skipz
  3134  0C01  2BFD               	goto	u4465
  3135  0C02  1003               	clrc
  3136  0C03  0D42               	rlf	??_scale,w
  3137  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3138  0C05  0084               	movwf	4
  3139  0C06  120A  118A  200D  120A  158A  	fcall	stringdir
  3140  0C0B  00C3               	movwf	??_scale+1
  3141  0C0C  120A  118A  200D  120A  158A  	fcall	stringdir
  3142  0C11  00C4               	movwf	??_scale+2
  3143  0C12  120A  118A  200D  120A  158A  	fcall	stringdir
  3144  0C17  00C5               	movwf	??_scale+3
  3145  0C18  120A  118A  200D  120A  158A  	fcall	stringdir
  3146  0C1D  00C6               	movwf	??_scale+4
  3147  0C1E  0846               	movf	??_scale+4,w
  3148  0C1F  00A7               	movwf	___flmul@b+3
  3149  0C20  0845               	movf	??_scale+3,w
  3150  0C21  00A6               	movwf	___flmul@b+2
  3151  0C22  0844               	movf	??_scale+2,w
  3152  0C23  00A5               	movwf	___flmul@b+1
  3153  0C24  0843               	movf	??_scale+1,w
  3154  0C25  00A4               	movwf	___flmul@b
  3155  0C26  300A               	movlw	10
  3156  0C27  00F7               	movwf	___awdiv@divisor
  3157  0C28  3000               	movlw	0
  3158  0C29  00F8               	movwf	___awdiv@divisor+1
  3159  0C2A  0850               	movf	scale@scl,w
  3160  0C2B  00F9               	movwf	___awdiv@dividend
  3161  0C2C  01FA               	clrf	___awdiv@dividend+1
  3162  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3163  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3164  0C2F  160A  158A  25B6  120A  158A  	fcall	___awdiv
  3165  0C34  0877               	movf	?___awdiv,w
  3166  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3168  0C37  00C7               	movwf	??_scale+5
  3169  0C38  3001               	movlw	1
  3170  0C39                     u4475:
  3171  0C39  1003               	clrc
  3172  0C3A  0DC7               	rlf	??_scale+5,f
  3173  0C3B  3EFF               	addlw	-1
  3174  0C3C  1D03               	skipz
  3175  0C3D  2C39               	goto	u4475
  3176  0C3E  1003               	clrc
  3177  0C3F  0D47               	rlf	??_scale+5,w
  3178  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3179  0C41  0084               	movwf	4
  3180  0C42  120A  118A  200D  120A  158A  	fcall	stringdir
  3181  0C47  00C8               	movwf	??_scale+6
  3182  0C48  120A  118A  200D  120A  158A  	fcall	stringdir
  3183  0C4D  00C9               	movwf	??_scale+7
  3184  0C4E  120A  118A  200D  120A  158A  	fcall	stringdir
  3185  0C53  00CA               	movwf	??_scale+8
  3186  0C54  120A  118A  200D  120A  158A  	fcall	stringdir
  3187  0C59  00CB               	movwf	??_scale+9
  3188  0C5A  084B               	movf	??_scale+9,w
  3189  0C5B  00AB               	movwf	___flmul@a+3
  3190  0C5C  084A               	movf	??_scale+8,w
  3191  0C5D  00AA               	movwf	___flmul@a+2
  3192  0C5E  0849               	movf	??_scale+7,w
  3193  0C5F  00A9               	movwf	___flmul@a+1
  3194  0C60  0848               	movf	??_scale+6,w
  3195  0C61  00A8               	movwf	___flmul@a
  3196  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3197  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0C69  0827               	movf	?___flmul+3,w
  3200  0C6A  00C1               	movwf	?_scale+3
  3201  0C6B  0826               	movf	?___flmul+2,w
  3202  0C6C  00C0               	movwf	?_scale+2
  3203  0C6D  0825               	movf	?___flmul+1,w
  3204  0C6E  00BF               	movwf	?_scale+1
  3205  0C6F  0824               	movf	?___flmul,w
  3206  0C70  00BE               	movwf	?_scale
  3207  0C71  2C9E               	goto	l328
  3208  0C72                     l2987:
  3209                           
  3210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3211  0C72  0850               	movf	scale@scl,w
  3212  0C73  00C2               	movwf	??_scale
  3213  0C74  3001               	movlw	1
  3214  0C75                     u4485:
  3215  0C75  1003               	clrc
  3216  0C76  0DC2               	rlf	??_scale,f
  3217  0C77  3EFF               	addlw	-1
  3218  0C78  1D03               	skipz
  3219  0C79  2C75               	goto	u4485
  3220  0C7A  1003               	clrc
  3221  0C7B  0D42               	rlf	??_scale,w
  3222  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3223  0C7D  0084               	movwf	4
  3224  0C7E  120A  118A  200D  120A  158A  	fcall	stringdir
  3225  0C83  00C3               	movwf	??_scale+1
  3226  0C84  120A  118A  200D  120A  158A  	fcall	stringdir
  3227  0C89  00C4               	movwf	??_scale+2
  3228  0C8A  120A  118A  200D  120A  158A  	fcall	stringdir
  3229  0C8F  00C5               	movwf	??_scale+3
  3230  0C90  120A  118A  200D  120A  158A  	fcall	stringdir
  3231  0C95  00C6               	movwf	??_scale+4
  3232  0C96  0846               	movf	??_scale+4,w
  3233  0C97  00C1               	movwf	?_scale+3
  3234  0C98  0845               	movf	??_scale+3,w
  3235  0C99  00C0               	movwf	?_scale+2
  3236  0C9A  0844               	movf	??_scale+2,w
  3237  0C9B  00BF               	movwf	?_scale+1
  3238  0C9C  0843               	movf	??_scale+1,w
  3239  0C9D  00BE               	movwf	?_scale
  3240  0C9E                     l328:
  3241  0C9E  0008               	return
  3242  0C9F                     __end_of_scale:
  3243                           
  3244                           	psect	text4
  3245  1C91                     __ptext4:	
  3246 ;; *************** function ___awmod *****************
  3247 ;; Defined at:
  3248 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  divisor         2    0[COMMON] int 
  3251 ;;  dividend        2    2[COMMON] int 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  sign            1    6[COMMON] unsigned char 
  3254 ;;  counter         1    5[COMMON] unsigned char 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  2    0[COMMON] int 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3264 ;;      Params:         4       0       0       0       0
  3265 ;;      Locals:         2       0       0       0       0
  3266 ;;      Temps:          1       0       0       0       0
  3267 ;;      Totals:         7       0       0       0       0
  3268 ;;Total ram usage:        7 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_scale
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           
  3278                           ;psect for function ___awmod
  3279  1C91                     ___awmod:
  3280  1C91                     l2463:	
  3281                           ;incstack = 0
  3282                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3283                           
  3284  1C91  01F6               	clrf	___awmod@sign
  3285  1C92                     l2465:
  3286  1C92  1FF3               	btfss	___awmod@dividend+1,7
  3287  1C93  2C95               	goto	u3171
  3288  1C94  2C96               	goto	u3170
  3289  1C95                     u3171:
  3290  1C95  2C9D               	goto	l2471
  3291  1C96                     u3170:
  3292  1C96                     l2467:
  3293  1C96  09F2               	comf	___awmod@dividend,f
  3294  1C97  09F3               	comf	___awmod@dividend+1,f
  3295  1C98  0AF2               	incf	___awmod@dividend,f
  3296  1C99  1903               	skipnz
  3297  1C9A  0AF3               	incf	___awmod@dividend+1,f
  3298  1C9B                     l2469:
  3299  1C9B  01F6               	clrf	___awmod@sign
  3300  1C9C  0AF6               	incf	___awmod@sign,f
  3301  1C9D                     l2471:
  3302  1C9D  1FF1               	btfss	___awmod@divisor+1,7
  3303  1C9E  2CA0               	goto	u3181
  3304  1C9F  2CA1               	goto	u3180
  3305  1CA0                     u3181:
  3306  1CA0  2CA6               	goto	l2475
  3307  1CA1                     u3180:
  3308  1CA1                     l2473:
  3309  1CA1  09F0               	comf	___awmod@divisor,f
  3310  1CA2  09F1               	comf	___awmod@divisor+1,f
  3311  1CA3  0AF0               	incf	___awmod@divisor,f
  3312  1CA4  1903               	skipnz
  3313  1CA5  0AF1               	incf	___awmod@divisor+1,f
  3314  1CA6                     l2475:
  3315  1CA6  0870               	movf	___awmod@divisor,w
  3316  1CA7  0471               	iorwf	___awmod@divisor+1,w
  3317  1CA8  1903               	btfsc	3,2
  3318  1CA9  2CAB               	goto	u3191
  3319  1CAA  2CAC               	goto	u3190
  3320  1CAB                     u3191:
  3321  1CAB  2CDB               	goto	l2493
  3322  1CAC                     u3190:
  3323  1CAC                     l2477:
  3324  1CAC  01F5               	clrf	___awmod@counter
  3325  1CAD  0AF5               	incf	___awmod@counter,f
  3326  1CAE  2CBA               	goto	l2483
  3327  1CAF                     l2479:
  3328  1CAF  3001               	movlw	1
  3329  1CB0                     u3205:
  3330  1CB0  1003               	clrc
  3331  1CB1  0DF0               	rlf	___awmod@divisor,f
  3332  1CB2  0DF1               	rlf	___awmod@divisor+1,f
  3333  1CB3  3EFF               	addlw	-1
  3334  1CB4  1D03               	skipz
  3335  1CB5  2CB0               	goto	u3205
  3336  1CB6                     l2481:
  3337  1CB6  3001               	movlw	1
  3338  1CB7  00F4               	movwf	??___awmod
  3339  1CB8  0874               	movf	??___awmod,w
  3340  1CB9  07F5               	addwf	___awmod@counter,f
  3341  1CBA                     l2483:
  3342  1CBA  1FF1               	btfss	___awmod@divisor+1,7
  3343  1CBB  2CBD               	goto	u3211
  3344  1CBC  2CBE               	goto	u3210
  3345  1CBD                     u3211:
  3346  1CBD  2CAF               	goto	l2479
  3347  1CBE                     u3210:
  3348  1CBE                     l2485:
  3349  1CBE  0871               	movf	___awmod@divisor+1,w
  3350  1CBF  0273               	subwf	___awmod@dividend+1,w
  3351  1CC0  1D03               	skipz
  3352  1CC1  2CC4               	goto	u3225
  3353  1CC2  0870               	movf	___awmod@divisor,w
  3354  1CC3  0272               	subwf	___awmod@dividend,w
  3355  1CC4                     u3225:
  3356  1CC4  1C03               	skipc
  3357  1CC5  2CC7               	goto	u3221
  3358  1CC6  2CC8               	goto	u3220
  3359  1CC7                     u3221:
  3360  1CC7  2CCE               	goto	l2489
  3361  1CC8                     u3220:
  3362  1CC8                     l2487:
  3363  1CC8  0870               	movf	___awmod@divisor,w
  3364  1CC9  02F2               	subwf	___awmod@dividend,f
  3365  1CCA  0871               	movf	___awmod@divisor+1,w
  3366  1CCB  1C03               	skipc
  3367  1CCC  03F3               	decf	___awmod@dividend+1,f
  3368  1CCD  02F3               	subwf	___awmod@dividend+1,f
  3369  1CCE                     l2489:
  3370  1CCE  3001               	movlw	1
  3371  1CCF                     u3235:
  3372  1CCF  1003               	clrc
  3373  1CD0  0CF1               	rrf	___awmod@divisor+1,f
  3374  1CD1  0CF0               	rrf	___awmod@divisor,f
  3375  1CD2  3EFF               	addlw	-1
  3376  1CD3  1D03               	skipz
  3377  1CD4  2CCF               	goto	u3235
  3378  1CD5                     l2491:
  3379  1CD5  3001               	movlw	1
  3380  1CD6  02F5               	subwf	___awmod@counter,f
  3381  1CD7  1D03               	btfss	3,2
  3382  1CD8  2CDA               	goto	u3241
  3383  1CD9  2CDB               	goto	u3240
  3384  1CDA                     u3241:
  3385  1CDA  2CBE               	goto	l2485
  3386  1CDB                     u3240:
  3387  1CDB                     l2493:
  3388  1CDB  0876               	movf	___awmod@sign,w
  3389  1CDC  1903               	btfsc	3,2
  3390  1CDD  2CDF               	goto	u3251
  3391  1CDE  2CE0               	goto	u3250
  3392  1CDF                     u3251:
  3393  1CDF  2CE5               	goto	l2497
  3394  1CE0                     u3250:
  3395  1CE0                     l2495:
  3396  1CE0  09F2               	comf	___awmod@dividend,f
  3397  1CE1  09F3               	comf	___awmod@dividend+1,f
  3398  1CE2  0AF2               	incf	___awmod@dividend,f
  3399  1CE3  1903               	skipnz
  3400  1CE4  0AF3               	incf	___awmod@dividend+1,f
  3401  1CE5                     l2497:
  3402  1CE5  0873               	movf	___awmod@dividend+1,w
  3403  1CE6  00F1               	movwf	?___awmod+1
  3404  1CE7  0872               	movf	___awmod@dividend,w
  3405  1CE8  00F0               	movwf	?___awmod
  3406  1CE9                     l590:
  3407  1CE9  0008               	return
  3408  1CEA                     __end_of___awmod:
  3409                           
  3410                           	psect	text5
  3411  1DB6                     __ptext5:	
  3412 ;; *************** function ___awdiv *****************
  3413 ;; Defined at:
  3414 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  divisor         2    7[COMMON] int 
  3417 ;;  dividend        2    9[COMMON] int 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  quotient        2    2[BANK0 ] int 
  3420 ;;  sign            1    1[BANK0 ] unsigned char 
  3421 ;;  counter         1    0[BANK0 ] unsigned char 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  2    7[COMMON] int 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2, status,0
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3431 ;;      Params:         4       0       0       0       0
  3432 ;;      Locals:         0       4       0       0       0
  3433 ;;      Temps:          1       0       0       0       0
  3434 ;;      Totals:         5       4       0       0       0
  3435 ;;Total ram usage:        9 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_scale
  3441 ;;		_sprintf
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           
  3446                           ;psect for function ___awdiv
  3447  1DB6                     ___awdiv:
  3448  1DB6                     l2419:	
  3449                           ;incstack = 0
  3450                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3451                           
  3452  1DB6  1283               	bcf	3,5	;RP0=0, select bank0
  3453  1DB7  1303               	bcf	3,6	;RP1=0, select bank0
  3454  1DB8  01A1               	clrf	___awdiv@sign
  3455  1DB9                     l2421:
  3456  1DB9  1FF8               	btfss	___awdiv@divisor+1,7
  3457  1DBA  2DBC               	goto	u3071
  3458  1DBB  2DBD               	goto	u3070
  3459  1DBC                     u3071:
  3460  1DBC  2DC4               	goto	l2427
  3461  1DBD                     u3070:
  3462  1DBD                     l2423:
  3463  1DBD  09F7               	comf	___awdiv@divisor,f
  3464  1DBE  09F8               	comf	___awdiv@divisor+1,f
  3465  1DBF  0AF7               	incf	___awdiv@divisor,f
  3466  1DC0  1903               	skipnz
  3467  1DC1  0AF8               	incf	___awdiv@divisor+1,f
  3468  1DC2                     l2425:
  3469  1DC2  01A1               	clrf	___awdiv@sign
  3470  1DC3  0AA1               	incf	___awdiv@sign,f
  3471  1DC4                     l2427:
  3472  1DC4  1FFA               	btfss	___awdiv@dividend+1,7
  3473  1DC5  2DC7               	goto	u3081
  3474  1DC6  2DC8               	goto	u3080
  3475  1DC7                     u3081:
  3476  1DC7  2DD1               	goto	l2433
  3477  1DC8                     u3080:
  3478  1DC8                     l2429:
  3479  1DC8  09F9               	comf	___awdiv@dividend,f
  3480  1DC9  09FA               	comf	___awdiv@dividend+1,f
  3481  1DCA  0AF9               	incf	___awdiv@dividend,f
  3482  1DCB  1903               	skipnz
  3483  1DCC  0AFA               	incf	___awdiv@dividend+1,f
  3484  1DCD                     l2431:
  3485  1DCD  3001               	movlw	1
  3486  1DCE  00FB               	movwf	??___awdiv
  3487  1DCF  087B               	movf	??___awdiv,w
  3488  1DD0  06A1               	xorwf	___awdiv@sign,f
  3489  1DD1                     l2433:
  3490  1DD1  01A2               	clrf	___awdiv@quotient
  3491  1DD2  01A3               	clrf	___awdiv@quotient+1
  3492  1DD3                     l2435:
  3493  1DD3  0877               	movf	___awdiv@divisor,w
  3494  1DD4  0478               	iorwf	___awdiv@divisor+1,w
  3495  1DD5  1903               	btfsc	3,2
  3496  1DD6  2DD8               	goto	u3091
  3497  1DD7  2DD9               	goto	u3090
  3498  1DD8                     u3091:
  3499  1DD8  2E10               	goto	l2455
  3500  1DD9                     u3090:
  3501  1DD9                     l2437:
  3502  1DD9  01A0               	clrf	___awdiv@counter
  3503  1DDA  0AA0               	incf	___awdiv@counter,f
  3504  1DDB  2DE7               	goto	l2443
  3505  1DDC                     l2439:
  3506  1DDC  3001               	movlw	1
  3507  1DDD                     u3105:
  3508  1DDD  1003               	clrc
  3509  1DDE  0DF7               	rlf	___awdiv@divisor,f
  3510  1DDF  0DF8               	rlf	___awdiv@divisor+1,f
  3511  1DE0  3EFF               	addlw	-1
  3512  1DE1  1D03               	skipz
  3513  1DE2  2DDD               	goto	u3105
  3514  1DE3                     l2441:
  3515  1DE3  3001               	movlw	1
  3516  1DE4  00FB               	movwf	??___awdiv
  3517  1DE5  087B               	movf	??___awdiv,w
  3518  1DE6  07A0               	addwf	___awdiv@counter,f
  3519  1DE7                     l2443:
  3520  1DE7  1FF8               	btfss	___awdiv@divisor+1,7
  3521  1DE8  2DEA               	goto	u3111
  3522  1DE9  2DEB               	goto	u3110
  3523  1DEA                     u3111:
  3524  1DEA  2DDC               	goto	l2439
  3525  1DEB                     u3110:
  3526  1DEB                     l2445:
  3527  1DEB  3001               	movlw	1
  3528  1DEC                     u3125:
  3529  1DEC  1003               	clrc
  3530  1DED  0DA2               	rlf	___awdiv@quotient,f
  3531  1DEE  0DA3               	rlf	___awdiv@quotient+1,f
  3532  1DEF  3EFF               	addlw	-1
  3533  1DF0  1D03               	skipz
  3534  1DF1  2DEC               	goto	u3125
  3535  1DF2  0878               	movf	___awdiv@divisor+1,w
  3536  1DF3  027A               	subwf	___awdiv@dividend+1,w
  3537  1DF4  1D03               	skipz
  3538  1DF5  2DF8               	goto	u3135
  3539  1DF6  0877               	movf	___awdiv@divisor,w
  3540  1DF7  0279               	subwf	___awdiv@dividend,w
  3541  1DF8                     u3135:
  3542  1DF8  1C03               	skipc
  3543  1DF9  2DFB               	goto	u3131
  3544  1DFA  2DFC               	goto	u3130
  3545  1DFB                     u3131:
  3546  1DFB  2E03               	goto	l2451
  3547  1DFC                     u3130:
  3548  1DFC                     l2447:
  3549  1DFC  0877               	movf	___awdiv@divisor,w
  3550  1DFD  02F9               	subwf	___awdiv@dividend,f
  3551  1DFE  0878               	movf	___awdiv@divisor+1,w
  3552  1DFF  1C03               	skipc
  3553  1E00  03FA               	decf	___awdiv@dividend+1,f
  3554  1E01  02FA               	subwf	___awdiv@dividend+1,f
  3555  1E02                     l2449:
  3556  1E02  1422               	bsf	___awdiv@quotient,0
  3557  1E03                     l2451:
  3558  1E03  3001               	movlw	1
  3559  1E04                     u3145:
  3560  1E04  1003               	clrc
  3561  1E05  0CF8               	rrf	___awdiv@divisor+1,f
  3562  1E06  0CF7               	rrf	___awdiv@divisor,f
  3563  1E07  3EFF               	addlw	-1
  3564  1E08  1D03               	skipz
  3565  1E09  2E04               	goto	u3145
  3566  1E0A                     l2453:
  3567  1E0A  3001               	movlw	1
  3568  1E0B  02A0               	subwf	___awdiv@counter,f
  3569  1E0C  1D03               	btfss	3,2
  3570  1E0D  2E0F               	goto	u3151
  3571  1E0E  2E10               	goto	u3150
  3572  1E0F                     u3151:
  3573  1E0F  2DEB               	goto	l2445
  3574  1E10                     u3150:
  3575  1E10                     l2455:
  3576  1E10  0821               	movf	___awdiv@sign,w
  3577  1E11  1903               	btfsc	3,2
  3578  1E12  2E14               	goto	u3161
  3579  1E13  2E15               	goto	u3160
  3580  1E14                     u3161:
  3581  1E14  2E1A               	goto	l2459
  3582  1E15                     u3160:
  3583  1E15                     l2457:
  3584  1E15  09A2               	comf	___awdiv@quotient,f
  3585  1E16  09A3               	comf	___awdiv@quotient+1,f
  3586  1E17  0AA2               	incf	___awdiv@quotient,f
  3587  1E18  1903               	skipnz
  3588  1E19  0AA3               	incf	___awdiv@quotient+1,f
  3589  1E1A                     l2459:
  3590  1E1A  0823               	movf	___awdiv@quotient+1,w
  3591  1E1B  00F8               	movwf	?___awdiv+1
  3592  1E1C  0822               	movf	___awdiv@quotient,w
  3593  1E1D  00F7               	movwf	?___awdiv
  3594  1E1E                     l577:
  3595  1E1E  0008               	return
  3596  1E1F                     __end_of___awdiv:
  3597                           
  3598                           	psect	text6
  3599  1974                     __ptext6:	
  3600 ;; *************** function _isdigit *****************
  3601 ;; Defined at:
  3602 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  c               1    wreg     unsigned char 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  c               1    1[COMMON] unsigned char 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;		None               void
  3609 ;; Registers used:
  3610 ;;		wreg, status,2, status,0
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3616 ;;      Params:         0       0       0       0       0
  3617 ;;      Locals:         2       0       0       0       0
  3618 ;;      Temps:          0       0       0       0       0
  3619 ;;      Totals:         2       0       0       0       0
  3620 ;;Total ram usage:        2 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_sprintf
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           
  3630                           ;psect for function _isdigit
  3631  1974                     _isdigit:
  3632                           
  3633                           ;incstack = 0
  3634                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3635                           ;isdigit@c stored from wreg
  3636  1974  00F1               	movwf	isdigit@c
  3637  1975                     l2991:
  3638  1975  01F0               	clrf	_isdigit$934
  3639  1976                     l2993:
  3640  1976  303A               	movlw	58
  3641  1977  0271               	subwf	isdigit@c,w
  3642  1978  1803               	skipnc
  3643  1979  297B               	goto	u4491
  3644  197A  297C               	goto	u4490
  3645  197B                     u4491:
  3646  197B  2984               	goto	l2999
  3647  197C                     u4490:
  3648  197C                     l2995:
  3649  197C  3030               	movlw	48
  3650  197D  0271               	subwf	isdigit@c,w
  3651  197E  1C03               	skipc
  3652  197F  2981               	goto	u4501
  3653  1980  2982               	goto	u4500
  3654  1981                     u4501:
  3655  1981  2984               	goto	l2999
  3656  1982                     u4500:
  3657  1982                     l2997:
  3658  1982  01F0               	clrf	_isdigit$934
  3659  1983  0AF0               	incf	_isdigit$934,f
  3660  1984                     l2999:
  3661  1984  0C70               	rrf	_isdigit$934,w
  3662  1985                     l911:
  3663  1985  0008               	return
  3664  1986                     __end_of_isdigit:
  3665                           
  3666                           	psect	text7
  3667  10AB                     __ptext7:	
  3668 ;; *************** function _fround *****************
  3669 ;; Defined at:
  3670 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  prec            1    wreg     unsigned char 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  prec            1   49[BANK0 ] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  4   30[BANK0 ] unsigned char 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3684 ;;      Params:         0       4       0       0       0
  3685 ;;      Locals:         0       9       0       0       0
  3686 ;;      Temps:          0       7       0       0       0
  3687 ;;      Totals:         0      20       0       0       0
  3688 ;;Total ram usage:       20 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    2
  3691 ;; This function calls:
  3692 ;;		___flmul
  3693 ;;		___lwdiv
  3694 ;;		___lwmod
  3695 ;; This function is called by:
  3696 ;;		_sprintf
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           
  3701                           ;psect for function _fround
  3702  10AB                     _fround:
  3703                           
  3704                           ;incstack = 0
  3705                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3706                           ;fround@prec stored from wreg
  3707  10AB  1283               	bcf	3,5	;RP0=0, select bank0
  3708  10AC  1303               	bcf	3,6	;RP1=0, select bank0
  3709  10AD  00D1               	movwf	fround@prec
  3710  10AE                     l2933:
  3711                           
  3712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3713  10AE  306E               	movlw	110
  3714  10AF  0251               	subwf	fround@prec,w
  3715  10B0  1C03               	skipc
  3716  10B1  28B3               	goto	u4241
  3717  10B2  28B4               	goto	u4240
  3718  10B3                     u4241:
  3719  10B3  29C1               	goto	l2941
  3720  10B4                     u4240:
  3721  10B4                     l2935:
  3722                           
  3723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3724  10B4  303F               	movlw	63
  3725  10B5  00A7               	movwf	___flmul@b+3
  3726  10B6  3000               	movlw	0
  3727  10B7  00A6               	movwf	___flmul@b+2
  3728  10B8  3000               	movlw	0
  3729  10B9  00A5               	movwf	___flmul@b+1
  3730  10BA  3000               	movlw	0
  3731  10BB  00A4               	movwf	___flmul@b
  3732  10BC  3064               	movlw	100
  3733  10BD  00F6               	movwf	___lwdiv@divisor
  3734  10BE  3000               	movlw	0
  3735  10BF  00F7               	movwf	___lwdiv@divisor+1
  3736  10C0  0851               	movf	fround@prec,w
  3737  10C1  00C2               	movwf	??_fround
  3738  10C2  01C3               	clrf	??_fround+1
  3739  10C3  0842               	movf	??_fround,w
  3740  10C4  00F8               	movwf	___lwdiv@dividend
  3741  10C5  0843               	movf	??_fround+1,w
  3742  10C6  00F9               	movwf	___lwdiv@dividend+1
  3743  10C7  160A  158A  23A9  160A  118A  	fcall	___lwdiv
  3744  10CC  0876               	movf	?___lwdiv,w
  3745  10CD  1283               	bcf	3,5	;RP0=0, select bank0
  3746  10CE  1303               	bcf	3,6	;RP1=0, select bank0
  3747  10CF  00C4               	movwf	??_fround+2
  3748  10D0  3001               	movlw	1
  3749  10D1                     u4255:
  3750  10D1  1003               	clrc
  3751  10D2  0DC4               	rlf	??_fround+2,f
  3752  10D3  3EFF               	addlw	-1
  3753  10D4  1D03               	skipz
  3754  10D5  28D1               	goto	u4255
  3755  10D6  1003               	clrc
  3756  10D7  0D44               	rlf	??_fround+2,w
  3757  10D8  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3758  10D9  0084               	movwf	4
  3759  10DA  120A  118A  200D  160A  118A  	fcall	stringdir
  3760  10DF  00C5               	movwf	??_fround+3
  3761  10E0  120A  118A  200D  160A  118A  	fcall	stringdir
  3762  10E5  00C6               	movwf	??_fround+4
  3763  10E6  120A  118A  200D  160A  118A  	fcall	stringdir
  3764  10EB  00C7               	movwf	??_fround+5
  3765  10EC  120A  118A  200D  160A  118A  	fcall	stringdir
  3766  10F1  00C8               	movwf	??_fround+6
  3767  10F2  0848               	movf	??_fround+6,w
  3768  10F3  00AB               	movwf	___flmul@a+3
  3769  10F4  0847               	movf	??_fround+5,w
  3770  10F5  00AA               	movwf	___flmul@a+2
  3771  10F6  0846               	movf	??_fround+4,w
  3772  10F7  00A9               	movwf	___flmul@a+1
  3773  10F8  0845               	movf	??_fround+3,w
  3774  10F9  00A8               	movwf	___flmul@a
  3775  10FA  120A  158A  249F  160A  118A  	fcall	___flmul
  3776  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  3777  1100  1303               	bcf	3,6	;RP1=0, select bank0
  3778  1101  0827               	movf	?___flmul+3,w
  3779  1102  00D0               	movwf	_fround$1132+3
  3780  1103  0826               	movf	?___flmul+2,w
  3781  1104  00CF               	movwf	_fround$1132+2
  3782  1105  0825               	movf	?___flmul+1,w
  3783  1106  00CE               	movwf	_fround$1132+1
  3784  1107  0824               	movf	?___flmul,w
  3785  1108  00CD               	movwf	_fround$1132
  3786                           
  3787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3788  1109  300A               	movlw	10
  3789  110A  00F6               	movwf	___lwdiv@divisor
  3790  110B  3000               	movlw	0
  3791  110C  00F7               	movwf	___lwdiv@divisor+1
  3792  110D  0851               	movf	fround@prec,w
  3793  110E  00C2               	movwf	??_fround
  3794  110F  01C3               	clrf	??_fround+1
  3795  1110  0842               	movf	??_fround,w
  3796  1111  00F2               	movwf	___lwmod@dividend
  3797  1112  0843               	movf	??_fround+1,w
  3798  1113  00F3               	movwf	___lwmod@dividend+1
  3799  1114  3064               	movlw	100
  3800  1115  00F0               	movwf	___lwmod@divisor
  3801  1116  3000               	movlw	0
  3802  1117  00F1               	movwf	___lwmod@divisor+1
  3803  1118  160A  158A  22EF  160A  118A  	fcall	___lwmod
  3804  111D  0871               	movf	?___lwmod+1,w
  3805  111E  00F9               	movwf	___lwdiv@dividend+1
  3806  111F  0870               	movf	?___lwmod,w
  3807  1120  00F8               	movwf	___lwdiv@dividend
  3808  1121  160A  158A  23A9  160A  118A  	fcall	___lwdiv
  3809  1126  0876               	movf	?___lwdiv,w
  3810  1127  1283               	bcf	3,5	;RP0=0, select bank0
  3811  1128  1303               	bcf	3,6	;RP1=0, select bank0
  3812  1129  00C4               	movwf	??_fround+2
  3813  112A  3001               	movlw	1
  3814  112B                     u4265:
  3815  112B  1003               	clrc
  3816  112C  0DC4               	rlf	??_fround+2,f
  3817  112D  3EFF               	addlw	-1
  3818  112E  1D03               	skipz
  3819  112F  292B               	goto	u4265
  3820  1130  1003               	clrc
  3821  1131  0D44               	rlf	??_fround+2,w
  3822  1132  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3823  1133  0084               	movwf	4
  3824  1134  120A  118A  200D  160A  118A  	fcall	stringdir
  3825  1139  00C5               	movwf	??_fround+3
  3826  113A  120A  118A  200D  160A  118A  	fcall	stringdir
  3827  113F  00C6               	movwf	??_fround+4
  3828  1140  120A  118A  200D  160A  118A  	fcall	stringdir
  3829  1145  00C7               	movwf	??_fround+5
  3830  1146  120A  118A  200D  160A  118A  	fcall	stringdir
  3831  114B  00C8               	movwf	??_fround+6
  3832  114C  0848               	movf	??_fround+6,w
  3833  114D  00A7               	movwf	___flmul@b+3
  3834  114E  0847               	movf	??_fround+5,w
  3835  114F  00A6               	movwf	___flmul@b+2
  3836  1150  0846               	movf	??_fround+4,w
  3837  1151  00A5               	movwf	___flmul@b+1
  3838  1152  0845               	movf	??_fround+3,w
  3839  1153  00A4               	movwf	___flmul@b
  3840  1154  0850               	movf	_fround$1132+3,w
  3841  1155  00AB               	movwf	___flmul@a+3
  3842  1156  084F               	movf	_fround$1132+2,w
  3843  1157  00AA               	movwf	___flmul@a+2
  3844  1158  084E               	movf	_fround$1132+1,w
  3845  1159  00A9               	movwf	___flmul@a+1
  3846  115A  084D               	movf	_fround$1132,w
  3847  115B  00A8               	movwf	___flmul@a
  3848  115C  120A  158A  249F  160A  118A  	fcall	___flmul
  3849  1161  1283               	bcf	3,5	;RP0=0, select bank0
  3850  1162  1303               	bcf	3,6	;RP1=0, select bank0
  3851  1163  0827               	movf	?___flmul+3,w
  3852  1164  00CC               	movwf	_fround$1133+3
  3853  1165  0826               	movf	?___flmul+2,w
  3854  1166  00CB               	movwf	_fround$1133+2
  3855  1167  0825               	movf	?___flmul+1,w
  3856  1168  00CA               	movwf	_fround$1133+1
  3857  1169  0824               	movf	?___flmul,w
  3858  116A  00C9               	movwf	_fround$1133
  3859                           
  3860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3861  116B  300A               	movlw	10
  3862  116C  00F0               	movwf	___lwmod@divisor
  3863  116D  3000               	movlw	0
  3864  116E  00F1               	movwf	___lwmod@divisor+1
  3865  116F  0851               	movf	fround@prec,w
  3866  1170  00C2               	movwf	??_fround
  3867  1171  01C3               	clrf	??_fround+1
  3868  1172  0842               	movf	??_fround,w
  3869  1173  00F2               	movwf	___lwmod@dividend
  3870  1174  0843               	movf	??_fround+1,w
  3871  1175  00F3               	movwf	___lwmod@dividend+1
  3872  1176  160A  158A  22EF  160A  118A  	fcall	___lwmod
  3873  117B  0870               	movf	?___lwmod,w
  3874  117C  1283               	bcf	3,5	;RP0=0, select bank0
  3875  117D  1303               	bcf	3,6	;RP1=0, select bank0
  3876  117E  00C4               	movwf	??_fround+2
  3877  117F  3001               	movlw	1
  3878  1180                     u4275:
  3879  1180  1003               	clrc
  3880  1181  0DC4               	rlf	??_fround+2,f
  3881  1182  3EFF               	addlw	-1
  3882  1183  1D03               	skipz
  3883  1184  2980               	goto	u4275
  3884  1185  1003               	clrc
  3885  1186  0D44               	rlf	??_fround+2,w
  3886  1187  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3887  1188  0084               	movwf	4
  3888  1189  120A  118A  200D  160A  118A  	fcall	stringdir
  3889  118E  00C5               	movwf	??_fround+3
  3890  118F  120A  118A  200D  160A  118A  	fcall	stringdir
  3891  1194  00C6               	movwf	??_fround+4
  3892  1195  120A  118A  200D  160A  118A  	fcall	stringdir
  3893  119A  00C7               	movwf	??_fround+5
  3894  119B  120A  118A  200D  160A  118A  	fcall	stringdir
  3895  11A0  00C8               	movwf	??_fround+6
  3896  11A1  0848               	movf	??_fround+6,w
  3897  11A2  00A7               	movwf	___flmul@b+3
  3898  11A3  0847               	movf	??_fround+5,w
  3899  11A4  00A6               	movwf	___flmul@b+2
  3900  11A5  0846               	movf	??_fround+4,w
  3901  11A6  00A5               	movwf	___flmul@b+1
  3902  11A7  0845               	movf	??_fround+3,w
  3903  11A8  00A4               	movwf	___flmul@b
  3904  11A9  084C               	movf	_fround$1133+3,w
  3905  11AA  00AB               	movwf	___flmul@a+3
  3906  11AB  084B               	movf	_fround$1133+2,w
  3907  11AC  00AA               	movwf	___flmul@a+2
  3908  11AD  084A               	movf	_fround$1133+1,w
  3909  11AE  00A9               	movwf	___flmul@a+1
  3910  11AF  0849               	movf	_fround$1133,w
  3911  11B0  00A8               	movwf	___flmul@a
  3912  11B1  120A  158A  249F  160A  118A  	fcall	___flmul
  3913  11B6  1283               	bcf	3,5	;RP0=0, select bank0
  3914  11B7  1303               	bcf	3,6	;RP1=0, select bank0
  3915  11B8  0827               	movf	?___flmul+3,w
  3916  11B9  00C1               	movwf	?_fround+3
  3917  11BA  0826               	movf	?___flmul+2,w
  3918  11BB  00C0               	movwf	?_fround+2
  3919  11BC  0825               	movf	?___flmul+1,w
  3920  11BD  00BF               	movwf	?_fround+1
  3921  11BE  0824               	movf	?___flmul,w
  3922  11BF  00BE               	movwf	?_fround
  3923  11C0  2AB5               	goto	l321
  3924  11C1                     l2941:
  3925  11C1  300B               	movlw	11
  3926  11C2  0251               	subwf	fround@prec,w
  3927  11C3  1C03               	skipc
  3928  11C4  29C6               	goto	u4281
  3929  11C5  29C7               	goto	u4280
  3930  11C6                     u4281:
  3931  11C6  2A72               	goto	l2947
  3932  11C7                     u4280:
  3933  11C7                     l2943:
  3934                           
  3935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3936  11C7  303F               	movlw	63
  3937  11C8  00A7               	movwf	___flmul@b+3
  3938  11C9  3000               	movlw	0
  3939  11CA  00A6               	movwf	___flmul@b+2
  3940  11CB  3000               	movlw	0
  3941  11CC  00A5               	movwf	___flmul@b+1
  3942  11CD  3000               	movlw	0
  3943  11CE  00A4               	movwf	___flmul@b
  3944  11CF  300A               	movlw	10
  3945  11D0  00F6               	movwf	___lwdiv@divisor
  3946  11D1  3000               	movlw	0
  3947  11D2  00F7               	movwf	___lwdiv@divisor+1
  3948  11D3  0851               	movf	fround@prec,w
  3949  11D4  00C2               	movwf	??_fround
  3950  11D5  01C3               	clrf	??_fround+1
  3951  11D6  0842               	movf	??_fround,w
  3952  11D7  00F8               	movwf	___lwdiv@dividend
  3953  11D8  0843               	movf	??_fround+1,w
  3954  11D9  00F9               	movwf	___lwdiv@dividend+1
  3955  11DA  160A  158A  23A9  160A  118A  	fcall	___lwdiv
  3956  11DF  0876               	movf	?___lwdiv,w
  3957  11E0  1283               	bcf	3,5	;RP0=0, select bank0
  3958  11E1  1303               	bcf	3,6	;RP1=0, select bank0
  3959  11E2  00C4               	movwf	??_fround+2
  3960  11E3  3001               	movlw	1
  3961  11E4                     u4295:
  3962  11E4  1003               	clrc
  3963  11E5  0DC4               	rlf	??_fround+2,f
  3964  11E6  3EFF               	addlw	-1
  3965  11E7  1D03               	skipz
  3966  11E8  29E4               	goto	u4295
  3967  11E9  1003               	clrc
  3968  11EA  0D44               	rlf	??_fround+2,w
  3969  11EB  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3970  11EC  0084               	movwf	4
  3971  11ED  120A  118A  200D  160A  118A  	fcall	stringdir
  3972  11F2  00C5               	movwf	??_fround+3
  3973  11F3  120A  118A  200D  160A  118A  	fcall	stringdir
  3974  11F8  00C6               	movwf	??_fround+4
  3975  11F9  120A  118A  200D  160A  118A  	fcall	stringdir
  3976  11FE  00C7               	movwf	??_fround+5
  3977  11FF  120A  118A  200D  160A  118A  	fcall	stringdir
  3978  1204  00C8               	movwf	??_fround+6
  3979  1205  0848               	movf	??_fround+6,w
  3980  1206  00AB               	movwf	___flmul@a+3
  3981  1207  0847               	movf	??_fround+5,w
  3982  1208  00AA               	movwf	___flmul@a+2
  3983  1209  0846               	movf	??_fround+4,w
  3984  120A  00A9               	movwf	___flmul@a+1
  3985  120B  0845               	movf	??_fround+3,w
  3986  120C  00A8               	movwf	___flmul@a
  3987  120D  120A  158A  249F  160A  118A  	fcall	___flmul
  3988  1212  1283               	bcf	3,5	;RP0=0, select bank0
  3989  1213  1303               	bcf	3,6	;RP1=0, select bank0
  3990  1214  0827               	movf	?___flmul+3,w
  3991  1215  00D0               	movwf	_fround$1132+3
  3992  1216  0826               	movf	?___flmul+2,w
  3993  1217  00CF               	movwf	_fround$1132+2
  3994  1218  0825               	movf	?___flmul+1,w
  3995  1219  00CE               	movwf	_fround$1132+1
  3996  121A  0824               	movf	?___flmul,w
  3997  121B  00CD               	movwf	_fround$1132
  3998                           
  3999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4000  121C  300A               	movlw	10
  4001  121D  00F0               	movwf	___lwmod@divisor
  4002  121E  3000               	movlw	0
  4003  121F  00F1               	movwf	___lwmod@divisor+1
  4004  1220  0851               	movf	fround@prec,w
  4005  1221  00C2               	movwf	??_fround
  4006  1222  01C3               	clrf	??_fround+1
  4007  1223  0842               	movf	??_fround,w
  4008  1224  00F2               	movwf	___lwmod@dividend
  4009  1225  0843               	movf	??_fround+1,w
  4010  1226  00F3               	movwf	___lwmod@dividend+1
  4011  1227  160A  158A  22EF  160A  118A  	fcall	___lwmod
  4012  122C  0870               	movf	?___lwmod,w
  4013  122D  1283               	bcf	3,5	;RP0=0, select bank0
  4014  122E  1303               	bcf	3,6	;RP1=0, select bank0
  4015  122F  00C4               	movwf	??_fround+2
  4016  1230  3001               	movlw	1
  4017  1231                     u4305:
  4018  1231  1003               	clrc
  4019  1232  0DC4               	rlf	??_fround+2,f
  4020  1233  3EFF               	addlw	-1
  4021  1234  1D03               	skipz
  4022  1235  2A31               	goto	u4305
  4023  1236  1003               	clrc
  4024  1237  0D44               	rlf	??_fround+2,w
  4025  1238  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4026  1239  0084               	movwf	4
  4027  123A  120A  118A  200D  160A  118A  	fcall	stringdir
  4028  123F  00C5               	movwf	??_fround+3
  4029  1240  120A  118A  200D  160A  118A  	fcall	stringdir
  4030  1245  00C6               	movwf	??_fround+4
  4031  1246  120A  118A  200D  160A  118A  	fcall	stringdir
  4032  124B  00C7               	movwf	??_fround+5
  4033  124C  120A  118A  200D  160A  118A  	fcall	stringdir
  4034  1251  00C8               	movwf	??_fround+6
  4035  1252  0848               	movf	??_fround+6,w
  4036  1253  00A7               	movwf	___flmul@b+3
  4037  1254  0847               	movf	??_fround+5,w
  4038  1255  00A6               	movwf	___flmul@b+2
  4039  1256  0846               	movf	??_fround+4,w
  4040  1257  00A5               	movwf	___flmul@b+1
  4041  1258  0845               	movf	??_fround+3,w
  4042  1259  00A4               	movwf	___flmul@b
  4043  125A  0850               	movf	_fround$1132+3,w
  4044  125B  00AB               	movwf	___flmul@a+3
  4045  125C  084F               	movf	_fround$1132+2,w
  4046  125D  00AA               	movwf	___flmul@a+2
  4047  125E  084E               	movf	_fround$1132+1,w
  4048  125F  00A9               	movwf	___flmul@a+1
  4049  1260  084D               	movf	_fround$1132,w
  4050  1261  00A8               	movwf	___flmul@a
  4051  1262  120A  158A  249F  160A  118A  	fcall	___flmul
  4052  1267  1283               	bcf	3,5	;RP0=0, select bank0
  4053  1268  1303               	bcf	3,6	;RP1=0, select bank0
  4054  1269  0827               	movf	?___flmul+3,w
  4055  126A  00C1               	movwf	?_fround+3
  4056  126B  0826               	movf	?___flmul+2,w
  4057  126C  00C0               	movwf	?_fround+2
  4058  126D  0825               	movf	?___flmul+1,w
  4059  126E  00BF               	movwf	?_fround+1
  4060  126F  0824               	movf	?___flmul,w
  4061  1270  00BE               	movwf	?_fround
  4062  1271  2AB5               	goto	l321
  4063  1272                     l2947:
  4064                           
  4065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4066  1272  303F               	movlw	63
  4067  1273  00A7               	movwf	___flmul@b+3
  4068  1274  3000               	movlw	0
  4069  1275  00A6               	movwf	___flmul@b+2
  4070  1276  3000               	movlw	0
  4071  1277  00A5               	movwf	___flmul@b+1
  4072  1278  3000               	movlw	0
  4073  1279  00A4               	movwf	___flmul@b
  4074  127A  0851               	movf	fround@prec,w
  4075  127B  00C2               	movwf	??_fround
  4076  127C  3001               	movlw	1
  4077  127D                     u4315:
  4078  127D  1003               	clrc
  4079  127E  0DC2               	rlf	??_fround,f
  4080  127F  3EFF               	addlw	-1
  4081  1280  1D03               	skipz
  4082  1281  2A7D               	goto	u4315
  4083  1282  1003               	clrc
  4084  1283  0D42               	rlf	??_fround,w
  4085  1284  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4086  1285  0084               	movwf	4
  4087  1286  120A  118A  200D  160A  118A  	fcall	stringdir
  4088  128B  00C3               	movwf	??_fround+1
  4089  128C  120A  118A  200D  160A  118A  	fcall	stringdir
  4090  1291  00C4               	movwf	??_fround+2
  4091  1292  120A  118A  200D  160A  118A  	fcall	stringdir
  4092  1297  00C5               	movwf	??_fround+3
  4093  1298  120A  118A  200D  160A  118A  	fcall	stringdir
  4094  129D  00C6               	movwf	??_fround+4
  4095  129E  0846               	movf	??_fround+4,w
  4096  129F  00AB               	movwf	___flmul@a+3
  4097  12A0  0845               	movf	??_fround+3,w
  4098  12A1  00AA               	movwf	___flmul@a+2
  4099  12A2  0844               	movf	??_fround+2,w
  4100  12A3  00A9               	movwf	___flmul@a+1
  4101  12A4  0843               	movf	??_fround+1,w
  4102  12A5  00A8               	movwf	___flmul@a
  4103  12A6  120A  158A  249F  160A  118A  	fcall	___flmul
  4104  12AB  1283               	bcf	3,5	;RP0=0, select bank0
  4105  12AC  1303               	bcf	3,6	;RP1=0, select bank0
  4106  12AD  0827               	movf	?___flmul+3,w
  4107  12AE  00C1               	movwf	?_fround+3
  4108  12AF  0826               	movf	?___flmul+2,w
  4109  12B0  00C0               	movwf	?_fround+2
  4110  12B1  0825               	movf	?___flmul+1,w
  4111  12B2  00BF               	movwf	?_fround+1
  4112  12B3  0824               	movf	?___flmul,w
  4113  12B4  00BE               	movwf	?_fround
  4114  12B5                     l321:
  4115  12B5  0008               	return
  4116  12B6                     __end_of_fround:
  4117                           
  4118                           	psect	text8
  4119  1AEF                     __ptext8:	
  4120 ;; *************** function ___lwmod *****************
  4121 ;; Defined at:
  4122 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  divisor         2    0[COMMON] unsigned int 
  4125 ;;  dividend        2    2[COMMON] unsigned int 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  counter         1    5[COMMON] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  2    0[COMMON] unsigned int 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2, status,0
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4137 ;;      Params:         4       0       0       0       0
  4138 ;;      Locals:         1       0       0       0       0
  4139 ;;      Temps:          1       0       0       0       0
  4140 ;;      Totals:         6       0       0       0       0
  4141 ;;Total ram usage:        6 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		_fround
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           
  4151                           ;psect for function ___lwmod
  4152  1AEF                     ___lwmod:
  4153  1AEF                     l2527:	
  4154                           ;incstack = 0
  4155                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4156                           
  4157  1AEF  0870               	movf	___lwmod@divisor,w
  4158  1AF0  0471               	iorwf	___lwmod@divisor+1,w
  4159  1AF1  1903               	btfsc	3,2
  4160  1AF2  2AF4               	goto	u3331
  4161  1AF3  2AF5               	goto	u3330
  4162  1AF4                     u3331:
  4163  1AF4  2B24               	goto	l2545
  4164  1AF5                     u3330:
  4165  1AF5                     l2529:
  4166  1AF5  01F5               	clrf	___lwmod@counter
  4167  1AF6  0AF5               	incf	___lwmod@counter,f
  4168  1AF7  2B03               	goto	l2535
  4169  1AF8                     l2531:
  4170  1AF8  3001               	movlw	1
  4171  1AF9                     u3345:
  4172  1AF9  1003               	clrc
  4173  1AFA  0DF0               	rlf	___lwmod@divisor,f
  4174  1AFB  0DF1               	rlf	___lwmod@divisor+1,f
  4175  1AFC  3EFF               	addlw	-1
  4176  1AFD  1D03               	skipz
  4177  1AFE  2AF9               	goto	u3345
  4178  1AFF                     l2533:
  4179  1AFF  3001               	movlw	1
  4180  1B00  00F4               	movwf	??___lwmod
  4181  1B01  0874               	movf	??___lwmod,w
  4182  1B02  07F5               	addwf	___lwmod@counter,f
  4183  1B03                     l2535:
  4184  1B03  1FF1               	btfss	___lwmod@divisor+1,7
  4185  1B04  2B06               	goto	u3351
  4186  1B05  2B07               	goto	u3350
  4187  1B06                     u3351:
  4188  1B06  2AF8               	goto	l2531
  4189  1B07                     u3350:
  4190  1B07                     l2537:
  4191  1B07  0871               	movf	___lwmod@divisor+1,w
  4192  1B08  0273               	subwf	___lwmod@dividend+1,w
  4193  1B09  1D03               	skipz
  4194  1B0A  2B0D               	goto	u3365
  4195  1B0B  0870               	movf	___lwmod@divisor,w
  4196  1B0C  0272               	subwf	___lwmod@dividend,w
  4197  1B0D                     u3365:
  4198  1B0D  1C03               	skipc
  4199  1B0E  2B10               	goto	u3361
  4200  1B0F  2B11               	goto	u3360
  4201  1B10                     u3361:
  4202  1B10  2B17               	goto	l2541
  4203  1B11                     u3360:
  4204  1B11                     l2539:
  4205  1B11  0870               	movf	___lwmod@divisor,w
  4206  1B12  02F2               	subwf	___lwmod@dividend,f
  4207  1B13  0871               	movf	___lwmod@divisor+1,w
  4208  1B14  1C03               	skipc
  4209  1B15  03F3               	decf	___lwmod@dividend+1,f
  4210  1B16  02F3               	subwf	___lwmod@dividend+1,f
  4211  1B17                     l2541:
  4212  1B17  3001               	movlw	1
  4213  1B18                     u3375:
  4214  1B18  1003               	clrc
  4215  1B19  0CF1               	rrf	___lwmod@divisor+1,f
  4216  1B1A  0CF0               	rrf	___lwmod@divisor,f
  4217  1B1B  3EFF               	addlw	-1
  4218  1B1C  1D03               	skipz
  4219  1B1D  2B18               	goto	u3375
  4220  1B1E                     l2543:
  4221  1B1E  3001               	movlw	1
  4222  1B1F  02F5               	subwf	___lwmod@counter,f
  4223  1B20  1D03               	btfss	3,2
  4224  1B21  2B23               	goto	u3381
  4225  1B22  2B24               	goto	u3380
  4226  1B23                     u3381:
  4227  1B23  2B07               	goto	l2537
  4228  1B24                     u3380:
  4229  1B24                     l2545:
  4230  1B24  0873               	movf	___lwmod@dividend+1,w
  4231  1B25  00F1               	movwf	?___lwmod+1
  4232  1B26  0872               	movf	___lwmod@dividend,w
  4233  1B27  00F0               	movwf	?___lwmod
  4234  1B28                     l740:
  4235  1B28  0008               	return
  4236  1B29                     __end_of___lwmod:
  4237                           
  4238                           	psect	text9
  4239  1BA9                     __ptext9:	
  4240 ;; *************** function ___lwdiv *****************
  4241 ;; Defined at:
  4242 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  divisor         2    6[COMMON] unsigned int 
  4245 ;;  dividend        2    8[COMMON] unsigned int 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  quotient        2   11[COMMON] unsigned int 
  4248 ;;  counter         1   13[COMMON] unsigned char 
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  2    6[COMMON] unsigned int 
  4251 ;; Registers used:
  4252 ;;		wreg, status,2, status,0
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4258 ;;      Params:         4       0       0       0       0
  4259 ;;      Locals:         3       0       0       0       0
  4260 ;;      Temps:          1       0       0       0       0
  4261 ;;      Totals:         8       0       0       0       0
  4262 ;;Total ram usage:        8 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_fround
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function ___lwdiv
  4273  1BA9                     ___lwdiv:
  4274  1BA9                     l2501:	
  4275                           ;incstack = 0
  4276                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4277                           
  4278  1BA9  01FB               	clrf	___lwdiv@quotient
  4279  1BAA  01FC               	clrf	___lwdiv@quotient+1
  4280  1BAB                     l2503:
  4281  1BAB  0876               	movf	___lwdiv@divisor,w
  4282  1BAC  0477               	iorwf	___lwdiv@divisor+1,w
  4283  1BAD  1903               	btfsc	3,2
  4284  1BAE  2BB0               	goto	u3261
  4285  1BAF  2BB1               	goto	u3260
  4286  1BB0                     u3261:
  4287  1BB0  2BE8               	goto	l2523
  4288  1BB1                     u3260:
  4289  1BB1                     l2505:
  4290  1BB1  01FD               	clrf	___lwdiv@counter
  4291  1BB2  0AFD               	incf	___lwdiv@counter,f
  4292  1BB3  2BBF               	goto	l2511
  4293  1BB4                     l2507:
  4294  1BB4  3001               	movlw	1
  4295  1BB5                     u3275:
  4296  1BB5  1003               	clrc
  4297  1BB6  0DF6               	rlf	___lwdiv@divisor,f
  4298  1BB7  0DF7               	rlf	___lwdiv@divisor+1,f
  4299  1BB8  3EFF               	addlw	-1
  4300  1BB9  1D03               	skipz
  4301  1BBA  2BB5               	goto	u3275
  4302  1BBB                     l2509:
  4303  1BBB  3001               	movlw	1
  4304  1BBC  00FA               	movwf	??___lwdiv
  4305  1BBD  087A               	movf	??___lwdiv,w
  4306  1BBE  07FD               	addwf	___lwdiv@counter,f
  4307  1BBF                     l2511:
  4308  1BBF  1FF7               	btfss	___lwdiv@divisor+1,7
  4309  1BC0  2BC2               	goto	u3281
  4310  1BC1  2BC3               	goto	u3280
  4311  1BC2                     u3281:
  4312  1BC2  2BB4               	goto	l2507
  4313  1BC3                     u3280:
  4314  1BC3                     l2513:
  4315  1BC3  3001               	movlw	1
  4316  1BC4                     u3295:
  4317  1BC4  1003               	clrc
  4318  1BC5  0DFB               	rlf	___lwdiv@quotient,f
  4319  1BC6  0DFC               	rlf	___lwdiv@quotient+1,f
  4320  1BC7  3EFF               	addlw	-1
  4321  1BC8  1D03               	skipz
  4322  1BC9  2BC4               	goto	u3295
  4323  1BCA  0877               	movf	___lwdiv@divisor+1,w
  4324  1BCB  0279               	subwf	___lwdiv@dividend+1,w
  4325  1BCC  1D03               	skipz
  4326  1BCD  2BD0               	goto	u3305
  4327  1BCE  0876               	movf	___lwdiv@divisor,w
  4328  1BCF  0278               	subwf	___lwdiv@dividend,w
  4329  1BD0                     u3305:
  4330  1BD0  1C03               	skipc
  4331  1BD1  2BD3               	goto	u3301
  4332  1BD2  2BD4               	goto	u3300
  4333  1BD3                     u3301:
  4334  1BD3  2BDB               	goto	l2519
  4335  1BD4                     u3300:
  4336  1BD4                     l2515:
  4337  1BD4  0876               	movf	___lwdiv@divisor,w
  4338  1BD5  02F8               	subwf	___lwdiv@dividend,f
  4339  1BD6  0877               	movf	___lwdiv@divisor+1,w
  4340  1BD7  1C03               	skipc
  4341  1BD8  03F9               	decf	___lwdiv@dividend+1,f
  4342  1BD9  02F9               	subwf	___lwdiv@dividend+1,f
  4343  1BDA                     l2517:
  4344  1BDA  147B               	bsf	___lwdiv@quotient,0
  4345  1BDB                     l2519:
  4346  1BDB  3001               	movlw	1
  4347  1BDC                     u3315:
  4348  1BDC  1003               	clrc
  4349  1BDD  0CF7               	rrf	___lwdiv@divisor+1,f
  4350  1BDE  0CF6               	rrf	___lwdiv@divisor,f
  4351  1BDF  3EFF               	addlw	-1
  4352  1BE0  1D03               	skipz
  4353  1BE1  2BDC               	goto	u3315
  4354  1BE2                     l2521:
  4355  1BE2  3001               	movlw	1
  4356  1BE3  02FD               	subwf	___lwdiv@counter,f
  4357  1BE4  1D03               	btfss	3,2
  4358  1BE5  2BE7               	goto	u3321
  4359  1BE6  2BE8               	goto	u3320
  4360  1BE7                     u3321:
  4361  1BE7  2BC3               	goto	l2513
  4362  1BE8                     u3320:
  4363  1BE8                     l2523:
  4364  1BE8  087C               	movf	___lwdiv@quotient+1,w
  4365  1BE9  00F7               	movwf	?___lwdiv+1
  4366  1BEA  087B               	movf	___lwdiv@quotient,w
  4367  1BEB  00F6               	movwf	?___lwdiv
  4368  1BEC                     l730:
  4369  1BEC  0008               	return
  4370  1BED                     __end_of___lwdiv:
  4371                           
  4372                           	psect	text10
  4373  0C9F                     __ptext10:	
  4374 ;; *************** function ___flmul *****************
  4375 ;; Defined at:
  4376 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;  b               4    4[BANK0 ] unsigned int 
  4379 ;;  a               4    8[BANK0 ] unsigned int 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  prod            4   24[BANK0 ] struct .
  4382 ;;  grs             4   18[BANK0 ] unsigned long 
  4383 ;;  temp            2   28[BANK0 ] struct .
  4384 ;;  bexp            1   23[BANK0 ] unsigned char 
  4385 ;;  aexp            1   22[BANK0 ] unsigned char 
  4386 ;;  sign            1   17[BANK0 ] unsigned char 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  4    4[BANK0 ] unsigned char 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4396 ;;      Params:         0       8       0       0       0
  4397 ;;      Locals:         0      13       0       0       0
  4398 ;;      Temps:          0       5       0       0       0
  4399 ;;      Totals:         0      26       0       0       0
  4400 ;;Total ram usage:       26 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    1
  4403 ;; This function calls:
  4404 ;;		__Umul8_16
  4405 ;; This function is called by:
  4406 ;;		_fround
  4407 ;;		_scale
  4408 ;;		_sprintf
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           
  4413                           ;psect for function ___flmul
  4414  0C9F                     ___flmul:
  4415  0C9F                     l2743:	
  4416                           ;incstack = 0
  4417                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4418                           
  4419  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  4420  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  4421  0CA1  0827               	movf	___flmul@b+3,w
  4422  0CA2  3980               	andlw	128
  4423  0CA3  00AC               	movwf	??___flmul
  4424  0CA4  082C               	movf	??___flmul,w
  4425  0CA5  00B1               	movwf	___flmul@sign
  4426  0CA6                     l2745:
  4427  0CA6  0827               	movf	___flmul@b+3,w
  4428  0CA7  00AC               	movwf	??___flmul
  4429  0CA8  072C               	addwf	??___flmul,w
  4430  0CA9  00AD               	movwf	??___flmul+1
  4431  0CAA  082D               	movf	??___flmul+1,w
  4432  0CAB  00B7               	movwf	___flmul@bexp
  4433  0CAC                     l2747:
  4434  0CAC  1FA6               	btfss	___flmul@b+2,7
  4435  0CAD  2CAF               	goto	u3851
  4436  0CAE  2CB0               	goto	u3850
  4437  0CAF                     u3851:
  4438  0CAF  2CB1               	goto	l2751
  4439  0CB0                     u3850:
  4440  0CB0                     l2749:
  4441  0CB0  1437               	bsf	___flmul@bexp,0
  4442  0CB1                     l2751:
  4443  0CB1  0837               	movf	___flmul@bexp,w
  4444  0CB2  1903               	btfsc	3,2
  4445  0CB3  2CB5               	goto	u3861
  4446  0CB4  2CB6               	goto	u3860
  4447  0CB5                     u3861:
  4448  0CB5  2CC5               	goto	l2759
  4449  0CB6                     u3860:
  4450  0CB6                     l2753:
  4451  0CB6  0A37               	incf	___flmul@bexp,w
  4452  0CB7  1D03               	btfss	3,2
  4453  0CB8  2CBA               	goto	u3871
  4454  0CB9  2CBB               	goto	u3870
  4455  0CBA                     u3871:
  4456  0CBA  2CC3               	goto	l2757
  4457  0CBB                     u3870:
  4458  0CBB                     l2755:
  4459  0CBB  3000               	movlw	0
  4460  0CBC  00A7               	movwf	___flmul@b+3
  4461  0CBD  3000               	movlw	0
  4462  0CBE  00A6               	movwf	___flmul@b+2
  4463  0CBF  3000               	movlw	0
  4464  0CC0  00A5               	movwf	___flmul@b+1
  4465  0CC1  3000               	movlw	0
  4466  0CC2  00A4               	movwf	___flmul@b
  4467  0CC3                     l2757:
  4468  0CC3  17A6               	bsf	___flmul@b+2,7
  4469  0CC4  2CCD               	goto	l2761
  4470  0CC5                     l2759:
  4471  0CC5  3000               	movlw	0
  4472  0CC6  00A7               	movwf	___flmul@b+3
  4473  0CC7  3000               	movlw	0
  4474  0CC8  00A6               	movwf	___flmul@b+2
  4475  0CC9  3000               	movlw	0
  4476  0CCA  00A5               	movwf	___flmul@b+1
  4477  0CCB  3000               	movlw	0
  4478  0CCC  00A4               	movwf	___flmul@b
  4479  0CCD                     l2761:
  4480  0CCD  082B               	movf	___flmul@a+3,w
  4481  0CCE  3980               	andlw	128
  4482  0CCF  00AC               	movwf	??___flmul
  4483  0CD0  082C               	movf	??___flmul,w
  4484  0CD1  06B1               	xorwf	___flmul@sign,f
  4485  0CD2                     l2763:
  4486  0CD2  082B               	movf	___flmul@a+3,w
  4487  0CD3  00AC               	movwf	??___flmul
  4488  0CD4  072C               	addwf	??___flmul,w
  4489  0CD5  00AD               	movwf	??___flmul+1
  4490  0CD6  082D               	movf	??___flmul+1,w
  4491  0CD7  00B6               	movwf	___flmul@aexp
  4492  0CD8                     l2765:
  4493  0CD8  1FAA               	btfss	___flmul@a+2,7
  4494  0CD9  2CDB               	goto	u3881
  4495  0CDA  2CDC               	goto	u3880
  4496  0CDB                     u3881:
  4497  0CDB  2CDD               	goto	l2769
  4498  0CDC                     u3880:
  4499  0CDC                     l2767:
  4500  0CDC  1436               	bsf	___flmul@aexp,0
  4501  0CDD                     l2769:
  4502  0CDD  0836               	movf	___flmul@aexp,w
  4503  0CDE  1903               	btfsc	3,2
  4504  0CDF  2CE1               	goto	u3891
  4505  0CE0  2CE2               	goto	u3890
  4506  0CE1                     u3891:
  4507  0CE1  2CF1               	goto	l2777
  4508  0CE2                     u3890:
  4509  0CE2                     l2771:
  4510  0CE2  0A36               	incf	___flmul@aexp,w
  4511  0CE3  1D03               	btfss	3,2
  4512  0CE4  2CE6               	goto	u3901
  4513  0CE5  2CE7               	goto	u3900
  4514  0CE6                     u3901:
  4515  0CE6  2CEF               	goto	l2775
  4516  0CE7                     u3900:
  4517  0CE7                     l2773:
  4518  0CE7  3000               	movlw	0
  4519  0CE8  00AB               	movwf	___flmul@a+3
  4520  0CE9  3000               	movlw	0
  4521  0CEA  00AA               	movwf	___flmul@a+2
  4522  0CEB  3000               	movlw	0
  4523  0CEC  00A9               	movwf	___flmul@a+1
  4524  0CED  3000               	movlw	0
  4525  0CEE  00A8               	movwf	___flmul@a
  4526  0CEF                     l2775:
  4527  0CEF  17AA               	bsf	___flmul@a+2,7
  4528  0CF0  2CF9               	goto	l2779
  4529  0CF1                     l2777:
  4530  0CF1  3000               	movlw	0
  4531  0CF2  00AB               	movwf	___flmul@a+3
  4532  0CF3  3000               	movlw	0
  4533  0CF4  00AA               	movwf	___flmul@a+2
  4534  0CF5  3000               	movlw	0
  4535  0CF6  00A9               	movwf	___flmul@a+1
  4536  0CF7  3000               	movlw	0
  4537  0CF8  00A8               	movwf	___flmul@a
  4538  0CF9                     l2779:
  4539  0CF9  0836               	movf	___flmul@aexp,w
  4540  0CFA  1903               	btfsc	3,2
  4541  0CFB  2CFD               	goto	u3911
  4542  0CFC  2CFE               	goto	u3910
  4543  0CFD                     u3911:
  4544  0CFD  2D03               	goto	l2783
  4545  0CFE                     u3910:
  4546  0CFE                     l2781:
  4547  0CFE  0837               	movf	___flmul@bexp,w
  4548  0CFF  1D03               	btfss	3,2
  4549  0D00  2D02               	goto	u3921
  4550  0D01  2D03               	goto	u3920
  4551  0D02                     u3921:
  4552  0D02  2D0C               	goto	l2787
  4553  0D03                     u3920:
  4554  0D03                     l2783:
  4555  0D03  3000               	movlw	0
  4556  0D04  00A7               	movwf	?___flmul+3
  4557  0D05  3000               	movlw	0
  4558  0D06  00A6               	movwf	?___flmul+2
  4559  0D07  3000               	movlw	0
  4560  0D08  00A5               	movwf	?___flmul+1
  4561  0D09  3000               	movlw	0
  4562  0D0A  00A4               	movwf	?___flmul
  4563  0D0B  2FFF               	goto	l847
  4564  0D0C                     l2787:
  4565  0D0C  0824               	movf	___flmul@b,w
  4566  0D0D  00AC               	movwf	??___flmul
  4567  0D0E  082C               	movf	??___flmul,w
  4568  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  4569  0D10  082A               	movf	___flmul@a+2,w
  4570  0D11  160A  158A  226B  120A  158A  	fcall	__Umul8_16
  4571  0D16  0871               	movf	?__Umul8_16+1,w
  4572  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  4573  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  4574  0D19  00BD               	movwf	___flmul@temp+1
  4575  0D1A  0870               	movf	?__Umul8_16,w
  4576  0D1B  00BC               	movwf	___flmul@temp
  4577  0D1C                     l2789:
  4578  0D1C  083C               	movf	___flmul@temp,w
  4579  0D1D  00AC               	movwf	??___flmul
  4580  0D1E  01AD               	clrf	??___flmul+1
  4581  0D1F  01AE               	clrf	??___flmul+2
  4582  0D20  01AF               	clrf	??___flmul+3
  4583  0D21  082F               	movf	??___flmul+3,w
  4584  0D22  00B5               	movwf	___flmul@grs+3
  4585  0D23  082E               	movf	??___flmul+2,w
  4586  0D24  00B4               	movwf	___flmul@grs+2
  4587  0D25  082D               	movf	??___flmul+1,w
  4588  0D26  00B3               	movwf	___flmul@grs+1
  4589  0D27  082C               	movf	??___flmul,w
  4590  0D28  00B2               	movwf	___flmul@grs
  4591  0D29                     l2791:
  4592  0D29  083D               	movf	___flmul@temp+1,w
  4593  0D2A  00AC               	movwf	??___flmul
  4594  0D2B  01AD               	clrf	??___flmul+1
  4595  0D2C  01AE               	clrf	??___flmul+2
  4596  0D2D  01AF               	clrf	??___flmul+3
  4597  0D2E  082F               	movf	??___flmul+3,w
  4598  0D2F  00BB               	movwf	___flmul@prod+3
  4599  0D30  082E               	movf	??___flmul+2,w
  4600  0D31  00BA               	movwf	___flmul@prod+2
  4601  0D32  082D               	movf	??___flmul+1,w
  4602  0D33  00B9               	movwf	___flmul@prod+1
  4603  0D34  082C               	movf	??___flmul,w
  4604  0D35  00B8               	movwf	___flmul@prod
  4605  0D36  0825               	movf	___flmul@b+1,w
  4606  0D37  00AC               	movwf	??___flmul
  4607  0D38  082C               	movf	??___flmul,w
  4608  0D39  00F0               	movwf	__Umul8_16@multiplicand
  4609  0D3A  0829               	movf	___flmul@a+1,w
  4610  0D3B  160A  158A  226B  120A  158A  	fcall	__Umul8_16
  4611  0D40  0871               	movf	?__Umul8_16+1,w
  4612  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4613  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4614  0D43  00BD               	movwf	___flmul@temp+1
  4615  0D44  0870               	movf	?__Umul8_16,w
  4616  0D45  00BC               	movwf	___flmul@temp
  4617  0D46                     l2793:
  4618  0D46  083C               	movf	___flmul@temp,w
  4619  0D47  00AC               	movwf	??___flmul
  4620  0D48  01AD               	clrf	??___flmul+1
  4621  0D49  01AE               	clrf	??___flmul+2
  4622  0D4A  01AF               	clrf	??___flmul+3
  4623  0D4B  082C               	movf	??___flmul,w
  4624  0D4C  07B2               	addwf	___flmul@grs,f
  4625  0D4D  082D               	movf	??___flmul+1,w
  4626  0D4E  1103               	clrz
  4627  0D4F  1803               	skipnc
  4628  0D50  3E01               	addlw	1
  4629  0D51  1903               	skipnz
  4630  0D52  2D54               	goto	u3931
  4631  0D53  07B3               	addwf	___flmul@grs+1,f
  4632  0D54                     u3931:
  4633  0D54  082E               	movf	??___flmul+2,w
  4634  0D55  1103               	clrz
  4635  0D56  1803               	skipnc
  4636  0D57  3E01               	addlw	1
  4637  0D58  1903               	skipnz
  4638  0D59  2D5B               	goto	u3932
  4639  0D5A  07B4               	addwf	___flmul@grs+2,f
  4640  0D5B                     u3932:
  4641  0D5B  082F               	movf	??___flmul+3,w
  4642  0D5C  1103               	clrz
  4643  0D5D  1803               	skipnc
  4644  0D5E  3E01               	addlw	1
  4645  0D5F  1903               	skipnz
  4646  0D60  2D62               	goto	u3933
  4647  0D61  07B5               	addwf	___flmul@grs+3,f
  4648  0D62                     u3933:
  4649  0D62                     l2795:
  4650  0D62  083D               	movf	___flmul@temp+1,w
  4651  0D63  00AC               	movwf	??___flmul
  4652  0D64  01AD               	clrf	??___flmul+1
  4653  0D65  01AE               	clrf	??___flmul+2
  4654  0D66  01AF               	clrf	??___flmul+3
  4655  0D67  082C               	movf	??___flmul,w
  4656  0D68  07B8               	addwf	___flmul@prod,f
  4657  0D69  082D               	movf	??___flmul+1,w
  4658  0D6A  1103               	clrz
  4659  0D6B  1803               	skipnc
  4660  0D6C  3E01               	addlw	1
  4661  0D6D  1903               	skipnz
  4662  0D6E  2D70               	goto	u3941
  4663  0D6F  07B9               	addwf	___flmul@prod+1,f
  4664  0D70                     u3941:
  4665  0D70  082E               	movf	??___flmul+2,w
  4666  0D71  1103               	clrz
  4667  0D72  1803               	skipnc
  4668  0D73  3E01               	addlw	1
  4669  0D74  1903               	skipnz
  4670  0D75  2D77               	goto	u3942
  4671  0D76  07BA               	addwf	___flmul@prod+2,f
  4672  0D77                     u3942:
  4673  0D77  082F               	movf	??___flmul+3,w
  4674  0D78  1103               	clrz
  4675  0D79  1803               	skipnc
  4676  0D7A  3E01               	addlw	1
  4677  0D7B  1903               	skipnz
  4678  0D7C  2D7E               	goto	u3943
  4679  0D7D  07BB               	addwf	___flmul@prod+3,f
  4680  0D7E                     u3943:
  4681  0D7E  0826               	movf	___flmul@b+2,w
  4682  0D7F  00AC               	movwf	??___flmul
  4683  0D80  082C               	movf	??___flmul,w
  4684  0D81  00F0               	movwf	__Umul8_16@multiplicand
  4685  0D82  0828               	movf	___flmul@a,w
  4686  0D83  160A  158A  226B  120A  158A  	fcall	__Umul8_16
  4687  0D88  0871               	movf	?__Umul8_16+1,w
  4688  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  4689  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  4690  0D8B  00BD               	movwf	___flmul@temp+1
  4691  0D8C  0870               	movf	?__Umul8_16,w
  4692  0D8D  00BC               	movwf	___flmul@temp
  4693  0D8E                     l2797:
  4694  0D8E  083C               	movf	___flmul@temp,w
  4695  0D8F  00AC               	movwf	??___flmul
  4696  0D90  01AD               	clrf	??___flmul+1
  4697  0D91  01AE               	clrf	??___flmul+2
  4698  0D92  01AF               	clrf	??___flmul+3
  4699  0D93  082C               	movf	??___flmul,w
  4700  0D94  07B2               	addwf	___flmul@grs,f
  4701  0D95  082D               	movf	??___flmul+1,w
  4702  0D96  1103               	clrz
  4703  0D97  1803               	skipnc
  4704  0D98  3E01               	addlw	1
  4705  0D99  1903               	skipnz
  4706  0D9A  2D9C               	goto	u3951
  4707  0D9B  07B3               	addwf	___flmul@grs+1,f
  4708  0D9C                     u3951:
  4709  0D9C  082E               	movf	??___flmul+2,w
  4710  0D9D  1103               	clrz
  4711  0D9E  1803               	skipnc
  4712  0D9F  3E01               	addlw	1
  4713  0DA0  1903               	skipnz
  4714  0DA1  2DA3               	goto	u3952
  4715  0DA2  07B4               	addwf	___flmul@grs+2,f
  4716  0DA3                     u3952:
  4717  0DA3  082F               	movf	??___flmul+3,w
  4718  0DA4  1103               	clrz
  4719  0DA5  1803               	skipnc
  4720  0DA6  3E01               	addlw	1
  4721  0DA7  1903               	skipnz
  4722  0DA8  2DAA               	goto	u3953
  4723  0DA9  07B5               	addwf	___flmul@grs+3,f
  4724  0DAA                     u3953:
  4725  0DAA                     l2799:
  4726  0DAA  083D               	movf	___flmul@temp+1,w
  4727  0DAB  00AC               	movwf	??___flmul
  4728  0DAC  01AD               	clrf	??___flmul+1
  4729  0DAD  01AE               	clrf	??___flmul+2
  4730  0DAE  01AF               	clrf	??___flmul+3
  4731  0DAF  082C               	movf	??___flmul,w
  4732  0DB0  07B8               	addwf	___flmul@prod,f
  4733  0DB1  082D               	movf	??___flmul+1,w
  4734  0DB2  1103               	clrz
  4735  0DB3  1803               	skipnc
  4736  0DB4  3E01               	addlw	1
  4737  0DB5  1903               	skipnz
  4738  0DB6  2DB8               	goto	u3961
  4739  0DB7  07B9               	addwf	___flmul@prod+1,f
  4740  0DB8                     u3961:
  4741  0DB8  082E               	movf	??___flmul+2,w
  4742  0DB9  1103               	clrz
  4743  0DBA  1803               	skipnc
  4744  0DBB  3E01               	addlw	1
  4745  0DBC  1903               	skipnz
  4746  0DBD  2DBF               	goto	u3962
  4747  0DBE  07BA               	addwf	___flmul@prod+2,f
  4748  0DBF                     u3962:
  4749  0DBF  082F               	movf	??___flmul+3,w
  4750  0DC0  1103               	clrz
  4751  0DC1  1803               	skipnc
  4752  0DC2  3E01               	addlw	1
  4753  0DC3  1903               	skipnz
  4754  0DC4  2DC6               	goto	u3963
  4755  0DC5  07BB               	addwf	___flmul@prod+3,f
  4756  0DC6                     u3963:
  4757  0DC6                     l2801:
  4758  0DC6  3008               	movlw	8
  4759  0DC7  00AC               	movwf	??___flmul
  4760  0DC8                     u3975:
  4761  0DC8  1003               	clrc
  4762  0DC9  0DB2               	rlf	___flmul@grs,f
  4763  0DCA  0DB3               	rlf	___flmul@grs+1,f
  4764  0DCB  0DB4               	rlf	___flmul@grs+2,f
  4765  0DCC  0DB5               	rlf	___flmul@grs+3,f
  4766  0DCD  0BAC               	decfsz	??___flmul,f
  4767  0DCE  2DC8               	goto	u3975
  4768  0DCF                     l2803:
  4769  0DCF  0825               	movf	___flmul@b+1,w
  4770  0DD0  00AC               	movwf	??___flmul
  4771  0DD1  082C               	movf	??___flmul,w
  4772  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  4773  0DD3  0828               	movf	___flmul@a,w
  4774  0DD4  160A  158A  226B  120A  158A  	fcall	__Umul8_16
  4775  0DD9  0871               	movf	?__Umul8_16+1,w
  4776  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  4777  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  4778  0DDC  00BD               	movwf	___flmul@temp+1
  4779  0DDD  0870               	movf	?__Umul8_16,w
  4780  0DDE  00BC               	movwf	___flmul@temp
  4781  0DDF                     l2805:
  4782  0DDF  083C               	movf	___flmul@temp,w
  4783  0DE0  00AC               	movwf	??___flmul
  4784  0DE1  083D               	movf	___flmul@temp+1,w
  4785  0DE2  00AD               	movwf	??___flmul+1
  4786  0DE3  01AE               	clrf	??___flmul+2
  4787  0DE4  01AF               	clrf	??___flmul+3
  4788  0DE5  082C               	movf	??___flmul,w
  4789  0DE6  07B2               	addwf	___flmul@grs,f
  4790  0DE7  082D               	movf	??___flmul+1,w
  4791  0DE8  1103               	clrz
  4792  0DE9  1803               	skipnc
  4793  0DEA  3E01               	addlw	1
  4794  0DEB  1903               	skipnz
  4795  0DEC  2DEE               	goto	u3981
  4796  0DED  07B3               	addwf	___flmul@grs+1,f
  4797  0DEE                     u3981:
  4798  0DEE  082E               	movf	??___flmul+2,w
  4799  0DEF  1103               	clrz
  4800  0DF0  1803               	skipnc
  4801  0DF1  3E01               	addlw	1
  4802  0DF2  1903               	skipnz
  4803  0DF3  2DF5               	goto	u3982
  4804  0DF4  07B4               	addwf	___flmul@grs+2,f
  4805  0DF5                     u3982:
  4806  0DF5  082F               	movf	??___flmul+3,w
  4807  0DF6  1103               	clrz
  4808  0DF7  1803               	skipnc
  4809  0DF8  3E01               	addlw	1
  4810  0DF9  1903               	skipnz
  4811  0DFA  2DFC               	goto	u3983
  4812  0DFB  07B5               	addwf	___flmul@grs+3,f
  4813  0DFC                     u3983:
  4814  0DFC                     l2807:
  4815  0DFC  0824               	movf	___flmul@b,w
  4816  0DFD  00AC               	movwf	??___flmul
  4817  0DFE  082C               	movf	??___flmul,w
  4818  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  4819  0E00  0829               	movf	___flmul@a+1,w
  4820  0E01  160A  158A  226B  120A  158A  	fcall	__Umul8_16
  4821  0E06  0871               	movf	?__Umul8_16+1,w
  4822  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  4823  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  4824  0E09  00BD               	movwf	___flmul@temp+1
  4825  0E0A  0870               	movf	?__Umul8_16,w
  4826  0E0B  00BC               	movwf	___flmul@temp
  4827  0E0C                     l2809:
  4828  0E0C  083C               	movf	___flmul@temp,w
  4829  0E0D  00AC               	movwf	??___flmul
  4830  0E0E  083D               	movf	___flmul@temp+1,w
  4831  0E0F  00AD               	movwf	??___flmul+1
  4832  0E10  01AE               	clrf	??___flmul+2
  4833  0E11  01AF               	clrf	??___flmul+3
  4834  0E12  082C               	movf	??___flmul,w
  4835  0E13  07B2               	addwf	___flmul@grs,f
  4836  0E14  082D               	movf	??___flmul+1,w
  4837  0E15  1103               	clrz
  4838  0E16  1803               	skipnc
  4839  0E17  3E01               	addlw	1
  4840  0E18  1903               	skipnz
  4841  0E19  2E1B               	goto	u3991
  4842  0E1A  07B3               	addwf	___flmul@grs+1,f
  4843  0E1B                     u3991:
  4844  0E1B  082E               	movf	??___flmul+2,w
  4845  0E1C  1103               	clrz
  4846  0E1D  1803               	skipnc
  4847  0E1E  3E01               	addlw	1
  4848  0E1F  1903               	skipnz
  4849  0E20  2E22               	goto	u3992
  4850  0E21  07B4               	addwf	___flmul@grs+2,f
  4851  0E22                     u3992:
  4852  0E22  082F               	movf	??___flmul+3,w
  4853  0E23  1103               	clrz
  4854  0E24  1803               	skipnc
  4855  0E25  3E01               	addlw	1
  4856  0E26  1903               	skipnz
  4857  0E27  2E29               	goto	u3993
  4858  0E28  07B5               	addwf	___flmul@grs+3,f
  4859  0E29                     u3993:
  4860  0E29                     l2811:
  4861  0E29  3008               	movlw	8
  4862  0E2A  00AC               	movwf	??___flmul
  4863  0E2B                     u4005:
  4864  0E2B  1003               	clrc
  4865  0E2C  0DB2               	rlf	___flmul@grs,f
  4866  0E2D  0DB3               	rlf	___flmul@grs+1,f
  4867  0E2E  0DB4               	rlf	___flmul@grs+2,f
  4868  0E2F  0DB5               	rlf	___flmul@grs+3,f
  4869  0E30  0BAC               	decfsz	??___flmul,f
  4870  0E31  2E2B               	goto	u4005
  4871  0E32  0824               	movf	___flmul@b,w
  4872  0E33  00AC               	movwf	??___flmul
  4873  0E34  082C               	movf	??___flmul,w
  4874  0E35  00F0               	movwf	__Umul8_16@multiplicand
  4875  0E36  0828               	movf	___flmul@a,w
  4876  0E37  160A  158A  226B  120A  158A  	fcall	__Umul8_16
  4877  0E3C  0871               	movf	?__Umul8_16+1,w
  4878  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  4879  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  4880  0E3F  00BD               	movwf	___flmul@temp+1
  4881  0E40  0870               	movf	?__Umul8_16,w
  4882  0E41  00BC               	movwf	___flmul@temp
  4883  0E42                     l2813:
  4884  0E42  083C               	movf	___flmul@temp,w
  4885  0E43  00AC               	movwf	??___flmul
  4886  0E44  083D               	movf	___flmul@temp+1,w
  4887  0E45  00AD               	movwf	??___flmul+1
  4888  0E46  01AE               	clrf	??___flmul+2
  4889  0E47  01AF               	clrf	??___flmul+3
  4890  0E48  082C               	movf	??___flmul,w
  4891  0E49  07B2               	addwf	___flmul@grs,f
  4892  0E4A  082D               	movf	??___flmul+1,w
  4893  0E4B  1103               	clrz
  4894  0E4C  1803               	skipnc
  4895  0E4D  3E01               	addlw	1
  4896  0E4E  1903               	skipnz
  4897  0E4F  2E51               	goto	u4011
  4898  0E50  07B3               	addwf	___flmul@grs+1,f
  4899  0E51                     u4011:
  4900  0E51  082E               	movf	??___flmul+2,w
  4901  0E52  1103               	clrz
  4902  0E53  1803               	skipnc
  4903  0E54  3E01               	addlw	1
  4904  0E55  1903               	skipnz
  4905  0E56  2E58               	goto	u4012
  4906  0E57  07B4               	addwf	___flmul@grs+2,f
  4907  0E58                     u4012:
  4908  0E58  082F               	movf	??___flmul+3,w
  4909  0E59  1103               	clrz
  4910  0E5A  1803               	skipnc
  4911  0E5B  3E01               	addlw	1
  4912  0E5C  1903               	skipnz
  4913  0E5D  2E5F               	goto	u4013
  4914  0E5E  07B5               	addwf	___flmul@grs+3,f
  4915  0E5F                     u4013:
  4916  0E5F                     l2815:
  4917  0E5F  0825               	movf	___flmul@b+1,w
  4918  0E60  00AC               	movwf	??___flmul
  4919  0E61  082C               	movf	??___flmul,w
  4920  0E62  00F0               	movwf	__Umul8_16@multiplicand
  4921  0E63  082A               	movf	___flmul@a+2,w
  4922  0E64  160A  158A  226B  120A  158A  	fcall	__Umul8_16
  4923  0E69  0871               	movf	?__Umul8_16+1,w
  4924  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  4925  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  4926  0E6C  00BD               	movwf	___flmul@temp+1
  4927  0E6D  0870               	movf	?__Umul8_16,w
  4928  0E6E  00BC               	movwf	___flmul@temp
  4929  0E6F  083C               	movf	___flmul@temp,w
  4930  0E70  00AC               	movwf	??___flmul
  4931  0E71  083D               	movf	___flmul@temp+1,w
  4932  0E72  00AD               	movwf	??___flmul+1
  4933  0E73  01AE               	clrf	??___flmul+2
  4934  0E74  01AF               	clrf	??___flmul+3
  4935  0E75  082C               	movf	??___flmul,w
  4936  0E76  07B8               	addwf	___flmul@prod,f
  4937  0E77  082D               	movf	??___flmul+1,w
  4938  0E78  1103               	clrz
  4939  0E79  1803               	skipnc
  4940  0E7A  3E01               	addlw	1
  4941  0E7B  1903               	skipnz
  4942  0E7C  2E7E               	goto	u4021
  4943  0E7D  07B9               	addwf	___flmul@prod+1,f
  4944  0E7E                     u4021:
  4945  0E7E  082E               	movf	??___flmul+2,w
  4946  0E7F  1103               	clrz
  4947  0E80  1803               	skipnc
  4948  0E81  3E01               	addlw	1
  4949  0E82  1903               	skipnz
  4950  0E83  2E85               	goto	u4022
  4951  0E84  07BA               	addwf	___flmul@prod+2,f
  4952  0E85                     u4022:
  4953  0E85  082F               	movf	??___flmul+3,w
  4954  0E86  1103               	clrz
  4955  0E87  1803               	skipnc
  4956  0E88  3E01               	addlw	1
  4957  0E89  1903               	skipnz
  4958  0E8A  2E8C               	goto	u4023
  4959  0E8B  07BB               	addwf	___flmul@prod+3,f
  4960  0E8C                     u4023:
  4961  0E8C                     l2817:
  4962  0E8C  0826               	movf	___flmul@b+2,w
  4963  0E8D  00AC               	movwf	??___flmul
  4964  0E8E  082C               	movf	??___flmul,w
  4965  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  4966  0E90  0829               	movf	___flmul@a+1,w
  4967  0E91  160A  158A  226B  120A  158A  	fcall	__Umul8_16
  4968  0E96  0871               	movf	?__Umul8_16+1,w
  4969  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  4970  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  4971  0E99  00BD               	movwf	___flmul@temp+1
  4972  0E9A  0870               	movf	?__Umul8_16,w
  4973  0E9B  00BC               	movwf	___flmul@temp
  4974  0E9C                     l2819:
  4975  0E9C  083C               	movf	___flmul@temp,w
  4976  0E9D  00AC               	movwf	??___flmul
  4977  0E9E  083D               	movf	___flmul@temp+1,w
  4978  0E9F  00AD               	movwf	??___flmul+1
  4979  0EA0  01AE               	clrf	??___flmul+2
  4980  0EA1  01AF               	clrf	??___flmul+3
  4981  0EA2  082C               	movf	??___flmul,w
  4982  0EA3  07B8               	addwf	___flmul@prod,f
  4983  0EA4  082D               	movf	??___flmul+1,w
  4984  0EA5  1103               	clrz
  4985  0EA6  1803               	skipnc
  4986  0EA7  3E01               	addlw	1
  4987  0EA8  1903               	skipnz
  4988  0EA9  2EAB               	goto	u4031
  4989  0EAA  07B9               	addwf	___flmul@prod+1,f
  4990  0EAB                     u4031:
  4991  0EAB  082E               	movf	??___flmul+2,w
  4992  0EAC  1103               	clrz
  4993  0EAD  1803               	skipnc
  4994  0EAE  3E01               	addlw	1
  4995  0EAF  1903               	skipnz
  4996  0EB0  2EB2               	goto	u4032
  4997  0EB1  07BA               	addwf	___flmul@prod+2,f
  4998  0EB2                     u4032:
  4999  0EB2  082F               	movf	??___flmul+3,w
  5000  0EB3  1103               	clrz
  5001  0EB4  1803               	skipnc
  5002  0EB5  3E01               	addlw	1
  5003  0EB6  1903               	skipnz
  5004  0EB7  2EB9               	goto	u4033
  5005  0EB8  07BB               	addwf	___flmul@prod+3,f
  5006  0EB9                     u4033:
  5007  0EB9  0826               	movf	___flmul@b+2,w
  5008  0EBA  00AC               	movwf	??___flmul
  5009  0EBB  082C               	movf	??___flmul,w
  5010  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  5011  0EBD  082A               	movf	___flmul@a+2,w
  5012  0EBE  160A  158A  226B  120A  158A  	fcall	__Umul8_16
  5013  0EC3  0871               	movf	?__Umul8_16+1,w
  5014  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5015  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5016  0EC6  00BD               	movwf	___flmul@temp+1
  5017  0EC7  0870               	movf	?__Umul8_16,w
  5018  0EC8  00BC               	movwf	___flmul@temp
  5019  0EC9                     l2821:
  5020  0EC9  083C               	movf	___flmul@temp,w
  5021  0ECA  00AC               	movwf	??___flmul
  5022  0ECB  083D               	movf	___flmul@temp+1,w
  5023  0ECC  00AD               	movwf	??___flmul+1
  5024  0ECD  01AE               	clrf	??___flmul+2
  5025  0ECE  01AF               	clrf	??___flmul+3
  5026  0ECF  3008               	movlw	8
  5027  0ED0                     u4045:
  5028  0ED0  1003               	clrc
  5029  0ED1  0DAC               	rlf	??___flmul,f
  5030  0ED2  0DAD               	rlf	??___flmul+1,f
  5031  0ED3  0DAE               	rlf	??___flmul+2,f
  5032  0ED4  0DAF               	rlf	??___flmul+3,f
  5033  0ED5                     u4040:
  5034  0ED5  3EFF               	addlw	-1
  5035  0ED6  1D03               	skipz
  5036  0ED7  2ED0               	goto	u4045
  5037  0ED8  082C               	movf	??___flmul,w
  5038  0ED9  07B8               	addwf	___flmul@prod,f
  5039  0EDA  082D               	movf	??___flmul+1,w
  5040  0EDB  1103               	clrz
  5041  0EDC  1803               	skipnc
  5042  0EDD  3E01               	addlw	1
  5043  0EDE  1903               	skipnz
  5044  0EDF  2EE1               	goto	u4051
  5045  0EE0  07B9               	addwf	___flmul@prod+1,f
  5046  0EE1                     u4051:
  5047  0EE1  082E               	movf	??___flmul+2,w
  5048  0EE2  1103               	clrz
  5049  0EE3  1803               	skipnc
  5050  0EE4  3E01               	addlw	1
  5051  0EE5  1903               	skipnz
  5052  0EE6  2EE8               	goto	u4052
  5053  0EE7  07BA               	addwf	___flmul@prod+2,f
  5054  0EE8                     u4052:
  5055  0EE8  082F               	movf	??___flmul+3,w
  5056  0EE9  1103               	clrz
  5057  0EEA  1803               	skipnc
  5058  0EEB  3E01               	addlw	1
  5059  0EEC  1903               	skipnz
  5060  0EED  2EEF               	goto	u4053
  5061  0EEE  07BB               	addwf	___flmul@prod+3,f
  5062  0EEF                     u4053:
  5063  0EEF                     l2823:
  5064  0EEF  0832               	movf	___flmul@grs,w
  5065  0EF0  00AC               	movwf	??___flmul
  5066  0EF1  0833               	movf	___flmul@grs+1,w
  5067  0EF2  00AD               	movwf	??___flmul+1
  5068  0EF3  0834               	movf	___flmul@grs+2,w
  5069  0EF4  00AE               	movwf	??___flmul+2
  5070  0EF5  0835               	movf	___flmul@grs+3,w
  5071  0EF6  00AF               	movwf	??___flmul+3
  5072  0EF7  3018               	movlw	24
  5073  0EF8                     u4065:
  5074  0EF8  1003               	clrc
  5075  0EF9  0CAF               	rrf	??___flmul+3,f
  5076  0EFA  0CAE               	rrf	??___flmul+2,f
  5077  0EFB  0CAD               	rrf	??___flmul+1,f
  5078  0EFC  0CAC               	rrf	??___flmul,f
  5079  0EFD                     u4060:
  5080  0EFD  3EFF               	addlw	-1
  5081  0EFE  1D03               	skipz
  5082  0EFF  2EF8               	goto	u4065
  5083  0F00  082C               	movf	??___flmul,w
  5084  0F01  07B8               	addwf	___flmul@prod,f
  5085  0F02  082D               	movf	??___flmul+1,w
  5086  0F03  1103               	clrz
  5087  0F04  1803               	skipnc
  5088  0F05  3E01               	addlw	1
  5089  0F06  1903               	skipnz
  5090  0F07  2F09               	goto	u4071
  5091  0F08  07B9               	addwf	___flmul@prod+1,f
  5092  0F09                     u4071:
  5093  0F09  082E               	movf	??___flmul+2,w
  5094  0F0A  1103               	clrz
  5095  0F0B  1803               	skipnc
  5096  0F0C  3E01               	addlw	1
  5097  0F0D  1903               	skipnz
  5098  0F0E  2F10               	goto	u4072
  5099  0F0F  07BA               	addwf	___flmul@prod+2,f
  5100  0F10                     u4072:
  5101  0F10  082F               	movf	??___flmul+3,w
  5102  0F11  1103               	clrz
  5103  0F12  1803               	skipnc
  5104  0F13  3E01               	addlw	1
  5105  0F14  1903               	skipnz
  5106  0F15  2F17               	goto	u4073
  5107  0F16  07BB               	addwf	___flmul@prod+3,f
  5108  0F17                     u4073:
  5109  0F17                     l2825:
  5110  0F17  3008               	movlw	8
  5111  0F18  00AC               	movwf	??___flmul
  5112  0F19                     u4085:
  5113  0F19  1003               	clrc
  5114  0F1A  0DB2               	rlf	___flmul@grs,f
  5115  0F1B  0DB3               	rlf	___flmul@grs+1,f
  5116  0F1C  0DB4               	rlf	___flmul@grs+2,f
  5117  0F1D  0DB5               	rlf	___flmul@grs+3,f
  5118  0F1E  0BAC               	decfsz	??___flmul,f
  5119  0F1F  2F19               	goto	u4085
  5120  0F20                     l2827:
  5121  0F20  0837               	movf	___flmul@bexp,w
  5122  0F21  0736               	addwf	___flmul@aexp,w
  5123  0F22  00AC               	movwf	??___flmul
  5124  0F23  01AD               	clrf	??___flmul+1
  5125  0F24  0DAD               	rlf	??___flmul+1,f
  5126  0F25  082C               	movf	??___flmul,w
  5127  0F26  3E82               	addlw	130
  5128  0F27  00BC               	movwf	___flmul@temp
  5129  0F28  082D               	movf	??___flmul+1,w
  5130  0F29  1803               	skipnc
  5131  0F2A  3E01               	addlw	1
  5132  0F2B  3EFF               	addlw	255
  5133  0F2C  00BD               	movwf	___flmul@temp+1
  5134  0F2D  2F4B               	goto	l2839
  5135  0F2E                     l2829:
  5136  0F2E  3001               	movlw	1
  5137  0F2F  00AC               	movwf	??___flmul
  5138  0F30                     u4095:
  5139  0F30  1003               	clrc
  5140  0F31  0DB8               	rlf	___flmul@prod,f
  5141  0F32  0DB9               	rlf	___flmul@prod+1,f
  5142  0F33  0DBA               	rlf	___flmul@prod+2,f
  5143  0F34  0DBB               	rlf	___flmul@prod+3,f
  5144  0F35  0BAC               	decfsz	??___flmul,f
  5145  0F36  2F30               	goto	u4095
  5146  0F37                     l2831:
  5147  0F37  1FB5               	btfss	___flmul@grs+3,7
  5148  0F38  2F3A               	goto	u4101
  5149  0F39  2F3B               	goto	u4100
  5150  0F3A                     u4101:
  5151  0F3A  2F3C               	goto	l2835
  5152  0F3B                     u4100:
  5153  0F3B                     l2833:
  5154  0F3B  1438               	bsf	___flmul@prod,0
  5155  0F3C                     l2835:
  5156  0F3C  3001               	movlw	1
  5157  0F3D  00AC               	movwf	??___flmul
  5158  0F3E                     u4115:
  5159  0F3E  1003               	clrc
  5160  0F3F  0DB2               	rlf	___flmul@grs,f
  5161  0F40  0DB3               	rlf	___flmul@grs+1,f
  5162  0F41  0DB4               	rlf	___flmul@grs+2,f
  5163  0F42  0DB5               	rlf	___flmul@grs+3,f
  5164  0F43  0BAC               	decfsz	??___flmul,f
  5165  0F44  2F3E               	goto	u4115
  5166  0F45                     l2837:
  5167  0F45  30FF               	movlw	255
  5168  0F46  07BC               	addwf	___flmul@temp,f
  5169  0F47  1803               	skipnc
  5170  0F48  0ABD               	incf	___flmul@temp+1,f
  5171  0F49  30FF               	movlw	255
  5172  0F4A  07BD               	addwf	___flmul@temp+1,f
  5173  0F4B                     l2839:
  5174  0F4B  1FBA               	btfss	___flmul@prod+2,7
  5175  0F4C  2F4E               	goto	u4121
  5176  0F4D  2F4F               	goto	u4120
  5177  0F4E                     u4121:
  5178  0F4E  2F2E               	goto	l2829
  5179  0F4F                     u4120:
  5180  0F4F                     l2841:
  5181  0F4F  01B6               	clrf	___flmul@aexp
  5182  0F50                     l2843:
  5183  0F50  1FB5               	btfss	___flmul@grs+3,7
  5184  0F51  2F53               	goto	u4131
  5185  0F52  2F54               	goto	u4130
  5186  0F53                     u4131:
  5187  0F53  2F70               	goto	l2851
  5188  0F54                     u4130:
  5189  0F54                     l2845:
  5190  0F54  30FF               	movlw	255
  5191  0F55  0532               	andwf	___flmul@grs,w
  5192  0F56  00AC               	movwf	??___flmul
  5193  0F57  30FF               	movlw	255
  5194  0F58  0533               	andwf	___flmul@grs+1,w
  5195  0F59  00AD               	movwf	??___flmul+1
  5196  0F5A  30FF               	movlw	255
  5197  0F5B  0534               	andwf	___flmul@grs+2,w
  5198  0F5C  00AE               	movwf	??___flmul+2
  5199  0F5D  307F               	movlw	127
  5200  0F5E  0535               	andwf	___flmul@grs+3,w
  5201  0F5F  00AF               	movwf	??___flmul+3
  5202  0F60  082F               	movf	??___flmul+3,w
  5203  0F61  042E               	iorwf	??___flmul+2,w
  5204  0F62  042D               	iorwf	??___flmul+1,w
  5205  0F63  042C               	iorwf	??___flmul,w
  5206  0F64  1903               	skipnz
  5207  0F65  2F67               	goto	u4141
  5208  0F66  2F68               	goto	u4140
  5209  0F67                     u4141:
  5210  0F67  2F6B               	goto	l853
  5211  0F68                     u4140:
  5212  0F68                     l2847:
  5213  0F68  01B6               	clrf	___flmul@aexp
  5214  0F69  0AB6               	incf	___flmul@aexp,f
  5215  0F6A  2F70               	goto	l2851
  5216  0F6B                     l853:
  5217  0F6B  1C38               	btfss	___flmul@prod,0
  5218  0F6C  2F6E               	goto	u4151
  5219  0F6D  2F6F               	goto	u4150
  5220  0F6E                     u4151:
  5221  0F6E  2F70               	goto	l2851
  5222  0F6F                     u4150:
  5223  0F6F  2F68               	goto	l2847
  5224  0F70                     l2851:
  5225  0F70  0836               	movf	___flmul@aexp,w
  5226  0F71  1903               	btfsc	3,2
  5227  0F72  2F74               	goto	u4161
  5228  0F73  2F75               	goto	u4160
  5229  0F74                     u4161:
  5230  0F74  2FA6               	goto	l2861
  5231  0F75                     u4160:
  5232  0F75                     l2853:
  5233  0F75  3001               	movlw	1
  5234  0F76  07B8               	addwf	___flmul@prod,f
  5235  0F77  3000               	movlw	0
  5236  0F78  1803               	skipnc
  5237  0F79  3001               	movlw	1
  5238  0F7A  07B9               	addwf	___flmul@prod+1,f
  5239  0F7B  3000               	movlw	0
  5240  0F7C  1803               	skipnc
  5241  0F7D  3001               	movlw	1
  5242  0F7E  07BA               	addwf	___flmul@prod+2,f
  5243  0F7F  3000               	movlw	0
  5244  0F80  1803               	skipnc
  5245  0F81  3001               	movlw	1
  5246  0F82  07BB               	addwf	___flmul@prod+3,f
  5247  0F83                     l2855:
  5248  0F83  1C3B               	btfss	___flmul@prod+3,0
  5249  0F84  2F86               	goto	u4171
  5250  0F85  2F87               	goto	u4170
  5251  0F86                     u4171:
  5252  0F86  2FA6               	goto	l2861
  5253  0F87                     u4170:
  5254  0F87                     l2857:
  5255  0F87  0838               	movf	___flmul@prod,w
  5256  0F88  00AC               	movwf	??___flmul
  5257  0F89  0839               	movf	___flmul@prod+1,w
  5258  0F8A  00AD               	movwf	??___flmul+1
  5259  0F8B  083A               	movf	___flmul@prod+2,w
  5260  0F8C  00AE               	movwf	??___flmul+2
  5261  0F8D  083B               	movf	___flmul@prod+3,w
  5262  0F8E  00AF               	movwf	??___flmul+3
  5263  0F8F  3001               	movlw	1
  5264  0F90  00B0               	movwf	??___flmul+4
  5265  0F91                     u4185:
  5266  0F91  0D2F               	rlf	??___flmul+3,w
  5267  0F92  0CAF               	rrf	??___flmul+3,f
  5268  0F93  0CAE               	rrf	??___flmul+2,f
  5269  0F94  0CAD               	rrf	??___flmul+1,f
  5270  0F95  0CAC               	rrf	??___flmul,f
  5271  0F96                     u4180:
  5272  0F96  0BB0               	decfsz	??___flmul+4,f
  5273  0F97  2F91               	goto	u4185
  5274  0F98  082F               	movf	??___flmul+3,w
  5275  0F99  00BB               	movwf	___flmul@prod+3
  5276  0F9A  082E               	movf	??___flmul+2,w
  5277  0F9B  00BA               	movwf	___flmul@prod+2
  5278  0F9C  082D               	movf	??___flmul+1,w
  5279  0F9D  00B9               	movwf	___flmul@prod+1
  5280  0F9E  082C               	movf	??___flmul,w
  5281  0F9F  00B8               	movwf	___flmul@prod
  5282  0FA0                     l2859:
  5283  0FA0  3001               	movlw	1
  5284  0FA1  07BC               	addwf	___flmul@temp,f
  5285  0FA2  1803               	skipnc
  5286  0FA3  0ABD               	incf	___flmul@temp+1,f
  5287  0FA4  3000               	movlw	0
  5288  0FA5  07BD               	addwf	___flmul@temp+1,f
  5289  0FA6                     l2861:
  5290  0FA6  083D               	movf	___flmul@temp+1,w
  5291  0FA7  3A80               	xorlw	128
  5292  0FA8  00FF               	movwf	btemp+1
  5293  0FA9  3080               	movlw	128
  5294  0FAA  027F               	subwf	btemp+1,w
  5295  0FAB  1D03               	skipz
  5296  0FAC  2FAF               	goto	u4195
  5297  0FAD  30FF               	movlw	255
  5298  0FAE  023C               	subwf	___flmul@temp,w
  5299  0FAF                     u4195:
  5300  0FAF  1C03               	skipc
  5301  0FB0  2FB2               	goto	u4191
  5302  0FB1  2FB3               	goto	u4190
  5303  0FB2                     u4191:
  5304  0FB2  2FBE               	goto	l2865
  5305  0FB3                     u4190:
  5306  0FB3                     l2863:
  5307  0FB3  307F               	movlw	127
  5308  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5309  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5310  0FB6  00BB               	movwf	___flmul@prod+3
  5311  0FB7  3080               	movlw	128
  5312  0FB8  00BA               	movwf	___flmul@prod+2
  5313  0FB9  3000               	movlw	0
  5314  0FBA  00B9               	movwf	___flmul@prod+1
  5315  0FBB  3000               	movlw	0
  5316  0FBC  00B8               	movwf	___flmul@prod
  5317  0FBD  2FF3               	goto	l859
  5318  0FBE                     l2865:
  5319  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5320  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5321  0FC0  083D               	movf	___flmul@temp+1,w
  5322  0FC1  3A80               	xorlw	128
  5323  0FC2  00FF               	movwf	btemp+1
  5324  0FC3  3080               	movlw	128
  5325  0FC4  027F               	subwf	btemp+1,w
  5326  0FC5  1D03               	skipz
  5327  0FC6  2FC9               	goto	u4205
  5328  0FC7  3001               	movlw	1
  5329  0FC8  023C               	subwf	___flmul@temp,w
  5330  0FC9                     u4205:
  5331  0FC9  1803               	skipnc
  5332  0FCA  2FCC               	goto	u4201
  5333  0FCB  2FCD               	goto	u4200
  5334  0FCC                     u4201:
  5335  0FCC  2FD9               	goto	l2871
  5336  0FCD                     u4200:
  5337  0FCD                     l2867:
  5338  0FCD  3000               	movlw	0
  5339  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5340  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5341  0FD0  00BB               	movwf	___flmul@prod+3
  5342  0FD1  3000               	movlw	0
  5343  0FD2  00BA               	movwf	___flmul@prod+2
  5344  0FD3  3000               	movlw	0
  5345  0FD4  00B9               	movwf	___flmul@prod+1
  5346  0FD5  3000               	movlw	0
  5347  0FD6  00B8               	movwf	___flmul@prod
  5348  0FD7                     l2869:
  5349  0FD7  01B1               	clrf	___flmul@sign
  5350  0FD8  2FF3               	goto	l859
  5351  0FD9                     l2871:
  5352  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5353  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5354  0FDB  083C               	movf	___flmul@temp,w
  5355  0FDC  00AC               	movwf	??___flmul
  5356  0FDD  082C               	movf	??___flmul,w
  5357  0FDE  00B7               	movwf	___flmul@bexp
  5358  0FDF  30FF               	movlw	255
  5359  0FE0  05B8               	andwf	___flmul@prod,f
  5360  0FE1  30FF               	movlw	255
  5361  0FE2  05B9               	andwf	___flmul@prod+1,f
  5362  0FE3  307F               	movlw	127
  5363  0FE4  05BA               	andwf	___flmul@prod+2,f
  5364  0FE5  3000               	movlw	0
  5365  0FE6  05BB               	andwf	___flmul@prod+3,f
  5366  0FE7                     l2873:
  5367  0FE7  1C37               	btfss	___flmul@bexp,0
  5368  0FE8  2FEA               	goto	u4211
  5369  0FE9  2FEB               	goto	u4210
  5370  0FEA                     u4211:
  5371  0FEA  2FEC               	goto	l2877
  5372  0FEB                     u4210:
  5373  0FEB                     l2875:
  5374  0FEB  17BA               	bsf	___flmul@prod+2,7
  5375  0FEC                     l2877:
  5376  0FEC  0837               	movf	___flmul@bexp,w
  5377  0FED  00AC               	movwf	??___flmul
  5378  0FEE  1003               	clrc
  5379  0FEF  0C2C               	rrf	??___flmul,w
  5380  0FF0  00AD               	movwf	??___flmul+1
  5381  0FF1  082D               	movf	??___flmul+1,w
  5382  0FF2  00BB               	movwf	___flmul@prod+3
  5383  0FF3                     l859:
  5384  0FF3  0831               	movf	___flmul@sign,w
  5385  0FF4  00AC               	movwf	??___flmul
  5386  0FF5  082C               	movf	??___flmul,w
  5387  0FF6  04BB               	iorwf	___flmul@prod+3,f
  5388  0FF7                     l2879:
  5389  0FF7  083B               	movf	___flmul@prod+3,w
  5390  0FF8  00A7               	movwf	?___flmul+3
  5391  0FF9  083A               	movf	___flmul@prod+2,w
  5392  0FFA  00A6               	movwf	?___flmul+2
  5393  0FFB  0839               	movf	___flmul@prod+1,w
  5394  0FFC  00A5               	movwf	?___flmul+1
  5395  0FFD  0838               	movf	___flmul@prod,w
  5396  0FFE  00A4               	movwf	?___flmul
  5397  0FFF                     l847:
  5398  0FFF  0008               	return
  5399  1000                     __end_of___flmul:
  5400                           
  5401                           	psect	text11
  5402  1A6B                     __ptext11:	
  5403 ;; *************** function __Umul8_16 *****************
  5404 ;; Defined at:
  5405 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  multiplier      1    wreg     unsigned char 
  5408 ;;  multiplicand    1    0[COMMON] unsigned char 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  multiplier      1    8[COMMON] unsigned char 
  5411 ;;  word_mpld       2    6[COMMON] unsigned int 
  5412 ;;  product         2    4[COMMON] unsigned int 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  2    0[COMMON] unsigned int 
  5415 ;; Registers used:
  5416 ;;		wreg, status,2, status,0
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5422 ;;      Params:         2       0       0       0       0
  5423 ;;      Locals:         5       0       0       0       0
  5424 ;;      Temps:          2       0       0       0       0
  5425 ;;      Totals:         9       0       0       0       0
  5426 ;;Total ram usage:        9 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; This function calls:
  5429 ;;		Nothing
  5430 ;; This function is called by:
  5431 ;;		___flmul
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           
  5436                           ;psect for function __Umul8_16
  5437  1A6B                     __Umul8_16:
  5438                           
  5439                           ;incstack = 0
  5440                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5441                           ;__Umul8_16@multiplier stored from wreg
  5442  1A6B  00F8               	movwf	__Umul8_16@multiplier
  5443  1A6C                     l2385:
  5444  1A6C  01F4               	clrf	__Umul8_16@product
  5445  1A6D  01F5               	clrf	__Umul8_16@product+1
  5446  1A6E                     l2387:
  5447  1A6E  0870               	movf	__Umul8_16@multiplicand,w
  5448  1A6F  00F2               	movwf	??__Umul8_16
  5449  1A70  01F3               	clrf	??__Umul8_16+1
  5450  1A71  0872               	movf	??__Umul8_16,w
  5451  1A72  00F6               	movwf	__Umul8_16@word_mpld
  5452  1A73  0873               	movf	??__Umul8_16+1,w
  5453  1A74  00F7               	movwf	__Umul8_16@word_mpld+1
  5454  1A75                     l2389:
  5455  1A75  1C78               	btfss	__Umul8_16@multiplier,0
  5456  1A76  2A78               	goto	u2951
  5457  1A77  2A79               	goto	u2950
  5458  1A78                     u2951:
  5459  1A78  2A7F               	goto	l866
  5460  1A79                     u2950:
  5461  1A79                     l2391:
  5462  1A79  0876               	movf	__Umul8_16@word_mpld,w
  5463  1A7A  07F4               	addwf	__Umul8_16@product,f
  5464  1A7B  1803               	skipnc
  5465  1A7C  0AF5               	incf	__Umul8_16@product+1,f
  5466  1A7D  0877               	movf	__Umul8_16@word_mpld+1,w
  5467  1A7E  07F5               	addwf	__Umul8_16@product+1,f
  5468  1A7F                     l866:
  5469  1A7F  3001               	movlw	1
  5470  1A80                     u2965:
  5471  1A80  1003               	clrc
  5472  1A81  0DF6               	rlf	__Umul8_16@word_mpld,f
  5473  1A82  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5474  1A83  3EFF               	addlw	-1
  5475  1A84  1D03               	skipz
  5476  1A85  2A80               	goto	u2965
  5477  1A86  1003               	clrc
  5478  1A87  0CF8               	rrf	__Umul8_16@multiplier,f
  5479  1A88                     l2393:
  5480  1A88  0878               	movf	__Umul8_16@multiplier,w
  5481  1A89  1D03               	btfss	3,2
  5482  1A8A  2A8C               	goto	u2971
  5483  1A8B  2A8D               	goto	u2970
  5484  1A8C                     u2971:
  5485  1A8C  2A75               	goto	l2389
  5486  1A8D                     u2970:
  5487  1A8D                     l2395:
  5488  1A8D  0875               	movf	__Umul8_16@product+1,w
  5489  1A8E  00F1               	movwf	?__Umul8_16+1
  5490  1A8F  0874               	movf	__Umul8_16@product,w
  5491  1A90  00F0               	movwf	?__Umul8_16
  5492  1A91                     l868:
  5493  1A91  0008               	return
  5494  1A92                     __end_of__Umul8_16:
  5495                           
  5496                           	psect	text12
  5497  1F43                     __ptext12:	
  5498 ;; *************** function __tdiv_to_l_ *****************
  5499 ;; Defined at:
  5500 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;  f1              4    0[COMMON] float 
  5503 ;;  f2              4    4[COMMON] float 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;  quot            4    0[BANK0 ] unsigned long 
  5506 ;;  exp1            1    5[BANK0 ] unsigned char 
  5507 ;;  cntr            1    4[BANK0 ] unsigned char 
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  4    0[COMMON] unsigned long 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, status,0
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5517 ;;      Params:         8       0       0       0       0
  5518 ;;      Locals:         0       6       0       0       0
  5519 ;;      Temps:          4       0       0       0       0
  5520 ;;      Totals:        12       6       0       0       0
  5521 ;;Total ram usage:       18 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; This function calls:
  5524 ;;		Nothing
  5525 ;; This function is called by:
  5526 ;;		_sprintf
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           
  5531                           ;psect for function __tdiv_to_l_
  5532  1F43                     __tdiv_to_l_:
  5533  1F43                     l3003:	
  5534                           ;incstack = 0
  5535                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5536                           
  5537  1F43  0870               	movf	__tdiv_to_l_@f1,w
  5538  1F44  00F8               	movwf	??__tdiv_to_l_
  5539  1F45  0871               	movf	__tdiv_to_l_@f1+1,w
  5540  1F46  00F9               	movwf	??__tdiv_to_l_+1
  5541  1F47  0872               	movf	__tdiv_to_l_@f1+2,w
  5542  1F48  00FA               	movwf	??__tdiv_to_l_+2
  5543  1F49  1003               	clrc
  5544  1F4A  0D79               	rlf	??__tdiv_to_l_+1,w
  5545  1F4B  0D7A               	rlf	??__tdiv_to_l_+2,w
  5546  1F4C  00FB               	movwf	??__tdiv_to_l_+3
  5547  1F4D  087B               	movf	??__tdiv_to_l_+3,w
  5548  1F4E  1283               	bcf	3,5	;RP0=0, select bank0
  5549  1F4F  1303               	bcf	3,6	;RP1=0, select bank0
  5550  1F50  00A5               	movwf	__tdiv_to_l_@exp1
  5551  1F51  0825               	movf	__tdiv_to_l_@exp1,w
  5552  1F52  1D03               	btfss	3,2
  5553  1F53  2F55               	goto	u4511
  5554  1F54  2F56               	goto	u4510
  5555  1F55                     u4511:
  5556  1F55  2F5F               	goto	l3009
  5557  1F56                     u4510:
  5558  1F56                     l3005:
  5559  1F56  3000               	movlw	0
  5560  1F57  00F3               	movwf	?__tdiv_to_l_+3
  5561  1F58  3000               	movlw	0
  5562  1F59  00F2               	movwf	?__tdiv_to_l_+2
  5563  1F5A  3000               	movlw	0
  5564  1F5B  00F1               	movwf	?__tdiv_to_l_+1
  5565  1F5C  3000               	movlw	0
  5566  1F5D  00F0               	movwf	?__tdiv_to_l_
  5567  1F5E  2FFF               	goto	l641
  5568  1F5F                     l3009:
  5569  1F5F  0874               	movf	__tdiv_to_l_@f2,w
  5570  1F60  00F8               	movwf	??__tdiv_to_l_
  5571  1F61  0875               	movf	__tdiv_to_l_@f2+1,w
  5572  1F62  00F9               	movwf	??__tdiv_to_l_+1
  5573  1F63  0876               	movf	__tdiv_to_l_@f2+2,w
  5574  1F64  00FA               	movwf	??__tdiv_to_l_+2
  5575  1F65  1003               	clrc
  5576  1F66  0D79               	rlf	??__tdiv_to_l_+1,w
  5577  1F67  0D7A               	rlf	??__tdiv_to_l_+2,w
  5578  1F68  00FB               	movwf	??__tdiv_to_l_+3
  5579  1F69  087B               	movf	??__tdiv_to_l_+3,w
  5580  1F6A  00A4               	movwf	__tdiv_to_l_@cntr
  5581  1F6B  0824               	movf	__tdiv_to_l_@cntr,w
  5582  1F6C  1D03               	btfss	3,2
  5583  1F6D  2F6F               	goto	u4521
  5584  1F6E  2F70               	goto	u4520
  5585  1F6F                     u4521:
  5586  1F6F  2F71               	goto	l642
  5587  1F70                     u4520:
  5588  1F70  2F56               	goto	l3005
  5589  1F71                     l642:
  5590  1F71  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5591  1F72                     l3015:
  5592  1F72  30FF               	movlw	255
  5593  1F73  05F0               	andwf	__tdiv_to_l_@f1,f
  5594  1F74  30FF               	movlw	255
  5595  1F75  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5596  1F76  3000               	movlw	0
  5597  1F77  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5598  1F78                     l3017:
  5599  1F78  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5600  1F79  30FF               	movlw	255
  5601  1F7A  05F4               	andwf	__tdiv_to_l_@f2,f
  5602  1F7B  30FF               	movlw	255
  5603  1F7C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5604  1F7D  3000               	movlw	0
  5605  1F7E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5606  1F7F  3000               	movlw	0
  5607  1F80  00A3               	movwf	__tdiv_to_l_@quot+3
  5608  1F81  3000               	movlw	0
  5609  1F82  00A2               	movwf	__tdiv_to_l_@quot+2
  5610  1F83  3000               	movlw	0
  5611  1F84  00A1               	movwf	__tdiv_to_l_@quot+1
  5612  1F85  3000               	movlw	0
  5613  1F86  00A0               	movwf	__tdiv_to_l_@quot
  5614  1F87                     l3019:
  5615  1F87  307F               	movlw	127
  5616  1F88  02A5               	subwf	__tdiv_to_l_@exp1,f
  5617  1F89                     l3021:
  5618  1F89  3098               	movlw	152
  5619  1F8A  0724               	addwf	__tdiv_to_l_@cntr,w
  5620  1F8B  00F8               	movwf	??__tdiv_to_l_
  5621  1F8C  0878               	movf	??__tdiv_to_l_,w
  5622  1F8D  02A5               	subwf	__tdiv_to_l_@exp1,f
  5623  1F8E  3018               	movlw	24
  5624  1F8F  00F8               	movwf	??__tdiv_to_l_
  5625  1F90  0878               	movf	??__tdiv_to_l_,w
  5626  1F91  00A4               	movwf	__tdiv_to_l_@cntr
  5627  1F92                     l3023:
  5628  1F92  3001               	movlw	1
  5629  1F93  00F8               	movwf	??__tdiv_to_l_
  5630  1F94                     u4535:
  5631  1F94  1003               	clrc
  5632  1F95  0DA0               	rlf	__tdiv_to_l_@quot,f
  5633  1F96  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5634  1F97  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5635  1F98  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5636  1F99  0BF8               	decfsz	??__tdiv_to_l_,f
  5637  1F9A  2F94               	goto	u4535
  5638  1F9B                     l3025:
  5639  1F9B  0876               	movf	__tdiv_to_l_@f2+2,w
  5640  1F9C  0272               	subwf	__tdiv_to_l_@f1+2,w
  5641  1F9D  1D03               	skipz
  5642  1F9E  2FA5               	goto	u4545
  5643  1F9F  0875               	movf	__tdiv_to_l_@f2+1,w
  5644  1FA0  0271               	subwf	__tdiv_to_l_@f1+1,w
  5645  1FA1  1D03               	skipz
  5646  1FA2  2FA5               	goto	u4545
  5647  1FA3  0874               	movf	__tdiv_to_l_@f2,w
  5648  1FA4  0270               	subwf	__tdiv_to_l_@f1,w
  5649  1FA5                     u4545:
  5650  1FA5  1C03               	skipc
  5651  1FA6  2FA8               	goto	u4541
  5652  1FA7  2FA9               	goto	u4540
  5653  1FA8                     u4541:
  5654  1FA8  2FB4               	goto	l3031
  5655  1FA9                     u4540:
  5656  1FA9                     l3027:
  5657  1FA9  0874               	movf	__tdiv_to_l_@f2,w
  5658  1FAA  02F0               	subwf	__tdiv_to_l_@f1,f
  5659  1FAB  0875               	movf	__tdiv_to_l_@f2+1,w
  5660  1FAC  1C03               	skipc
  5661  1FAD  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5662  1FAE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5663  1FAF  0876               	movf	__tdiv_to_l_@f2+2,w
  5664  1FB0  1C03               	skipc
  5665  1FB1  0A76               	incf	__tdiv_to_l_@f2+2,w
  5666  1FB2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5667  1FB3                     l3029:
  5668  1FB3  1420               	bsf	__tdiv_to_l_@quot,0
  5669  1FB4                     l3031:
  5670  1FB4  3001               	movlw	1
  5671  1FB5                     u4555:
  5672  1FB5  1003               	clrc
  5673  1FB6  0DF0               	rlf	__tdiv_to_l_@f1,f
  5674  1FB7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5675  1FB8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5676  1FB9  3EFF               	addlw	-1
  5677  1FBA  1D03               	skipz
  5678  1FBB  2FB5               	goto	u4555
  5679  1FBC                     l3033:
  5680  1FBC  3001               	movlw	1
  5681  1FBD  02A4               	subwf	__tdiv_to_l_@cntr,f
  5682  1FBE  1D03               	btfss	3,2
  5683  1FBF  2FC1               	goto	u4561
  5684  1FC0  2FC2               	goto	u4560
  5685  1FC1                     u4561:
  5686  1FC1  2F92               	goto	l3023
  5687  1FC2                     u4560:
  5688  1FC2                     l645:
  5689  1FC2  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5690  1FC3  2FC5               	goto	u4571
  5691  1FC4  2FC6               	goto	u4570
  5692  1FC5                     u4571:
  5693  1FC5  2FE0               	goto	l3043
  5694  1FC6                     u4570:
  5695  1FC6                     l3035:
  5696  1FC6  0825               	movf	__tdiv_to_l_@exp1,w
  5697  1FC7  3A80               	xorlw	128
  5698  1FC8  3E97               	addlw	151
  5699  1FC9  1803               	skipnc
  5700  1FCA  2FCC               	goto	u4581
  5701  1FCB  2FCD               	goto	u4580
  5702  1FCC                     u4581:
  5703  1FCC  2FCE               	goto	l3041
  5704  1FCD                     u4580:
  5705  1FCD  2F56               	goto	l3005
  5706  1FCE                     l3041:
  5707  1FCE  3001               	movlw	1
  5708  1FCF                     u4595:
  5709  1FCF  1003               	clrc
  5710  1FD0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5711  1FD1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5712  1FD2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5713  1FD3  0CA0               	rrf	__tdiv_to_l_@quot,f
  5714  1FD4  3EFF               	addlw	-1
  5715  1FD5  1D03               	skipz
  5716  1FD6  2FCF               	goto	u4595
  5717  1FD7  3001               	movlw	1
  5718  1FD8  00F8               	movwf	??__tdiv_to_l_
  5719  1FD9  0878               	movf	??__tdiv_to_l_,w
  5720  1FDA  07A5               	addwf	__tdiv_to_l_@exp1,f
  5721  1FDB  1D03               	btfss	3,2
  5722  1FDC  2FDE               	goto	u4601
  5723  1FDD  2FDF               	goto	u4600
  5724  1FDE                     u4601:
  5725  1FDE  2FCE               	goto	l3041
  5726  1FDF                     u4600:
  5727  1FDF  2FF7               	goto	l3051
  5728  1FE0                     l3043:
  5729  1FE0  3018               	movlw	24
  5730  1FE1  0225               	subwf	__tdiv_to_l_@exp1,w
  5731  1FE2  1C03               	skipc
  5732  1FE3  2FE5               	goto	u4611
  5733  1FE4  2FE6               	goto	u4610
  5734  1FE5                     u4611:
  5735  1FE5  2FF2               	goto	l652
  5736  1FE6                     u4610:
  5737  1FE6  2F56               	goto	l3005
  5738  1FE7                     l3049:
  5739  1FE7  3001               	movlw	1
  5740  1FE8  00F8               	movwf	??__tdiv_to_l_
  5741  1FE9                     u4625:
  5742  1FE9  1003               	clrc
  5743  1FEA  0DA0               	rlf	__tdiv_to_l_@quot,f
  5744  1FEB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5745  1FEC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5746  1FED  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5747  1FEE  0BF8               	decfsz	??__tdiv_to_l_,f
  5748  1FEF  2FE9               	goto	u4625
  5749  1FF0  3001               	movlw	1
  5750  1FF1  02A5               	subwf	__tdiv_to_l_@exp1,f
  5751  1FF2                     l652:
  5752  1FF2  0825               	movf	__tdiv_to_l_@exp1,w
  5753  1FF3  1D03               	btfss	3,2
  5754  1FF4  2FF6               	goto	u4631
  5755  1FF5  2FF7               	goto	u4630
  5756  1FF6                     u4631:
  5757  1FF6  2FE7               	goto	l3049
  5758  1FF7                     u4630:
  5759  1FF7                     l3051:
  5760  1FF7  0823               	movf	__tdiv_to_l_@quot+3,w
  5761  1FF8  00F3               	movwf	?__tdiv_to_l_+3
  5762  1FF9  0822               	movf	__tdiv_to_l_@quot+2,w
  5763  1FFA  00F2               	movwf	?__tdiv_to_l_+2
  5764  1FFB  0821               	movf	__tdiv_to_l_@quot+1,w
  5765  1FFC  00F1               	movwf	?__tdiv_to_l_+1
  5766  1FFD  0820               	movf	__tdiv_to_l_@quot,w
  5767  1FFE  00F0               	movwf	?__tdiv_to_l_
  5768  1FFF                     l641:
  5769  1FFF  0008               	return
  5770  2000                     __end_of__tdiv_to_l_:
  5771                           
  5772                           	psect	text13
  5773  0882                     __ptext13:	
  5774 ;; *************** function __div_to_l_ *****************
  5775 ;; Defined at:
  5776 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  f1              4    0[COMMON] unsigned long 
  5779 ;;  f2              4    4[COMMON] unsigned long 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  quot            4    0[BANK0 ] unsigned long 
  5782 ;;  exp1            1    5[BANK0 ] unsigned char 
  5783 ;;  cntr            1    4[BANK0 ] unsigned char 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  4    0[COMMON] unsigned long 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2, status,0
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5793 ;;      Params:         8       0       0       0       0
  5794 ;;      Locals:         0       6       0       0       0
  5795 ;;      Temps:          1       0       0       0       0
  5796 ;;      Totals:         9       6       0       0       0
  5797 ;;Total ram usage:       15 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_sprintf
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           
  5807                           ;psect for function __div_to_l_
  5808  0882                     __div_to_l_:
  5809  0882                     l3055:	
  5810                           ;incstack = 0
  5811                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5812                           
  5813  0882  1003               	clrc
  5814  0883  0D72               	rlf	__div_to_l_@f1+2,w
  5815  0884  0D73               	rlf	__div_to_l_@f1+3,w
  5816  0885  00F8               	movwf	??__div_to_l_
  5817  0886  0878               	movf	??__div_to_l_,w
  5818  0887  1283               	bcf	3,5	;RP0=0, select bank0
  5819  0888  1303               	bcf	3,6	;RP1=0, select bank0
  5820  0889  00A5               	movwf	__div_to_l_@exp1
  5821  088A  0825               	movf	__div_to_l_@exp1,w
  5822  088B  1D03               	btfss	3,2
  5823  088C  288E               	goto	u4641
  5824  088D  288F               	goto	u4640
  5825  088E                     u4641:
  5826  088E  2898               	goto	l3061
  5827  088F                     u4640:
  5828  088F                     l3057:
  5829  088F  3000               	movlw	0
  5830  0890  00F3               	movwf	?__div_to_l_+3
  5831  0891  3000               	movlw	0
  5832  0892  00F2               	movwf	?__div_to_l_+2
  5833  0893  3000               	movlw	0
  5834  0894  00F1               	movwf	?__div_to_l_+1
  5835  0895  3000               	movlw	0
  5836  0896  00F0               	movwf	?__div_to_l_
  5837  0897  293F               	goto	l594
  5838  0898                     l3061:
  5839  0898  1003               	clrc
  5840  0899  0D76               	rlf	__div_to_l_@f2+2,w
  5841  089A  0D77               	rlf	__div_to_l_@f2+3,w
  5842  089B  00F8               	movwf	??__div_to_l_
  5843  089C  0878               	movf	??__div_to_l_,w
  5844  089D  00A4               	movwf	__div_to_l_@cntr
  5845  089E  0824               	movf	__div_to_l_@cntr,w
  5846  089F  1D03               	btfss	3,2
  5847  08A0  28A2               	goto	u4651
  5848  08A1  28A3               	goto	u4650
  5849  08A2                     u4651:
  5850  08A2  28A4               	goto	l595
  5851  08A3                     u4650:
  5852  08A3  288F               	goto	l3057
  5853  08A4                     l595:
  5854  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  5855  08A5                     l3067:
  5856  08A5  30FF               	movlw	255
  5857  08A6  05F0               	andwf	__div_to_l_@f1,f
  5858  08A7  30FF               	movlw	255
  5859  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  5860  08A9  30FF               	movlw	255
  5861  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  5862  08AB  3000               	movlw	0
  5863  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  5864  08AD                     l3069:
  5865  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  5866  08AE  30FF               	movlw	255
  5867  08AF  05F4               	andwf	__div_to_l_@f2,f
  5868  08B0  30FF               	movlw	255
  5869  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  5870  08B2  30FF               	movlw	255
  5871  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  5872  08B4  3000               	movlw	0
  5873  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  5874  08B6  3000               	movlw	0
  5875  08B7  00A3               	movwf	__div_to_l_@quot+3
  5876  08B8  3000               	movlw	0
  5877  08B9  00A2               	movwf	__div_to_l_@quot+2
  5878  08BA  3000               	movlw	0
  5879  08BB  00A1               	movwf	__div_to_l_@quot+1
  5880  08BC  3000               	movlw	0
  5881  08BD  00A0               	movwf	__div_to_l_@quot
  5882  08BE                     l3071:
  5883  08BE  307F               	movlw	127
  5884  08BF  02A5               	subwf	__div_to_l_@exp1,f
  5885  08C0                     l3073:
  5886  08C0  30A0               	movlw	160
  5887  08C1  0724               	addwf	__div_to_l_@cntr,w
  5888  08C2  00F8               	movwf	??__div_to_l_
  5889  08C3  0878               	movf	??__div_to_l_,w
  5890  08C4  02A5               	subwf	__div_to_l_@exp1,f
  5891  08C5  3020               	movlw	32
  5892  08C6  00F8               	movwf	??__div_to_l_
  5893  08C7  0878               	movf	??__div_to_l_,w
  5894  08C8  00A4               	movwf	__div_to_l_@cntr
  5895  08C9                     l3075:
  5896  08C9  3001               	movlw	1
  5897  08CA  00F8               	movwf	??__div_to_l_
  5898  08CB                     u4665:
  5899  08CB  1003               	clrc
  5900  08CC  0DA0               	rlf	__div_to_l_@quot,f
  5901  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  5902  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  5903  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  5904  08D0  0BF8               	decfsz	??__div_to_l_,f
  5905  08D1  28CB               	goto	u4665
  5906  08D2                     l3077:
  5907  08D2  0877               	movf	__div_to_l_@f2+3,w
  5908  08D3  0273               	subwf	__div_to_l_@f1+3,w
  5909  08D4  1D03               	skipz
  5910  08D5  28E0               	goto	u4675
  5911  08D6  0876               	movf	__div_to_l_@f2+2,w
  5912  08D7  0272               	subwf	__div_to_l_@f1+2,w
  5913  08D8  1D03               	skipz
  5914  08D9  28E0               	goto	u4675
  5915  08DA  0875               	movf	__div_to_l_@f2+1,w
  5916  08DB  0271               	subwf	__div_to_l_@f1+1,w
  5917  08DC  1D03               	skipz
  5918  08DD  28E0               	goto	u4675
  5919  08DE  0874               	movf	__div_to_l_@f2,w
  5920  08DF  0270               	subwf	__div_to_l_@f1,w
  5921  08E0                     u4675:
  5922  08E0  1C03               	skipc
  5923  08E1  28E3               	goto	u4671
  5924  08E2  28E4               	goto	u4670
  5925  08E3                     u4671:
  5926  08E3  28F3               	goto	l3083
  5927  08E4                     u4670:
  5928  08E4                     l3079:
  5929  08E4  0874               	movf	__div_to_l_@f2,w
  5930  08E5  02F0               	subwf	__div_to_l_@f1,f
  5931  08E6  0875               	movf	__div_to_l_@f2+1,w
  5932  08E7  1C03               	skipc
  5933  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  5934  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  5935  08EA  0876               	movf	__div_to_l_@f2+2,w
  5936  08EB  1C03               	skipc
  5937  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  5938  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  5939  08EE  0877               	movf	__div_to_l_@f2+3,w
  5940  08EF  1C03               	skipc
  5941  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  5942  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  5943  08F2                     l3081:
  5944  08F2  1420               	bsf	__div_to_l_@quot,0
  5945  08F3                     l3083:
  5946  08F3  3001               	movlw	1
  5947  08F4  00F8               	movwf	??__div_to_l_
  5948  08F5                     u4685:
  5949  08F5  1003               	clrc
  5950  08F6  0DF0               	rlf	__div_to_l_@f1,f
  5951  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  5952  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  5953  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  5954  08FA  0BF8               	decfsz	??__div_to_l_,f
  5955  08FB  28F5               	goto	u4685
  5956  08FC                     l3085:
  5957  08FC  3001               	movlw	1
  5958  08FD  02A4               	subwf	__div_to_l_@cntr,f
  5959  08FE  1D03               	btfss	3,2
  5960  08FF  2901               	goto	u4691
  5961  0900  2902               	goto	u4690
  5962  0901                     u4691:
  5963  0901  28C9               	goto	l3075
  5964  0902                     u4690:
  5965  0902                     l598:
  5966  0902  1FA5               	btfss	__div_to_l_@exp1,7
  5967  0903  2905               	goto	u4701
  5968  0904  2906               	goto	u4700
  5969  0905                     u4701:
  5970  0905  2920               	goto	l3095
  5971  0906                     u4700:
  5972  0906                     l3087:
  5973  0906  0825               	movf	__div_to_l_@exp1,w
  5974  0907  3A80               	xorlw	128
  5975  0908  3E9F               	addlw	159
  5976  0909  1803               	skipnc
  5977  090A  290C               	goto	u4711
  5978  090B  290D               	goto	u4710
  5979  090C                     u4711:
  5980  090C  290E               	goto	l3093
  5981  090D                     u4710:
  5982  090D  288F               	goto	l3057
  5983  090E                     l3093:
  5984  090E  3001               	movlw	1
  5985  090F                     u4725:
  5986  090F  1003               	clrc
  5987  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  5988  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  5989  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  5990  0913  0CA0               	rrf	__div_to_l_@quot,f
  5991  0914  3EFF               	addlw	-1
  5992  0915  1D03               	skipz
  5993  0916  290F               	goto	u4725
  5994  0917  3001               	movlw	1
  5995  0918  00F8               	movwf	??__div_to_l_
  5996  0919  0878               	movf	??__div_to_l_,w
  5997  091A  07A5               	addwf	__div_to_l_@exp1,f
  5998  091B  1D03               	btfss	3,2
  5999  091C  291E               	goto	u4731
  6000  091D  291F               	goto	u4730
  6001  091E                     u4731:
  6002  091E  290E               	goto	l3093
  6003  091F                     u4730:
  6004  091F  2937               	goto	l3103
  6005  0920                     l3095:
  6006  0920  3020               	movlw	32
  6007  0921  0225               	subwf	__div_to_l_@exp1,w
  6008  0922  1C03               	skipc
  6009  0923  2925               	goto	u4741
  6010  0924  2926               	goto	u4740
  6011  0925                     u4741:
  6012  0925  2932               	goto	l605
  6013  0926                     u4740:
  6014  0926  288F               	goto	l3057
  6015  0927                     l3101:
  6016  0927  3001               	movlw	1
  6017  0928  00F8               	movwf	??__div_to_l_
  6018  0929                     u4755:
  6019  0929  1003               	clrc
  6020  092A  0DA0               	rlf	__div_to_l_@quot,f
  6021  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  6022  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  6023  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  6024  092E  0BF8               	decfsz	??__div_to_l_,f
  6025  092F  2929               	goto	u4755
  6026  0930  3001               	movlw	1
  6027  0931  02A5               	subwf	__div_to_l_@exp1,f
  6028  0932                     l605:
  6029  0932  0825               	movf	__div_to_l_@exp1,w
  6030  0933  1D03               	btfss	3,2
  6031  0934  2936               	goto	u4761
  6032  0935  2937               	goto	u4760
  6033  0936                     u4761:
  6034  0936  2927               	goto	l3101
  6035  0937                     u4760:
  6036  0937                     l3103:
  6037  0937  0823               	movf	__div_to_l_@quot+3,w
  6038  0938  00F3               	movwf	?__div_to_l_+3
  6039  0939  0822               	movf	__div_to_l_@quot+2,w
  6040  093A  00F2               	movwf	?__div_to_l_+2
  6041  093B  0821               	movf	__div_to_l_@quot+1,w
  6042  093C  00F1               	movwf	?__div_to_l_+1
  6043  093D  0820               	movf	__div_to_l_@quot,w
  6044  093E  00F0               	movwf	?__div_to_l_
  6045  093F                     l594:
  6046  093F  0008               	return
  6047  0940                     __end_of__div_to_l_:
  6048                           
  6049                           	psect	text14
  6050  1A46                     __ptext14:	
  6051 ;; *************** function ___wmul *****************
  6052 ;; Defined at:
  6053 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;  multiplier      2    0[COMMON] unsigned int 
  6056 ;;  multiplicand    2    2[COMMON] unsigned int 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;  product         2    4[COMMON] unsigned int 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  2    0[COMMON] unsigned int 
  6061 ;; Registers used:
  6062 ;;		wreg, status,2, status,0
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6068 ;;      Params:         4       0       0       0       0
  6069 ;;      Locals:         2       0       0       0       0
  6070 ;;      Temps:          0       0       0       0       0
  6071 ;;      Totals:         6       0       0       0       0
  6072 ;;Total ram usage:        6 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; This function calls:
  6075 ;;		Nothing
  6076 ;; This function is called by:
  6077 ;;		_sprintf
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           
  6082                           ;psect for function ___wmul
  6083  1A46                     ___wmul:
  6084  1A46                     l3107:	
  6085                           ;incstack = 0
  6086                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6087                           
  6088  1A46  01F4               	clrf	___wmul@product
  6089  1A47  01F5               	clrf	___wmul@product+1
  6090  1A48                     l3109:
  6091  1A48  1C70               	btfss	___wmul@multiplier,0
  6092  1A49  2A4B               	goto	u4771
  6093  1A4A  2A4C               	goto	u4770
  6094  1A4B                     u4771:
  6095  1A4B  2A52               	goto	l424
  6096  1A4C                     u4770:
  6097  1A4C                     l3111:
  6098  1A4C  0872               	movf	___wmul@multiplicand,w
  6099  1A4D  07F4               	addwf	___wmul@product,f
  6100  1A4E  1803               	skipnc
  6101  1A4F  0AF5               	incf	___wmul@product+1,f
  6102  1A50  0873               	movf	___wmul@multiplicand+1,w
  6103  1A51  07F5               	addwf	___wmul@product+1,f
  6104  1A52                     l424:
  6105  1A52  3001               	movlw	1
  6106  1A53                     u4785:
  6107  1A53  1003               	clrc
  6108  1A54  0DF2               	rlf	___wmul@multiplicand,f
  6109  1A55  0DF3               	rlf	___wmul@multiplicand+1,f
  6110  1A56  3EFF               	addlw	-1
  6111  1A57  1D03               	skipz
  6112  1A58  2A53               	goto	u4785
  6113  1A59                     l3113:
  6114  1A59  3001               	movlw	1
  6115  1A5A                     u4795:
  6116  1A5A  1003               	clrc
  6117  1A5B  0CF1               	rrf	___wmul@multiplier+1,f
  6118  1A5C  0CF0               	rrf	___wmul@multiplier,f
  6119  1A5D  3EFF               	addlw	-1
  6120  1A5E  1D03               	skipz
  6121  1A5F  2A5A               	goto	u4795
  6122  1A60                     l3115:
  6123  1A60  0870               	movf	___wmul@multiplier,w
  6124  1A61  0471               	iorwf	___wmul@multiplier+1,w
  6125  1A62  1D03               	btfss	3,2
  6126  1A63  2A65               	goto	u4801
  6127  1A64  2A66               	goto	u4800
  6128  1A65                     u4801:
  6129  1A65  2A48               	goto	l3109
  6130  1A66                     u4800:
  6131  1A66                     l3117:
  6132  1A66  0875               	movf	___wmul@product+1,w
  6133  1A67  00F1               	movwf	?___wmul+1
  6134  1A68  0874               	movf	___wmul@product,w
  6135  1A69  00F0               	movwf	?___wmul
  6136  1A6A                     l426:
  6137  1A6A  0008               	return
  6138  1A6B                     __end_of___wmul:
  6139                           
  6140                           	psect	text15
  6141  1C3B                     __ptext15:	
  6142 ;; *************** function ___llmod *****************
  6143 ;; Defined at:
  6144 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;  divisor         4    0[BANK0 ] unsigned long 
  6147 ;;  dividend        4    4[BANK0 ] unsigned long 
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;  counter         1    9[BANK0 ] unsigned char 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  4    0[BANK0 ] unsigned long 
  6152 ;; Registers used:
  6153 ;;		wreg, status,2, status,0
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6159 ;;      Params:         0       8       0       0       0
  6160 ;;      Locals:         0       1       0       0       0
  6161 ;;      Temps:          0       1       0       0       0
  6162 ;;      Totals:         0      10       0       0       0
  6163 ;;Total ram usage:       10 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_sprintf
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           
  6173                           ;psect for function ___llmod
  6174  1C3B                     ___llmod:
  6175  1C3B                     l3221:	
  6176                           ;incstack = 0
  6177                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6178                           
  6179  1C3B  1283               	bcf	3,5	;RP0=0, select bank0
  6180  1C3C  1303               	bcf	3,6	;RP1=0, select bank0
  6181  1C3D  0823               	movf	___llmod@divisor+3,w
  6182  1C3E  0422               	iorwf	___llmod@divisor+2,w
  6183  1C3F  0421               	iorwf	___llmod@divisor+1,w
  6184  1C40  0420               	iorwf	___llmod@divisor,w
  6185  1C41  1903               	skipnz
  6186  1C42  2C44               	goto	u5091
  6187  1C43  2C45               	goto	u5090
  6188  1C44                     u5091:
  6189  1C44  2C88               	goto	l3237
  6190  1C45                     u5090:
  6191  1C45                     l3223:
  6192  1C45  01A9               	clrf	___llmod@counter
  6193  1C46  0AA9               	incf	___llmod@counter,f
  6194  1C47  2C55               	goto	l3227
  6195  1C48                     l3225:
  6196  1C48  3001               	movlw	1
  6197  1C49  00A8               	movwf	??___llmod
  6198  1C4A                     u5105:
  6199  1C4A  1003               	clrc
  6200  1C4B  0DA0               	rlf	___llmod@divisor,f
  6201  1C4C  0DA1               	rlf	___llmod@divisor+1,f
  6202  1C4D  0DA2               	rlf	___llmod@divisor+2,f
  6203  1C4E  0DA3               	rlf	___llmod@divisor+3,f
  6204  1C4F  0BA8               	decfsz	??___llmod,f
  6205  1C50  2C4A               	goto	u5105
  6206  1C51  3001               	movlw	1
  6207  1C52  00A8               	movwf	??___llmod
  6208  1C53  0828               	movf	??___llmod,w
  6209  1C54  07A9               	addwf	___llmod@counter,f
  6210  1C55                     l3227:
  6211  1C55  1FA3               	btfss	___llmod@divisor+3,7
  6212  1C56  2C58               	goto	u5111
  6213  1C57  2C59               	goto	u5110
  6214  1C58                     u5111:
  6215  1C58  2C48               	goto	l3225
  6216  1C59                     u5110:
  6217  1C59                     l3229:
  6218  1C59  0823               	movf	___llmod@divisor+3,w
  6219  1C5A  0227               	subwf	___llmod@dividend+3,w
  6220  1C5B  1D03               	skipz
  6221  1C5C  2C67               	goto	u5125
  6222  1C5D  0822               	movf	___llmod@divisor+2,w
  6223  1C5E  0226               	subwf	___llmod@dividend+2,w
  6224  1C5F  1D03               	skipz
  6225  1C60  2C67               	goto	u5125
  6226  1C61  0821               	movf	___llmod@divisor+1,w
  6227  1C62  0225               	subwf	___llmod@dividend+1,w
  6228  1C63  1D03               	skipz
  6229  1C64  2C67               	goto	u5125
  6230  1C65  0820               	movf	___llmod@divisor,w
  6231  1C66  0224               	subwf	___llmod@dividend,w
  6232  1C67                     u5125:
  6233  1C67  1C03               	skipc
  6234  1C68  2C6A               	goto	u5121
  6235  1C69  2C6B               	goto	u5120
  6236  1C6A                     u5121:
  6237  1C6A  2C79               	goto	l3233
  6238  1C6B                     u5120:
  6239  1C6B                     l3231:
  6240  1C6B  0820               	movf	___llmod@divisor,w
  6241  1C6C  02A4               	subwf	___llmod@dividend,f
  6242  1C6D  0821               	movf	___llmod@divisor+1,w
  6243  1C6E  1C03               	skipc
  6244  1C6F  0F21               	incfsz	___llmod@divisor+1,w
  6245  1C70  02A5               	subwf	___llmod@dividend+1,f
  6246  1C71  0822               	movf	___llmod@divisor+2,w
  6247  1C72  1C03               	skipc
  6248  1C73  0F22               	incfsz	___llmod@divisor+2,w
  6249  1C74  02A6               	subwf	___llmod@dividend+2,f
  6250  1C75  0823               	movf	___llmod@divisor+3,w
  6251  1C76  1C03               	skipc
  6252  1C77  0F23               	incfsz	___llmod@divisor+3,w
  6253  1C78  02A7               	subwf	___llmod@dividend+3,f
  6254  1C79                     l3233:
  6255  1C79  3001               	movlw	1
  6256  1C7A                     u5135:
  6257  1C7A  1003               	clrc
  6258  1C7B  0CA3               	rrf	___llmod@divisor+3,f
  6259  1C7C  0CA2               	rrf	___llmod@divisor+2,f
  6260  1C7D  0CA1               	rrf	___llmod@divisor+1,f
  6261  1C7E  0CA0               	rrf	___llmod@divisor,f
  6262  1C7F  3EFF               	addlw	-1
  6263  1C80  1D03               	skipz
  6264  1C81  2C7A               	goto	u5135
  6265  1C82                     l3235:
  6266  1C82  3001               	movlw	1
  6267  1C83  02A9               	subwf	___llmod@counter,f
  6268  1C84  1D03               	btfss	3,2
  6269  1C85  2C87               	goto	u5141
  6270  1C86  2C88               	goto	u5140
  6271  1C87                     u5141:
  6272  1C87  2C59               	goto	l3229
  6273  1C88                     u5140:
  6274  1C88                     l3237:
  6275  1C88  0827               	movf	___llmod@dividend+3,w
  6276  1C89  00A3               	movwf	?___llmod+3
  6277  1C8A  0826               	movf	___llmod@dividend+2,w
  6278  1C8B  00A2               	movwf	?___llmod+2
  6279  1C8C  0825               	movf	___llmod@dividend+1,w
  6280  1C8D  00A1               	movwf	?___llmod+1
  6281  1C8E  0824               	movf	___llmod@dividend,w
  6282  1C8F  00A0               	movwf	?___llmod
  6283  1C90                     l680:
  6284  1C90  0008               	return
  6285  1C91                     __end_of___llmod:
  6286                           
  6287                           	psect	text16
  6288  1CEA                     __ptext16:	
  6289 ;; *************** function ___lldiv *****************
  6290 ;; Defined at:
  6291 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  divisor         4    0[COMMON] unsigned long 
  6294 ;;  dividend        4    4[COMMON] unsigned long 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;  quotient        4    9[COMMON] unsigned long 
  6297 ;;  counter         1   13[COMMON] unsigned char 
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  4    0[COMMON] unsigned long 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2, status,0
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6307 ;;      Params:         8       0       0       0       0
  6308 ;;      Locals:         5       0       0       0       0
  6309 ;;      Temps:          1       0       0       0       0
  6310 ;;      Totals:        14       0       0       0       0
  6311 ;;Total ram usage:       14 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; This function calls:
  6314 ;;		Nothing
  6315 ;; This function is called by:
  6316 ;;		_sprintf
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           
  6321                           ;psect for function ___lldiv
  6322  1CEA                     ___lldiv:
  6323  1CEA                     l3121:	
  6324                           ;incstack = 0
  6325                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6326                           
  6327  1CEA  3000               	movlw	0
  6328  1CEB  00FC               	movwf	___lldiv@quotient+3
  6329  1CEC  3000               	movlw	0
  6330  1CED  00FB               	movwf	___lldiv@quotient+2
  6331  1CEE  3000               	movlw	0
  6332  1CEF  00FA               	movwf	___lldiv@quotient+1
  6333  1CF0  3000               	movlw	0
  6334  1CF1  00F9               	movwf	___lldiv@quotient
  6335  1CF2  0873               	movf	___lldiv@divisor+3,w
  6336  1CF3  0472               	iorwf	___lldiv@divisor+2,w
  6337  1CF4  0471               	iorwf	___lldiv@divisor+1,w
  6338  1CF5  0470               	iorwf	___lldiv@divisor,w
  6339  1CF6  1903               	skipnz
  6340  1CF7  2CF9               	goto	u4811
  6341  1CF8  2CFA               	goto	u4810
  6342  1CF9                     u4811:
  6343  1CF9  2D47               	goto	l3141
  6344  1CFA                     u4810:
  6345  1CFA                     l3123:
  6346  1CFA  01FD               	clrf	___lldiv@counter
  6347  1CFB  0AFD               	incf	___lldiv@counter,f
  6348  1CFC  2D0A               	goto	l3127
  6349  1CFD                     l3125:
  6350  1CFD  3001               	movlw	1
  6351  1CFE  00F8               	movwf	??___lldiv
  6352  1CFF                     u4825:
  6353  1CFF  1003               	clrc
  6354  1D00  0DF0               	rlf	___lldiv@divisor,f
  6355  1D01  0DF1               	rlf	___lldiv@divisor+1,f
  6356  1D02  0DF2               	rlf	___lldiv@divisor+2,f
  6357  1D03  0DF3               	rlf	___lldiv@divisor+3,f
  6358  1D04  0BF8               	decfsz	??___lldiv,f
  6359  1D05  2CFF               	goto	u4825
  6360  1D06  3001               	movlw	1
  6361  1D07  00F8               	movwf	??___lldiv
  6362  1D08  0878               	movf	??___lldiv,w
  6363  1D09  07FD               	addwf	___lldiv@counter,f
  6364  1D0A                     l3127:
  6365  1D0A  1FF3               	btfss	___lldiv@divisor+3,7
  6366  1D0B  2D0D               	goto	u4831
  6367  1D0C  2D0E               	goto	u4830
  6368  1D0D                     u4831:
  6369  1D0D  2CFD               	goto	l3125
  6370  1D0E                     u4830:
  6371  1D0E                     l3129:
  6372  1D0E  3001               	movlw	1
  6373  1D0F  00F8               	movwf	??___lldiv
  6374  1D10                     u4845:
  6375  1D10  1003               	clrc
  6376  1D11  0DF9               	rlf	___lldiv@quotient,f
  6377  1D12  0DFA               	rlf	___lldiv@quotient+1,f
  6378  1D13  0DFB               	rlf	___lldiv@quotient+2,f
  6379  1D14  0DFC               	rlf	___lldiv@quotient+3,f
  6380  1D15  0BF8               	decfsz	??___lldiv,f
  6381  1D16  2D10               	goto	u4845
  6382  1D17                     l3131:
  6383  1D17  0873               	movf	___lldiv@divisor+3,w
  6384  1D18  0277               	subwf	___lldiv@dividend+3,w
  6385  1D19  1D03               	skipz
  6386  1D1A  2D25               	goto	u4855
  6387  1D1B  0872               	movf	___lldiv@divisor+2,w
  6388  1D1C  0276               	subwf	___lldiv@dividend+2,w
  6389  1D1D  1D03               	skipz
  6390  1D1E  2D25               	goto	u4855
  6391  1D1F  0871               	movf	___lldiv@divisor+1,w
  6392  1D20  0275               	subwf	___lldiv@dividend+1,w
  6393  1D21  1D03               	skipz
  6394  1D22  2D25               	goto	u4855
  6395  1D23  0870               	movf	___lldiv@divisor,w
  6396  1D24  0274               	subwf	___lldiv@dividend,w
  6397  1D25                     u4855:
  6398  1D25  1C03               	skipc
  6399  1D26  2D28               	goto	u4851
  6400  1D27  2D29               	goto	u4850
  6401  1D28                     u4851:
  6402  1D28  2D38               	goto	l3137
  6403  1D29                     u4850:
  6404  1D29                     l3133:
  6405  1D29  0870               	movf	___lldiv@divisor,w
  6406  1D2A  02F4               	subwf	___lldiv@dividend,f
  6407  1D2B  0871               	movf	___lldiv@divisor+1,w
  6408  1D2C  1C03               	skipc
  6409  1D2D  0F71               	incfsz	___lldiv@divisor+1,w
  6410  1D2E  02F5               	subwf	___lldiv@dividend+1,f
  6411  1D2F  0872               	movf	___lldiv@divisor+2,w
  6412  1D30  1C03               	skipc
  6413  1D31  0F72               	incfsz	___lldiv@divisor+2,w
  6414  1D32  02F6               	subwf	___lldiv@dividend+2,f
  6415  1D33  0873               	movf	___lldiv@divisor+3,w
  6416  1D34  1C03               	skipc
  6417  1D35  0F73               	incfsz	___lldiv@divisor+3,w
  6418  1D36  02F7               	subwf	___lldiv@dividend+3,f
  6419  1D37                     l3135:
  6420  1D37  1479               	bsf	___lldiv@quotient,0
  6421  1D38                     l3137:
  6422  1D38  3001               	movlw	1
  6423  1D39                     u4865:
  6424  1D39  1003               	clrc
  6425  1D3A  0CF3               	rrf	___lldiv@divisor+3,f
  6426  1D3B  0CF2               	rrf	___lldiv@divisor+2,f
  6427  1D3C  0CF1               	rrf	___lldiv@divisor+1,f
  6428  1D3D  0CF0               	rrf	___lldiv@divisor,f
  6429  1D3E  3EFF               	addlw	-1
  6430  1D3F  1D03               	skipz
  6431  1D40  2D39               	goto	u4865
  6432  1D41                     l3139:
  6433  1D41  3001               	movlw	1
  6434  1D42  02FD               	subwf	___lldiv@counter,f
  6435  1D43  1D03               	btfss	3,2
  6436  1D44  2D46               	goto	u4871
  6437  1D45  2D47               	goto	u4870
  6438  1D46                     u4871:
  6439  1D46  2D0E               	goto	l3129
  6440  1D47                     u4870:
  6441  1D47                     l3141:
  6442  1D47  087C               	movf	___lldiv@quotient+3,w
  6443  1D48  00F3               	movwf	?___lldiv+3
  6444  1D49  087B               	movf	___lldiv@quotient+2,w
  6445  1D4A  00F2               	movwf	?___lldiv+2
  6446  1D4B  087A               	movf	___lldiv@quotient+1,w
  6447  1D4C  00F1               	movwf	?___lldiv+1
  6448  1D4D  0879               	movf	___lldiv@quotient,w
  6449  1D4E  00F0               	movwf	?___lldiv
  6450  1D4F                     l460:
  6451  1D4F  0008               	return
  6452  1D50                     __end_of___lldiv:
  6453                           
  6454                           	psect	text17
  6455  0806                     __ptext17:	
  6456 ;; *************** function ___fltol *****************
  6457 ;; Defined at:
  6458 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  f1              4   49[BANK0 ] unsigned long 
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;  exp1            1   59[BANK0 ] unsigned char 
  6463 ;;  sign1           1   58[BANK0 ] unsigned char 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  4   49[BANK0 ] long 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2, status,0
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6473 ;;      Params:         0       4       0       0       0
  6474 ;;      Locals:         0       2       0       0       0
  6475 ;;      Temps:          0       5       0       0       0
  6476 ;;      Totals:         0      11       0       0       0
  6477 ;;Total ram usage:       11 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		_sprintf
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           
  6487                           ;psect for function ___fltol
  6488  0806                     ___fltol:
  6489  0806                     l3185:	
  6490                           ;incstack = 0
  6491                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6492                           
  6493  0806  1003               	clrc
  6494  0807  1283               	bcf	3,5	;RP0=0, select bank0
  6495  0808  1303               	bcf	3,6	;RP1=0, select bank0
  6496  0809  0D53               	rlf	___fltol@f1+2,w
  6497  080A  0D54               	rlf	___fltol@f1+3,w
  6498  080B  00D5               	movwf	??___fltol
  6499  080C  0855               	movf	??___fltol,w
  6500  080D  00DB               	movwf	___fltol@exp1
  6501  080E  085B               	movf	___fltol@exp1,w
  6502  080F  1D03               	btfss	3,2
  6503  0810  2812               	goto	u4991
  6504  0811  2813               	goto	u4990
  6505  0812                     u4991:
  6506  0812  281C               	goto	l3191
  6507  0813                     u4990:
  6508  0813                     l3187:
  6509  0813  3000               	movlw	0
  6510  0814  00D4               	movwf	?___fltol+3
  6511  0815  3000               	movlw	0
  6512  0816  00D3               	movwf	?___fltol+2
  6513  0817  3000               	movlw	0
  6514  0818  00D2               	movwf	?___fltol+1
  6515  0819  3000               	movlw	0
  6516  081A  00D1               	movwf	?___fltol
  6517  081B  2881               	goto	l627
  6518  081C                     l3191:
  6519  081C  0851               	movf	___fltol@f1,w
  6520  081D  00D5               	movwf	??___fltol
  6521  081E  0852               	movf	___fltol@f1+1,w
  6522  081F  00D6               	movwf	??___fltol+1
  6523  0820  0853               	movf	___fltol@f1+2,w
  6524  0821  00D7               	movwf	??___fltol+2
  6525  0822  0854               	movf	___fltol@f1+3,w
  6526  0823  00D8               	movwf	??___fltol+3
  6527  0824  301F               	movlw	31
  6528  0825                     u5005:
  6529  0825  1003               	clrc
  6530  0826  0CD8               	rrf	??___fltol+3,f
  6531  0827  0CD7               	rrf	??___fltol+2,f
  6532  0828  0CD6               	rrf	??___fltol+1,f
  6533  0829  0CD5               	rrf	??___fltol,f
  6534  082A                     u5000:
  6535  082A  3EFF               	addlw	-1
  6536  082B  1D03               	skipz
  6537  082C  2825               	goto	u5005
  6538  082D  0855               	movf	??___fltol,w
  6539  082E  00D9               	movwf	??___fltol+4
  6540  082F  0859               	movf	??___fltol+4,w
  6541  0830  00DA               	movwf	___fltol@sign1
  6542  0831                     l3193:
  6543  0831  17D3               	bsf	___fltol@f1+2,7
  6544  0832                     l3195:
  6545  0832  30FF               	movlw	255
  6546  0833  05D1               	andwf	___fltol@f1,f
  6547  0834  30FF               	movlw	255
  6548  0835  05D2               	andwf	___fltol@f1+1,f
  6549  0836  30FF               	movlw	255
  6550  0837  05D3               	andwf	___fltol@f1+2,f
  6551  0838  3000               	movlw	0
  6552  0839  05D4               	andwf	___fltol@f1+3,f
  6553  083A                     l3197:
  6554  083A  3096               	movlw	150
  6555  083B  02DB               	subwf	___fltol@exp1,f
  6556  083C                     l3199:
  6557  083C  1FDB               	btfss	___fltol@exp1,7
  6558  083D  283F               	goto	u5011
  6559  083E  2840               	goto	u5010
  6560  083F                     u5011:
  6561  083F  285A               	goto	l3209
  6562  0840                     u5010:
  6563  0840                     l3201:
  6564  0840  085B               	movf	___fltol@exp1,w
  6565  0841  3A80               	xorlw	128
  6566  0842  3E97               	addlw	151
  6567  0843  1803               	skipnc
  6568  0844  2846               	goto	u5021
  6569  0845  2847               	goto	u5020
  6570  0846                     u5021:
  6571  0846  2848               	goto	l3207
  6572  0847                     u5020:
  6573  0847  2813               	goto	l3187
  6574  0848                     l3207:
  6575  0848  3001               	movlw	1
  6576  0849                     u5035:
  6577  0849  1003               	clrc
  6578  084A  0CD4               	rrf	___fltol@f1+3,f
  6579  084B  0CD3               	rrf	___fltol@f1+2,f
  6580  084C  0CD2               	rrf	___fltol@f1+1,f
  6581  084D  0CD1               	rrf	___fltol@f1,f
  6582  084E  3EFF               	addlw	-1
  6583  084F  1D03               	skipz
  6584  0850  2849               	goto	u5035
  6585  0851  3001               	movlw	1
  6586  0852  00D5               	movwf	??___fltol
  6587  0853  0855               	movf	??___fltol,w
  6588  0854  07DB               	addwf	___fltol@exp1,f
  6589  0855  1D03               	btfss	3,2
  6590  0856  2858               	goto	u5041
  6591  0857  2859               	goto	u5040
  6592  0858                     u5041:
  6593  0858  2848               	goto	l3207
  6594  0859                     u5040:
  6595  0859  2871               	goto	l3217
  6596  085A                     l3209:
  6597  085A  3020               	movlw	32
  6598  085B  025B               	subwf	___fltol@exp1,w
  6599  085C  1C03               	skipc
  6600  085D  285F               	goto	u5051
  6601  085E  2860               	goto	u5050
  6602  085F                     u5051:
  6603  085F  286C               	goto	l634
  6604  0860                     u5050:
  6605  0860  2813               	goto	l3187
  6606  0861                     l3215:
  6607  0861  3001               	movlw	1
  6608  0862  00D5               	movwf	??___fltol
  6609  0863                     u5065:
  6610  0863  1003               	clrc
  6611  0864  0DD1               	rlf	___fltol@f1,f
  6612  0865  0DD2               	rlf	___fltol@f1+1,f
  6613  0866  0DD3               	rlf	___fltol@f1+2,f
  6614  0867  0DD4               	rlf	___fltol@f1+3,f
  6615  0868  0BD5               	decfsz	??___fltol,f
  6616  0869  2863               	goto	u5065
  6617  086A  3001               	movlw	1
  6618  086B  02DB               	subwf	___fltol@exp1,f
  6619  086C                     l634:
  6620  086C  085B               	movf	___fltol@exp1,w
  6621  086D  1D03               	btfss	3,2
  6622  086E  2870               	goto	u5071
  6623  086F  2871               	goto	u5070
  6624  0870                     u5071:
  6625  0870  2861               	goto	l3215
  6626  0871                     u5070:
  6627  0871                     l3217:
  6628  0871  085A               	movf	___fltol@sign1,w
  6629  0872  1903               	btfsc	3,2
  6630  0873  2875               	goto	u5081
  6631  0874  2876               	goto	u5080
  6632  0875                     u5081:
  6633  0875  2881               	goto	l637
  6634  0876                     u5080:
  6635  0876                     l3219:
  6636  0876  09D1               	comf	___fltol@f1,f
  6637  0877  09D2               	comf	___fltol@f1+1,f
  6638  0878  09D3               	comf	___fltol@f1+2,f
  6639  0879  09D4               	comf	___fltol@f1+3,f
  6640  087A  0AD1               	incf	___fltol@f1,f
  6641  087B  1903               	skipnz
  6642  087C  0AD2               	incf	___fltol@f1+1,f
  6643  087D  1903               	skipnz
  6644  087E  0AD3               	incf	___fltol@f1+2,f
  6645  087F  1903               	skipnz
  6646  0880  0AD4               	incf	___fltol@f1+3,f
  6647  0881                     l637:
  6648  0881                     l627:
  6649  0881  0008               	return
  6650  0882                     __end_of___fltol:
  6651                           
  6652                           	psect	text18
  6653  1A22                     __ptext18:	
  6654 ;; *************** function ___flsub *****************
  6655 ;; Defined at:
  6656 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  a               4   70[BANK0 ] long 
  6659 ;;  b               4   74[BANK0 ] long 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;		None
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  4   70[BANK0 ] long 
  6664 ;; Registers used:
  6665 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6671 ;;      Params:         0       8       0       0       0
  6672 ;;      Locals:         0       0       0       0       0
  6673 ;;      Temps:          0       0       0       0       0
  6674 ;;      Totals:         0       8       0       0       0
  6675 ;;Total ram usage:        8 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; Hardware stack levels required when called:    1
  6678 ;; This function calls:
  6679 ;;		___fladd
  6680 ;; This function is called by:
  6681 ;;		_sprintf
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           
  6686                           ;psect for function ___flsub
  6687  1A22                     ___flsub:
  6688  1A22                     l3241:	
  6689                           ;incstack = 0
  6690                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6691                           
  6692  1A22  3080               	movlw	128
  6693  1A23  1283               	bcf	3,5	;RP0=0, select bank0
  6694  1A24  1303               	bcf	3,6	;RP1=0, select bank0
  6695  1A25  06E9               	xorwf	___flsub@a+3,f
  6696  1A26                     l3243:
  6697  1A26  086D               	movf	___flsub@b+3,w
  6698  1A27  00D5               	movwf	___fladd@b+3
  6699  1A28  086C               	movf	___flsub@b+2,w
  6700  1A29  00D4               	movwf	___fladd@b+2
  6701  1A2A  086B               	movf	___flsub@b+1,w
  6702  1A2B  00D3               	movwf	___fladd@b+1
  6703  1A2C  086A               	movf	___flsub@b,w
  6704  1A2D  00D2               	movwf	___fladd@b
  6705  1A2E  0869               	movf	___flsub@a+3,w
  6706  1A2F  00D9               	movwf	___fladd@a+3
  6707  1A30  0868               	movf	___flsub@a+2,w
  6708  1A31  00D8               	movwf	___fladd@a+2
  6709  1A32  0867               	movf	___flsub@a+1,w
  6710  1A33  00D7               	movwf	___fladd@a+1
  6711  1A34  0866               	movf	___flsub@a,w
  6712  1A35  00D6               	movwf	___fladd@a
  6713  1A36  160A  118A  22B6  160A  158A  	fcall	___fladd
  6714  1A3B  1283               	bcf	3,5	;RP0=0, select bank0
  6715  1A3C  1303               	bcf	3,6	;RP1=0, select bank0
  6716  1A3D  0855               	movf	?___fladd+3,w
  6717  1A3E  00E9               	movwf	?___flsub+3
  6718  1A3F  0854               	movf	?___fladd+2,w
  6719  1A40  00E8               	movwf	?___flsub+2
  6720  1A41  0853               	movf	?___fladd+1,w
  6721  1A42  00E7               	movwf	?___flsub+1
  6722  1A43  0852               	movf	?___fladd,w
  6723  1A44  00E6               	movwf	?___flsub
  6724  1A45                     l797:
  6725  1A45  0008               	return
  6726  1A46                     __end_of___flsub:
  6727                           
  6728                           	psect	text19
  6729  12B6                     __ptext19:	
  6730 ;; *************** function ___fladd *****************
  6731 ;; Defined at:
  6732 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  b               4   50[BANK0 ] long 
  6735 ;;  a               4   54[BANK0 ] long 
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;  grs             1   69[BANK0 ] unsigned char 
  6738 ;;  bexp            1   68[BANK0 ] unsigned char 
  6739 ;;  aexp            1   67[BANK0 ] unsigned char 
  6740 ;;  signs           1   66[BANK0 ] unsigned char 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  4   50[BANK0 ] unsigned char 
  6743 ;; Registers used:
  6744 ;;		wreg, status,2, status,0, btemp+1
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6750 ;;      Params:         0       8       0       0       0
  6751 ;;      Locals:         0       4       0       0       0
  6752 ;;      Temps:          0       8       0       0       0
  6753 ;;      Totals:         0      20       0       0       0
  6754 ;;Total ram usage:       20 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; This function calls:
  6757 ;;		Nothing
  6758 ;; This function is called by:
  6759 ;;		_sprintf
  6760 ;;		___flsub
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           
  6765                           ;psect for function ___fladd
  6766  12B6                     ___fladd:
  6767  12B6                     l2549:	
  6768                           ;incstack = 0
  6769                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6770                           
  6771  12B6  1283               	bcf	3,5	;RP0=0, select bank0
  6772  12B7  1303               	bcf	3,6	;RP1=0, select bank0
  6773  12B8  0855               	movf	___fladd@b+3,w
  6774  12B9  3980               	andlw	128
  6775  12BA  00DA               	movwf	??___fladd
  6776  12BB  085A               	movf	??___fladd,w
  6777  12BC  00E2               	movwf	___fladd@signs
  6778  12BD                     l2551:
  6779  12BD  0855               	movf	___fladd@b+3,w
  6780  12BE  00DA               	movwf	??___fladd
  6781  12BF  075A               	addwf	??___fladd,w
  6782  12C0  00DB               	movwf	??___fladd+1
  6783  12C1  085B               	movf	??___fladd+1,w
  6784  12C2  00E4               	movwf	___fladd@bexp
  6785  12C3                     l2553:
  6786  12C3  1FD4               	btfss	___fladd@b+2,7
  6787  12C4  2AC6               	goto	u3391
  6788  12C5  2AC7               	goto	u3390
  6789  12C6                     u3391:
  6790  12C6  2AC8               	goto	l2557
  6791  12C7                     u3390:
  6792  12C7                     l2555:
  6793  12C7  1464               	bsf	___fladd@bexp,0
  6794  12C8                     l2557:
  6795  12C8  0864               	movf	___fladd@bexp,w
  6796  12C9  1903               	btfsc	3,2
  6797  12CA  2ACC               	goto	u3401
  6798  12CB  2ACD               	goto	u3400
  6799  12CC                     u3401:
  6800  12CC  2ADD               	goto	l2567
  6801  12CD                     u3400:
  6802  12CD                     l2559:
  6803  12CD  0A64               	incf	___fladd@bexp,w
  6804  12CE  1D03               	btfss	3,2
  6805  12CF  2AD1               	goto	u3411
  6806  12D0  2AD2               	goto	u3410
  6807  12D1                     u3411:
  6808  12D1  2ADA               	goto	l2563
  6809  12D2                     u3410:
  6810  12D2                     l2561:
  6811  12D2  3000               	movlw	0
  6812  12D3  00D5               	movwf	___fladd@b+3
  6813  12D4  3000               	movlw	0
  6814  12D5  00D4               	movwf	___fladd@b+2
  6815  12D6  3000               	movlw	0
  6816  12D7  00D3               	movwf	___fladd@b+1
  6817  12D8  3000               	movlw	0
  6818  12D9  00D2               	movwf	___fladd@b
  6819  12DA                     l2563:
  6820  12DA  17D4               	bsf	___fladd@b+2,7
  6821  12DB                     l2565:
  6822  12DB  01D5               	clrf	___fladd@b+3
  6823  12DC  2AE5               	goto	l2569
  6824  12DD                     l2567:
  6825  12DD  3000               	movlw	0
  6826  12DE  00D5               	movwf	___fladd@b+3
  6827  12DF  3000               	movlw	0
  6828  12E0  00D4               	movwf	___fladd@b+2
  6829  12E1  3000               	movlw	0
  6830  12E2  00D3               	movwf	___fladd@b+1
  6831  12E3  3000               	movlw	0
  6832  12E4  00D2               	movwf	___fladd@b
  6833  12E5                     l2569:
  6834  12E5  0859               	movf	___fladd@a+3,w
  6835  12E6  3980               	andlw	128
  6836  12E7  00DA               	movwf	??___fladd
  6837  12E8  085A               	movf	??___fladd,w
  6838  12E9  00E3               	movwf	___fladd@aexp
  6839  12EA                     l2571:
  6840  12EA  0863               	movf	___fladd@aexp,w
  6841  12EB  0662               	xorwf	___fladd@signs,w
  6842  12EC  1903               	skipnz
  6843  12ED  2AEF               	goto	u3421
  6844  12EE  2AF0               	goto	u3420
  6845  12EF                     u3421:
  6846  12EF  2AF1               	goto	l2575
  6847  12F0                     u3420:
  6848  12F0                     l2573:
  6849  12F0  1762               	bsf	___fladd@signs,6
  6850  12F1                     l2575:
  6851  12F1  0859               	movf	___fladd@a+3,w
  6852  12F2  00DA               	movwf	??___fladd
  6853  12F3  075A               	addwf	??___fladd,w
  6854  12F4  00DB               	movwf	??___fladd+1
  6855  12F5  085B               	movf	??___fladd+1,w
  6856  12F6  00E3               	movwf	___fladd@aexp
  6857  12F7                     l2577:
  6858  12F7  1FD8               	btfss	___fladd@a+2,7
  6859  12F8  2AFA               	goto	u3431
  6860  12F9  2AFB               	goto	u3430
  6861  12FA                     u3431:
  6862  12FA  2AFC               	goto	l2581
  6863  12FB                     u3430:
  6864  12FB                     l2579:
  6865  12FB  1463               	bsf	___fladd@aexp,0
  6866  12FC                     l2581:
  6867  12FC  0863               	movf	___fladd@aexp,w
  6868  12FD  1903               	btfsc	3,2
  6869  12FE  2B00               	goto	u3441
  6870  12FF  2B01               	goto	u3440
  6871  1300                     u3441:
  6872  1300  2B11               	goto	l2591
  6873  1301                     u3440:
  6874  1301                     l2583:
  6875  1301  0A63               	incf	___fladd@aexp,w
  6876  1302  1D03               	btfss	3,2
  6877  1303  2B05               	goto	u3451
  6878  1304  2B06               	goto	u3450
  6879  1305                     u3451:
  6880  1305  2B0E               	goto	l2587
  6881  1306                     u3450:
  6882  1306                     l2585:
  6883  1306  3000               	movlw	0
  6884  1307  00D9               	movwf	___fladd@a+3
  6885  1308  3000               	movlw	0
  6886  1309  00D8               	movwf	___fladd@a+2
  6887  130A  3000               	movlw	0
  6888  130B  00D7               	movwf	___fladd@a+1
  6889  130C  3000               	movlw	0
  6890  130D  00D6               	movwf	___fladd@a
  6891  130E                     l2587:
  6892  130E  17D8               	bsf	___fladd@a+2,7
  6893  130F                     l2589:
  6894  130F  01D9               	clrf	___fladd@a+3
  6895  1310  2B19               	goto	l751
  6896  1311                     l2591:
  6897  1311  3000               	movlw	0
  6898  1312  00D9               	movwf	___fladd@a+3
  6899  1313  3000               	movlw	0
  6900  1314  00D8               	movwf	___fladd@a+2
  6901  1315  3000               	movlw	0
  6902  1316  00D7               	movwf	___fladd@a+1
  6903  1317  3000               	movlw	0
  6904  1318  00D6               	movwf	___fladd@a
  6905  1319                     l751:
  6906  1319  0864               	movf	___fladd@bexp,w
  6907  131A  0263               	subwf	___fladd@aexp,w
  6908  131B  1803               	skipnc
  6909  131C  2B1E               	goto	u3461
  6910  131D  2B1F               	goto	u3460
  6911  131E                     u3461:
  6912  131E  2B63               	goto	l2627
  6913  131F                     u3460:
  6914  131F                     l2593:
  6915  131F  1F62               	btfss	___fladd@signs,6
  6916  1320  2B22               	goto	u3471
  6917  1321  2B23               	goto	u3470
  6918  1322                     u3471:
  6919  1322  2B27               	goto	l2597
  6920  1323                     u3470:
  6921  1323                     l2595:
  6922  1323  3080               	movlw	128
  6923  1324  00DA               	movwf	??___fladd
  6924  1325  085A               	movf	??___fladd,w
  6925  1326  06E2               	xorwf	___fladd@signs,f
  6926  1327                     l2597:
  6927  1327  0864               	movf	___fladd@bexp,w
  6928  1328  00DA               	movwf	??___fladd
  6929  1329  085A               	movf	??___fladd,w
  6930  132A  00E5               	movwf	___fladd@grs
  6931  132B                     l2599:
  6932  132B  0863               	movf	___fladd@aexp,w
  6933  132C  00DA               	movwf	??___fladd
  6934  132D  085A               	movf	??___fladd,w
  6935  132E  00E4               	movwf	___fladd@bexp
  6936  132F                     l2601:
  6937  132F  0865               	movf	___fladd@grs,w
  6938  1330  00DA               	movwf	??___fladd
  6939  1331  085A               	movf	??___fladd,w
  6940  1332  00E3               	movwf	___fladd@aexp
  6941  1333                     l2603:
  6942  1333  0852               	movf	___fladd@b,w
  6943  1334  00DA               	movwf	??___fladd
  6944  1335  085A               	movf	??___fladd,w
  6945  1336  00E5               	movwf	___fladd@grs
  6946  1337                     l2605:
  6947  1337  0856               	movf	___fladd@a,w
  6948  1338  00DA               	movwf	??___fladd
  6949  1339  085A               	movf	??___fladd,w
  6950  133A  00D2               	movwf	___fladd@b
  6951  133B                     l2607:
  6952  133B  0865               	movf	___fladd@grs,w
  6953  133C  00DA               	movwf	??___fladd
  6954  133D  085A               	movf	??___fladd,w
  6955  133E  00D6               	movwf	___fladd@a
  6956  133F                     l2609:
  6957  133F  0853               	movf	___fladd@b+1,w
  6958  1340  00DA               	movwf	??___fladd
  6959  1341  085A               	movf	??___fladd,w
  6960  1342  00E5               	movwf	___fladd@grs
  6961  1343                     l2611:
  6962  1343  0857               	movf	___fladd@a+1,w
  6963  1344  00DA               	movwf	??___fladd
  6964  1345  085A               	movf	??___fladd,w
  6965  1346  00D3               	movwf	___fladd@b+1
  6966  1347                     l2613:
  6967  1347  0865               	movf	___fladd@grs,w
  6968  1348  00DA               	movwf	??___fladd
  6969  1349  085A               	movf	??___fladd,w
  6970  134A  00D7               	movwf	___fladd@a+1
  6971  134B                     l2615:
  6972  134B  0854               	movf	___fladd@b+2,w
  6973  134C  00DA               	movwf	??___fladd
  6974  134D  085A               	movf	??___fladd,w
  6975  134E  00E5               	movwf	___fladd@grs
  6976  134F                     l2617:
  6977  134F  0858               	movf	___fladd@a+2,w
  6978  1350  00DA               	movwf	??___fladd
  6979  1351  085A               	movf	??___fladd,w
  6980  1352  00D4               	movwf	___fladd@b+2
  6981  1353                     l2619:
  6982  1353  0865               	movf	___fladd@grs,w
  6983  1354  00DA               	movwf	??___fladd
  6984  1355  085A               	movf	??___fladd,w
  6985  1356  00D8               	movwf	___fladd@a+2
  6986  1357                     l2621:
  6987  1357  0855               	movf	___fladd@b+3,w
  6988  1358  00DA               	movwf	??___fladd
  6989  1359  085A               	movf	??___fladd,w
  6990  135A  00E5               	movwf	___fladd@grs
  6991  135B                     l2623:
  6992  135B  0859               	movf	___fladd@a+3,w
  6993  135C  00DA               	movwf	??___fladd
  6994  135D  085A               	movf	??___fladd,w
  6995  135E  00D5               	movwf	___fladd@b+3
  6996  135F                     l2625:
  6997  135F  0865               	movf	___fladd@grs,w
  6998  1360  00DA               	movwf	??___fladd
  6999  1361  085A               	movf	??___fladd,w
  7000  1362  00D9               	movwf	___fladd@a+3
  7001  1363                     l2627:
  7002  1363  01E5               	clrf	___fladd@grs
  7003  1364                     l2629:
  7004  1364  0863               	movf	___fladd@aexp,w
  7005  1365  00DA               	movwf	??___fladd
  7006  1366  01DB               	clrf	??___fladd+1
  7007  1367  085B               	movf	??___fladd+1,w
  7008  1368  00DD               	movwf	??___fladd+3
  7009  1369  0864               	movf	___fladd@bexp,w
  7010  136A  025A               	subwf	??___fladd,w
  7011  136B  00DC               	movwf	??___fladd+2
  7012  136C  1C03               	skipc
  7013  136D  03DD               	decf	??___fladd+3,f
  7014  136E  085D               	movf	??___fladd+3,w
  7015  136F  3A80               	xorlw	128
  7016  1370  00FF               	movwf	btemp+1
  7017  1371  3080               	movlw	128
  7018  1372  027F               	subwf	btemp+1,w
  7019  1373  1D03               	skipz
  7020  1374  2B77               	goto	u3485
  7021  1375  301A               	movlw	26
  7022  1376  025C               	subwf	??___fladd+2,w
  7023  1377                     u3485:
  7024  1377  1C03               	skipc
  7025  1378  2B7A               	goto	u3481
  7026  1379  2B7B               	goto	u3480
  7027  137A                     u3481:
  7028  137A  2BB8               	goto	l2645
  7029  137B                     u3480:
  7030  137B                     l2631:
  7031  137B  1283               	bcf	3,5	;RP0=0, select bank0
  7032  137C  1303               	bcf	3,6	;RP1=0, select bank0
  7033  137D  0855               	movf	___fladd@b+3,w
  7034  137E  0454               	iorwf	___fladd@b+2,w
  7035  137F  0453               	iorwf	___fladd@b+1,w
  7036  1380  0452               	iorwf	___fladd@b,w
  7037  1381  1D03               	skipz
  7038  1382  2B84               	goto	u3491
  7039  1383  2B86               	goto	u3490
  7040  1384                     u3491:
  7041  1384  3001               	movlw	1
  7042  1385  2B87               	goto	u3500
  7043  1386                     u3490:
  7044  1386  3000               	movlw	0
  7045  1387                     u3500:
  7046  1387  00DA               	movwf	??___fladd
  7047  1388  085A               	movf	??___fladd,w
  7048  1389  00E5               	movwf	___fladd@grs
  7049  138A  3000               	movlw	0
  7050  138B  00D5               	movwf	___fladd@b+3
  7051  138C  3000               	movlw	0
  7052  138D  00D4               	movwf	___fladd@b+2
  7053  138E  3000               	movlw	0
  7054  138F  00D3               	movwf	___fladd@b+1
  7055  1390  3000               	movlw	0
  7056  1391  00D2               	movwf	___fladd@b
  7057  1392  0863               	movf	___fladd@aexp,w
  7058  1393  00DA               	movwf	??___fladd
  7059  1394  085A               	movf	??___fladd,w
  7060  1395  00E4               	movwf	___fladd@bexp
  7061  1396  2BC0               	goto	l755
  7062  1397                     l757:
  7063  1397  1C65               	btfss	___fladd@grs,0
  7064  1398  2B9A               	goto	u3511
  7065  1399  2B9B               	goto	u3510
  7066  139A                     u3511:
  7067  139A  2BA4               	goto	l2635
  7068  139B                     u3510:
  7069  139B                     l2633:
  7070  139B  0865               	movf	___fladd@grs,w
  7071  139C  00DA               	movwf	??___fladd
  7072  139D  1003               	clrc
  7073  139E  0C5A               	rrf	??___fladd,w
  7074  139F  3801               	iorlw	1
  7075  13A0  00DB               	movwf	??___fladd+1
  7076  13A1  085B               	movf	??___fladd+1,w
  7077  13A2  00E5               	movwf	___fladd@grs
  7078  13A3  2BA6               	goto	l2637
  7079  13A4                     l2635:
  7080  13A4  1003               	clrc
  7081  13A5  0CE5               	rrf	___fladd@grs,f
  7082  13A6                     l2637:
  7083  13A6  1C52               	btfss	___fladd@b,0
  7084  13A7  2BA9               	goto	u3521
  7085  13A8  2BAA               	goto	u3520
  7086  13A9                     u3521:
  7087  13A9  2BAB               	goto	l2641
  7088  13AA                     u3520:
  7089  13AA                     l2639:
  7090  13AA  17E5               	bsf	___fladd@grs,7
  7091  13AB                     l2641:
  7092  13AB  3001               	movlw	1
  7093  13AC  00DA               	movwf	??___fladd
  7094  13AD                     u3535:
  7095  13AD  0D55               	rlf	___fladd@b+3,w
  7096  13AE  0CD5               	rrf	___fladd@b+3,f
  7097  13AF  0CD4               	rrf	___fladd@b+2,f
  7098  13B0  0CD3               	rrf	___fladd@b+1,f
  7099  13B1  0CD2               	rrf	___fladd@b,f
  7100  13B2  0BDA               	decfsz	??___fladd& (0+127),f
  7101  13B3  2BAD               	goto	u3535
  7102  13B4                     l2643:
  7103  13B4  3001               	movlw	1
  7104  13B5  00DA               	movwf	??___fladd
  7105  13B6  085A               	movf	??___fladd,w
  7106  13B7  07E4               	addwf	___fladd@bexp,f
  7107  13B8                     l2645:
  7108  13B8  1283               	bcf	3,5	;RP0=0, select bank0
  7109  13B9  1303               	bcf	3,6	;RP1=0, select bank0
  7110  13BA  0863               	movf	___fladd@aexp,w
  7111  13BB  0264               	subwf	___fladd@bexp,w
  7112  13BC  1C03               	skipc
  7113  13BD  2BBF               	goto	u3541
  7114  13BE  2BC0               	goto	u3540
  7115  13BF                     u3541:
  7116  13BF  2B97               	goto	l757
  7117  13C0                     u3540:
  7118  13C0                     l755:
  7119  13C0  1B62               	btfsc	___fladd@signs,6
  7120  13C1  2BC3               	goto	u3551
  7121  13C2  2BC4               	goto	u3550
  7122  13C3                     u3551:
  7123  13C3  2C0F               	goto	l2671
  7124  13C4                     u3550:
  7125  13C4                     l2647:
  7126  13C4  0864               	movf	___fladd@bexp,w
  7127  13C5  1D03               	btfss	3,2
  7128  13C6  2BC8               	goto	u3561
  7129  13C7  2BC9               	goto	u3560
  7130  13C8                     u3561:
  7131  13C8  2BD2               	goto	l2653
  7132  13C9                     u3560:
  7133  13C9                     l2649:
  7134  13C9  3000               	movlw	0
  7135  13CA  00D5               	movwf	?___fladd+3
  7136  13CB  3000               	movlw	0
  7137  13CC  00D4               	movwf	?___fladd+2
  7138  13CD  3000               	movlw	0
  7139  13CE  00D3               	movwf	?___fladd+1
  7140  13CF  3000               	movlw	0
  7141  13D0  00D2               	movwf	?___fladd
  7142  13D1  2D3D               	goto	l764
  7143  13D2                     l2653:
  7144  13D2  0856               	movf	___fladd@a,w
  7145  13D3  07D2               	addwf	___fladd@b,f
  7146  13D4  0857               	movf	___fladd@a+1,w
  7147  13D5  1103               	clrz
  7148  13D6  1803               	skipnc
  7149  13D7  3E01               	addlw	1
  7150  13D8  1903               	skipnz
  7151  13D9  2BDB               	goto	u3571
  7152  13DA  07D3               	addwf	___fladd@b+1,f
  7153  13DB                     u3571:
  7154  13DB  0858               	movf	___fladd@a+2,w
  7155  13DC  1103               	clrz
  7156  13DD  1803               	skipnc
  7157  13DE  3E01               	addlw	1
  7158  13DF  1903               	skipnz
  7159  13E0  2BE2               	goto	u3572
  7160  13E1  07D4               	addwf	___fladd@b+2,f
  7161  13E2                     u3572:
  7162  13E2  0859               	movf	___fladd@a+3,w
  7163  13E3  1103               	clrz
  7164  13E4  1803               	skipnc
  7165  13E5  3E01               	addlw	1
  7166  13E6  1903               	skipnz
  7167  13E7  2BE9               	goto	u3573
  7168  13E8  07D5               	addwf	___fladd@b+3,f
  7169  13E9                     u3573:
  7170  13E9                     l2655:
  7171  13E9  1C55               	btfss	___fladd@b+3,0
  7172  13EA  2BEC               	goto	u3581
  7173  13EB  2BED               	goto	u3580
  7174  13EC                     u3581:
  7175  13EC  2CC3               	goto	l2705
  7176  13ED                     u3580:
  7177  13ED                     l2657:
  7178  13ED  1C65               	btfss	___fladd@grs,0
  7179  13EE  2BF0               	goto	u3591
  7180  13EF  2BF1               	goto	u3590
  7181  13F0                     u3591:
  7182  13F0  2BFA               	goto	l2661
  7183  13F1                     u3590:
  7184  13F1                     l2659:
  7185  13F1  0865               	movf	___fladd@grs,w
  7186  13F2  00DA               	movwf	??___fladd
  7187  13F3  1003               	clrc
  7188  13F4  0C5A               	rrf	??___fladd,w
  7189  13F5  3801               	iorlw	1
  7190  13F6  00DB               	movwf	??___fladd+1
  7191  13F7  085B               	movf	??___fladd+1,w
  7192  13F8  00E5               	movwf	___fladd@grs
  7193  13F9  2BFC               	goto	l2663
  7194  13FA                     l2661:
  7195  13FA  1003               	clrc
  7196  13FB  0CE5               	rrf	___fladd@grs,f
  7197  13FC                     l2663:
  7198  13FC  1C52               	btfss	___fladd@b,0
  7199  13FD  2BFF               	goto	u3601
  7200  13FE  2C00               	goto	u3600
  7201  13FF                     u3601:
  7202  13FF  2C01               	goto	l2667
  7203  1400                     u3600:
  7204  1400                     l2665:
  7205  1400  17E5               	bsf	___fladd@grs,7
  7206  1401                     l2667:
  7207  1401  3001               	movlw	1
  7208  1402  00DA               	movwf	??___fladd
  7209  1403                     u3615:
  7210  1403  0D55               	rlf	___fladd@b+3,w
  7211  1404  0CD5               	rrf	___fladd@b+3,f
  7212  1405  0CD4               	rrf	___fladd@b+2,f
  7213  1406  0CD3               	rrf	___fladd@b+1,f
  7214  1407  0CD2               	rrf	___fladd@b,f
  7215  1408  0BDA               	decfsz	??___fladd& (0+127),f
  7216  1409  2C03               	goto	u3615
  7217  140A                     l2669:
  7218  140A  3001               	movlw	1
  7219  140B  00DA               	movwf	??___fladd
  7220  140C  085A               	movf	??___fladd,w
  7221  140D  07E4               	addwf	___fladd@bexp,f
  7222  140E  2CC3               	goto	l2705
  7223  140F                     l2671:
  7224  140F  0855               	movf	___fladd@b+3,w
  7225  1410  3A80               	xorlw	128
  7226  1411  00FF               	movwf	btemp+1
  7227  1412  0859               	movf	___fladd@a+3,w
  7228  1413  3A80               	xorlw	128
  7229  1414  027F               	subwf	btemp+1,w
  7230  1415  1D03               	skipz
  7231  1416  2C21               	goto	u3623
  7232  1417  0858               	movf	___fladd@a+2,w
  7233  1418  0254               	subwf	___fladd@b+2,w
  7234  1419  1D03               	skipz
  7235  141A  2C21               	goto	u3623
  7236  141B  0857               	movf	___fladd@a+1,w
  7237  141C  0253               	subwf	___fladd@b+1,w
  7238  141D  1D03               	skipz
  7239  141E  2C21               	goto	u3623
  7240  141F  0856               	movf	___fladd@a,w
  7241  1420  0252               	subwf	___fladd@b,w
  7242  1421                     u3623:
  7243  1421  1803               	skipnc
  7244  1422  2C24               	goto	u3621
  7245  1423  2C25               	goto	u3620
  7246  1424                     u3621:
  7247  1424  2C7D               	goto	l2681
  7248  1425                     u3620:
  7249  1425                     l2673:
  7250  1425  30FF               	movlw	255
  7251  1426  00DA               	movwf	??___fladd
  7252  1427  30FF               	movlw	255
  7253  1428  00DB               	movwf	??___fladd+1
  7254  1429  30FF               	movlw	255
  7255  142A  00DC               	movwf	??___fladd+2
  7256  142B  30FF               	movlw	255
  7257  142C  00DD               	movwf	??___fladd+3
  7258  142D  0856               	movf	___fladd@a,w
  7259  142E  00DE               	movwf	??___fladd+4
  7260  142F  0857               	movf	___fladd@a+1,w
  7261  1430  00DF               	movwf	??___fladd+5
  7262  1431  0858               	movf	___fladd@a+2,w
  7263  1432  00E0               	movwf	??___fladd+6
  7264  1433  0859               	movf	___fladd@a+3,w
  7265  1434  00E1               	movwf	??___fladd+7
  7266  1435  0852               	movf	___fladd@b,w
  7267  1436  02DE               	subwf	??___fladd+4,f
  7268  1437  0853               	movf	___fladd@b+1,w
  7269  1438  1C03               	skipc
  7270  1439  0F53               	incfsz	___fladd@b+1,w
  7271  143A  2C3C               	goto	u3631
  7272  143B  2C3D               	goto	u3632
  7273  143C                     u3631:
  7274  143C  02DF               	subwf	??___fladd+5,f
  7275  143D                     u3632:
  7276  143D  0854               	movf	___fladd@b+2,w
  7277  143E  1C03               	skipc
  7278  143F  0F54               	incfsz	___fladd@b+2,w
  7279  1440  2C42               	goto	u3633
  7280  1441  2C43               	goto	u3634
  7281  1442                     u3633:
  7282  1442  02E0               	subwf	??___fladd+6,f
  7283  1443                     u3634:
  7284  1443  0855               	movf	___fladd@b+3,w
  7285  1444  1C03               	skipc
  7286  1445  0F55               	incfsz	___fladd@b+3,w
  7287  1446  2C48               	goto	u3635
  7288  1447  2C49               	goto	u3636
  7289  1448                     u3635:
  7290  1448  02E1               	subwf	??___fladd+7,f
  7291  1449                     u3636:
  7292  1449  085E               	movf	??___fladd+4,w
  7293  144A  07DA               	addwf	??___fladd,f
  7294  144B  085F               	movf	??___fladd+5,w
  7295  144C  1803               	skipnc
  7296  144D  0F5F               	incfsz	??___fladd+5,w
  7297  144E  2C50               	goto	u3640
  7298  144F  2C51               	goto	u3641
  7299  1450                     u3640:
  7300  1450  07DB               	addwf	??___fladd+1,f
  7301  1451                     u3641:
  7302  1451  0860               	movf	??___fladd+6,w
  7303  1452  1803               	skipnc
  7304  1453  0F60               	incfsz	??___fladd+6,w
  7305  1454  2C56               	goto	u3642
  7306  1455  2C57               	goto	u3643
  7307  1456                     u3642:
  7308  1456  07DC               	addwf	??___fladd+2,f
  7309  1457                     u3643:
  7310  1457  0861               	movf	??___fladd+7,w
  7311  1458  1803               	skipnc
  7312  1459  0A61               	incf	??___fladd+7,w
  7313  145A  07DD               	addwf	??___fladd+3,f
  7314  145B  085D               	movf	??___fladd+3,w
  7315  145C  00D5               	movwf	___fladd@b+3
  7316  145D  085C               	movf	??___fladd+2,w
  7317  145E  00D4               	movwf	___fladd@b+2
  7318  145F  085B               	movf	??___fladd+1,w
  7319  1460  00D3               	movwf	___fladd@b+1
  7320  1461  085A               	movf	??___fladd,w
  7321  1462  00D2               	movwf	___fladd@b
  7322  1463                     l2675:
  7323  1463  3080               	movlw	128
  7324  1464  00DA               	movwf	??___fladd
  7325  1465  085A               	movf	??___fladd,w
  7326  1466  06E2               	xorwf	___fladd@signs,f
  7327  1467  09E5               	comf	___fladd@grs,f
  7328  1468  0AE5               	incf	___fladd@grs,f
  7329  1469                     l2677:
  7330  1469  0865               	movf	___fladd@grs,w
  7331  146A  1D03               	btfss	3,2
  7332  146B  2C6D               	goto	u3651
  7333  146C  2C6E               	goto	u3650
  7334  146D                     u3651:
  7335  146D  2C8B               	goto	l772
  7336  146E                     u3650:
  7337  146E                     l2679:
  7338  146E  3001               	movlw	1
  7339  146F  07D2               	addwf	___fladd@b,f
  7340  1470  3000               	movlw	0
  7341  1471  1803               	skipnc
  7342  1472  3001               	movlw	1
  7343  1473  07D3               	addwf	___fladd@b+1,f
  7344  1474  3000               	movlw	0
  7345  1475  1803               	skipnc
  7346  1476  3001               	movlw	1
  7347  1477  07D4               	addwf	___fladd@b+2,f
  7348  1478  3000               	movlw	0
  7349  1479  1803               	skipnc
  7350  147A  3001               	movlw	1
  7351  147B  07D5               	addwf	___fladd@b+3,f
  7352  147C  2C8B               	goto	l772
  7353  147D                     l2681:
  7354  147D  0856               	movf	___fladd@a,w
  7355  147E  02D2               	subwf	___fladd@b,f
  7356  147F  0857               	movf	___fladd@a+1,w
  7357  1480  1C03               	skipc
  7358  1481  0F57               	incfsz	___fladd@a+1,w
  7359  1482  02D3               	subwf	___fladd@b+1,f
  7360  1483  0858               	movf	___fladd@a+2,w
  7361  1484  1C03               	skipc
  7362  1485  0F58               	incfsz	___fladd@a+2,w
  7363  1486  02D4               	subwf	___fladd@b+2,f
  7364  1487  0859               	movf	___fladd@a+3,w
  7365  1488  1C03               	skipc
  7366  1489  0F59               	incfsz	___fladd@a+3,w
  7367  148A  02D5               	subwf	___fladd@b+3,f
  7368  148B                     l772:
  7369  148B  0855               	movf	___fladd@b+3,w
  7370  148C  0454               	iorwf	___fladd@b+2,w
  7371  148D  0453               	iorwf	___fladd@b+1,w
  7372  148E  0452               	iorwf	___fladd@b,w
  7373  148F  1D03               	skipz
  7374  1490  2C92               	goto	u3661
  7375  1491  2C93               	goto	u3660
  7376  1492                     u3661:
  7377  1492  2CBF               	goto	l2703
  7378  1493                     u3660:
  7379  1493                     l2683:
  7380  1493  0865               	movf	___fladd@grs,w
  7381  1494  1D03               	btfss	3,2
  7382  1495  2C97               	goto	u3671
  7383  1496  2C98               	goto	u3670
  7384  1497                     u3671:
  7385  1497  2CBF               	goto	l2703
  7386  1498                     u3670:
  7387  1498                     l2685:
  7388  1498  3000               	movlw	0
  7389  1499  00D5               	movwf	?___fladd+3
  7390  149A  3000               	movlw	0
  7391  149B  00D4               	movwf	?___fladd+2
  7392  149C  3000               	movlw	0
  7393  149D  00D3               	movwf	?___fladd+1
  7394  149E  3000               	movlw	0
  7395  149F  00D2               	movwf	?___fladd
  7396  14A0  2D3D               	goto	l764
  7397  14A1                     l2689:
  7398  14A1  3001               	movlw	1
  7399  14A2  00DA               	movwf	??___fladd
  7400  14A3                     u3685:
  7401  14A3  1003               	clrc
  7402  14A4  0DD2               	rlf	___fladd@b,f
  7403  14A5  0DD3               	rlf	___fladd@b+1,f
  7404  14A6  0DD4               	rlf	___fladd@b+2,f
  7405  14A7  0DD5               	rlf	___fladd@b+3,f
  7406  14A8  0BDA               	decfsz	??___fladd,f
  7407  14A9  2CA3               	goto	u3685
  7408  14AA                     l2691:
  7409  14AA  1FE5               	btfss	___fladd@grs,7
  7410  14AB  2CAD               	goto	u3691
  7411  14AC  2CAE               	goto	u3690
  7412  14AD                     u3691:
  7413  14AD  2CAF               	goto	l776
  7414  14AE                     u3690:
  7415  14AE                     l2693:
  7416  14AE  1452               	bsf	___fladd@b,0
  7417  14AF                     l776:
  7418  14AF  1C65               	btfss	___fladd@grs,0
  7419  14B0  2CB2               	goto	u3701
  7420  14B1  2CB3               	goto	u3700
  7421  14B2                     u3701:
  7422  14B2  2CB6               	goto	l2697
  7423  14B3                     u3700:
  7424  14B3                     l2695:
  7425  14B3  1403               	setc
  7426  14B4  0DE5               	rlf	___fladd@grs,f
  7427  14B5  2CB8               	goto	l2699
  7428  14B6                     l2697:
  7429  14B6  1003               	clrc
  7430  14B7  0DE5               	rlf	___fladd@grs,f
  7431  14B8                     l2699:
  7432  14B8  0864               	movf	___fladd@bexp,w
  7433  14B9  1903               	btfsc	3,2
  7434  14BA  2CBC               	goto	u3711
  7435  14BB  2CBD               	goto	u3710
  7436  14BC                     u3711:
  7437  14BC  2CBF               	goto	l2703
  7438  14BD                     u3710:
  7439  14BD                     l2701:
  7440  14BD  3001               	movlw	1
  7441  14BE  02E4               	subwf	___fladd@bexp,f
  7442  14BF                     l2703:
  7443  14BF  1FD4               	btfss	___fladd@b+2,7
  7444  14C0  2CC2               	goto	u3721
  7445  14C1  2CC3               	goto	u3720
  7446  14C2                     u3721:
  7447  14C2  2CA1               	goto	l2689
  7448  14C3                     u3720:
  7449  14C3                     l2705:
  7450  14C3  01E3               	clrf	___fladd@aexp
  7451  14C4                     l2707:
  7452  14C4  1FE5               	btfss	___fladd@grs,7
  7453  14C5  2CC7               	goto	u3731
  7454  14C6  2CC8               	goto	u3730
  7455  14C7                     u3731:
  7456  14C7  2CD6               	goto	l2715
  7457  14C8                     u3730:
  7458  14C8                     l2709:
  7459  14C8  0865               	movf	___fladd@grs,w
  7460  14C9  397F               	andlw	127
  7461  14CA  1903               	btfsc	3,2
  7462  14CB  2CCD               	goto	u3741
  7463  14CC  2CCE               	goto	u3740
  7464  14CD                     u3741:
  7465  14CD  2CD1               	goto	l782
  7466  14CE                     u3740:
  7467  14CE                     l2711:
  7468  14CE  01E3               	clrf	___fladd@aexp
  7469  14CF  0AE3               	incf	___fladd@aexp,f
  7470  14D0  2CD6               	goto	l2715
  7471  14D1                     l782:
  7472  14D1  1C52               	btfss	___fladd@b,0
  7473  14D2  2CD4               	goto	u3751
  7474  14D3  2CD5               	goto	u3750
  7475  14D4                     u3751:
  7476  14D4  2CD6               	goto	l2715
  7477  14D5                     u3750:
  7478  14D5  2CCE               	goto	l2711
  7479  14D6                     l2715:
  7480  14D6  0863               	movf	___fladd@aexp,w
  7481  14D7  1903               	btfsc	3,2
  7482  14D8  2CDA               	goto	u3761
  7483  14D9  2CDB               	goto	u3760
  7484  14DA                     u3761:
  7485  14DA  2D0F               	goto	l785
  7486  14DB                     u3760:
  7487  14DB                     l2717:
  7488  14DB  3001               	movlw	1
  7489  14DC  07D2               	addwf	___fladd@b,f
  7490  14DD  3000               	movlw	0
  7491  14DE  1803               	skipnc
  7492  14DF  3001               	movlw	1
  7493  14E0  07D3               	addwf	___fladd@b+1,f
  7494  14E1  3000               	movlw	0
  7495  14E2  1803               	skipnc
  7496  14E3  3001               	movlw	1
  7497  14E4  07D4               	addwf	___fladd@b+2,f
  7498  14E5  3000               	movlw	0
  7499  14E6  1803               	skipnc
  7500  14E7  3001               	movlw	1
  7501  14E8  07D5               	addwf	___fladd@b+3,f
  7502  14E9                     l2719:
  7503  14E9  1C55               	btfss	___fladd@b+3,0
  7504  14EA  2CEC               	goto	u3771
  7505  14EB  2CED               	goto	u3770
  7506  14EC                     u3771:
  7507  14EC  2D0F               	goto	l785
  7508  14ED                     u3770:
  7509  14ED                     l2721:
  7510  14ED  0852               	movf	___fladd@b,w
  7511  14EE  00DA               	movwf	??___fladd
  7512  14EF  0853               	movf	___fladd@b+1,w
  7513  14F0  00DB               	movwf	??___fladd+1
  7514  14F1  0854               	movf	___fladd@b+2,w
  7515  14F2  00DC               	movwf	??___fladd+2
  7516  14F3  0855               	movf	___fladd@b+3,w
  7517  14F4  00DD               	movwf	??___fladd+3
  7518  14F5  3001               	movlw	1
  7519  14F6  00DE               	movwf	??___fladd+4
  7520  14F7                     u3785:
  7521  14F7  0D5D               	rlf	??___fladd+3,w
  7522  14F8  0CDD               	rrf	??___fladd+3,f
  7523  14F9  0CDC               	rrf	??___fladd+2,f
  7524  14FA  0CDB               	rrf	??___fladd+1,f
  7525  14FB  0CDA               	rrf	??___fladd,f
  7526  14FC                     u3780:
  7527  14FC  0BDE               	decfsz	??___fladd+4,f
  7528  14FD  2CF7               	goto	u3785
  7529  14FE  085D               	movf	??___fladd+3,w
  7530  14FF  00D5               	movwf	___fladd@b+3
  7531  1500  085C               	movf	??___fladd+2,w
  7532  1501  00D4               	movwf	___fladd@b+2
  7533  1502  085B               	movf	??___fladd+1,w
  7534  1503  00D3               	movwf	___fladd@b+1
  7535  1504  085A               	movf	??___fladd,w
  7536  1505  00D2               	movwf	___fladd@b
  7537  1506  0A64               	incf	___fladd@bexp,w
  7538  1507  1903               	btfsc	3,2
  7539  1508  2D0A               	goto	u3791
  7540  1509  2D0B               	goto	u3790
  7541  150A                     u3791:
  7542  150A  2D0F               	goto	l785
  7543  150B                     u3790:
  7544  150B                     l2723:
  7545  150B  3001               	movlw	1
  7546  150C  00DA               	movwf	??___fladd
  7547  150D  085A               	movf	??___fladd,w
  7548  150E  07E4               	addwf	___fladd@bexp,f
  7549  150F                     l785:
  7550  150F  0A64               	incf	___fladd@bexp,w
  7551  1510  1903               	btfsc	3,2
  7552  1511  2D13               	goto	u3801
  7553  1512  2D14               	goto	u3800
  7554  1513                     u3801:
  7555  1513  2D19               	goto	l2727
  7556  1514                     u3800:
  7557  1514                     l2725:
  7558  1514  0864               	movf	___fladd@bexp,w
  7559  1515  1D03               	btfss	3,2
  7560  1516  2D18               	goto	u3811
  7561  1517  2D19               	goto	u3810
  7562  1518                     u3811:
  7563  1518  2D27               	goto	l2733
  7564  1519                     u3810:
  7565  1519                     l2727:
  7566  1519  3000               	movlw	0
  7567  151A  00D5               	movwf	___fladd@b+3
  7568  151B  3000               	movlw	0
  7569  151C  00D4               	movwf	___fladd@b+2
  7570  151D  3000               	movlw	0
  7571  151E  00D3               	movwf	___fladd@b+1
  7572  151F  3000               	movlw	0
  7573  1520  00D2               	movwf	___fladd@b
  7574  1521                     l2729:
  7575  1521  0864               	movf	___fladd@bexp,w
  7576  1522  1D03               	btfss	3,2
  7577  1523  2D25               	goto	u3821
  7578  1524  2D26               	goto	u3820
  7579  1525                     u3821:
  7580  1525  2D27               	goto	l2733
  7581  1526                     u3820:
  7582  1526                     l2731:
  7583  1526  01E2               	clrf	___fladd@signs
  7584  1527                     l2733:
  7585  1527  1C64               	btfss	___fladd@bexp,0
  7586  1528  2D2A               	goto	u3831
  7587  1529  2D2B               	goto	u3830
  7588  152A                     u3831:
  7589  152A  2D2D               	goto	l2737
  7590  152B                     u3830:
  7591  152B                     l2735:
  7592  152B  17D4               	bsf	___fladd@b+2,7
  7593  152C  2D31               	goto	l793
  7594  152D                     l2737:
  7595  152D  307F               	movlw	127
  7596  152E  00DA               	movwf	??___fladd
  7597  152F  085A               	movf	??___fladd,w
  7598  1530  05D4               	andwf	___fladd@b+2,f
  7599  1531                     l793:
  7600  1531  0864               	movf	___fladd@bexp,w
  7601  1532  00DA               	movwf	??___fladd
  7602  1533  1003               	clrc
  7603  1534  0C5A               	rrf	??___fladd,w
  7604  1535  00DB               	movwf	??___fladd+1
  7605  1536  085B               	movf	??___fladd+1,w
  7606  1537  00D5               	movwf	___fladd@b+3
  7607  1538                     l2739:
  7608  1538  1FE2               	btfss	___fladd@signs,7
  7609  1539  2D3B               	goto	u3841
  7610  153A  2D3C               	goto	u3840
  7611  153B                     u3841:
  7612  153B  2D3D               	goto	l794
  7613  153C                     u3840:
  7614  153C                     l2741:
  7615  153C  17D5               	bsf	___fladd@b+3,7
  7616  153D                     l794:
  7617  153D                     l764:
  7618  153D  0008               	return
  7619  153E                     __end_of___fladd:
  7620                           
  7621                           	psect	text20
  7622  1950                     __ptext20:	
  7623 ;; *************** function ___flneg *****************
  7624 ;; Defined at:
  7625 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  f1              4    0[COMMON] unsigned char 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;		None
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  4    0[COMMON] unsigned char 
  7632 ;; Registers used:
  7633 ;;		wreg
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7639 ;;      Params:         4       0       0       0       0
  7640 ;;      Locals:         0       0       0       0       0
  7641 ;;      Temps:          0       0       0       0       0
  7642 ;;      Totals:         4       0       0       0       0
  7643 ;;Total ram usage:        4 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; This function calls:
  7646 ;;		Nothing
  7647 ;; This function is called by:
  7648 ;;		_sprintf
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           
  7653                           ;psect for function ___flneg
  7654  1950                     ___flneg:
  7655  1950                     l3177:	
  7656                           ;incstack = 0
  7657                           ; Regs used in ___flneg: [wreg]
  7658                           
  7659  1950  0873               	movf	___flneg@f1+3,w
  7660  1951  0472               	iorwf	___flneg@f1+2,w
  7661  1952  0471               	iorwf	___flneg@f1+1,w
  7662  1953  0470               	iorwf	___flneg@f1,w
  7663  1954  1903               	skipnz
  7664  1955  2957               	goto	u4981
  7665  1956  2958               	goto	u4980
  7666  1957                     u4981:
  7667  1957  295A               	goto	l3181
  7668  1958                     u4980:
  7669  1958                     l3179:
  7670  1958  3080               	movlw	128
  7671  1959  06F3               	xorwf	___flneg@f1+3,f
  7672  195A                     l3181:
  7673  195A                     l623:
  7674  195A  0008               	return
  7675  195B                     __end_of___flneg:
  7676                           
  7677                           	psect	text21
  7678  1009                     __ptext21:	
  7679 ;; *************** function ___flge *****************
  7680 ;; Defined at:
  7681 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  ff1             4    0[COMMON] unsigned char 
  7684 ;;  ff2             4    4[COMMON] unsigned char 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;		None
  7687 ;; Return value:  Size  Location     Type
  7688 ;;		None               void
  7689 ;; Registers used:
  7690 ;;		wreg, status,2, status,0
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7696 ;;      Params:         8       0       0       0       0
  7697 ;;      Locals:         0       0       0       0       0
  7698 ;;      Temps:          4       0       0       0       0
  7699 ;;      Totals:        12       0       0       0       0
  7700 ;;Total ram usage:       12 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; This function calls:
  7703 ;;		Nothing
  7704 ;; This function is called by:
  7705 ;;		_sprintf
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           
  7710                           ;psect for function ___flge
  7711  1009                     ___flge:
  7712  1009                     l3157:	
  7713                           ;incstack = 0
  7714                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7715                           
  7716  1009  3000               	movlw	0
  7717  100A  0570               	andwf	___flge@ff1,w
  7718  100B  00F8               	movwf	??___flge
  7719  100C  3000               	movlw	0
  7720  100D  0571               	andwf	___flge@ff1+1,w
  7721  100E  00F9               	movwf	??___flge+1
  7722  100F  3080               	movlw	128
  7723  1010  0572               	andwf	___flge@ff1+2,w
  7724  1011  00FA               	movwf	??___flge+2
  7725  1012  307F               	movlw	127
  7726  1013  0573               	andwf	___flge@ff1+3,w
  7727  1014  00FB               	movwf	??___flge+3
  7728  1015  087B               	movf	??___flge+3,w
  7729  1016  047A               	iorwf	??___flge+2,w
  7730  1017  0479               	iorwf	??___flge+1,w
  7731  1018  0478               	iorwf	??___flge,w
  7732  1019  1D03               	skipz
  7733  101A  281C               	goto	u4911
  7734  101B  281D               	goto	u4910
  7735  101C                     u4911:
  7736  101C  2825               	goto	l615
  7737  101D                     u4910:
  7738  101D                     l3159:
  7739  101D  3000               	movlw	0
  7740  101E  00F3               	movwf	___flge@ff1+3
  7741  101F  3000               	movlw	0
  7742  1020  00F2               	movwf	___flge@ff1+2
  7743  1021  3000               	movlw	0
  7744  1022  00F1               	movwf	___flge@ff1+1
  7745  1023  3000               	movlw	0
  7746  1024  00F0               	movwf	___flge@ff1
  7747  1025                     l615:
  7748  1025  3000               	movlw	0
  7749  1026  0574               	andwf	___flge@ff2,w
  7750  1027  00F8               	movwf	??___flge
  7751  1028  3000               	movlw	0
  7752  1029  0575               	andwf	___flge@ff2+1,w
  7753  102A  00F9               	movwf	??___flge+1
  7754  102B  3080               	movlw	128
  7755  102C  0576               	andwf	___flge@ff2+2,w
  7756  102D  00FA               	movwf	??___flge+2
  7757  102E  307F               	movlw	127
  7758  102F  0577               	andwf	___flge@ff2+3,w
  7759  1030  00FB               	movwf	??___flge+3
  7760  1031  087B               	movf	??___flge+3,w
  7761  1032  047A               	iorwf	??___flge+2,w
  7762  1033  0479               	iorwf	??___flge+1,w
  7763  1034  0478               	iorwf	??___flge,w
  7764  1035  1D03               	skipz
  7765  1036  2838               	goto	u4921
  7766  1037  2839               	goto	u4920
  7767  1038                     u4921:
  7768  1038  2841               	goto	l3163
  7769  1039                     u4920:
  7770  1039                     l3161:
  7771  1039  3000               	movlw	0
  7772  103A  00F7               	movwf	___flge@ff2+3
  7773  103B  3000               	movlw	0
  7774  103C  00F6               	movwf	___flge@ff2+2
  7775  103D  3000               	movlw	0
  7776  103E  00F5               	movwf	___flge@ff2+1
  7777  103F  3000               	movlw	0
  7778  1040  00F4               	movwf	___flge@ff2
  7779  1041                     l3163:
  7780  1041  1FF3               	btfss	___flge@ff1+3,7
  7781  1042  2844               	goto	u4931
  7782  1043  2845               	goto	u4930
  7783  1044                     u4931:
  7784  1044  2869               	goto	l3167
  7785  1045                     u4930:
  7786  1045                     l3165:
  7787  1045  3000               	movlw	0
  7788  1046  00F8               	movwf	??___flge
  7789  1047  3000               	movlw	0
  7790  1048  00F9               	movwf	??___flge+1
  7791  1049  3000               	movlw	0
  7792  104A  00FA               	movwf	??___flge+2
  7793  104B  3080               	movlw	128
  7794  104C  00FB               	movwf	??___flge+3
  7795  104D  0870               	movf	___flge@ff1,w
  7796  104E  02F8               	subwf	??___flge,f
  7797  104F  0871               	movf	___flge@ff1+1,w
  7798  1050  1C03               	skipc
  7799  1051  0F71               	incfsz	___flge@ff1+1,w
  7800  1052  2854               	goto	u4941
  7801  1053  2855               	goto	u4942
  7802  1054                     u4941:
  7803  1054  02F9               	subwf	??___flge+1,f
  7804  1055                     u4942:
  7805  1055  0872               	movf	___flge@ff1+2,w
  7806  1056  1C03               	skipc
  7807  1057  0F72               	incfsz	___flge@ff1+2,w
  7808  1058  285A               	goto	u4943
  7809  1059  285B               	goto	u4944
  7810  105A                     u4943:
  7811  105A  02FA               	subwf	??___flge+2,f
  7812  105B                     u4944:
  7813  105B  0873               	movf	___flge@ff1+3,w
  7814  105C  1C03               	skipc
  7815  105D  0F73               	incfsz	___flge@ff1+3,w
  7816  105E  2860               	goto	u4945
  7817  105F  2861               	goto	u4946
  7818  1060                     u4945:
  7819  1060  02FB               	subwf	??___flge+3,f
  7820  1061                     u4946:
  7821  1061  087B               	movf	??___flge+3,w
  7822  1062  00F3               	movwf	___flge@ff1+3
  7823  1063  087A               	movf	??___flge+2,w
  7824  1064  00F2               	movwf	___flge@ff1+2
  7825  1065  0879               	movf	??___flge+1,w
  7826  1066  00F1               	movwf	___flge@ff1+1
  7827  1067  0878               	movf	??___flge,w
  7828  1068  00F0               	movwf	___flge@ff1
  7829  1069                     l3167:
  7830  1069  1FF7               	btfss	___flge@ff2+3,7
  7831  106A  286C               	goto	u4951
  7832  106B  286D               	goto	u4950
  7833  106C                     u4951:
  7834  106C  2891               	goto	l618
  7835  106D                     u4950:
  7836  106D                     l3169:
  7837  106D  3000               	movlw	0
  7838  106E  00F8               	movwf	??___flge
  7839  106F  3000               	movlw	0
  7840  1070  00F9               	movwf	??___flge+1
  7841  1071  3000               	movlw	0
  7842  1072  00FA               	movwf	??___flge+2
  7843  1073  3080               	movlw	128
  7844  1074  00FB               	movwf	??___flge+3
  7845  1075  0874               	movf	___flge@ff2,w
  7846  1076  02F8               	subwf	??___flge,f
  7847  1077  0875               	movf	___flge@ff2+1,w
  7848  1078  1C03               	skipc
  7849  1079  0F75               	incfsz	___flge@ff2+1,w
  7850  107A  287C               	goto	u4961
  7851  107B  287D               	goto	u4962
  7852  107C                     u4961:
  7853  107C  02F9               	subwf	??___flge+1,f
  7854  107D                     u4962:
  7855  107D  0876               	movf	___flge@ff2+2,w
  7856  107E  1C03               	skipc
  7857  107F  0F76               	incfsz	___flge@ff2+2,w
  7858  1080  2882               	goto	u4963
  7859  1081  2883               	goto	u4964
  7860  1082                     u4963:
  7861  1082  02FA               	subwf	??___flge+2,f
  7862  1083                     u4964:
  7863  1083  0877               	movf	___flge@ff2+3,w
  7864  1084  1C03               	skipc
  7865  1085  0F77               	incfsz	___flge@ff2+3,w
  7866  1086  2888               	goto	u4965
  7867  1087  2889               	goto	u4966
  7868  1088                     u4965:
  7869  1088  02FB               	subwf	??___flge+3,f
  7870  1089                     u4966:
  7871  1089  087B               	movf	??___flge+3,w
  7872  108A  00F7               	movwf	___flge@ff2+3
  7873  108B  087A               	movf	??___flge+2,w
  7874  108C  00F6               	movwf	___flge@ff2+2
  7875  108D  0879               	movf	??___flge+1,w
  7876  108E  00F5               	movwf	___flge@ff2+1
  7877  108F  0878               	movf	??___flge,w
  7878  1090  00F4               	movwf	___flge@ff2
  7879  1091                     l618:
  7880  1091  3080               	movlw	128
  7881  1092  06F3               	xorwf	___flge@ff1+3,f
  7882  1093  3080               	movlw	128
  7883  1094  06F7               	xorwf	___flge@ff2+3,f
  7884  1095  0877               	movf	___flge@ff2+3,w
  7885  1096  0273               	subwf	___flge@ff1+3,w
  7886  1097  1D03               	skipz
  7887  1098  28A3               	goto	u4975
  7888  1099  0876               	movf	___flge@ff2+2,w
  7889  109A  0272               	subwf	___flge@ff1+2,w
  7890  109B  1D03               	skipz
  7891  109C  28A3               	goto	u4975
  7892  109D  0875               	movf	___flge@ff2+1,w
  7893  109E  0271               	subwf	___flge@ff1+1,w
  7894  109F  1D03               	skipz
  7895  10A0  28A3               	goto	u4975
  7896  10A1  0874               	movf	___flge@ff2,w
  7897  10A2  0270               	subwf	___flge@ff1,w
  7898  10A3                     u4975:
  7899  10A3  1803               	skipnc
  7900  10A4  28A6               	goto	u4971
  7901  10A5  28A7               	goto	u4970
  7902  10A6                     u4971:
  7903  10A6  28A9               	goto	l3173
  7904  10A7                     u4970:
  7905  10A7                     l3171:
  7906  10A7  1003               	clrc
  7907  10A8  28AA               	goto	l619
  7908  10A9                     l3173:
  7909  10A9  1403               	setc
  7910  10AA                     l619:
  7911  10AA  0008               	return
  7912  10AB                     __end_of___flge:
  7913                           
  7914                           	psect	text22
  7915  00C9                     __ptext22:	
  7916 ;; *************** function ___fleq *****************
  7917 ;; Defined at:
  7918 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;  ff1             4    0[COMMON] unsigned char 
  7921 ;;  ff2             4    4[COMMON] unsigned char 
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;		None
  7924 ;; Return value:  Size  Location     Type
  7925 ;;		None               void
  7926 ;; Registers used:
  7927 ;;		wreg, status,2, status,0
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7933 ;;      Params:         8       0       0       0       0
  7934 ;;      Locals:         0       0       0       0       0
  7935 ;;      Temps:          4       0       0       0       0
  7936 ;;      Totals:        12       0       0       0       0
  7937 ;;Total ram usage:       12 bytes
  7938 ;; Hardware stack levels used:    1
  7939 ;; This function calls:
  7940 ;;		Nothing
  7941 ;; This function is called by:
  7942 ;;		_sprintf
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           
  7947                           ;psect for function ___fleq
  7948  00C9                     ___fleq:
  7949  00C9                     l3145:	
  7950                           ;incstack = 0
  7951                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7952                           
  7953  00C9  3000               	movlw	0
  7954  00CA  0570               	andwf	___fleq@ff1,w
  7955  00CB  00F8               	movwf	??___fleq
  7956  00CC  3000               	movlw	0
  7957  00CD  0571               	andwf	___fleq@ff1+1,w
  7958  00CE  00F9               	movwf	??___fleq+1
  7959  00CF  3080               	movlw	128
  7960  00D0  0572               	andwf	___fleq@ff1+2,w
  7961  00D1  00FA               	movwf	??___fleq+2
  7962  00D2  307F               	movlw	127
  7963  00D3  0573               	andwf	___fleq@ff1+3,w
  7964  00D4  00FB               	movwf	??___fleq+3
  7965  00D5  087B               	movf	??___fleq+3,w
  7966  00D6  047A               	iorwf	??___fleq+2,w
  7967  00D7  0479               	iorwf	??___fleq+1,w
  7968  00D8  0478               	iorwf	??___fleq,w
  7969  00D9  1D03               	skipz
  7970  00DA  28DC               	goto	u4881
  7971  00DB  28DD               	goto	u4880
  7972  00DC                     u4881:
  7973  00DC  28E5               	goto	l610
  7974  00DD                     u4880:
  7975  00DD                     l3147:
  7976  00DD  3000               	movlw	0
  7977  00DE  00F3               	movwf	___fleq@ff1+3
  7978  00DF  3000               	movlw	0
  7979  00E0  00F2               	movwf	___fleq@ff1+2
  7980  00E1  3000               	movlw	0
  7981  00E2  00F1               	movwf	___fleq@ff1+1
  7982  00E3  3000               	movlw	0
  7983  00E4  00F0               	movwf	___fleq@ff1
  7984  00E5                     l610:
  7985  00E5  3000               	movlw	0
  7986  00E6  0574               	andwf	___fleq@ff2,w
  7987  00E7  00F8               	movwf	??___fleq
  7988  00E8  3000               	movlw	0
  7989  00E9  0575               	andwf	___fleq@ff2+1,w
  7990  00EA  00F9               	movwf	??___fleq+1
  7991  00EB  3080               	movlw	128
  7992  00EC  0576               	andwf	___fleq@ff2+2,w
  7993  00ED  00FA               	movwf	??___fleq+2
  7994  00EE  307F               	movlw	127
  7995  00EF  0577               	andwf	___fleq@ff2+3,w
  7996  00F0  00FB               	movwf	??___fleq+3
  7997  00F1  087B               	movf	??___fleq+3,w
  7998  00F2  047A               	iorwf	??___fleq+2,w
  7999  00F3  0479               	iorwf	??___fleq+1,w
  8000  00F4  0478               	iorwf	??___fleq,w
  8001  00F5  1D03               	skipz
  8002  00F6  28F8               	goto	u4891
  8003  00F7  28F9               	goto	u4890
  8004  00F8                     u4891:
  8005  00F8  2901               	goto	l611
  8006  00F9                     u4890:
  8007  00F9                     l3149:
  8008  00F9  3000               	movlw	0
  8009  00FA  00F7               	movwf	___fleq@ff2+3
  8010  00FB  3000               	movlw	0
  8011  00FC  00F6               	movwf	___fleq@ff2+2
  8012  00FD  3000               	movlw	0
  8013  00FE  00F5               	movwf	___fleq@ff2+1
  8014  00FF  3000               	movlw	0
  8015  0100  00F4               	movwf	___fleq@ff2
  8016  0101                     l611:
  8017  0101  0877               	movf	___fleq@ff2+3,w
  8018  0102  0673               	xorwf	___fleq@ff1+3,w
  8019  0103  1D03               	skipz
  8020  0104  290F               	goto	u4905
  8021  0105  0876               	movf	___fleq@ff2+2,w
  8022  0106  0672               	xorwf	___fleq@ff1+2,w
  8023  0107  1D03               	skipz
  8024  0108  290F               	goto	u4905
  8025  0109  0875               	movf	___fleq@ff2+1,w
  8026  010A  0671               	xorwf	___fleq@ff1+1,w
  8027  010B  1D03               	skipz
  8028  010C  290F               	goto	u4905
  8029  010D  0874               	movf	___fleq@ff2,w
  8030  010E  0670               	xorwf	___fleq@ff1,w
  8031  010F                     u4905:
  8032  010F  1903               	skipnz
  8033  0110  2912               	goto	u4901
  8034  0111  2913               	goto	u4900
  8035  0112                     u4901:
  8036  0112  2915               	goto	l3153
  8037  0113                     u4900:
  8038  0113                     l3151:
  8039  0113  1003               	clrc
  8040  0114  2916               	goto	l612
  8041  0115                     l3153:
  8042  0115  1403               	setc
  8043  0116                     l612:
  8044  0116  0008               	return
  8045  0117                     __end_of___fleq:
  8046                           
  8047                           	psect	text23
  8048  19DB                     __ptext23:	
  8049 ;; *************** function _setup *****************
  8050 ;; Defined at:
  8051 ;;		line 104 in file "main.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;		None
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;		None
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      void 
  8058 ;; Registers used:
  8059 ;;		wreg, status,2, status,0, pclath, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8065 ;;      Params:         0       0       0       0       0
  8066 ;;      Locals:         0       0       0       0       0
  8067 ;;      Temps:          0       0       0       0       0
  8068 ;;      Totals:         0       0       0       0       0
  8069 ;;Total ram usage:        0 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    1
  8072 ;; This function calls:
  8073 ;;		_spiInit
  8074 ;; This function is called by:
  8075 ;;		_main
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           
  8080                           ;psect for function _setup
  8081  19DB                     _setup:
  8082  19DB                     l3353:	
  8083                           ;incstack = 0
  8084                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  8085                           
  8086                           
  8087                           ;main.c: 105:     ANSEL = 0;
  8088  19DB  1683               	bsf	3,5	;RP0=1, select bank3
  8089  19DC  1703               	bsf	3,6	;RP1=1, select bank3
  8090  19DD  0188               	clrf	8	;volatile
  8091                           
  8092                           ;main.c: 106:     ANSELH = 0;
  8093  19DE  0189               	clrf	9	;volatile
  8094                           
  8095                           ;main.c: 107:     TRISB = 0;
  8096  19DF  1683               	bsf	3,5	;RP0=1, select bank1
  8097  19E0  1303               	bcf	3,6	;RP1=0, select bank1
  8098  19E1  0186               	clrf	6	;volatile
  8099                           
  8100                           ;main.c: 108:     TRISE = 0;
  8101  19E2  0189               	clrf	9	;volatile
  8102                           
  8103                           ;main.c: 109:     TRISD = 0;
  8104  19E3  0188               	clrf	8	;volatile
  8105                           
  8106                           ;main.c: 111:     PORTE = 0;
  8107  19E4  1283               	bcf	3,5	;RP0=0, select bank0
  8108  19E5  1303               	bcf	3,6	;RP1=0, select bank0
  8109  19E6  0189               	clrf	9	;volatile
  8110                           
  8111                           ;main.c: 112:     PORTD = 0;
  8112  19E7  0188               	clrf	8	;volatile
  8113                           
  8114                           ;main.c: 113:     PORTB = 0;
  8115  19E8  0186               	clrf	6	;volatile
  8116  19E9                     l3355:
  8117                           
  8118                           ;main.c: 115:     TRISC0 = 0;
  8119  19E9  1683               	bsf	3,5	;RP0=1, select bank1
  8120  19EA  1303               	bcf	3,6	;RP1=0, select bank1
  8121  19EB  1007               	bcf	7,0	;volatile
  8122  19EC                     l3357:
  8123                           
  8124                           ;main.c: 116:     TRISC1 = 0;
  8125  19EC  1087               	bcf	7,1	;volatile
  8126  19ED                     l3359:
  8127                           
  8128                           ;main.c: 117:     TRISC2 = 0;
  8129  19ED  1107               	bcf	7,2	;volatile
  8130  19EE                     l3361:
  8131                           
  8132                           ;main.c: 118:     PORTCbits.RC0 = 1;
  8133  19EE  1283               	bcf	3,5	;RP0=0, select bank0
  8134  19EF  1303               	bcf	3,6	;RP1=0, select bank0
  8135  19F0  1407               	bsf	7,0	;volatile
  8136  19F1                     l3363:
  8137                           
  8138                           ;main.c: 119:     PORTCbits.RC1 = 1;
  8139  19F1  1487               	bsf	7,1	;volatile
  8140  19F2                     l3365:
  8141                           
  8142                           ;main.c: 120:     PORTCbits.RC2 = 1;
  8143  19F2  1507               	bsf	7,2	;volatile
  8144  19F3                     l3367:
  8145                           
  8146                           ;main.c: 121:     PORTCbits.RC7 = 1;
  8147  19F3  1787               	bsf	7,7	;volatile
  8148  19F4                     l3369:
  8149                           
  8150                           ;main.c: 123:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W,
  8151  19F4  01F0               	clrf	spiInit@sDataSample
  8152  19F5  01F1               	clrf	spiInit@sClockIdle
  8153  19F6  01F2               	clrf	spiInit@sTransmitEdge
  8154  19F7  3020               	movlw	32
  8155  19F8  160A  158A  2186  160A  158A  	fcall	_spiInit
  8156  19FD                     l173:
  8157  19FD  0008               	return
  8158  19FE                     __end_of_setup:
  8159                           
  8160                           	psect	text24
  8161  1986                     __ptext24:	
  8162 ;; *************** function _spiInit *****************
  8163 ;; Defined at:
  8164 ;;		line 12 in file "SPI.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;  sType           1    wreg     enum E1292
  8167 ;;  sDataSample     1    0[COMMON] enum E1300
  8168 ;;  sClockIdle      1    1[COMMON] enum E1304
  8169 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;  sType           1    3[COMMON] enum E1292
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  1    wreg      void 
  8174 ;; Registers used:
  8175 ;;		wreg, status,2, status,0
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8181 ;;      Params:         3       0       0       0       0
  8182 ;;      Locals:         1       0       0       0       0
  8183 ;;      Temps:          0       0       0       0       0
  8184 ;;      Totals:         4       0       0       0       0
  8185 ;;Total ram usage:        4 bytes
  8186 ;; Hardware stack levels used:    1
  8187 ;; This function calls:
  8188 ;;		Nothing
  8189 ;; This function is called by:
  8190 ;;		_setup
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194                           
  8195                           ;psect for function _spiInit
  8196  1986                     _spiInit:
  8197                           
  8198                           ;incstack = 0
  8199                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  8200                           ;spiInit@sType stored from wreg
  8201  1986  00F3               	movwf	spiInit@sType
  8202  1987                     l2915:
  8203                           
  8204                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  8205  1987  1683               	bsf	3,5	;RP0=1, select bank1
  8206  1988  1303               	bcf	3,6	;RP1=0, select bank1
  8207  1989  1287               	bcf	7,5	;volatile
  8208                           
  8209                           ;SPI.c: 15:     if(sType & 0b00000100)
  8210  198A  1D73               	btfss	spiInit@sType,2
  8211  198B  298D               	goto	u4231
  8212  198C  298E               	goto	u4230
  8213  198D                     u4231:
  8214  198D  2992               	goto	l2921
  8215  198E                     u4230:
  8216  198E                     l2917:
  8217                           
  8218                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  8219  198E  0872               	movf	spiInit@sTransmitEdge,w
  8220  198F  0094               	movwf	20	;volatile
  8221  1990                     l2919:
  8222                           
  8223                           ;SPI.c: 18:         TRISC3 = 1;
  8224  1990  1587               	bsf	7,3	;volatile
  8225                           
  8226                           ;SPI.c: 19:     }
  8227  1991  2996               	goto	l201
  8228  1992                     l2921:
  8229                           
  8230                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  8231  1992  0870               	movf	spiInit@sDataSample,w
  8232  1993  0472               	iorwf	spiInit@sTransmitEdge,w
  8233  1994  0094               	movwf	20	;volatile
  8234  1995                     l2923:
  8235                           
  8236                           ;SPI.c: 23:         TRISC3 = 0;
  8237  1995  1187               	bcf	7,3	;volatile
  8238  1996                     l201:	
  8239                           ;SPI.c: 24:     }
  8240                           
  8241                           
  8242                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  8243  1996  0873               	movf	spiInit@sType,w
  8244  1997  0471               	iorwf	spiInit@sClockIdle,w
  8245  1998  1283               	bcf	3,5	;RP0=0, select bank0
  8246  1999  1303               	bcf	3,6	;RP1=0, select bank0
  8247  199A  0094               	movwf	20	;volatile
  8248  199B                     l202:
  8249  199B  0008               	return
  8250  199C                     __end_of_spiInit:
  8251                           
  8252                           	psect	text25
  8253  1BED                     __ptext25:	
  8254 ;; *************** function _leer_ADC *****************
  8255 ;; Defined at:
  8256 ;;		line 131 in file "main.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;		None
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;		None
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  1    wreg      void 
  8263 ;; Registers used:
  8264 ;;		wreg, status,2, status,0, pclath, cstack
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8270 ;;      Params:         0       0       0       0       0
  8271 ;;      Locals:         0       0       0       0       0
  8272 ;;      Temps:          0       4       0       0       0
  8273 ;;      Totals:         0       4       0       0       0
  8274 ;;Total ram usage:        4 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; Hardware stack levels required when called:    2
  8277 ;; This function calls:
  8278 ;;		___xxtofl
  8279 ;;		_spiRead
  8280 ;;		_spiWrite
  8281 ;; This function is called by:
  8282 ;;		_main
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           
  8287                           ;psect for function _leer_ADC
  8288  1BED                     _leer_ADC:
  8289  1BED                     l3383:	
  8290                           ;incstack = 0
  8291                           ; Regs used in _leer_ADC: [wreg+status,2+status,0+pclath+cstack]
  8292                           
  8293                           
  8294                           ;main.c: 132:     PORTCbits.RC0 = 0;
  8295  1BED  1283               	bcf	3,5	;RP0=0, select bank0
  8296  1BEE  1303               	bcf	3,6	;RP1=0, select bank0
  8297  1BEF  1007               	bcf	7,0	;volatile
  8298  1BF0                     l3385:
  8299                           
  8300                           ;main.c: 133:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8301  1BF0  3003               	movlw	3
  8302  1BF1  1283               	bcf	3,5	;RP0=0, select bank0
  8303  1BF2  1303               	bcf	3,6	;RP1=0, select bank0
  8304  1BF3  00A1               	movwf	??_leer_ADC+1
  8305  1BF4  3097               	movlw	151
  8306  1BF5  00A0               	movwf	??_leer_ADC
  8307  1BF6                     u5927:
  8308  1BF6  0BA0               	decfsz	??_leer_ADC,f
  8309  1BF7  2BF6               	goto	u5927
  8310  1BF8  0BA1               	decfsz	??_leer_ADC+1,f
  8311  1BF9  2BF6               	goto	u5927
  8312  1BFA                     l3387:
  8313                           
  8314                           ;main.c: 135:     spiWrite(1);
  8315  1BFA  3001               	movlw	1
  8316  1BFB  120A  118A  20C3  160A  158A  	fcall	_spiWrite
  8317  1C00                     l3389:
  8318                           
  8319                           ;main.c: 136:     volt = spiRead();
  8320  1C00  160A  118A  2000  160A  158A  	fcall	_spiRead
  8321  1C05  1283               	bcf	3,5	;RP0=0, select bank0
  8322  1C06  1303               	bcf	3,6	;RP1=0, select bank0
  8323  1C07  00A0               	movwf	??_leer_ADC
  8324  1C08  01A1               	clrf	??_leer_ADC+1
  8325  1C09  01A2               	clrf	??_leer_ADC+2
  8326  1C0A  01A3               	clrf	??_leer_ADC+3
  8327  1C0B  0823               	movf	??_leer_ADC+3,w
  8328  1C0C  00F3               	movwf	___xxtofl@val+3
  8329  1C0D  0822               	movf	??_leer_ADC+2,w
  8330  1C0E  00F2               	movwf	___xxtofl@val+2
  8331  1C0F  0821               	movf	??_leer_ADC+1,w
  8332  1C10  00F1               	movwf	___xxtofl@val+1
  8333  1C11  0820               	movf	??_leer_ADC,w
  8334  1C12  00F0               	movwf	___xxtofl@val
  8335  1C13  3000               	movlw	0
  8336  1C14  160A  158A  2689  160A  158A  	fcall	___xxtofl
  8337  1C19  0873               	movf	?___xxtofl+3,w
  8338  1C1A  1683               	bsf	3,5	;RP0=1, select bank1
  8339  1C1B  1303               	bcf	3,6	;RP1=0, select bank1
  8340  1C1C  00D5               	movwf	(_volt+3)^(0+128)
  8341  1C1D  0872               	movf	?___xxtofl+2,w
  8342  1C1E  00D4               	movwf	(_volt+2)^(0+128)
  8343  1C1F  0871               	movf	?___xxtofl+1,w
  8344  1C20  00D3               	movwf	(_volt+1)^(0+128)
  8345  1C21  0870               	movf	?___xxtofl,w
  8346  1C22  00D2               	movwf	_volt^(0+128)
  8347                           
  8348                           ;main.c: 138:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8349  1C23  3003               	movlw	3
  8350  1C24  1283               	bcf	3,5	;RP0=0, select bank0
  8351  1C25  1303               	bcf	3,6	;RP1=0, select bank0
  8352  1C26  00A1               	movwf	??_leer_ADC+1
  8353  1C27  3097               	movlw	151
  8354  1C28  00A0               	movwf	??_leer_ADC
  8355  1C29                     u5937:
  8356  1C29  0BA0               	decfsz	??_leer_ADC,f
  8357  1C2A  2C29               	goto	u5937
  8358  1C2B  0BA1               	decfsz	??_leer_ADC+1,f
  8359  1C2C  2C29               	goto	u5937
  8360  1C2D                     l3391:
  8361                           
  8362                           ;main.c: 139:     PORTCbits.RC0 = 1;
  8363  1C2D  1283               	bcf	3,5	;RP0=0, select bank0
  8364  1C2E  1303               	bcf	3,6	;RP1=0, select bank0
  8365  1C2F  1407               	bsf	7,0	;volatile
  8366                           
  8367                           ;main.c: 140:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8368  1C30  3003               	movlw	3
  8369  1C31  1283               	bcf	3,5	;RP0=0, select bank0
  8370  1C32  1303               	bcf	3,6	;RP1=0, select bank0
  8371  1C33  00A1               	movwf	??_leer_ADC+1
  8372  1C34  3097               	movlw	151
  8373  1C35  00A0               	movwf	??_leer_ADC
  8374  1C36                     u5947:
  8375  1C36  0BA0               	decfsz	??_leer_ADC,f
  8376  1C37  2C36               	goto	u5947
  8377  1C38  0BA1               	decfsz	??_leer_ADC+1,f
  8378  1C39  2C36               	goto	u5947
  8379  1C3A                     l179:
  8380  1C3A  0008               	return
  8381  1C3B                     __end_of_leer_ADC:
  8382                           
  8383                           	psect	text26
  8384  1E89                     __ptext26:	
  8385 ;; *************** function ___xxtofl *****************
  8386 ;; Defined at:
  8387 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;  sign            1    wreg     unsigned char 
  8390 ;;  val             4    0[COMMON] long 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;  sign            1    8[COMMON] unsigned char 
  8393 ;;  arg             4   10[COMMON] unsigned long 
  8394 ;;  exp             1    9[COMMON] unsigned char 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  4    0[COMMON] unsigned char 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2, status,0
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8404 ;;      Params:         4       0       0       0       0
  8405 ;;      Locals:         6       0       0       0       0
  8406 ;;      Temps:          4       0       0       0       0
  8407 ;;      Totals:        14       0       0       0       0
  8408 ;;Total ram usage:       14 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_leer_ADC
  8414 ;;		_temperatura
  8415 ;;		_sprintf
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           
  8420                           ;psect for function ___xxtofl
  8421  1E89                     ___xxtofl:
  8422                           
  8423                           ;incstack = 0
  8424                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8425                           ;___xxtofl@sign stored from wreg
  8426  1E89  00F8               	movwf	___xxtofl@sign
  8427  1E8A                     l3247:
  8428  1E8A  0878               	movf	___xxtofl@sign,w
  8429  1E8B  1903               	btfsc	3,2
  8430  1E8C  2E8E               	goto	u5151
  8431  1E8D  2E8F               	goto	u5150
  8432  1E8E                     u5151:
  8433  1E8E  2EA3               	goto	l3253
  8434  1E8F                     u5150:
  8435  1E8F                     l3249:
  8436  1E8F  1FF3               	btfss	___xxtofl@val+3,7
  8437  1E90  2E92               	goto	u5161
  8438  1E91  2E93               	goto	u5160
  8439  1E92                     u5161:
  8440  1E92  2EA3               	goto	l3253
  8441  1E93                     u5160:
  8442  1E93                     l3251:
  8443  1E93  0970               	comf	___xxtofl@val,w
  8444  1E94  00FA               	movwf	___xxtofl@arg
  8445  1E95  0971               	comf	___xxtofl@val+1,w
  8446  1E96  00FB               	movwf	___xxtofl@arg+1
  8447  1E97  0972               	comf	___xxtofl@val+2,w
  8448  1E98  00FC               	movwf	___xxtofl@arg+2
  8449  1E99  0973               	comf	___xxtofl@val+3,w
  8450  1E9A  00FD               	movwf	___xxtofl@arg+3
  8451  1E9B  0AFA               	incf	___xxtofl@arg,f
  8452  1E9C  1903               	skipnz
  8453  1E9D  0AFB               	incf	___xxtofl@arg+1,f
  8454  1E9E  1903               	skipnz
  8455  1E9F  0AFC               	incf	___xxtofl@arg+2,f
  8456  1EA0  1903               	skipnz
  8457  1EA1  0AFD               	incf	___xxtofl@arg+3,f
  8458  1EA2  2EAB               	goto	l891
  8459  1EA3                     l3253:
  8460  1EA3  0873               	movf	___xxtofl@val+3,w
  8461  1EA4  00FD               	movwf	___xxtofl@arg+3
  8462  1EA5  0872               	movf	___xxtofl@val+2,w
  8463  1EA6  00FC               	movwf	___xxtofl@arg+2
  8464  1EA7  0871               	movf	___xxtofl@val+1,w
  8465  1EA8  00FB               	movwf	___xxtofl@arg+1
  8466  1EA9  0870               	movf	___xxtofl@val,w
  8467  1EAA  00FA               	movwf	___xxtofl@arg
  8468  1EAB                     l891:
  8469  1EAB  0873               	movf	___xxtofl@val+3,w
  8470  1EAC  0472               	iorwf	___xxtofl@val+2,w
  8471  1EAD  0471               	iorwf	___xxtofl@val+1,w
  8472  1EAE  0470               	iorwf	___xxtofl@val,w
  8473  1EAF  1D03               	skipz
  8474  1EB0  2EB2               	goto	u5171
  8475  1EB1  2EB3               	goto	u5170
  8476  1EB2                     u5171:
  8477  1EB2  2EBC               	goto	l3259
  8478  1EB3                     u5170:
  8479  1EB3                     l3255:
  8480  1EB3  3000               	movlw	0
  8481  1EB4  00F3               	movwf	?___xxtofl+3
  8482  1EB5  3000               	movlw	0
  8483  1EB6  00F2               	movwf	?___xxtofl+2
  8484  1EB7  3000               	movlw	0
  8485  1EB8  00F1               	movwf	?___xxtofl+1
  8486  1EB9  3000               	movlw	0
  8487  1EBA  00F0               	movwf	?___xxtofl
  8488  1EBB  2F42               	goto	l893
  8489  1EBC                     l3259:
  8490  1EBC  3096               	movlw	150
  8491  1EBD  00F4               	movwf	??___xxtofl
  8492  1EBE  0874               	movf	??___xxtofl,w
  8493  1EBF  00F9               	movwf	___xxtofl@exp
  8494  1EC0  2ECE               	goto	l3263
  8495  1EC1                     l3261:
  8496  1EC1  3001               	movlw	1
  8497  1EC2  00F4               	movwf	??___xxtofl
  8498  1EC3  0874               	movf	??___xxtofl,w
  8499  1EC4  07F9               	addwf	___xxtofl@exp,f
  8500  1EC5  3001               	movlw	1
  8501  1EC6                     u5185:
  8502  1EC6  1003               	clrc
  8503  1EC7  0CFD               	rrf	___xxtofl@arg+3,f
  8504  1EC8  0CFC               	rrf	___xxtofl@arg+2,f
  8505  1EC9  0CFB               	rrf	___xxtofl@arg+1,f
  8506  1ECA  0CFA               	rrf	___xxtofl@arg,f
  8507  1ECB  3EFF               	addlw	-1
  8508  1ECC  1D03               	skipz
  8509  1ECD  2EC6               	goto	u5185
  8510  1ECE                     l3263:
  8511  1ECE  30FE               	movlw	254
  8512  1ECF  057D               	andwf	___xxtofl@arg+3,w
  8513  1ED0  1D03               	btfss	3,2
  8514  1ED1  2ED3               	goto	u5191
  8515  1ED2  2ED4               	goto	u5190
  8516  1ED3                     u5191:
  8517  1ED3  2EC1               	goto	l3261
  8518  1ED4                     u5190:
  8519  1ED4  2EF0               	goto	l897
  8520  1ED5                     l3265:
  8521  1ED5  3001               	movlw	1
  8522  1ED6  00F4               	movwf	??___xxtofl
  8523  1ED7  0874               	movf	??___xxtofl,w
  8524  1ED8  07F9               	addwf	___xxtofl@exp,f
  8525  1ED9                     l3267:
  8526  1ED9  3001               	movlw	1
  8527  1EDA  07FA               	addwf	___xxtofl@arg,f
  8528  1EDB  3000               	movlw	0
  8529  1EDC  1803               	skipnc
  8530  1EDD  3001               	movlw	1
  8531  1EDE  07FB               	addwf	___xxtofl@arg+1,f
  8532  1EDF  3000               	movlw	0
  8533  1EE0  1803               	skipnc
  8534  1EE1  3001               	movlw	1
  8535  1EE2  07FC               	addwf	___xxtofl@arg+2,f
  8536  1EE3  3000               	movlw	0
  8537  1EE4  1803               	skipnc
  8538  1EE5  3001               	movlw	1
  8539  1EE6  07FD               	addwf	___xxtofl@arg+3,f
  8540  1EE7                     l3269:
  8541  1EE7  3001               	movlw	1
  8542  1EE8                     u5205:
  8543  1EE8  1003               	clrc
  8544  1EE9  0CFD               	rrf	___xxtofl@arg+3,f
  8545  1EEA  0CFC               	rrf	___xxtofl@arg+2,f
  8546  1EEB  0CFB               	rrf	___xxtofl@arg+1,f
  8547  1EEC  0CFA               	rrf	___xxtofl@arg,f
  8548  1EED  3EFF               	addlw	-1
  8549  1EEE  1D03               	skipz
  8550  1EEF  2EE8               	goto	u5205
  8551  1EF0                     l897:
  8552  1EF0  30FF               	movlw	255
  8553  1EF1  057D               	andwf	___xxtofl@arg+3,w
  8554  1EF2  1D03               	btfss	3,2
  8555  1EF3  2EF5               	goto	u5211
  8556  1EF4  2EF6               	goto	u5210
  8557  1EF5                     u5211:
  8558  1EF5  2ED5               	goto	l3265
  8559  1EF6                     u5210:
  8560  1EF6  2F02               	goto	l3273
  8561  1EF7                     l3271:
  8562  1EF7  3001               	movlw	1
  8563  1EF8  02F9               	subwf	___xxtofl@exp,f
  8564  1EF9  3001               	movlw	1
  8565  1EFA  00F4               	movwf	??___xxtofl
  8566  1EFB                     u5225:
  8567  1EFB  1003               	clrc
  8568  1EFC  0DFA               	rlf	___xxtofl@arg,f
  8569  1EFD  0DFB               	rlf	___xxtofl@arg+1,f
  8570  1EFE  0DFC               	rlf	___xxtofl@arg+2,f
  8571  1EFF  0DFD               	rlf	___xxtofl@arg+3,f
  8572  1F00  0BF4               	decfsz	??___xxtofl,f
  8573  1F01  2EFB               	goto	u5225
  8574  1F02                     l3273:
  8575  1F02  1BFC               	btfsc	___xxtofl@arg+2,7
  8576  1F03  2F05               	goto	u5231
  8577  1F04  2F06               	goto	u5230
  8578  1F05                     u5231:
  8579  1F05  2F0C               	goto	l904
  8580  1F06                     u5230:
  8581  1F06                     l3275:
  8582  1F06  3002               	movlw	2
  8583  1F07  0279               	subwf	___xxtofl@exp,w
  8584  1F08  1803               	skipnc
  8585  1F09  2F0B               	goto	u5241
  8586  1F0A  2F0C               	goto	u5240
  8587  1F0B                     u5241:
  8588  1F0B  2EF7               	goto	l3271
  8589  1F0C                     u5240:
  8590  1F0C                     l904:
  8591  1F0C  1879               	btfsc	___xxtofl@exp,0
  8592  1F0D  2F0F               	goto	u5251
  8593  1F0E  2F10               	goto	u5250
  8594  1F0F                     u5251:
  8595  1F0F  2F18               	goto	l905
  8596  1F10                     u5250:
  8597  1F10                     l3277:
  8598  1F10  30FF               	movlw	255
  8599  1F11  05FA               	andwf	___xxtofl@arg,f
  8600  1F12  30FF               	movlw	255
  8601  1F13  05FB               	andwf	___xxtofl@arg+1,f
  8602  1F14  307F               	movlw	127
  8603  1F15  05FC               	andwf	___xxtofl@arg+2,f
  8604  1F16  30FF               	movlw	255
  8605  1F17  05FD               	andwf	___xxtofl@arg+3,f
  8606  1F18                     l905:
  8607  1F18  1003               	clrc
  8608  1F19  0CF9               	rrf	___xxtofl@exp,f
  8609  1F1A                     l3279:
  8610  1F1A  0879               	movf	___xxtofl@exp,w
  8611  1F1B  00F4               	movwf	??___xxtofl
  8612  1F1C  01F5               	clrf	??___xxtofl+1
  8613  1F1D  01F6               	clrf	??___xxtofl+2
  8614  1F1E  01F7               	clrf	??___xxtofl+3
  8615  1F1F  3018               	movlw	24
  8616  1F20                     u5265:
  8617  1F20  1003               	clrc
  8618  1F21  0DF4               	rlf	??___xxtofl,f
  8619  1F22  0DF5               	rlf	??___xxtofl+1,f
  8620  1F23  0DF6               	rlf	??___xxtofl+2,f
  8621  1F24  0DF7               	rlf	??___xxtofl+3,f
  8622  1F25                     u5260:
  8623  1F25  3EFF               	addlw	-1
  8624  1F26  1D03               	skipz
  8625  1F27  2F20               	goto	u5265
  8626  1F28  0874               	movf	??___xxtofl,w
  8627  1F29  04FA               	iorwf	___xxtofl@arg,f
  8628  1F2A  0875               	movf	??___xxtofl+1,w
  8629  1F2B  04FB               	iorwf	___xxtofl@arg+1,f
  8630  1F2C  0876               	movf	??___xxtofl+2,w
  8631  1F2D  04FC               	iorwf	___xxtofl@arg+2,f
  8632  1F2E  0877               	movf	??___xxtofl+3,w
  8633  1F2F  04FD               	iorwf	___xxtofl@arg+3,f
  8634  1F30                     l3281:
  8635  1F30  0878               	movf	___xxtofl@sign,w
  8636  1F31  1903               	btfsc	3,2
  8637  1F32  2F34               	goto	u5271
  8638  1F33  2F35               	goto	u5270
  8639  1F34                     u5271:
  8640  1F34  2F3A               	goto	l3287
  8641  1F35                     u5270:
  8642  1F35                     l3283:
  8643  1F35  1FF3               	btfss	___xxtofl@val+3,7
  8644  1F36  2F38               	goto	u5281
  8645  1F37  2F39               	goto	u5280
  8646  1F38                     u5281:
  8647  1F38  2F3A               	goto	l3287
  8648  1F39                     u5280:
  8649  1F39                     l3285:
  8650  1F39  17FD               	bsf	___xxtofl@arg+3,7
  8651  1F3A                     l3287:
  8652  1F3A  087D               	movf	___xxtofl@arg+3,w
  8653  1F3B  00F3               	movwf	?___xxtofl+3
  8654  1F3C  087C               	movf	___xxtofl@arg+2,w
  8655  1F3D  00F2               	movwf	?___xxtofl+2
  8656  1F3E  087B               	movf	___xxtofl@arg+1,w
  8657  1F3F  00F1               	movwf	?___xxtofl+1
  8658  1F40  087A               	movf	___xxtofl@arg,w
  8659  1F41  00F0               	movwf	?___xxtofl
  8660  1F42                     l893:
  8661  1F42  0008               	return
  8662  1F43                     __end_of___xxtofl:
  8663                           
  8664                           	psect	text27
  8665  1946                     __ptext27:	
  8666 ;; *************** function _config_txsta *****************
  8667 ;; Defined at:
  8668 ;;		line 20 in file "./LIB_USART.h"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;		None
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;		None
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  1    wreg      void 
  8675 ;; Registers used:
  8676 ;;		None
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8682 ;;      Params:         0       0       0       0       0
  8683 ;;      Locals:         0       0       0       0       0
  8684 ;;      Temps:          0       0       0       0       0
  8685 ;;      Totals:         0       0       0       0       0
  8686 ;;Total ram usage:        0 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; This function calls:
  8689 ;;		Nothing
  8690 ;; This function is called by:
  8691 ;;		_main
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695                           
  8696                           ;psect for function _config_txsta
  8697  1946                     _config_txsta:
  8698  1946                     l3339:	
  8699                           ;incstack = 0
  8700                           ; Regs used in _config_txsta: []
  8701                           
  8702                           
  8703                           ;./LIB_USART.h: 21:     TXSTAbits.CSRC = 0;
  8704  1946  1683               	bsf	3,5	;RP0=1, select bank1
  8705  1947  1303               	bcf	3,6	;RP1=0, select bank1
  8706  1948  1398               	bcf	24,7	;volatile
  8707                           
  8708                           ;./LIB_USART.h: 22:     TXSTAbits.TX9 = 0;
  8709  1949  1318               	bcf	24,6	;volatile
  8710                           
  8711                           ;./LIB_USART.h: 23:     TXSTAbits.TXEN = 1;
  8712  194A  1698               	bsf	24,5	;volatile
  8713                           
  8714                           ;./LIB_USART.h: 24:     TXSTAbits.SYNC = 0;
  8715  194B  1218               	bcf	24,4	;volatile
  8716                           
  8717                           ;./LIB_USART.h: 25:     TXSTAbits.BRGH = 0;
  8718  194C  1118               	bcf	24,2	;volatile
  8719                           
  8720                           ;./LIB_USART.h: 26:     TXSTAbits.TRMT = 0;
  8721  194D  1098               	bcf	24,1	;volatile
  8722                           
  8723                           ;./LIB_USART.h: 27:     TXSTAbits.TX9D = 0;
  8724  194E  1018               	bcf	24,0	;volatile
  8725  194F                     l129:
  8726  194F  0008               	return
  8727  1950                     __end_of_config_txsta:
  8728                           
  8729                           	psect	text28
  8730  1936                     __ptext28:	
  8731 ;; *************** function _config_rcsta *****************
  8732 ;; Defined at:
  8733 ;;		line 30 in file "./LIB_USART.h"
  8734 ;; Parameters:    Size  Location     Type
  8735 ;;		None
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;		None
  8738 ;; Return value:  Size  Location     Type
  8739 ;;                  1    wreg      void 
  8740 ;; Registers used:
  8741 ;;		status,2
  8742 ;; Tracked objects:
  8743 ;;		On entry : 0/0
  8744 ;;		On exit  : 0/0
  8745 ;;		Unchanged: 0/0
  8746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8747 ;;      Params:         0       0       0       0       0
  8748 ;;      Locals:         0       0       0       0       0
  8749 ;;      Temps:          0       0       0       0       0
  8750 ;;      Totals:         0       0       0       0       0
  8751 ;;Total ram usage:        0 bytes
  8752 ;; Hardware stack levels used:    1
  8753 ;; This function calls:
  8754 ;;		Nothing
  8755 ;; This function is called by:
  8756 ;;		_main
  8757 ;; This function uses a non-reentrant model
  8758 ;;
  8759                           
  8760                           
  8761                           ;psect for function _config_rcsta
  8762  1936                     _config_rcsta:
  8763  1936                     l3341:	
  8764                           ;incstack = 0
  8765                           ; Regs used in _config_rcsta: [status,2]
  8766                           
  8767                           
  8768                           ;./LIB_USART.h: 31:     RCSTAbits.SPEN = 1;
  8769  1936  1283               	bcf	3,5	;RP0=0, select bank0
  8770  1937  1303               	bcf	3,6	;RP1=0, select bank0
  8771  1938  1798               	bsf	24,7	;volatile
  8772                           
  8773                           ;./LIB_USART.h: 32:     RCSTAbits.RX9 = 0;
  8774  1939  1318               	bcf	24,6	;volatile
  8775                           
  8776                           ;./LIB_USART.h: 33:     RCSTAbits.SREN = 0;
  8777  193A  1298               	bcf	24,5	;volatile
  8778                           
  8779                           ;./LIB_USART.h: 34:     RCSTAbits.CREN = 1;
  8780  193B  1618               	bsf	24,4	;volatile
  8781  193C                     l3343:
  8782                           
  8783                           ;./LIB_USART.h: 35:     RCREG = 0;
  8784  193C  019A               	clrf	26	;volatile
  8785  193D                     l132:
  8786  193D  0008               	return
  8787  193E                     __end_of_config_rcsta:
  8788                           
  8789                           	psect	text29
  8790  1A92                     __ptext29:	
  8791 ;; *************** function _Write_USART_String *****************
  8792 ;; Defined at:
  8793 ;;		line 42 in file "./LIB_USART.h"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;  a               2    1[COMMON] PTR unsigned char 
  8796 ;;		 -> STR_3(13), data(20), 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  i               1    4[COMMON] unsigned char 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8808 ;;      Params:         2       0       0       0       0
  8809 ;;      Locals:         1       0       0       0       0
  8810 ;;      Temps:          1       0       0       0       0
  8811 ;;      Totals:         4       0       0       0       0
  8812 ;;Total ram usage:        4 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    1
  8815 ;; This function calls:
  8816 ;;		_Write_USART
  8817 ;; This function is called by:
  8818 ;;		_main
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           
  8823                           ;psect for function _Write_USART_String
  8824  1A92                     _Write_USART_String:
  8825  1A92                     l3345:	
  8826                           ;incstack = 0
  8827                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8828                           
  8829                           
  8830                           ;./LIB_USART.h: 43:     uint8_t i;;./LIB_USART.h: 44:     for(i=0;a[i]!='\0';i++){
  8831  1A92  01F4               	clrf	Write_USART_String@i
  8832  1A93  2AA9               	goto	l3351
  8833  1A94                     l3347:
  8834                           
  8835                           ;./LIB_USART.h: 45:         Write_USART(a[i]);
  8836  1A94  0874               	movf	Write_USART_String@i,w
  8837  1A95  0771               	addwf	Write_USART_String@a,w
  8838  1A96  0084               	movwf	4
  8839  1A97  0872               	movf	Write_USART_String@a+1,w
  8840  1A98  1803               	skipnc
  8841  1A99  0A72               	incf	Write_USART_String@a+1,w
  8842  1A9A  00FF               	movwf	btemp+1
  8843  1A9B  120A  118A  2003  160A  158A  	fcall	stringtab
  8844  1AA0  160A  158A  215B  160A  158A  	fcall	_Write_USART
  8845  1AA5                     l3349:
  8846                           
  8847                           ;./LIB_USART.h: 46:     }
  8848  1AA5  3001               	movlw	1
  8849  1AA6  00F3               	movwf	??_Write_USART_String
  8850  1AA7  0873               	movf	??_Write_USART_String,w
  8851  1AA8  07F4               	addwf	Write_USART_String@i,f
  8852  1AA9                     l3351:
  8853  1AA9  0874               	movf	Write_USART_String@i,w
  8854  1AAA  0771               	addwf	Write_USART_String@a,w
  8855  1AAB  0084               	movwf	4
  8856  1AAC  0872               	movf	Write_USART_String@a+1,w
  8857  1AAD  1803               	skipnc
  8858  1AAE  0A72               	incf	Write_USART_String@a+1,w
  8859  1AAF  1283               	bcf	3,5	;RP0=0, select bank0
  8860  1AB0  1303               	bcf	3,6	;RP1=0, select bank0
  8861  1AB1  00FF               	movwf	btemp+1
  8862  1AB2  120A  118A  2003  160A  158A  	fcall	stringtab
  8863  1AB7  3A00               	xorlw	0
  8864  1AB8  1D03               	skipz
  8865  1AB9  2ABB               	goto	u5341
  8866  1ABA  2ABC               	goto	u5340
  8867  1ABB                     u5341:
  8868  1ABB  2A94               	goto	l3347
  8869  1ABC                     u5340:
  8870  1ABC                     l144:
  8871  1ABC  0008               	return
  8872  1ABD                     __end_of_Write_USART_String:
  8873                           
  8874                           	psect	text30
  8875  195B                     __ptext30:	
  8876 ;; *************** function _Write_USART *****************
  8877 ;; Defined at:
  8878 ;;		line 38 in file "./LIB_USART.h"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  a               1    wreg     unsigned char 
  8881 ;; Auto vars:     Size  Location     Type
  8882 ;;  a               1    0[COMMON] unsigned char 
  8883 ;; Return value:  Size  Location     Type
  8884 ;;                  1    wreg      void 
  8885 ;; Registers used:
  8886 ;;		wreg
  8887 ;; Tracked objects:
  8888 ;;		On entry : 0/0
  8889 ;;		On exit  : 0/0
  8890 ;;		Unchanged: 0/0
  8891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8892 ;;      Params:         0       0       0       0       0
  8893 ;;      Locals:         1       0       0       0       0
  8894 ;;      Temps:          0       0       0       0       0
  8895 ;;      Totals:         1       0       0       0       0
  8896 ;;Total ram usage:        1 bytes
  8897 ;; Hardware stack levels used:    1
  8898 ;; This function calls:
  8899 ;;		Nothing
  8900 ;; This function is called by:
  8901 ;;		_Write_USART_String
  8902 ;;		_main
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906                           
  8907                           ;psect for function _Write_USART
  8908  195B                     _Write_USART:
  8909                           
  8910                           ;incstack = 0
  8911                           ; Regs used in _Write_USART: [wreg]
  8912                           ;Write_USART@a stored from wreg
  8913  195B  00F0               	movwf	Write_USART@a
  8914  195C                     l2911:
  8915  195C                     l135:	
  8916                           ;./LIB_USART.h: 39:     while(!TRMT);
  8917                           
  8918  195C  1683               	bsf	3,5	;RP0=1, select bank1
  8919  195D  1303               	bcf	3,6	;RP1=0, select bank1
  8920  195E  1C98               	btfss	24,1	;volatile
  8921  195F  2961               	goto	u4221
  8922  1960  2962               	goto	u4220
  8923  1961                     u4221:
  8924  1961  295C               	goto	l135
  8925  1962                     u4220:
  8926  1962                     l2913:
  8927                           
  8928                           ;./LIB_USART.h: 40:     TXREG=a;
  8929  1962  0870               	movf	Write_USART@a,w
  8930  1963  1283               	bcf	3,5	;RP0=0, select bank0
  8931  1964  1303               	bcf	3,6	;RP1=0, select bank0
  8932  1965  0099               	movwf	25	;volatile
  8933  1966                     l138:
  8934  1966  0008               	return
  8935  1967                     __end_of_Write_USART:
  8936                           
  8937                           	psect	text31
  8938  0801                     __ptext31:	
  8939 ;; *************** function _OSCILADOR *****************
  8940 ;; Defined at:
  8941 ;;		line 127 in file "main.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;		None
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;		None
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      void 
  8948 ;; Registers used:
  8949 ;;		wreg
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8955 ;;      Params:         0       0       0       0       0
  8956 ;;      Locals:         0       0       0       0       0
  8957 ;;      Temps:          0       0       0       0       0
  8958 ;;      Totals:         0       0       0       0       0
  8959 ;;Total ram usage:        0 bytes
  8960 ;; Hardware stack levels used:    1
  8961 ;; This function calls:
  8962 ;;		Nothing
  8963 ;; This function is called by:
  8964 ;;		_main
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           
  8969                           ;psect for function _OSCILADOR
  8970  0801                     _OSCILADOR:
  8971  0801                     l3371:	
  8972                           ;incstack = 0
  8973                           ; Regs used in _OSCILADOR: [wreg]
  8974                           
  8975                           
  8976                           ;main.c: 128:     OSCCON = 0b01110001;
  8977  0801  3071               	movlw	113
  8978  0802  1683               	bsf	3,5	;RP0=1, select bank1
  8979  0803  1303               	bcf	3,6	;RP1=0, select bank1
  8980  0804  008F               	movwf	15	;volatile
  8981  0805                     l176:
  8982  0805  0008               	return
  8983  0806                     __end_of_OSCILADOR:
  8984                           
  8985                           	psect	text32
  8986  1B67                     __ptext32:	
  8987 ;; *************** function _Lcd_Write_String *****************
  8988 ;; Defined at:
  8989 ;;		line 126 in file "./LIB_LCD.h"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;  a               2    3[COMMON] PTR unsigned char 
  8992 ;;		 -> data(20), STR_1(13), 
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;  i               2    8[COMMON] int 
  8995 ;; Return value:  Size  Location     Type
  8996 ;;                  1    wreg      void 
  8997 ;; Registers used:
  8998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9004 ;;      Params:         2       0       0       0       0
  9005 ;;      Locals:         2       0       0       0       0
  9006 ;;      Temps:          3       0       0       0       0
  9007 ;;      Totals:         7       0       0       0       0
  9008 ;;Total ram usage:        7 bytes
  9009 ;; Hardware stack levels used:    1
  9010 ;; Hardware stack levels required when called:    2
  9011 ;; This function calls:
  9012 ;;		_LCD_CMD
  9013 ;; This function is called by:
  9014 ;;		_main
  9015 ;; This function uses a non-reentrant model
  9016 ;;
  9017                           
  9018                           
  9019                           ;psect for function _Lcd_Write_String
  9020  1B67                     _Lcd_Write_String:
  9021  1B67                     l3329:	
  9022                           ;incstack = 0
  9023                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9024                           
  9025                           
  9026                           ;./LIB_LCD.h: 127:  int i;;./LIB_LCD.h: 128:  for(i=0;a[i]!='\0';i++)
  9027  1B67  01F8               	clrf	Lcd_Write_String@i
  9028  1B68  01F9               	clrf	Lcd_Write_String@i+1
  9029  1B69  2B8C               	goto	l3335
  9030  1B6A                     l3331:
  9031                           
  9032                           ;./LIB_LCD.h: 129:     LCD_CMD(a[i]);
  9033  1B6A  0878               	movf	Lcd_Write_String@i,w
  9034  1B6B  0773               	addwf	Lcd_Write_String@a,w
  9035  1B6C  00F6               	movwf	??_Lcd_Write_String+1
  9036  1B6D  0874               	movf	Lcd_Write_String@a+1,w
  9037  1B6E  00F5               	movwf	??_Lcd_Write_String
  9038  1B6F  1803               	skipnc
  9039  1B70  0AF5               	incf	??_Lcd_Write_String,f
  9040  1B71  1FF8               	btfss	Lcd_Write_String@i,7
  9041  1B72  2B74               	goto	u5310
  9042  1B73  03F5               	decf	??_Lcd_Write_String,f
  9043  1B74                     u5310:
  9044  1B74  0875               	movf	??_Lcd_Write_String,w
  9045  1B75  00F7               	movwf	??_Lcd_Write_String+2
  9046  1B76  0877               	movf	??_Lcd_Write_String+2,w
  9047  1B77  1283               	bcf	3,5	;RP0=0, select bank0
  9048  1B78  1303               	bcf	3,6	;RP1=0, select bank0
  9049  1B79  00FF               	movwf	btemp+1
  9050  1B7A  0876               	movf	??_Lcd_Write_String+1,w
  9051  1B7B  0084               	movwf	4
  9052  1B7C  120A  118A  2003  160A  158A  	fcall	stringtab
  9053  1B81  160A  158A  219C  160A  158A  	fcall	_LCD_CMD
  9054  1B86                     l3333:
  9055  1B86  3001               	movlw	1
  9056  1B87  07F8               	addwf	Lcd_Write_String@i,f
  9057  1B88  1803               	skipnc
  9058  1B89  0AF9               	incf	Lcd_Write_String@i+1,f
  9059  1B8A  3000               	movlw	0
  9060  1B8B  07F9               	addwf	Lcd_Write_String@i+1,f
  9061  1B8C                     l3335:
  9062  1B8C  0878               	movf	Lcd_Write_String@i,w
  9063  1B8D  0773               	addwf	Lcd_Write_String@a,w
  9064  1B8E  00F6               	movwf	??_Lcd_Write_String+1
  9065  1B8F  0874               	movf	Lcd_Write_String@a+1,w
  9066  1B90  00F5               	movwf	??_Lcd_Write_String
  9067  1B91  1803               	skipnc
  9068  1B92  0AF5               	incf	??_Lcd_Write_String,f
  9069  1B93  1FF8               	btfss	Lcd_Write_String@i,7
  9070  1B94  2B96               	goto	u5320
  9071  1B95  03F5               	decf	??_Lcd_Write_String,f
  9072  1B96                     u5320:
  9073  1B96  0875               	movf	??_Lcd_Write_String,w
  9074  1B97  00F7               	movwf	??_Lcd_Write_String+2
  9075  1B98  0877               	movf	??_Lcd_Write_String+2,w
  9076  1B99  1283               	bcf	3,5	;RP0=0, select bank0
  9077  1B9A  1303               	bcf	3,6	;RP1=0, select bank0
  9078  1B9B  00FF               	movwf	btemp+1
  9079  1B9C  0876               	movf	??_Lcd_Write_String+1,w
  9080  1B9D  0084               	movwf	4
  9081  1B9E  120A  118A  2003  160A  158A  	fcall	stringtab
  9082  1BA3  3A00               	xorlw	0
  9083  1BA4  1D03               	skipz
  9084  1BA5  2BA7               	goto	u5331
  9085  1BA6  2BA8               	goto	u5330
  9086  1BA7                     u5331:
  9087  1BA7  2B6A               	goto	l3331
  9088  1BA8                     u5330:
  9089  1BA8                     l123:
  9090  1BA8  0008               	return
  9091  1BA9                     __end_of_Lcd_Write_String:
  9092                           
  9093                           	psect	text33
  9094  199C                     __ptext33:	
  9095 ;; *************** function _LCD_CMD *****************
  9096 ;; Defined at:
  9097 ;;		line 70 in file "./LIB_LCD.h"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;  a               1    wreg     unsigned char 
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;  a               1    2[COMMON] unsigned char 
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  1    wreg      void 
  9104 ;; Registers used:
  9105 ;;		wreg, status,2, status,0, pclath, cstack
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9111 ;;      Params:         0       0       0       0       0
  9112 ;;      Locals:         1       0       0       0       0
  9113 ;;      Temps:          1       0       0       0       0
  9114 ;;      Totals:         2       0       0       0       0
  9115 ;;Total ram usage:        2 bytes
  9116 ;; Hardware stack levels used:    1
  9117 ;; Hardware stack levels required when called:    1
  9118 ;; This function calls:
  9119 ;;		_Puerto
  9120 ;; This function is called by:
  9121 ;;		_Lcd_Write_String
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           
  9126                           ;psect for function _LCD_CMD
  9127  199C                     _LCD_CMD:
  9128                           
  9129                           ;incstack = 0
  9130                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  9131                           ;LCD_CMD@a stored from wreg
  9132  199C  00F2               	movwf	LCD_CMD@a
  9133  199D                     l2883:
  9134                           
  9135                           ;./LIB_LCD.h: 71:     RE0 = 1;
  9136  199D  1283               	bcf	3,5	;RP0=0, select bank0
  9137  199E  1303               	bcf	3,6	;RP1=0, select bank0
  9138  199F  1409               	bsf	9,0	;volatile
  9139  19A0                     l2885:
  9140                           
  9141                           ;./LIB_LCD.h: 72:     Puerto(a);
  9142  19A0  0872               	movf	LCD_CMD@a,w
  9143  19A1  160A  158A  2329  160A  158A  	fcall	_Puerto
  9144  19A6                     l2887:
  9145                           
  9146                           ;./LIB_LCD.h: 73:     RE1 = 1;
  9147  19A6  1283               	bcf	3,5	;RP0=0, select bank0
  9148  19A7  1303               	bcf	3,6	;RP1=0, select bank0
  9149  19A8  1489               	bsf	9,1	;volatile
  9150  19A9                     l2889:
  9151                           
  9152                           ;./LIB_LCD.h: 74:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9153  19A9  3003               	movlw	3
  9154  19AA  00F1               	movwf	??_LCD_CMD
  9155  19AB                     u5957:
  9156  19AB  0BF1               	decfsz	??_LCD_CMD,f
  9157  19AC  29AB               	goto	u5957
  9158  19AD                     l2891:
  9159                           
  9160                           ;./LIB_LCD.h: 75:     RE1 = 0;
  9161  19AD  1283               	bcf	3,5	;RP0=0, select bank0
  9162  19AE  1303               	bcf	3,6	;RP1=0, select bank0
  9163  19AF  1089               	bcf	9,1	;volatile
  9164  19B0                     l2893:
  9165                           
  9166                           ;./LIB_LCD.h: 76:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9167  19B0  3003               	movlw	3
  9168  19B1  00F1               	movwf	??_LCD_CMD
  9169  19B2                     u5967:
  9170  19B2  0BF1               	decfsz	??_LCD_CMD,f
  9171  19B3  29B2               	goto	u5967
  9172  19B4                     l2895:
  9173                           
  9174                           ;./LIB_LCD.h: 77:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  9175  19B4  3021               	movlw	33
  9176  19B5  00F1               	movwf	??_LCD_CMD
  9177  19B6                     u5977:
  9178  19B6  0BF1               	decfsz	??_LCD_CMD,f
  9179  19B7  29B6               	goto	u5977
  9180  19B8                     l102:
  9181  19B8  0008               	return
  9182  19B9                     __end_of_LCD_CMD:
  9183                           
  9184                           	psect	text34
  9185  19FE                     __ptext34:	
  9186 ;; *************** function _Lcd_Set_Cursor *****************
  9187 ;; Defined at:
  9188 ;;		line 113 in file "./LIB_LCD.h"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  x               1    wreg     unsigned char 
  9191 ;;  y               1    4[COMMON] unsigned char 
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;  x               1    6[COMMON] unsigned char 
  9194 ;;  a               1    7[COMMON] unsigned char 
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  1    wreg      void 
  9197 ;; Registers used:
  9198 ;;		wreg, status,2, status,0, pclath, cstack
  9199 ;; Tracked objects:
  9200 ;;		On entry : 0/0
  9201 ;;		On exit  : 0/0
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9204 ;;      Params:         1       0       0       0       0
  9205 ;;      Locals:         2       0       0       0       0
  9206 ;;      Temps:          1       0       0       0       0
  9207 ;;      Totals:         4       0       0       0       0
  9208 ;;Total ram usage:        4 bytes
  9209 ;; Hardware stack levels used:    1
  9210 ;; Hardware stack levels required when called:    2
  9211 ;; This function calls:
  9212 ;;		_datosLCD
  9213 ;; This function is called by:
  9214 ;;		_main
  9215 ;; This function uses a non-reentrant model
  9216 ;;
  9217                           
  9218                           
  9219                           ;psect for function _Lcd_Set_Cursor
  9220  19FE                     _Lcd_Set_Cursor:
  9221                           
  9222                           ;incstack = 0
  9223                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9224                           ;Lcd_Set_Cursor@x stored from wreg
  9225  19FE  00F6               	movwf	Lcd_Set_Cursor@x
  9226  19FF                     l3317:
  9227                           
  9228                           ;./LIB_LCD.h: 114:  uint8_t a;;./LIB_LCD.h: 115:  if(x == 1){
  9229  19FF  0376               	decf	Lcd_Set_Cursor@x,w
  9230  1A00  1D03               	btfss	3,2
  9231  1A01  2A03               	goto	u5291
  9232  1A02  2A04               	goto	u5290
  9233  1A03                     u5291:
  9234  1A03  2A10               	goto	l3323
  9235  1A04                     u5290:
  9236  1A04                     l3319:
  9237                           
  9238                           ;./LIB_LCD.h: 116:    a = 0x80 + y;
  9239  1A04  0874               	movf	Lcd_Set_Cursor@y,w
  9240  1A05  3E80               	addlw	128
  9241  1A06  00F5               	movwf	??_Lcd_Set_Cursor
  9242  1A07  0875               	movf	??_Lcd_Set_Cursor,w
  9243  1A08  00F7               	movwf	Lcd_Set_Cursor@a
  9244  1A09                     l3321:
  9245                           
  9246                           ;./LIB_LCD.h: 118:   datosLCD(a);
  9247  1A09  0877               	movf	Lcd_Set_Cursor@a,w
  9248  1A0A  160A  158A  21B9  160A  158A  	fcall	_datosLCD
  9249                           
  9250                           ;./LIB_LCD.h: 119:     }
  9251  1A0F  2A21               	goto	l117
  9252  1A10                     l3323:
  9253  1A10  3002               	movlw	2
  9254  1A11  0676               	xorwf	Lcd_Set_Cursor@x,w
  9255  1A12  1D03               	btfss	3,2
  9256  1A13  2A15               	goto	u5301
  9257  1A14  2A16               	goto	u5300
  9258  1A15                     u5301:
  9259  1A15  2A21               	goto	l117
  9260  1A16                     u5300:
  9261  1A16                     l3325:
  9262                           
  9263                           ;./LIB_LCD.h: 121:    a = 0xC0 + y;
  9264  1A16  0874               	movf	Lcd_Set_Cursor@y,w
  9265  1A17  3EC0               	addlw	192
  9266  1A18  00F5               	movwf	??_Lcd_Set_Cursor
  9267  1A19  0875               	movf	??_Lcd_Set_Cursor,w
  9268  1A1A  00F7               	movwf	Lcd_Set_Cursor@a
  9269  1A1B                     l3327:
  9270                           
  9271                           ;./LIB_LCD.h: 123:   datosLCD(a);
  9272  1A1B  0877               	movf	Lcd_Set_Cursor@a,w
  9273  1A1C  160A  158A  21B9  160A  158A  	fcall	_datosLCD
  9274  1A21                     l117:
  9275  1A21  0008               	return
  9276  1A22                     __end_of_Lcd_Set_Cursor:
  9277                           
  9278                           	psect	text35
  9279  1E1F                     __ptext35:	
  9280 ;; *************** function _Lcd_Init *****************
  9281 ;; Defined at:
  9282 ;;		line 93 in file "./LIB_LCD.h"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;		None
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		wreg, status,2, status,0, pclath, cstack
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9296 ;;      Params:         0       0       0       0       0
  9297 ;;      Locals:         0       0       0       0       0
  9298 ;;      Temps:          2       0       0       0       0
  9299 ;;      Totals:         2       0       0       0       0
  9300 ;;Total ram usage:        2 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; Hardware stack levels required when called:    2
  9303 ;; This function calls:
  9304 ;;		_datosLCD
  9305 ;; This function is called by:
  9306 ;;		_main
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           
  9311                           ;psect for function _Lcd_Init
  9312  1E1F                     _Lcd_Init:
  9313  1E1F                     l3293:	
  9314                           ;incstack = 0
  9315                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9316                           
  9317                           
  9318                           ;./LIB_LCD.h: 94:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9319  1E1F  3034               	movlw	52
  9320  1E20  00F5               	movwf	??_Lcd_Init+1
  9321  1E21  30F1               	movlw	241
  9322  1E22  00F4               	movwf	??_Lcd_Init
  9323  1E23                     u5987:
  9324  1E23  0BF4               	decfsz	??_Lcd_Init,f
  9325  1E24  2E23               	goto	u5987
  9326  1E25  0BF5               	decfsz	??_Lcd_Init+1,f
  9327  1E26  2E23               	goto	u5987
  9328  1E27  2E28               	nop2
  9329  1E28                     l3295:
  9330                           
  9331                           ;./LIB_LCD.h: 95:     datosLCD (0x30);
  9332  1E28  3030               	movlw	48
  9333  1E29  160A  158A  21B9  160A  158A  	fcall	_datosLCD
  9334  1E2E                     l3297:
  9335                           
  9336                           ;./LIB_LCD.h: 96:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9337  1E2E  300D               	movlw	13
  9338  1E2F  00F5               	movwf	??_Lcd_Init+1
  9339  1E30  30FB               	movlw	251
  9340  1E31  00F4               	movwf	??_Lcd_Init
  9341  1E32                     u5997:
  9342  1E32  0BF4               	decfsz	??_Lcd_Init,f
  9343  1E33  2E32               	goto	u5997
  9344  1E34  0BF5               	decfsz	??_Lcd_Init+1,f
  9345  1E35  2E32               	goto	u5997
  9346  1E36  2E37               	nop2
  9347                           
  9348                           ;./LIB_LCD.h: 97:     datosLCD (0x30);
  9349  1E37  3030               	movlw	48
  9350  1E38  160A  158A  21B9  160A  158A  	fcall	_datosLCD
  9351  1E3D                     l3299:
  9352                           
  9353                           ;./LIB_LCD.h: 98:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9354  1E3D  3042               	movlw	66
  9355  1E3E  00F4               	movwf	??_Lcd_Init
  9356  1E3F                     u6007:
  9357  1E3F  0BF4               	decfsz	??_Lcd_Init,f
  9358  1E40  2E3F               	goto	u6007
  9359  1E41  0000               	nop
  9360  1E42                     l3301:
  9361                           
  9362                           ;./LIB_LCD.h: 99:     datosLCD (0x30);
  9363  1E42  3030               	movlw	48
  9364  1E43  160A  158A  21B9  160A  158A  	fcall	_datosLCD
  9365                           
  9366                           ;./LIB_LCD.h: 100:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9367  1E48  3042               	movlw	66
  9368  1E49  00F4               	movwf	??_Lcd_Init
  9369  1E4A                     u6017:
  9370  1E4A  0BF4               	decfsz	??_Lcd_Init,f
  9371  1E4B  2E4A               	goto	u6017
  9372  1E4C  0000               	nop
  9373  1E4D                     l3303:
  9374                           
  9375                           ;./LIB_LCD.h: 101:     datosLCD (0x38);
  9376  1E4D  3038               	movlw	56
  9377  1E4E  160A  158A  21B9  160A  158A  	fcall	_datosLCD
  9378  1E53                     l3305:
  9379                           
  9380                           ;./LIB_LCD.h: 102:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9381  1E53  3027               	movlw	39
  9382  1E54  00F4               	movwf	??_Lcd_Init
  9383  1E55                     u6027:
  9384  1E55  0BF4               	decfsz	??_Lcd_Init,f
  9385  1E56  2E55               	goto	u6027
  9386  1E57  2E58               	nop2
  9387                           
  9388                           ;./LIB_LCD.h: 103:     datosLCD (0x08);
  9389  1E58  3008               	movlw	8
  9390  1E59  160A  158A  21B9  160A  158A  	fcall	_datosLCD
  9391  1E5E                     l3307:
  9392                           
  9393                           ;./LIB_LCD.h: 104:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9394  1E5E  3027               	movlw	39
  9395  1E5F  00F4               	movwf	??_Lcd_Init
  9396  1E60                     u6037:
  9397  1E60  0BF4               	decfsz	??_Lcd_Init,f
  9398  1E61  2E60               	goto	u6037
  9399  1E62  2E63               	nop2
  9400  1E63                     l3309:
  9401                           
  9402                           ;./LIB_LCD.h: 105:     datosLCD (0x01);
  9403  1E63  3001               	movlw	1
  9404  1E64  160A  158A  21B9  160A  158A  	fcall	_datosLCD
  9405                           
  9406                           ;./LIB_LCD.h: 106:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9407  1E69  300D               	movlw	13
  9408  1E6A  00F5               	movwf	??_Lcd_Init+1
  9409  1E6B  30FB               	movlw	251
  9410  1E6C  00F4               	movwf	??_Lcd_Init
  9411  1E6D                     u6047:
  9412  1E6D  0BF4               	decfsz	??_Lcd_Init,f
  9413  1E6E  2E6D               	goto	u6047
  9414  1E6F  0BF5               	decfsz	??_Lcd_Init+1,f
  9415  1E70  2E6D               	goto	u6047
  9416  1E71  2E72               	nop2
  9417  1E72                     l3311:
  9418                           
  9419                           ;./LIB_LCD.h: 107:     datosLCD (0x06);
  9420  1E72  3006               	movlw	6
  9421  1E73  160A  158A  21B9  160A  158A  	fcall	_datosLCD
  9422  1E78                     l3313:
  9423                           
  9424                           ;./LIB_LCD.h: 108:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9425  1E78  3027               	movlw	39
  9426  1E79  00F4               	movwf	??_Lcd_Init
  9427  1E7A                     u6057:
  9428  1E7A  0BF4               	decfsz	??_Lcd_Init,f
  9429  1E7B  2E7A               	goto	u6057
  9430  1E7C  2E7D               	nop2
  9431                           
  9432                           ;./LIB_LCD.h: 109:     datosLCD (0x0C);
  9433  1E7D  300C               	movlw	12
  9434  1E7E  160A  158A  21B9  160A  158A  	fcall	_datosLCD
  9435  1E83                     l3315:
  9436                           
  9437                           ;./LIB_LCD.h: 110:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9438  1E83  3027               	movlw	39
  9439  1E84  00F4               	movwf	??_Lcd_Init
  9440  1E85                     u6067:
  9441  1E85  0BF4               	decfsz	??_Lcd_Init,f
  9442  1E86  2E85               	goto	u6067
  9443  1E87  2E88               	nop2
  9444  1E88                     l111:
  9445  1E88  0008               	return
  9446  1E89                     __end_of_Lcd_Init:
  9447                           
  9448                           	psect	text36
  9449  1967                     __ptext36:	
  9450 ;; *************** function _LCD_clean *****************
  9451 ;; Defined at:
  9452 ;;		line 88 in file "./LIB_LCD.h"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;		None
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;		None
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  1    wreg      void 
  9459 ;; Registers used:
  9460 ;;		wreg, status,2, status,0, pclath, cstack
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9466 ;;      Params:         0       0       0       0       0
  9467 ;;      Locals:         0       0       0       0       0
  9468 ;;      Temps:          0       0       0       0       0
  9469 ;;      Totals:         0       0       0       0       0
  9470 ;;Total ram usage:        0 bytes
  9471 ;; Hardware stack levels used:    1
  9472 ;; Hardware stack levels required when called:    2
  9473 ;; This function calls:
  9474 ;;		_datosLCD
  9475 ;; This function is called by:
  9476 ;;		_main
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           
  9480                           
  9481                           ;psect for function _LCD_clean
  9482  1967                     _LCD_clean:
  9483  1967                     l3291:	
  9484                           ;incstack = 0
  9485                           ; Regs used in _LCD_clean: [wreg+status,2+status,0+pclath+cstack]
  9486                           
  9487                           
  9488                           ;./LIB_LCD.h: 89:     datosLCD(0);
  9489  1967  3000               	movlw	0
  9490  1968  160A  158A  21B9  160A  158A  	fcall	_datosLCD
  9491                           
  9492                           ;./LIB_LCD.h: 90:     datosLCD(1);
  9493  196D  3001               	movlw	1
  9494  196E  160A  158A  21B9  160A  158A  	fcall	_datosLCD
  9495  1973                     l108:
  9496  1973  0008               	return
  9497  1974                     __end_of_LCD_clean:
  9498                           
  9499                           	psect	text37
  9500  19B9                     __ptext37:	
  9501 ;; *************** function _datosLCD *****************
  9502 ;; Defined at:
  9503 ;;		line 79 in file "./LIB_LCD.h"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;  x               1    wreg     unsigned char 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;  x               1    3[COMMON] unsigned char 
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      void 
  9510 ;; Registers used:
  9511 ;;		wreg, status,2, status,0, pclath, cstack
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9517 ;;      Params:         0       0       0       0       0
  9518 ;;      Locals:         1       0       0       0       0
  9519 ;;      Temps:          2       0       0       0       0
  9520 ;;      Totals:         3       0       0       0       0
  9521 ;;Total ram usage:        3 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; Hardware stack levels required when called:    1
  9524 ;; This function calls:
  9525 ;;		_Puerto
  9526 ;; This function is called by:
  9527 ;;		_LCD_clean
  9528 ;;		_Lcd_Init
  9529 ;;		_Lcd_Set_Cursor
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533                           
  9534                           ;psect for function _datosLCD
  9535  19B9                     _datosLCD:
  9536                           
  9537                           ;incstack = 0
  9538                           ; Regs used in _datosLCD: [wreg+status,2+status,0+pclath+cstack]
  9539                           ;datosLCD@x stored from wreg
  9540  19B9  00F3               	movwf	datosLCD@x
  9541  19BA                     l2897:
  9542                           
  9543                           ;./LIB_LCD.h: 80:     RE0 = 0;
  9544  19BA  1283               	bcf	3,5	;RP0=0, select bank0
  9545  19BB  1303               	bcf	3,6	;RP1=0, select bank0
  9546  19BC  1009               	bcf	9,0	;volatile
  9547  19BD                     l2899:
  9548                           
  9549                           ;./LIB_LCD.h: 81:     Puerto(x);
  9550  19BD  0873               	movf	datosLCD@x,w
  9551  19BE  160A  158A  2329  160A  158A  	fcall	_Puerto
  9552  19C3                     l2901:
  9553                           
  9554                           ;./LIB_LCD.h: 82:     RE1 = 1;
  9555  19C3  1283               	bcf	3,5	;RP0=0, select bank0
  9556  19C4  1303               	bcf	3,6	;RP1=0, select bank0
  9557  19C5  1489               	bsf	9,1	;volatile
  9558  19C6                     l2903:
  9559                           
  9560                           ;./LIB_LCD.h: 83:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9561  19C6  3003               	movlw	3
  9562  19C7  00F1               	movwf	??_datosLCD
  9563  19C8                     u6077:
  9564  19C8  0BF1               	decfsz	??_datosLCD,f
  9565  19C9  29C8               	goto	u6077
  9566  19CA                     l2905:
  9567                           
  9568                           ;./LIB_LCD.h: 84:     RE1 = 0;
  9569  19CA  1283               	bcf	3,5	;RP0=0, select bank0
  9570  19CB  1303               	bcf	3,6	;RP1=0, select bank0
  9571  19CC  1089               	bcf	9,1	;volatile
  9572  19CD                     l2907:
  9573                           
  9574                           ;./LIB_LCD.h: 85:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9575  19CD  3003               	movlw	3
  9576  19CE  00F1               	movwf	??_datosLCD
  9577  19CF                     u6087:
  9578  19CF  0BF1               	decfsz	??_datosLCD,f
  9579  19D0  29CF               	goto	u6087
  9580  19D1                     l2909:
  9581                           
  9582                           ;./LIB_LCD.h: 86:     _delay((unsigned long)((2)*(8000000/4000.0)));
  9583  19D1  3006               	movlw	6
  9584  19D2  00F2               	movwf	??_datosLCD+1
  9585  19D3  3030               	movlw	48
  9586  19D4  00F1               	movwf	??_datosLCD
  9587  19D5                     u6097:
  9588  19D5  0BF1               	decfsz	??_datosLCD,f
  9589  19D6  29D5               	goto	u6097
  9590  19D7  0BF2               	decfsz	??_datosLCD+1,f
  9591  19D8  29D5               	goto	u6097
  9592  19D9  0000               	nop
  9593  19DA                     l105:
  9594  19DA  0008               	return
  9595  19DB                     __end_of_datosLCD:
  9596                           
  9597                           	psect	text38
  9598  1B29                     __ptext38:	
  9599 ;; *************** function _Puerto *****************
  9600 ;; Defined at:
  9601 ;;		line 59 in file "./LIB_LCD.h"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;  x               1    wreg     unsigned char 
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;  x               1    0[COMMON] unsigned char 
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  1    wreg      void 
  9608 ;; Registers used:
  9609 ;;		wreg
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9615 ;;      Params:         0       0       0       0       0
  9616 ;;      Locals:         1       0       0       0       0
  9617 ;;      Temps:          0       0       0       0       0
  9618 ;;      Totals:         1       0       0       0       0
  9619 ;;Total ram usage:        1 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; This function calls:
  9622 ;;		Nothing
  9623 ;; This function is called by:
  9624 ;;		_LCD_CMD
  9625 ;;		_datosLCD
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           
  9630                           ;psect for function _Puerto
  9631  1B29                     _Puerto:
  9632                           
  9633                           ;incstack = 0
  9634                           ; Regs used in _Puerto: [wreg]
  9635                           ;Puerto@x stored from wreg
  9636  1B29  00F0               	movwf	Puerto@x
  9637  1B2A                     l2399:
  9638                           
  9639                           ;./LIB_LCD.h: 60:  if(x & 1){RD0 = 1;}else{RD0 = 0;}
  9640  1B2A  1C70               	btfss	Puerto@x,0
  9641  1B2B  2B2D               	goto	u2981
  9642  1B2C  2B2E               	goto	u2980
  9643  1B2D                     u2981:
  9644  1B2D  2B32               	goto	l83
  9645  1B2E                     u2980:
  9646  1B2E                     l2401:
  9647  1B2E  1283               	bcf	3,5	;RP0=0, select bank0
  9648  1B2F  1303               	bcf	3,6	;RP1=0, select bank0
  9649  1B30  1408               	bsf	8,0	;volatile
  9650  1B31  2B35               	goto	l84
  9651  1B32                     l83:
  9652  1B32  1283               	bcf	3,5	;RP0=0, select bank0
  9653  1B33  1303               	bcf	3,6	;RP1=0, select bank0
  9654  1B34  1008               	bcf	8,0	;volatile
  9655  1B35                     l84:
  9656                           
  9657                           ;./LIB_LCD.h: 61:     if(x & 2){RD1 = 1;}else{RD1 = 0;}
  9658  1B35  1CF0               	btfss	Puerto@x,1
  9659  1B36  2B38               	goto	u2991
  9660  1B37  2B39               	goto	u2990
  9661  1B38                     u2991:
  9662  1B38  2B3B               	goto	l85
  9663  1B39                     u2990:
  9664  1B39                     l2403:
  9665  1B39  1488               	bsf	8,1	;volatile
  9666  1B3A  2B3C               	goto	l86
  9667  1B3B                     l85:
  9668  1B3B  1088               	bcf	8,1	;volatile
  9669  1B3C                     l86:
  9670                           
  9671                           ;./LIB_LCD.h: 62:     if(x & 4){RD2 = 1;}else{RD2 = 0;}
  9672  1B3C  1D70               	btfss	Puerto@x,2
  9673  1B3D  2B3F               	goto	u3001
  9674  1B3E  2B40               	goto	u3000
  9675  1B3F                     u3001:
  9676  1B3F  2B42               	goto	l87
  9677  1B40                     u3000:
  9678  1B40                     l2405:
  9679  1B40  1508               	bsf	8,2	;volatile
  9680  1B41  2B43               	goto	l88
  9681  1B42                     l87:
  9682  1B42  1108               	bcf	8,2	;volatile
  9683  1B43                     l88:
  9684                           
  9685                           ;./LIB_LCD.h: 63:     if(x & 8){RD3 = 1;}else{RD3 = 0;}
  9686  1B43  1DF0               	btfss	Puerto@x,3
  9687  1B44  2B46               	goto	u3011
  9688  1B45  2B47               	goto	u3010
  9689  1B46                     u3011:
  9690  1B46  2B49               	goto	l89
  9691  1B47                     u3010:
  9692  1B47                     l2407:
  9693  1B47  1588               	bsf	8,3	;volatile
  9694  1B48  2B4A               	goto	l90
  9695  1B49                     l89:
  9696  1B49  1188               	bcf	8,3	;volatile
  9697  1B4A                     l90:
  9698                           
  9699                           ;./LIB_LCD.h: 64:     if(x & 16){RD4 = 1;}else{RD4 = 0;}
  9700  1B4A  1E70               	btfss	Puerto@x,4
  9701  1B4B  2B4D               	goto	u3021
  9702  1B4C  2B4E               	goto	u3020
  9703  1B4D                     u3021:
  9704  1B4D  2B50               	goto	l91
  9705  1B4E                     u3020:
  9706  1B4E                     l2409:
  9707  1B4E  1608               	bsf	8,4	;volatile
  9708  1B4F  2B51               	goto	l92
  9709  1B50                     l91:
  9710  1B50  1208               	bcf	8,4	;volatile
  9711  1B51                     l92:
  9712                           
  9713                           ;./LIB_LCD.h: 65:     if(x & 32){RD5 = 1;}else{RD5 = 0;}
  9714  1B51  1EF0               	btfss	Puerto@x,5
  9715  1B52  2B54               	goto	u3031
  9716  1B53  2B55               	goto	u3030
  9717  1B54                     u3031:
  9718  1B54  2B57               	goto	l93
  9719  1B55                     u3030:
  9720  1B55                     l2411:
  9721  1B55  1688               	bsf	8,5	;volatile
  9722  1B56  2B58               	goto	l94
  9723  1B57                     l93:
  9724  1B57  1288               	bcf	8,5	;volatile
  9725  1B58                     l94:
  9726                           
  9727                           ;./LIB_LCD.h: 66:     if(x & 64){RD6 = 1;}else{RD6 = 0;}
  9728  1B58  1F70               	btfss	Puerto@x,6
  9729  1B59  2B5B               	goto	u3041
  9730  1B5A  2B5C               	goto	u3040
  9731  1B5B                     u3041:
  9732  1B5B  2B5E               	goto	l95
  9733  1B5C                     u3040:
  9734  1B5C                     l2413:
  9735  1B5C  1708               	bsf	8,6	;volatile
  9736  1B5D  2B5F               	goto	l96
  9737  1B5E                     l95:
  9738  1B5E  1308               	bcf	8,6	;volatile
  9739  1B5F                     l96:
  9740                           
  9741                           ;./LIB_LCD.h: 67:     if(x & 128){RD7 = 1;}else{RD7 = 0;}
  9742  1B5F  1FF0               	btfss	Puerto@x,7
  9743  1B60  2B62               	goto	u3051
  9744  1B61  2B63               	goto	u3050
  9745  1B62                     u3051:
  9746  1B62  2B65               	goto	l97
  9747  1B63                     u3050:
  9748  1B63                     l2415:
  9749  1B63  1788               	bsf	8,7	;volatile
  9750  1B64  2B66               	goto	l99
  9751  1B65                     l97:
  9752  1B65  1388               	bcf	8,7	;volatile
  9753  1B66                     l99:
  9754  1B66  0008               	return
  9755  1B67                     __end_of_Puerto:
  9756                           
  9757                           	psect	text39
  9758  1ABD                     __ptext39:	
  9759 ;; *************** function _Conteo *****************
  9760 ;; Defined at:
  9761 ;;		line 143 in file "main.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;		None
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;		None
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  1    wreg      void 
  9768 ;; Registers used:
  9769 ;;		wreg, status,2, status,0, pclath, cstack
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9775 ;;      Params:         0       0       0       0       0
  9776 ;;      Locals:         0       0       0       0       0
  9777 ;;      Temps:          2       0       0       0       0
  9778 ;;      Totals:         2       0       0       0       0
  9779 ;;Total ram usage:        2 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; Hardware stack levels required when called:    2
  9782 ;; This function calls:
  9783 ;;		_spiRead
  9784 ;;		_spiWrite
  9785 ;; This function is called by:
  9786 ;;		_main
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790                           
  9791                           ;psect for function _Conteo
  9792  1ABD                     _Conteo:
  9793  1ABD                     l3373:	
  9794                           ;incstack = 0
  9795                           ; Regs used in _Conteo: [wreg+status,2+status,0+pclath+cstack]
  9796                           
  9797                           
  9798                           ;main.c: 144:     PORTCbits.RC1 = 0;
  9799  1ABD  1283               	bcf	3,5	;RP0=0, select bank0
  9800  1ABE  1303               	bcf	3,6	;RP1=0, select bank0
  9801  1ABF  1087               	bcf	7,1	;volatile
  9802  1AC0                     l3375:
  9803                           
  9804                           ;main.c: 145:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9805  1AC0  3003               	movlw	3
  9806  1AC1  00F2               	movwf	??_Conteo+1
  9807  1AC2  3097               	movlw	151
  9808  1AC3  00F1               	movwf	??_Conteo
  9809  1AC4                     u6107:
  9810  1AC4  0BF1               	decfsz	??_Conteo,f
  9811  1AC5  2AC4               	goto	u6107
  9812  1AC6  0BF2               	decfsz	??_Conteo+1,f
  9813  1AC7  2AC4               	goto	u6107
  9814  1AC8  2AC9               	nop2
  9815  1AC9                     l3377:
  9816                           
  9817                           ;main.c: 147:     spiWrite(1);
  9818  1AC9  3001               	movlw	1
  9819  1ACA  120A  118A  20C3  160A  158A  	fcall	_spiWrite
  9820  1ACF                     l3379:
  9821                           
  9822                           ;main.c: 148:     cont = spiRead();
  9823  1ACF  160A  118A  2000  160A  158A  	fcall	_spiRead
  9824  1AD4  00F1               	movwf	??_Conteo
  9825  1AD5  0871               	movf	??_Conteo,w
  9826  1AD6  1283               	bcf	3,5	;RP0=0, select bank0
  9827  1AD7  1303               	bcf	3,6	;RP1=0, select bank0
  9828  1AD8  00EF               	movwf	_cont
  9829                           
  9830                           ;main.c: 150:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9831  1AD9  3003               	movlw	3
  9832  1ADA  00F2               	movwf	??_Conteo+1
  9833  1ADB  3097               	movlw	151
  9834  1ADC  00F1               	movwf	??_Conteo
  9835  1ADD                     u6117:
  9836  1ADD  0BF1               	decfsz	??_Conteo,f
  9837  1ADE  2ADD               	goto	u6117
  9838  1ADF  0BF2               	decfsz	??_Conteo+1,f
  9839  1AE0  2ADD               	goto	u6117
  9840  1AE1  2AE2               	nop2
  9841  1AE2                     l3381:
  9842                           
  9843                           ;main.c: 151:     PORTCbits.RC1 = 1;
  9844  1AE2  1283               	bcf	3,5	;RP0=0, select bank0
  9845  1AE3  1303               	bcf	3,6	;RP1=0, select bank0
  9846  1AE4  1487               	bsf	7,1	;volatile
  9847                           
  9848                           ;main.c: 152:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9849  1AE5  3003               	movlw	3
  9850  1AE6  00F2               	movwf	??_Conteo+1
  9851  1AE7  3097               	movlw	151
  9852  1AE8  00F1               	movwf	??_Conteo
  9853  1AE9                     u6127:
  9854  1AE9  0BF1               	decfsz	??_Conteo,f
  9855  1AEA  2AE9               	goto	u6127
  9856  1AEB  0BF2               	decfsz	??_Conteo+1,f
  9857  1AEC  2AE9               	goto	u6127
  9858  1AED  2AEE               	nop2
  9859  1AEE                     l182:
  9860  1AEE  0008               	return
  9861  1AEF                     __end_of_Conteo:
  9862                           
  9863                           	psect	text40
  9864  00C3                     __ptext40:	
  9865 ;; *************** function _spiWrite *****************
  9866 ;; Defined at:
  9867 ;;		line 34 in file "SPI.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;  dat             1    wreg     unsigned char 
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;  dat             1    0[COMMON] unsigned char 
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  1    wreg      void 
  9874 ;; Registers used:
  9875 ;;		wreg
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9881 ;;      Params:         0       0       0       0       0
  9882 ;;      Locals:         1       0       0       0       0
  9883 ;;      Temps:          0       0       0       0       0
  9884 ;;      Totals:         1       0       0       0       0
  9885 ;;Total ram usage:        1 bytes
  9886 ;; Hardware stack levels used:    1
  9887 ;; This function calls:
  9888 ;;		Nothing
  9889 ;; This function is called by:
  9890 ;;		_leer_ADC
  9891 ;;		_Conteo
  9892 ;;		_temperatura
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           
  9897                           ;psect for function _spiWrite
  9898  00C3                     _spiWrite:
  9899                           
  9900                           ;incstack = 0
  9901                           ; Regs used in _spiWrite: [wreg]
  9902                           ;spiWrite@dat stored from wreg
  9903  00C3  00F0               	movwf	spiWrite@dat
  9904  00C4                     l2925:
  9905                           
  9906                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  9907  00C4  0870               	movf	spiWrite@dat,w
  9908  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  9909  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  9910  00C7  0093               	movwf	19	;volatile
  9911  00C8                     l211:
  9912  00C8  0008               	return
  9913  00C9                     __end_of_spiWrite:
  9914                           
  9915                           	psect	text41
  9916  1000                     __ptext41:	
  9917 ;; *************** function _spiRead *****************
  9918 ;; Defined at:
  9919 ;;		line 47 in file "SPI.c"
  9920 ;; Parameters:    Size  Location     Type
  9921 ;;		None
  9922 ;; Auto vars:     Size  Location     Type
  9923 ;;		None
  9924 ;; Return value:  Size  Location     Type
  9925 ;;                  1    wreg      unsigned char 
  9926 ;; Registers used:
  9927 ;;		wreg, status,2, status,0, pclath, cstack
  9928 ;; Tracked objects:
  9929 ;;		On entry : 0/0
  9930 ;;		On exit  : 0/0
  9931 ;;		Unchanged: 0/0
  9932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9933 ;;      Params:         0       0       0       0       0
  9934 ;;      Locals:         0       0       0       0       0
  9935 ;;      Temps:          0       0       0       0       0
  9936 ;;      Totals:         0       0       0       0       0
  9937 ;;Total ram usage:        0 bytes
  9938 ;; Hardware stack levels used:    1
  9939 ;; Hardware stack levels required when called:    1
  9940 ;; This function calls:
  9941 ;;		_spiReceiveWait
  9942 ;; This function is called by:
  9943 ;;		_leer_ADC
  9944 ;;		_Conteo
  9945 ;;		_temperatura
  9946 ;; This function uses a non-reentrant model
  9947 ;;
  9948                           
  9949                           
  9950                           ;psect for function _spiRead
  9951  1000                     _spiRead:
  9952  1000                     l2927:	
  9953                           ;incstack = 0
  9954                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9955                           
  9956                           
  9957                           ;SPI.c: 49:     spiReceiveWait();
  9958  1000  160A  158A  212F  160A  118A  	fcall	_spiReceiveWait
  9959  1005                     l2929:
  9960                           
  9961                           ;SPI.c: 50:     return(SSPBUF);
  9962  1005  1283               	bcf	3,5	;RP0=0, select bank0
  9963  1006  1303               	bcf	3,6	;RP1=0, select bank0
  9964  1007  0813               	movf	19,w	;volatile
  9965  1008                     l219:
  9966  1008  0008               	return
  9967  1009                     __end_of_spiRead:
  9968                           
  9969                           	psect	text42
  9970  192F                     __ptext42:	
  9971 ;; *************** function _spiReceiveWait *****************
  9972 ;; Defined at:
  9973 ;;		line 29 in file "SPI.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;		None
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;		None
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  1    wreg      void 
  9980 ;; Registers used:
  9981 ;;		None
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/0
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9987 ;;      Params:         0       0       0       0       0
  9988 ;;      Locals:         0       0       0       0       0
  9989 ;;      Temps:          0       0       0       0       0
  9990 ;;      Totals:         0       0       0       0       0
  9991 ;;Total ram usage:        0 bytes
  9992 ;; Hardware stack levels used:    1
  9993 ;; This function calls:
  9994 ;;		Nothing
  9995 ;; This function is called by:
  9996 ;;		_spiRead
  9997 ;; This function uses a non-reentrant model
  9998 ;;
  9999                           
 10000                           
 10001                           ;psect for function _spiReceiveWait
 10002  192F                     _spiReceiveWait:
 10003  192F                     l2417:	
 10004                           ;incstack = 0
 10005                           ; Regs used in _spiReceiveWait: []
 10006                           
 10007  192F                     l205:	
 10008                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
 10009                           
 10010  192F  1683               	bsf	3,5	;RP0=1, select bank1
 10011  1930  1303               	bcf	3,6	;RP1=0, select bank1
 10012  1931  1C14               	btfss	20,0	;volatile
 10013  1932  2934               	goto	u3061
 10014  1933  2935               	goto	u3060
 10015  1934                     u3061:
 10016  1934  292F               	goto	l205
 10017  1935                     u3060:
 10018  1935                     l208:
 10019  1935  0008               	return
 10020  1936                     __end_of_spiReceiveWait:
 10021                           
 10022                           	psect	text43
 10023  192A                     __ptext43:	
 10024 ;; *************** function _Baudios *****************
 10025 ;; Defined at:
 10026 ;;		line 16 in file "./LIB_USART.h"
 10027 ;; Parameters:    Size  Location     Type
 10028 ;;		None
 10029 ;; Auto vars:     Size  Location     Type
 10030 ;;		None
 10031 ;; Return value:  Size  Location     Type
 10032 ;;                  1    wreg      void 
 10033 ;; Registers used:
 10034 ;;		wreg
 10035 ;; Tracked objects:
 10036 ;;		On entry : 0/0
 10037 ;;		On exit  : 0/0
 10038 ;;		Unchanged: 0/0
 10039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10040 ;;      Params:         0       0       0       0       0
 10041 ;;      Locals:         0       0       0       0       0
 10042 ;;      Temps:          0       0       0       0       0
 10043 ;;      Totals:         0       0       0       0       0
 10044 ;;Total ram usage:        0 bytes
 10045 ;; Hardware stack levels used:    1
 10046 ;; This function calls:
 10047 ;;		Nothing
 10048 ;; This function is called by:
 10049 ;;		_main
 10050 ;; This function uses a non-reentrant model
 10051 ;;
 10052                           
 10053                           
 10054                           ;psect for function _Baudios
 10055  192A                     _Baudios:
 10056  192A                     l3337:	
 10057                           ;incstack = 0
 10058                           ; Regs used in _Baudios: [wreg]
 10059                           
 10060                           
 10061                           ;./LIB_USART.h: 17:     SPBRG = 12;
 10062  192A  300C               	movlw	12
 10063  192B  1683               	bsf	3,5	;RP0=1, select bank1
 10064  192C  1303               	bcf	3,6	;RP1=0, select bank1
 10065  192D  0099               	movwf	25	;volatile
 10066  192E                     l126:
 10067  192E  0008               	return
 10068  192F                     __end_of_Baudios:
 10069  007E                     btemp	set	126	;btemp
 10070  007E                     wtemp0	set	126
 10071                           
 10072                           	psect	config
 10073                           
 10074                           ;Config register CONFIG1 @ 0x2007
 10075                           ;	Oscillator Selection bits
 10076                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 10077                           ;	Watchdog Timer Enable bit
 10078                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10079                           ;	Power-up Timer Enable bit
 10080                           ;	PWRTE = OFF, PWRT disabled
 10081                           ;	RE3/MCLR pin function select bit
 10082                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10083                           ;	Code Protection bit
 10084                           ;	CP = OFF, Program memory code protection is disabled
 10085                           ;	Data Code Protection bit
 10086                           ;	CPD = OFF, Data memory code protection is disabled
 10087                           ;	Brown Out Reset Selection bits
 10088                           ;	BOREN = OFF, BOR disabled
 10089                           ;	Internal External Switchover bit
 10090                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10091                           ;	Fail-Safe Clock Monitor Enabled bit
 10092                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10093                           ;	Low Voltage Programming Enable bit
 10094                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10095                           ;	In-Circuit Debugger Mode bit
 10096                           ;	DEBUG = 0x1, unprogrammed default
 10097  2007                     	org	8199
 10098  2007  20D1               	dw	8401
 10099                           
 10100                           ;Config register CONFIG2 @ 0x2008
 10101                           ;	Brown-out Reset Selection bit
 10102                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10103                           ;	Flash Program Memory Self Write Enable bits
 10104                           ;	WRT = OFF, Write protection off
 10105  2008                     	org	8200
 10106  2008  3FFF               	dw	16383
 10107                           
 10108                           	psect	text2_split_1
 10109  01E9                     u5480:
 10110  01E9                     l3501:
 10111  01E9  1683               	bsf	3,5	;RP0=1, select bank1
 10112  01EA  1303               	bcf	3,6	;RP1=0, select bank1
 10113  01EB  0846               	movf	(sprintf@fval+3)^(0+128),w
 10114  01EC  00F3               	movwf	___fleq@ff1+3
 10115  01ED  0845               	movf	(sprintf@fval+2)^(0+128),w
 10116  01EE  00F2               	movwf	___fleq@ff1+2
 10117  01EF  0844               	movf	(sprintf@fval+1)^(0+128),w
 10118  01F0  00F1               	movwf	___fleq@ff1+1
 10119  01F1  0843               	movf	sprintf@fval^(0+128),w
 10120  01F2  00F0               	movwf	___fleq@ff1
 10121  01F3  3000               	movlw	0
 10122  01F4  00F7               	movwf	___fleq@ff2+3
 10123  01F5  3000               	movlw	0
 10124  01F6  00F6               	movwf	___fleq@ff2+2
 10125  01F7  3000               	movlw	0
 10126  01F8  00F5               	movwf	___fleq@ff2+1
 10127  01F9  3000               	movlw	0
 10128  01FA  00F4               	movwf	___fleq@ff2
 10129  01FB  120A  118A  20C9  120A  118A  	fcall	___fleq
 10130  0200  1803               	btfsc	3,0
 10131  0201  2A03               	goto	u5491
 10132  0202  2A04               	goto	u5490
 10133  0203                     u5491:
 10134  0203  2AAC               	goto	l3521
 10135  0204                     u5490:
 10136  0204                     l3503:
 10137  0204  1683               	bsf	3,5	;RP0=1, select bank1
 10138  0205  1303               	bcf	3,6	;RP1=0, select bank1
 10139  0206  0846               	movf	(sprintf@fval+3)^(0+128),w
 10140  0207  1283               	bcf	3,5	;RP0=0, select bank0
 10141  0208  1303               	bcf	3,6	;RP1=0, select bank0
 10142  0209  00D4               	movwf	___fltol@f1+3
 10143  020A  1683               	bsf	3,5	;RP0=1, select bank1
 10144  020B  1303               	bcf	3,6	;RP1=0, select bank1
 10145  020C  0845               	movf	(sprintf@fval+2)^(0+128),w
 10146  020D  1283               	bcf	3,5	;RP0=0, select bank0
 10147  020E  1303               	bcf	3,6	;RP1=0, select bank0
 10148  020F  00D3               	movwf	___fltol@f1+2
 10149  0210  1683               	bsf	3,5	;RP0=1, select bank1
 10150  0211  1303               	bcf	3,6	;RP1=0, select bank1
 10151  0212  0844               	movf	(sprintf@fval+1)^(0+128),w
 10152  0213  1283               	bcf	3,5	;RP0=0, select bank0
 10153  0214  1303               	bcf	3,6	;RP1=0, select bank0
 10154  0215  00D2               	movwf	___fltol@f1+1
 10155  0216  1683               	bsf	3,5	;RP0=1, select bank1
 10156  0217  1303               	bcf	3,6	;RP1=0, select bank1
 10157  0218  0843               	movf	sprintf@fval^(0+128),w
 10158  0219  1283               	bcf	3,5	;RP0=0, select bank0
 10159  021A  1303               	bcf	3,6	;RP1=0, select bank0
 10160  021B  00D1               	movwf	___fltol@f1
 10161  021C  120A  158A  2006  120A  118A  	fcall	___fltol
 10162  0221  1283               	bcf	3,5	;RP0=0, select bank0
 10163  0222  1303               	bcf	3,6	;RP1=0, select bank0
 10164  0223  0854               	movf	?___fltol+3,w
 10165  0224  0453               	iorwf	?___fltol+2,w
 10166  0225  0452               	iorwf	?___fltol+1,w
 10167  0226  0451               	iorwf	?___fltol,w
 10168  0227  1D03               	skipz
 10169  0228  2A2A               	goto	u5501
 10170  0229  2A2B               	goto	u5500
 10171  022A                     u5501:
 10172  022A  2AAC               	goto	l3521
 10173  022B                     u5500:
 10174  022B                     l3505:
 10175  022B  1683               	bsf	3,5	;RP0=1, select bank1
 10176  022C  1303               	bcf	3,6	;RP1=0, select bank1
 10177  022D  0842               	movf	(sprintf@eexp+1)^(0+128),w
 10178  022E  3A80               	xorlw	128
 10179  022F  00FF               	movwf	btemp+1
 10180  0230  3080               	movlw	128
 10181  0231  027F               	subwf	btemp+1,w
 10182  0232  1D03               	skipz
 10183  0233  2A36               	goto	u5515
 10184  0234  3002               	movlw	2
 10185  0235  0241               	subwf	sprintf@eexp^(0+128),w
 10186  0236                     u5515:
 10187  0236  1C03               	skipc
 10188  0237  2A39               	goto	u5511
 10189  0238  2A3A               	goto	u5510
 10190  0239                     u5511:
 10191  0239  2AAC               	goto	l3521
 10192  023A                     u5510:
 10193  023A                     l3507:
 10194                           
 10195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10196  023A  1683               	bsf	3,5	;RP0=1, select bank1
 10197  023B  1303               	bcf	3,6	;RP1=0, select bank1
 10198  023C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
 10199  023D  00F3               	movwf	___flge@ff1+3
 10200  023E  083B               	movf	(sprintf@tmpval+2)^(0+128),w
 10201  023F  00F2               	movwf	___flge@ff1+2
 10202  0240  083A               	movf	(sprintf@tmpval+1)^(0+128),w
 10203  0241  00F1               	movwf	___flge@ff1+1
 10204  0242  0839               	movf	sprintf@tmpval^(0+128),w
 10205  0243  00F0               	movwf	___flge@ff1
 10206  0244  3040               	movlw	64
 10207  0245  00F7               	movwf	___flge@ff2+3
 10208  0246  3089               	movlw	137
 10209  0247  00F6               	movwf	___flge@ff2+2
 10210  0248  3070               	movlw	112
 10211  0249  00F5               	movwf	___flge@ff2+1
 10212  024A  305F               	movlw	95
 10213  024B  00F4               	movwf	___flge@ff2
 10214  024C  160A  118A  2009  120A  118A  	fcall	___flge
 10215  0251  1803               	btfsc	3,0
 10216  0252  2A54               	goto	u5521
 10217  0253  2A55               	goto	u5520
 10218  0254                     u5521:
 10219  0254  2A5E               	goto	l3511
 10220  0255                     u5520:
 10221  0255                     l3509:
 10222                           
 10223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10224  0255  30F7               	movlw	247
 10225  0256  1683               	bsf	3,5	;RP0=1, select bank1
 10226  0257  1303               	bcf	3,6	;RP1=0, select bank1
 10227  0258  07C1               	addwf	sprintf@eexp^(0+128),f
 10228  0259  1803               	skipnc
 10229  025A  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
 10230  025B  30FF               	movlw	255
 10231  025C  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
 10232                           
 10233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10234  025D  2A66               	goto	l3513
 10235  025E                     l3511:
 10236                           
 10237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10238  025E  30F8               	movlw	248
 10239  025F  1683               	bsf	3,5	;RP0=1, select bank1
 10240  0260  1303               	bcf	3,6	;RP1=0, select bank1
 10241  0261  07C1               	addwf	sprintf@eexp^(0+128),f
 10242  0262  1803               	skipnc
 10243  0263  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
 10244  0264  30FF               	movlw	255
 10245  0265  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
 10246  0266                     l3513:
 10247                           
 10248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10249  0266  0841               	movf	sprintf@eexp^(0+128),w
 10250  0267  120A  158A  2140  120A  118A  	fcall	_scale
 10251  026C  1283               	bcf	3,5	;RP0=0, select bank0
 10252  026D  1303               	bcf	3,6	;RP1=0, select bank0
 10253  026E  0841               	movf	?_scale+3,w
 10254  026F  1683               	bsf	3,5	;RP0=1, select bank1
 10255  0270  1303               	bcf	3,6	;RP1=0, select bank1
 10256  0271  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 10257  0272  1283               	bcf	3,5	;RP0=0, select bank0
 10258  0273  1303               	bcf	3,6	;RP1=0, select bank0
 10259  0274  0840               	movf	?_scale+2,w
 10260  0275  1683               	bsf	3,5	;RP0=1, select bank1
 10261  0276  1303               	bcf	3,6	;RP1=0, select bank1
 10262  0277  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 10263  0278  1283               	bcf	3,5	;RP0=0, select bank0
 10264  0279  1303               	bcf	3,6	;RP1=0, select bank0
 10265  027A  083F               	movf	?_scale+1,w
 10266  027B  1683               	bsf	3,5	;RP0=1, select bank1
 10267  027C  1303               	bcf	3,6	;RP1=0, select bank1
 10268  027D  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 10269  027E  1283               	bcf	3,5	;RP0=0, select bank0
 10270  027F  1303               	bcf	3,6	;RP1=0, select bank0
 10271  0280  083E               	movf	?_scale,w
 10272  0281  1683               	bsf	3,5	;RP0=1, select bank1
 10273  0282  1303               	bcf	3,6	;RP1=0, select bank1
 10274  0283  00B9               	movwf	sprintf@tmpval^(0+128)
 10275  0284                     l3515:
 10276  0284  0846               	movf	(sprintf@fval+3)^(0+128),w
 10277  0285  00F3               	movwf	__div_to_l_@f1+3
 10278  0286  0845               	movf	(sprintf@fval+2)^(0+128),w
 10279  0287  00F2               	movwf	__div_to_l_@f1+2
 10280  0288  0844               	movf	(sprintf@fval+1)^(0+128),w
 10281  0289  00F1               	movwf	__div_to_l_@f1+1
 10282  028A  0843               	movf	sprintf@fval^(0+128),w
 10283  028B  00F0               	movwf	__div_to_l_@f1
 10284  028C  083C               	movf	(sprintf@tmpval+3)^(0+128),w
 10285  028D  00F7               	movwf	__div_to_l_@f2+3
 10286  028E  083B               	movf	(sprintf@tmpval+2)^(0+128),w
 10287  028F  00F6               	movwf	__div_to_l_@f2+2
 10288  0290  083A               	movf	(sprintf@tmpval+1)^(0+128),w
 10289  0291  00F5               	movwf	__div_to_l_@f2+1
 10290  0292  0839               	movf	sprintf@tmpval^(0+128),w
 10291  0293  00F4               	movwf	__div_to_l_@f2
 10292  0294  120A  158A  2082  120A  118A  	fcall	__div_to_l_
 10293  0299  0873               	movf	?__div_to_l_+3,w
 10294  029A  1683               	bsf	3,5	;RP0=1, select bank1
 10295  029B  1303               	bcf	3,6	;RP1=0, select bank1
 10296  029C  00C0               	movwf	(sprintf@val+3)^(0+128)
 10297  029D  0872               	movf	?__div_to_l_+2,w
 10298  029E  00BF               	movwf	(sprintf@val+2)^(0+128)
 10299  029F  0871               	movf	?__div_to_l_+1,w
 10300  02A0  00BE               	movwf	(sprintf@val+1)^(0+128)
 10301  02A1  0870               	movf	?__div_to_l_,w
 10302  02A2  00BD               	movwf	sprintf@val^(0+128)
 10303  02A3                     l3519:
 10304                           
 10305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10306  02A3  3000               	movlw	0
 10307  02A4  00C6               	movwf	(sprintf@fval+3)^(0+128)
 10308  02A5  3000               	movlw	0
 10309  02A6  00C5               	movwf	(sprintf@fval+2)^(0+128)
 10310  02A7  3000               	movlw	0
 10311  02A8  00C4               	movwf	(sprintf@fval+1)^(0+128)
 10312  02A9  3000               	movlw	0
 10313  02AA  00C3               	movwf	sprintf@fval^(0+128)
 10314                           
 10315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10316  02AB  2B30               	goto	l3527
 10317  02AC                     l3521:
 10318                           
 10319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10320  02AC  1683               	bsf	3,5	;RP0=1, select bank1
 10321  02AD  1303               	bcf	3,6	;RP1=0, select bank1
 10322  02AE  0846               	movf	(sprintf@fval+3)^(0+128),w
 10323  02AF  1283               	bcf	3,5	;RP0=0, select bank0
 10324  02B0  1303               	bcf	3,6	;RP1=0, select bank0
 10325  02B1  00D4               	movwf	___fltol@f1+3
 10326  02B2  1683               	bsf	3,5	;RP0=1, select bank1
 10327  02B3  1303               	bcf	3,6	;RP1=0, select bank1
 10328  02B4  0845               	movf	(sprintf@fval+2)^(0+128),w
 10329  02B5  1283               	bcf	3,5	;RP0=0, select bank0
 10330  02B6  1303               	bcf	3,6	;RP1=0, select bank0
 10331  02B7  00D3               	movwf	___fltol@f1+2
 10332  02B8  1683               	bsf	3,5	;RP0=1, select bank1
 10333  02B9  1303               	bcf	3,6	;RP1=0, select bank1
 10334  02BA  0844               	movf	(sprintf@fval+1)^(0+128),w
 10335  02BB  1283               	bcf	3,5	;RP0=0, select bank0
 10336  02BC  1303               	bcf	3,6	;RP1=0, select bank0
 10337  02BD  00D2               	movwf	___fltol@f1+1
 10338  02BE  1683               	bsf	3,5	;RP0=1, select bank1
 10339  02BF  1303               	bcf	3,6	;RP1=0, select bank1
 10340  02C0  0843               	movf	sprintf@fval^(0+128),w
 10341  02C1  1283               	bcf	3,5	;RP0=0, select bank0
 10342  02C2  1303               	bcf	3,6	;RP1=0, select bank0
 10343  02C3  00D1               	movwf	___fltol@f1
 10344  02C4  120A  158A  2006  120A  118A  	fcall	___fltol
 10345  02C9  1283               	bcf	3,5	;RP0=0, select bank0
 10346  02CA  1303               	bcf	3,6	;RP1=0, select bank0
 10347  02CB  0854               	movf	?___fltol+3,w
 10348  02CC  1683               	bsf	3,5	;RP0=1, select bank1
 10349  02CD  1303               	bcf	3,6	;RP1=0, select bank1
 10350  02CE  00C0               	movwf	(sprintf@val+3)^(0+128)
 10351  02CF  1283               	bcf	3,5	;RP0=0, select bank0
 10352  02D0  1303               	bcf	3,6	;RP1=0, select bank0
 10353  02D1  0853               	movf	?___fltol+2,w
 10354  02D2  1683               	bsf	3,5	;RP0=1, select bank1
 10355  02D3  1303               	bcf	3,6	;RP1=0, select bank1
 10356  02D4  00BF               	movwf	(sprintf@val+2)^(0+128)
 10357  02D5  1283               	bcf	3,5	;RP0=0, select bank0
 10358  02D6  1303               	bcf	3,6	;RP1=0, select bank0
 10359  02D7  0852               	movf	?___fltol+1,w
 10360  02D8  1683               	bsf	3,5	;RP0=1, select bank1
 10361  02D9  1303               	bcf	3,6	;RP1=0, select bank1
 10362  02DA  00BE               	movwf	(sprintf@val+1)^(0+128)
 10363  02DB  1283               	bcf	3,5	;RP0=0, select bank0
 10364  02DC  1303               	bcf	3,6	;RP1=0, select bank0
 10365  02DD  0851               	movf	?___fltol,w
 10366  02DE  1683               	bsf	3,5	;RP0=1, select bank1
 10367  02DF  1303               	bcf	3,6	;RP1=0, select bank1
 10368  02E0  00BD               	movwf	sprintf@val^(0+128)
 10369  02E1                     l3523:
 10370                           
 10371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10372  02E1  0840               	movf	(sprintf@val+3)^(0+128),w
 10373  02E2  00F3               	movwf	___xxtofl@val+3
 10374  02E3  083F               	movf	(sprintf@val+2)^(0+128),w
 10375  02E4  00F2               	movwf	___xxtofl@val+2
 10376  02E5  083E               	movf	(sprintf@val+1)^(0+128),w
 10377  02E6  00F1               	movwf	___xxtofl@val+1
 10378  02E7  083D               	movf	sprintf@val^(0+128),w
 10379  02E8  00F0               	movwf	___xxtofl@val
 10380  02E9  3000               	movlw	0
 10381  02EA  160A  158A  2689  120A  118A  	fcall	___xxtofl
 10382  02EF  0873               	movf	?___xxtofl+3,w
 10383  02F0  1283               	bcf	3,5	;RP0=0, select bank0
 10384  02F1  1303               	bcf	3,6	;RP1=0, select bank0
 10385  02F2  00E9               	movwf	___flsub@a+3
 10386  02F3  0872               	movf	?___xxtofl+2,w
 10387  02F4  00E8               	movwf	___flsub@a+2
 10388  02F5  0871               	movf	?___xxtofl+1,w
 10389  02F6  00E7               	movwf	___flsub@a+1
 10390  02F7  0870               	movf	?___xxtofl,w
 10391  02F8  00E6               	movwf	___flsub@a
 10392  02F9  1683               	bsf	3,5	;RP0=1, select bank1
 10393  02FA  1303               	bcf	3,6	;RP1=0, select bank1
 10394  02FB  0846               	movf	(sprintf@fval+3)^(0+128),w
 10395  02FC  1283               	bcf	3,5	;RP0=0, select bank0
 10396  02FD  1303               	bcf	3,6	;RP1=0, select bank0
 10397  02FE  00ED               	movwf	___flsub@b+3
 10398  02FF  1683               	bsf	3,5	;RP0=1, select bank1
 10399  0300  1303               	bcf	3,6	;RP1=0, select bank1
 10400  0301  0845               	movf	(sprintf@fval+2)^(0+128),w
 10401  0302  1283               	bcf	3,5	;RP0=0, select bank0
 10402  0303  1303               	bcf	3,6	;RP1=0, select bank0
 10403  0304  00EC               	movwf	___flsub@b+2
 10404  0305  1683               	bsf	3,5	;RP0=1, select bank1
 10405  0306  1303               	bcf	3,6	;RP1=0, select bank1
 10406  0307  0844               	movf	(sprintf@fval+1)^(0+128),w
 10407  0308  1283               	bcf	3,5	;RP0=0, select bank0
 10408  0309  1303               	bcf	3,6	;RP1=0, select bank0
 10409  030A  00EB               	movwf	___flsub@b+1
 10410  030B  1683               	bsf	3,5	;RP0=1, select bank1
 10411  030C  1303               	bcf	3,6	;RP1=0, select bank1
 10412  030D  0843               	movf	sprintf@fval^(0+128),w
 10413  030E  1283               	bcf	3,5	;RP0=0, select bank0
 10414  030F  1303               	bcf	3,6	;RP1=0, select bank0
 10415  0310  00EA               	movwf	___flsub@b
 10416  0311  160A  158A  2222  120A  118A  	fcall	___flsub
 10417  0316  1283               	bcf	3,5	;RP0=0, select bank0
 10418  0317  1303               	bcf	3,6	;RP1=0, select bank0
 10419  0318  0869               	movf	?___flsub+3,w
 10420  0319  1683               	bsf	3,5	;RP0=1, select bank1
 10421  031A  1303               	bcf	3,6	;RP1=0, select bank1
 10422  031B  00C6               	movwf	(sprintf@fval+3)^(0+128)
 10423  031C  1283               	bcf	3,5	;RP0=0, select bank0
 10424  031D  1303               	bcf	3,6	;RP1=0, select bank0
 10425  031E  0868               	movf	?___flsub+2,w
 10426  031F  1683               	bsf	3,5	;RP0=1, select bank1
 10427  0320  1303               	bcf	3,6	;RP1=0, select bank1
 10428  0321  00C5               	movwf	(sprintf@fval+2)^(0+128)
 10429  0322  1283               	bcf	3,5	;RP0=0, select bank0
 10430  0323  1303               	bcf	3,6	;RP1=0, select bank0
 10431  0324  0867               	movf	?___flsub+1,w
 10432  0325  1683               	bsf	3,5	;RP0=1, select bank1
 10433  0326  1303               	bcf	3,6	;RP1=0, select bank1
 10434  0327  00C4               	movwf	(sprintf@fval+1)^(0+128)
 10435  0328  1283               	bcf	3,5	;RP0=0, select bank0
 10436  0329  1303               	bcf	3,6	;RP1=0, select bank0
 10437  032A  0866               	movf	?___flsub,w
 10438  032B  1683               	bsf	3,5	;RP0=1, select bank1
 10439  032C  1303               	bcf	3,6	;RP1=0, select bank1
 10440  032D  00C3               	movwf	sprintf@fval^(0+128)
 10441  032E                     l3525:
 10442                           
 10443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10444  032E  01C1               	clrf	sprintf@eexp^(0+128)
 10445  032F  01C2               	clrf	(sprintf@eexp+1)^(0+128)
 10446  0330                     l3527:
 10447                           
 10448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10449  0330  01CA               	clrf	sprintf@c^(0+128)
 10450  0331  0ACA               	incf	sprintf@c^(0+128),f
 10451  0332                     l3533:
 10452                           
 10453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10454  0332  084A               	movf	sprintf@c^(0+128),w
 10455  0333  00AB               	movwf	??_sprintf^(0+128)
 10456  0334  3001               	movlw	1
 10457  0335                     u5535:
 10458  0335  1003               	clrc
 10459  0336  0DAB               	rlf	??_sprintf^(0+128),f
 10460  0337  3EFF               	addlw	-1
 10461  0338  1D03               	skipz
 10462  0339  2B35               	goto	u5535
 10463  033A  1003               	clrc
 10464  033B  0D2B               	rlf	??_sprintf^(0+128),w
 10465  033C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10466  033D  0084               	movwf	4
 10467  033E  120A  118A  200D  120A  118A  	fcall	stringdir
 10468  0343  00AC               	movwf	(??_sprintf+1)^(0+128)
 10469  0344  120A  118A  200D  120A  118A  	fcall	stringdir
 10470  0349  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
 10471  034A  120A  118A  200D  120A  118A  	fcall	stringdir
 10472  034F  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
 10473  0350  120A  118A  200D  120A  118A  	fcall	stringdir
 10474  0355  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
 10475  0356  082F               	movf	(??_sprintf+4)^(0+128),w
 10476  0357  0240               	subwf	(sprintf@val+3)^(0+128),w
 10477  0358  1D03               	skipz
 10478  0359  2B64               	goto	u5545
 10479  035A  082E               	movf	(??_sprintf+3)^(0+128),w
 10480  035B  023F               	subwf	(sprintf@val+2)^(0+128),w
 10481  035C  1D03               	skipz
 10482  035D  2B64               	goto	u5545
 10483  035E  082D               	movf	(??_sprintf+2)^(0+128),w
 10484  035F  023E               	subwf	(sprintf@val+1)^(0+128),w
 10485  0360  1D03               	skipz
 10486  0361  2B64               	goto	u5545
 10487  0362  082C               	movf	(??_sprintf+1)^(0+128),w
 10488  0363  023D               	subwf	sprintf@val^(0+128),w
 10489  0364                     u5545:
 10490  0364  1803               	skipnc
 10491  0365  2B67               	goto	u5541
 10492  0366  2B68               	goto	u5540
 10493  0367                     u5541:
 10494  0367  2B69               	goto	l3537
 10495  0368                     u5540:
 10496  0368  2B73               	goto	l3539
 10497  0369                     l3537:
 10498  0369  3001               	movlw	1
 10499  036A  00AB               	movwf	??_sprintf^(0+128)
 10500  036B  082B               	movf	??_sprintf^(0+128),w
 10501  036C  07CA               	addwf	sprintf@c^(0+128),f
 10502  036D  300A               	movlw	10
 10503  036E  064A               	xorwf	sprintf@c^(0+128),w
 10504  036F  1D03               	btfss	3,2
 10505  0370  2B72               	goto	u5551
 10506  0371  2B73               	goto	u5550
 10507  0372                     u5551:
 10508  0372  2B32               	goto	l3533
 10509  0373                     u5550:
 10510  0373                     l3539:
 10511                           
 10512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10513  0373  084A               	movf	sprintf@c^(0+128),w
 10514  0374  0748               	addwf	sprintf@prec^(0+128),w
 10515  0375  00AB               	movwf	??_sprintf^(0+128)
 10516  0376  0849               	movf	(sprintf@prec+1)^(0+128),w
 10517  0377  1803               	skipnc
 10518  0378  0A49               	incf	(sprintf@prec+1)^(0+128),w
 10519  0379  00AC               	movwf	(??_sprintf^(0+128)+1)
 10520  037A  0841               	movf	sprintf@eexp^(0+128),w
 10521  037B  072B               	addwf	??_sprintf^(0+128),w
 10522  037C  00AD               	movwf	(??_sprintf+2)^(0+128)
 10523  037D  0842               	movf	(sprintf@eexp+1)^(0+128),w
 10524  037E  1803               	skipnc
 10525  037F  0A42               	incf	(sprintf@eexp+1)^(0+128),w
 10526  0380  072C               	addwf	(??_sprintf+1)^(0+128),w
 10527  0381  00AE               	movwf	(??_sprintf+3)^(0+128)
 10528  0382  082D               	movf	(??_sprintf+2)^(0+128),w
 10529  0383  02B7               	subwf	sprintf@width^(0+128),f
 10530  0384  082E               	movf	(??_sprintf+3)^(0+128),w
 10531  0385  1C03               	skipc
 10532  0386  03B8               	decf	(sprintf@width+1)^(0+128),f
 10533  0387  02B8               	subwf	(sprintf@width+1)^(0+128),f
 10534                           
 10535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10536  0388  0848               	movf	sprintf@prec^(0+128),w
 10537  0389  0449               	iorwf	(sprintf@prec+1)^(0+128),w
 10538  038A  1903               	btfsc	3,2
 10539  038B  2B8D               	goto	u5561
 10540  038C  2B8E               	goto	u5560
 10541  038D                     u5561:
 10542  038D  2B94               	goto	l3543
 10543  038E                     u5560:
 10544  038E                     l3541:
 10545                           
 10546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10547  038E  30FF               	movlw	255
 10548  038F  07B7               	addwf	sprintf@width^(0+128),f
 10549  0390  1803               	skipnc
 10550  0391  0AB8               	incf	(sprintf@width+1)^(0+128),f
 10551  0392  30FF               	movlw	255
 10552  0393  07B8               	addwf	(sprintf@width+1)^(0+128),f
 10553  0394                     l3543:
 10554                           
 10555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10556  0394  3003               	movlw	3
 10557  0395  0535               	andwf	sprintf@flag^(0+128),w
 10558  0396  00AB               	movwf	??_sprintf^(0+128)
 10559  0397  3000               	movlw	0
 10560  0398  0536               	andwf	(sprintf@flag+1)^(0+128),w
 10561  0399  00AC               	movwf	(??_sprintf+1)^(0+128)
 10562  039A  082B               	movf	??_sprintf^(0+128),w
 10563  039B  042C               	iorwf	(??_sprintf^(0+128)+1),w
 10564  039C  1903               	btfsc	3,2
 10565  039D  2B9F               	goto	u5571
 10566  039E  2BA0               	goto	u5570
 10567  039F                     u5571:
 10568  039F  2BB5               	goto	l3553
 10569  03A0                     u5570:
 10570  03A0                     l3545:
 10571                           
 10572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10573  03A0  30FF               	movlw	255
 10574  03A1  07B7               	addwf	sprintf@width^(0+128),f
 10575  03A2  1803               	skipnc
 10576  03A3  0AB8               	incf	(sprintf@width+1)^(0+128),f
 10577  03A4  30FF               	movlw	255
 10578  03A5  07B8               	addwf	(sprintf@width+1)^(0+128),f
 10579  03A6  2BB5               	goto	l3553
 10580  03A7                     l3547:
 10581                           
 10582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10583  03A7  3020               	movlw	32
 10584  03A8  1683               	bsf	3,5	;RP0=1, select bank1
 10585  03A9  1303               	bcf	3,6	;RP1=0, select bank1
 10586  03AA  00AB               	movwf	??_sprintf^(0+128)
 10587  03AB  0847               	movf	sprintf@sp^(0+128),w
 10588  03AC  0084               	movwf	4
 10589  03AD  082B               	movf	??_sprintf^(0+128),w
 10590  03AE  1383               	bcf	3,7	;select IRP bank0
 10591  03AF  0080               	movwf	0
 10592  03B0                     l3549:
 10593  03B0  3001               	movlw	1
 10594  03B1  00AB               	movwf	??_sprintf^(0+128)
 10595  03B2  082B               	movf	??_sprintf^(0+128),w
 10596  03B3  07C7               	addwf	sprintf@sp^(0+128),f
 10597  03B4  2BA0               	goto	l3545
 10598  03B5                     l3553:
 10599                           
 10600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10601  03B5  0838               	movf	(sprintf@width+1)^(0+128),w
 10602  03B6  3A80               	xorlw	128
 10603  03B7  00FF               	movwf	btemp+1
 10604  03B8  3080               	movlw	128
 10605  03B9  027F               	subwf	btemp+1,w
 10606  03BA  1D03               	skipz
 10607  03BB  2BBE               	goto	u5585
 10608  03BC  3001               	movlw	1
 10609  03BD  0237               	subwf	sprintf@width^(0+128),w
 10610  03BE                     u5585:
 10611  03BE  1803               	skipnc
 10612  03BF  2BC1               	goto	u5581
 10613  03C0  2BC2               	goto	u5580
 10614  03C1                     u5581:
 10615  03C1  2BA7               	goto	l3547
 10616  03C2                     u5580:
 10617  03C2                     l3555:
 10618                           
 10619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10620  03C2  3003               	movlw	3
 10621  03C3  1683               	bsf	3,5	;RP0=1, select bank1
 10622  03C4  1303               	bcf	3,6	;RP1=0, select bank1
 10623  03C5  0535               	andwf	sprintf@flag^(0+128),w
 10624  03C6  00AB               	movwf	??_sprintf^(0+128)
 10625  03C7  3000               	movlw	0
 10626  03C8  0536               	andwf	(sprintf@flag+1)^(0+128),w
 10627  03C9  00AC               	movwf	(??_sprintf+1)^(0+128)
 10628  03CA  082B               	movf	??_sprintf^(0+128),w
 10629  03CB  042C               	iorwf	(??_sprintf^(0+128)+1),w
 10630  03CC  1903               	btfsc	3,2
 10631  03CD  2BCF               	goto	u5591
 10632  03CE  2BD0               	goto	u5590
 10633  03CF                     u5591:
 10634  03CF  2C62               	goto	l383
 10635  03D0                     u5590:
 10636  03D0                     l3557:
 10637                           
 10638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10639  03D0  302D               	movlw	45
 10640  03D1  00AB               	movwf	??_sprintf^(0+128)
 10641  03D2  0847               	movf	sprintf@sp^(0+128),w
 10642  03D3  0084               	movwf	4
 10643  03D4  082B               	movf	??_sprintf^(0+128),w
 10644  03D5  1383               	bcf	3,7	;select IRP bank0
 10645  03D6  0080               	movwf	0
 10646  03D7                     l3559:
 10647  03D7  3001               	movlw	1
 10648  03D8  00AB               	movwf	??_sprintf^(0+128)
 10649  03D9  082B               	movf	??_sprintf^(0+128),w
 10650  03DA  07C7               	addwf	sprintf@sp^(0+128),f
 10651  03DB  2C62               	goto	l383
 10652  03DC                     l3561:
 10653                           
 10654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10655  03DC  084A               	movf	sprintf@c^(0+128),w
 10656  03DD  00AB               	movwf	??_sprintf^(0+128)
 10657  03DE  3001               	movlw	1
 10658  03DF                     u5605:
 10659  03DF  1003               	clrc
 10660  03E0  0DAB               	rlf	??_sprintf^(0+128),f
 10661  03E1  3EFF               	addlw	-1
 10662  03E2  1D03               	skipz
 10663  03E3  2BDF               	goto	u5605
 10664  03E4  1003               	clrc
 10665  03E5  0D2B               	rlf	??_sprintf^(0+128),w
 10666  03E6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10667  03E7  0084               	movwf	4
 10668  03E8  120A  118A  200D  120A  118A  	fcall	stringdir
 10669  03ED  00F0               	movwf	___lldiv@divisor
 10670  03EE  120A  118A  200D  120A  118A  	fcall	stringdir
 10671  03F3  00F1               	movwf	___lldiv@divisor+1
 10672  03F4  120A  118A  200D  120A  118A  	fcall	stringdir
 10673  03F9  00F2               	movwf	___lldiv@divisor+2
 10674  03FA  120A  118A  200D  120A  118A  	fcall	stringdir
 10675  03FF  00F3               	movwf	___lldiv@divisor+3
 10676  0400  0840               	movf	(sprintf@val+3)^(0+128),w
 10677  0401  00F7               	movwf	___lldiv@dividend+3
 10678  0402  083F               	movf	(sprintf@val+2)^(0+128),w
 10679  0403  00F6               	movwf	___lldiv@dividend+2
 10680  0404  083E               	movf	(sprintf@val+1)^(0+128),w
 10681  0405  00F5               	movwf	___lldiv@dividend+1
 10682  0406  083D               	movf	sprintf@val^(0+128),w
 10683  0407  00F4               	movwf	___lldiv@dividend
 10684  0408  160A  158A  24EA  120A  118A  	fcall	___lldiv
 10685  040D  0873               	movf	?___lldiv+3,w
 10686  040E  1683               	bsf	3,5	;RP0=1, select bank1
 10687  040F  1303               	bcf	3,6	;RP1=0, select bank1
 10688  0410  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 10689  0411  0872               	movf	?___lldiv+2,w
 10690  0412  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 10691  0413  0871               	movf	?___lldiv+1,w
 10692  0414  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 10693  0415  0870               	movf	?___lldiv,w
 10694  0416  00B9               	movwf	sprintf@tmpval^(0+128)
 10695  0417                     l3563:
 10696                           
 10697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10698  0417  3000               	movlw	0
 10699  0418  1283               	bcf	3,5	;RP0=0, select bank0
 10700  0419  1303               	bcf	3,6	;RP1=0, select bank0
 10701  041A  00A3               	movwf	___llmod@divisor+3
 10702  041B  3000               	movlw	0
 10703  041C  00A2               	movwf	___llmod@divisor+2
 10704  041D  3000               	movlw	0
 10705  041E  00A1               	movwf	___llmod@divisor+1
 10706  041F  300A               	movlw	10
 10707  0420  00A0               	movwf	___llmod@divisor
 10708  0421  1683               	bsf	3,5	;RP0=1, select bank1
 10709  0422  1303               	bcf	3,6	;RP1=0, select bank1
 10710  0423  083C               	movf	(sprintf@tmpval+3)^(0+128),w
 10711  0424  1283               	bcf	3,5	;RP0=0, select bank0
 10712  0425  1303               	bcf	3,6	;RP1=0, select bank0
 10713  0426  00A7               	movwf	___llmod@dividend+3
 10714  0427  1683               	bsf	3,5	;RP0=1, select bank1
 10715  0428  1303               	bcf	3,6	;RP1=0, select bank1
 10716  0429  083B               	movf	(sprintf@tmpval+2)^(0+128),w
 10717  042A  1283               	bcf	3,5	;RP0=0, select bank0
 10718  042B  1303               	bcf	3,6	;RP1=0, select bank0
 10719  042C  00A6               	movwf	___llmod@dividend+2
 10720  042D  1683               	bsf	3,5	;RP0=1, select bank1
 10721  042E  1303               	bcf	3,6	;RP1=0, select bank1
 10722  042F  083A               	movf	(sprintf@tmpval+1)^(0+128),w
 10723  0430  1283               	bcf	3,5	;RP0=0, select bank0
 10724  0431  1303               	bcf	3,6	;RP1=0, select bank0
 10725  0432  00A5               	movwf	___llmod@dividend+1
 10726  0433  1683               	bsf	3,5	;RP0=1, select bank1
 10727  0434  1303               	bcf	3,6	;RP1=0, select bank1
 10728  0435  0839               	movf	sprintf@tmpval^(0+128),w
 10729  0436  1283               	bcf	3,5	;RP0=0, select bank0
 10730  0437  1303               	bcf	3,6	;RP1=0, select bank0
 10731  0438  00A4               	movwf	___llmod@dividend
 10732  0439  160A  158A  243B  120A  118A  	fcall	___llmod
 10733  043E  1283               	bcf	3,5	;RP0=0, select bank0
 10734  043F  1303               	bcf	3,6	;RP1=0, select bank0
 10735  0440  0823               	movf	?___llmod+3,w
 10736  0441  1683               	bsf	3,5	;RP0=1, select bank1
 10737  0442  1303               	bcf	3,6	;RP1=0, select bank1
 10738  0443  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 10739  0444  1283               	bcf	3,5	;RP0=0, select bank0
 10740  0445  1303               	bcf	3,6	;RP1=0, select bank0
 10741  0446  0822               	movf	?___llmod+2,w
 10742  0447  1683               	bsf	3,5	;RP0=1, select bank1
 10743  0448  1303               	bcf	3,6	;RP1=0, select bank1
 10744  0449  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 10745  044A  1283               	bcf	3,5	;RP0=0, select bank0
 10746  044B  1303               	bcf	3,6	;RP1=0, select bank0
 10747  044C  0821               	movf	?___llmod+1,w
 10748  044D  1683               	bsf	3,5	;RP0=1, select bank1
 10749  044E  1303               	bcf	3,6	;RP1=0, select bank1
 10750  044F  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 10751  0450  1283               	bcf	3,5	;RP0=0, select bank0
 10752  0451  1303               	bcf	3,6	;RP1=0, select bank0
 10753  0452  0820               	movf	?___llmod,w
 10754  0453  1683               	bsf	3,5	;RP0=1, select bank1
 10755  0454  1303               	bcf	3,6	;RP1=0, select bank1
 10756  0455  00B9               	movwf	sprintf@tmpval^(0+128)
 10757  0456                     l3565:
 10758                           
 10759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10760  0456  0839               	movf	sprintf@tmpval^(0+128),w
 10761  0457  3E30               	addlw	48
 10762  0458  00AB               	movwf	??_sprintf^(0+128)
 10763  0459  0847               	movf	sprintf@sp^(0+128),w
 10764  045A  0084               	movwf	4
 10765  045B  082B               	movf	??_sprintf^(0+128),w
 10766  045C  1383               	bcf	3,7	;select IRP bank0
 10767  045D  0080               	movwf	0
 10768  045E  3001               	movlw	1
 10769  045F  00AB               	movwf	??_sprintf^(0+128)
 10770  0460  082B               	movf	??_sprintf^(0+128),w
 10771  0461  07C7               	addwf	sprintf@sp^(0+128),f
 10772  0462                     l383:	
 10773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10774                           
 10775                           
 10776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10777  0462  3001               	movlw	1
 10778  0463  02CA               	subwf	sprintf@c^(0+128),f
 10779  0464  0A4A               	incf	sprintf@c^(0+128),w
 10780  0465  1D03               	btfss	3,2
 10781  0466  2C68               	goto	u5611
 10782  0467  2C69               	goto	u5610
 10783  0468                     u5611:
 10784  0468  2BDC               	goto	l3561
 10785  0469                     u5610:
 10786  0469  2C7D               	goto	l3573
 10787  046A                     l3567:
 10788                           
 10789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10790  046A  3030               	movlw	48
 10791  046B  1683               	bsf	3,5	;RP0=1, select bank1
 10792  046C  1303               	bcf	3,6	;RP1=0, select bank1
 10793  046D  00AB               	movwf	??_sprintf^(0+128)
 10794  046E  0847               	movf	sprintf@sp^(0+128),w
 10795  046F  0084               	movwf	4
 10796  0470  082B               	movf	??_sprintf^(0+128),w
 10797  0471  1383               	bcf	3,7	;select IRP bank0
 10798  0472  0080               	movwf	0
 10799  0473                     l3569:
 10800  0473  3001               	movlw	1
 10801  0474  00AB               	movwf	??_sprintf^(0+128)
 10802  0475  082B               	movf	??_sprintf^(0+128),w
 10803  0476  07C7               	addwf	sprintf@sp^(0+128),f
 10804  0477                     l3571:
 10805                           
 10806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10807  0477  30FF               	movlw	255
 10808  0478  07C1               	addwf	sprintf@eexp^(0+128),f
 10809  0479  1803               	skipnc
 10810  047A  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
 10811  047B  30FF               	movlw	255
 10812  047C  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
 10813  047D                     l3573:
 10814                           
 10815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10816  047D  0842               	movf	(sprintf@eexp+1)^(0+128),w
 10817  047E  3A80               	xorlw	128
 10818  047F  00FF               	movwf	btemp+1
 10819  0480  3080               	movlw	128
 10820  0481  027F               	subwf	btemp+1,w
 10821  0482  1D03               	skipz
 10822  0483  2C86               	goto	u5625
 10823  0484  3001               	movlw	1
 10824  0485  0241               	subwf	sprintf@eexp^(0+128),w
 10825  0486                     u5625:
 10826  0486  1803               	skipnc
 10827  0487  2C89               	goto	u5621
 10828  0488  2C8A               	goto	u5620
 10829  0489                     u5621:
 10830  0489  2C6A               	goto	l3567
 10831  048A                     u5620:
 10832  048A                     l3575:
 10833                           
 10834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10835  048A  1683               	bsf	3,5	;RP0=1, select bank1
 10836  048B  1303               	bcf	3,6	;RP1=0, select bank1
 10837  048C  0849               	movf	(sprintf@prec+1)^(0+128),w
 10838  048D  3A80               	xorlw	128
 10839  048E  00FF               	movwf	btemp+1
 10840  048F  3080               	movlw	128
 10841  0490  027F               	subwf	btemp+1,w
 10842  0491  1D03               	skipz
 10843  0492  2C95               	goto	u5635
 10844  0493  3009               	movlw	9
 10845  0494  0248               	subwf	sprintf@prec^(0+128),w
 10846  0495                     u5635:
 10847  0495  1C03               	skipc
 10848  0496  2C98               	goto	u5631
 10849  0497  2C99               	goto	u5630
 10850  0498                     u5631:
 10851  0498  2CA0               	goto	l3579
 10852  0499                     u5630:
 10853  0499                     l3577:
 10854                           
 10855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10856  0499  3008               	movlw	8
 10857  049A  1683               	bsf	3,5	;RP0=1, select bank1
 10858  049B  1303               	bcf	3,6	;RP1=0, select bank1
 10859  049C  00AB               	movwf	??_sprintf^(0+128)
 10860  049D  082B               	movf	??_sprintf^(0+128),w
 10861  049E  00CA               	movwf	sprintf@c^(0+128)
 10862  049F  2CA6               	goto	l390
 10863  04A0                     l3579:
 10864                           
 10865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10866  04A0  1683               	bsf	3,5	;RP0=1, select bank1
 10867  04A1  1303               	bcf	3,6	;RP1=0, select bank1
 10868  04A2  0848               	movf	sprintf@prec^(0+128),w
 10869  04A3  00AB               	movwf	??_sprintf^(0+128)
 10870  04A4  082B               	movf	??_sprintf^(0+128),w
 10871  04A5  00CA               	movwf	sprintf@c^(0+128)
 10872  04A6                     l390:
 10873                           
 10874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10875  04A6  084A               	movf	sprintf@c^(0+128),w
 10876  04A7  00AB               	movwf	??_sprintf^(0+128)
 10877  04A8  01AC               	clrf	(??_sprintf^(0+128)+1)
 10878  04A9  082B               	movf	??_sprintf^(0+128),w
 10879  04AA  02C8               	subwf	sprintf@prec^(0+128),f
 10880  04AB  082C               	movf	(??_sprintf+1)^(0+128),w
 10881  04AC  1C03               	skipc
 10882  04AD  03C9               	decf	(sprintf@prec+1)^(0+128),f
 10883  04AE  02C9               	subwf	(sprintf@prec+1)^(0+128),f
 10884  04AF                     l3581:
 10885                           
 10886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10887  04AF  084A               	movf	sprintf@c^(0+128),w
 10888  04B0  1903               	btfsc	3,2
 10889  04B1  2CB3               	goto	u5641
 10890  04B2  2CB4               	goto	u5640
 10891  04B3                     u5641:
 10892  04B3  2CBF               	goto	l3587
 10893  04B4                     u5640:
 10894  04B4                     l3583:
 10895                           
 10896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10897  04B4  302E               	movlw	46
 10898  04B5  00AB               	movwf	??_sprintf^(0+128)
 10899  04B6  0847               	movf	sprintf@sp^(0+128),w
 10900  04B7  0084               	movwf	4
 10901  04B8  082B               	movf	??_sprintf^(0+128),w
 10902  04B9  1383               	bcf	3,7	;select IRP bank0
 10903  04BA  0080               	movwf	0
 10904  04BB                     l3585:
 10905  04BB  3001               	movlw	1
 10906  04BC  00AB               	movwf	??_sprintf^(0+128)
 10907  04BD  082B               	movf	??_sprintf^(0+128),w
 10908  04BE  07C7               	addwf	sprintf@sp^(0+128),f
 10909  04BF                     l3587:
 10910                           
 10911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10912  04BF  084A               	movf	sprintf@c^(0+128),w
 10913  04C0  120A  158A  2140  120A  118A  	fcall	_scale
 10914  04C5  1283               	bcf	3,5	;RP0=0, select bank0
 10915  04C6  1303               	bcf	3,6	;RP1=0, select bank0
 10916  04C7  0841               	movf	?_scale+3,w
 10917  04C8  1683               	bsf	3,5	;RP0=1, select bank1
 10918  04C9  1303               	bcf	3,6	;RP1=0, select bank1
 10919  04CA  00B3               	movwf	(_sprintf$1135+3)^(0+128)
 10920  04CB  1283               	bcf	3,5	;RP0=0, select bank0
 10921  04CC  1303               	bcf	3,6	;RP1=0, select bank0
 10922  04CD  0840               	movf	?_scale+2,w
 10923  04CE  1683               	bsf	3,5	;RP0=1, select bank1
 10924  04CF  1303               	bcf	3,6	;RP1=0, select bank1
 10925  04D0  00B2               	movwf	(_sprintf$1135+2)^(0+128)
 10926  04D1  1283               	bcf	3,5	;RP0=0, select bank0
 10927  04D2  1303               	bcf	3,6	;RP1=0, select bank0
 10928  04D3  083F               	movf	?_scale+1,w
 10929  04D4  1683               	bsf	3,5	;RP0=1, select bank1
 10930  04D5  1303               	bcf	3,6	;RP1=0, select bank1
 10931  04D6  00B1               	movwf	(_sprintf$1135+1)^(0+128)
 10932  04D7  1283               	bcf	3,5	;RP0=0, select bank0
 10933  04D8  1303               	bcf	3,6	;RP1=0, select bank0
 10934  04D9  083E               	movf	?_scale,w
 10935  04DA  1683               	bsf	3,5	;RP0=1, select bank1
 10936  04DB  1303               	bcf	3,6	;RP1=0, select bank1
 10937  04DC  00B0               	movwf	_sprintf$1135^(0+128)
 10938  04DD                     l3589:
 10939                           
 10940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10941  04DD  0833               	movf	(_sprintf$1135+3)^(0+128),w
 10942  04DE  1283               	bcf	3,5	;RP0=0, select bank0
 10943  04DF  1303               	bcf	3,6	;RP1=0, select bank0
 10944  04E0  00AB               	movwf	___flmul@a+3
 10945  04E1  1683               	bsf	3,5	;RP0=1, select bank1
 10946  04E2  1303               	bcf	3,6	;RP1=0, select bank1
 10947  04E3  0832               	movf	(_sprintf$1135+2)^(0+128),w
 10948  04E4  1283               	bcf	3,5	;RP0=0, select bank0
 10949  04E5  1303               	bcf	3,6	;RP1=0, select bank0
 10950  04E6  00AA               	movwf	___flmul@a+2
 10951  04E7  1683               	bsf	3,5	;RP0=1, select bank1
 10952  04E8  1303               	bcf	3,6	;RP1=0, select bank1
 10953  04E9  0831               	movf	(_sprintf$1135+1)^(0+128),w
 10954  04EA  1283               	bcf	3,5	;RP0=0, select bank0
 10955  04EB  1303               	bcf	3,6	;RP1=0, select bank0
 10956  04EC  00A9               	movwf	___flmul@a+1
 10957  04ED  1683               	bsf	3,5	;RP0=1, select bank1
 10958  04EE  1303               	bcf	3,6	;RP1=0, select bank1
 10959  04EF  0830               	movf	_sprintf$1135^(0+128),w
 10960  04F0  1283               	bcf	3,5	;RP0=0, select bank0
 10961  04F1  1303               	bcf	3,6	;RP1=0, select bank0
 10962  04F2  00A8               	movwf	___flmul@a
 10963  04F3  1683               	bsf	3,5	;RP0=1, select bank1
 10964  04F4  1303               	bcf	3,6	;RP1=0, select bank1
 10965  04F5  0846               	movf	(sprintf@fval+3)^(0+128),w
 10966  04F6  1283               	bcf	3,5	;RP0=0, select bank0
 10967  04F7  1303               	bcf	3,6	;RP1=0, select bank0
 10968  04F8  00A7               	movwf	___flmul@b+3
 10969  04F9  1683               	bsf	3,5	;RP0=1, select bank1
 10970  04FA  1303               	bcf	3,6	;RP1=0, select bank1
 10971  04FB  0845               	movf	(sprintf@fval+2)^(0+128),w
 10972  04FC  1283               	bcf	3,5	;RP0=0, select bank0
 10973  04FD  1303               	bcf	3,6	;RP1=0, select bank0
 10974  04FE  00A6               	movwf	___flmul@b+2
 10975  04FF  1683               	bsf	3,5	;RP0=1, select bank1
 10976  0500  1303               	bcf	3,6	;RP1=0, select bank1
 10977  0501  0844               	movf	(sprintf@fval+1)^(0+128),w
 10978  0502  1283               	bcf	3,5	;RP0=0, select bank0
 10979  0503  1303               	bcf	3,6	;RP1=0, select bank0
 10980  0504  00A5               	movwf	___flmul@b+1
 10981  0505  1683               	bsf	3,5	;RP0=1, select bank1
 10982  0506  1303               	bcf	3,6	;RP1=0, select bank1
 10983  0507  0843               	movf	sprintf@fval^(0+128),w
 10984  0508  1283               	bcf	3,5	;RP0=0, select bank0
 10985  0509  1303               	bcf	3,6	;RP1=0, select bank0
 10986  050A  00A4               	movwf	___flmul@b
 10987  050B  120A  158A  249F  120A  118A  	fcall	___flmul
 10988  0510  1283               	bcf	3,5	;RP0=0, select bank0
 10989  0511  1303               	bcf	3,6	;RP1=0, select bank0
 10990  0512  0827               	movf	?___flmul+3,w
 10991  0513  00D4               	movwf	___fltol@f1+3
 10992  0514  0826               	movf	?___flmul+2,w
 10993  0515  00D3               	movwf	___fltol@f1+2
 10994  0516  0825               	movf	?___flmul+1,w
 10995  0517  00D2               	movwf	___fltol@f1+1
 10996  0518  0824               	movf	?___flmul,w
 10997  0519  00D1               	movwf	___fltol@f1
 10998  051A  120A  158A  2006  120A  118A  	fcall	___fltol
 10999  051F  1283               	bcf	3,5	;RP0=0, select bank0
 11000  0520  1303               	bcf	3,6	;RP1=0, select bank0
 11001  0521  0854               	movf	?___fltol+3,w
 11002  0522  1683               	bsf	3,5	;RP0=1, select bank1
 11003  0523  1303               	bcf	3,6	;RP1=0, select bank1
 11004  0524  00C0               	movwf	(sprintf@val+3)^(0+128)
 11005  0525  1283               	bcf	3,5	;RP0=0, select bank0
 11006  0526  1303               	bcf	3,6	;RP1=0, select bank0
 11007  0527  0853               	movf	?___fltol+2,w
 11008  0528  1683               	bsf	3,5	;RP0=1, select bank1
 11009  0529  1303               	bcf	3,6	;RP1=0, select bank1
 11010  052A  00BF               	movwf	(sprintf@val+2)^(0+128)
 11011  052B  1283               	bcf	3,5	;RP0=0, select bank0
 11012  052C  1303               	bcf	3,6	;RP1=0, select bank0
 11013  052D  0852               	movf	?___fltol+1,w
 11014  052E  1683               	bsf	3,5	;RP0=1, select bank1
 11015  052F  1303               	bcf	3,6	;RP1=0, select bank1
 11016  0530  00BE               	movwf	(sprintf@val+1)^(0+128)
 11017  0531  1283               	bcf	3,5	;RP0=0, select bank0
 11018  0532  1303               	bcf	3,6	;RP1=0, select bank0
 11019  0533  0851               	movf	?___fltol,w
 11020  0534  1683               	bsf	3,5	;RP0=1, select bank1
 11021  0535  1303               	bcf	3,6	;RP1=0, select bank1
 11022  0536  00BD               	movwf	sprintf@val^(0+128)
 11023                           
 11024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11025  0537  2E19               	goto	l3599
 11026  0538                     l3591:
 11027                           
 11028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11029  0538  084A               	movf	sprintf@c^(0+128),w
 11030  0539  00AB               	movwf	??_sprintf^(0+128)
 11031  053A  3001               	movlw	1
 11032  053B                     u5655:
 11033  053B  1003               	clrc
 11034  053C  0DAB               	rlf	??_sprintf^(0+128),f
 11035  053D  3EFF               	addlw	-1
 11036  053E  1D03               	skipz
 11037  053F  2D3B               	goto	u5655
 11038  0540  1003               	clrc
 11039  0541  0D2B               	rlf	??_sprintf^(0+128),w
 11040  0542  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11041  0543  0084               	movwf	4
 11042  0544  120A  118A  200D  120A  118A  	fcall	stringdir
 11043  0549  00F0               	movwf	___lldiv@divisor
 11044  054A  120A  118A  200D  120A  118A  	fcall	stringdir
 11045  054F  00F1               	movwf	___lldiv@divisor+1
 11046  0550  120A  118A  200D  120A  118A  	fcall	stringdir
 11047  0555  00F2               	movwf	___lldiv@divisor+2
 11048  0556  120A  118A  200D  120A  118A  	fcall	stringdir
 11049  055B  00F3               	movwf	___lldiv@divisor+3
 11050  055C  0840               	movf	(sprintf@val+3)^(0+128),w
 11051  055D  00F7               	movwf	___lldiv@dividend+3
 11052  055E  083F               	movf	(sprintf@val+2)^(0+128),w
 11053  055F  00F6               	movwf	___lldiv@dividend+2
 11054  0560  083E               	movf	(sprintf@val+1)^(0+128),w
 11055  0561  00F5               	movwf	___lldiv@dividend+1
 11056  0562  083D               	movf	sprintf@val^(0+128),w
 11057  0563  00F4               	movwf	___lldiv@dividend
 11058  0564  160A  158A  24EA  120A  118A  	fcall	___lldiv
 11059  0569  0873               	movf	?___lldiv+3,w
 11060  056A  1683               	bsf	3,5	;RP0=1, select bank1
 11061  056B  1303               	bcf	3,6	;RP1=0, select bank1
 11062  056C  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 11063  056D  0872               	movf	?___lldiv+2,w
 11064  056E  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 11065  056F  0871               	movf	?___lldiv+1,w
 11066  0570  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 11067  0571  0870               	movf	?___lldiv,w
 11068  0572  00B9               	movwf	sprintf@tmpval^(0+128)
 11069  0573                     l3593:
 11070                           
 11071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11072  0573  3000               	movlw	0
 11073  0574  1283               	bcf	3,5	;RP0=0, select bank0
 11074  0575  1303               	bcf	3,6	;RP1=0, select bank0
 11075  0576  00A3               	movwf	___llmod@divisor+3
 11076  0577  3000               	movlw	0
 11077  0578  00A2               	movwf	___llmod@divisor+2
 11078  0579  3000               	movlw	0
 11079  057A  00A1               	movwf	___llmod@divisor+1
 11080  057B  300A               	movlw	10
 11081  057C  00A0               	movwf	___llmod@divisor
 11082  057D  1683               	bsf	3,5	;RP0=1, select bank1
 11083  057E  1303               	bcf	3,6	;RP1=0, select bank1
 11084  057F  083C               	movf	(sprintf@tmpval+3)^(0+128),w
 11085  0580  1283               	bcf	3,5	;RP0=0, select bank0
 11086  0581  1303               	bcf	3,6	;RP1=0, select bank0
 11087  0582  00A7               	movwf	___llmod@dividend+3
 11088  0583  1683               	bsf	3,5	;RP0=1, select bank1
 11089  0584  1303               	bcf	3,6	;RP1=0, select bank1
 11090  0585  083B               	movf	(sprintf@tmpval+2)^(0+128),w
 11091  0586  1283               	bcf	3,5	;RP0=0, select bank0
 11092  0587  1303               	bcf	3,6	;RP1=0, select bank0
 11093  0588  00A6               	movwf	___llmod@dividend+2
 11094  0589  1683               	bsf	3,5	;RP0=1, select bank1
 11095  058A  1303               	bcf	3,6	;RP1=0, select bank1
 11096  058B  083A               	movf	(sprintf@tmpval+1)^(0+128),w
 11097  058C  1283               	bcf	3,5	;RP0=0, select bank0
 11098  058D  1303               	bcf	3,6	;RP1=0, select bank0
 11099  058E  00A5               	movwf	___llmod@dividend+1
 11100  058F  1683               	bsf	3,5	;RP0=1, select bank1
 11101  0590  1303               	bcf	3,6	;RP1=0, select bank1
 11102  0591  0839               	movf	sprintf@tmpval^(0+128),w
 11103  0592  1283               	bcf	3,5	;RP0=0, select bank0
 11104  0593  1303               	bcf	3,6	;RP1=0, select bank0
 11105  0594  00A4               	movwf	___llmod@dividend
 11106  0595  160A  158A  243B  120A  118A  	fcall	___llmod
 11107  059A  1283               	bcf	3,5	;RP0=0, select bank0
 11108  059B  1303               	bcf	3,6	;RP1=0, select bank0
 11109  059C  0823               	movf	?___llmod+3,w
 11110  059D  1683               	bsf	3,5	;RP0=1, select bank1
 11111  059E  1303               	bcf	3,6	;RP1=0, select bank1
 11112  059F  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
 11113  05A0  1283               	bcf	3,5	;RP0=0, select bank0
 11114  05A1  1303               	bcf	3,6	;RP1=0, select bank0
 11115  05A2  0822               	movf	?___llmod+2,w
 11116  05A3  1683               	bsf	3,5	;RP0=1, select bank1
 11117  05A4  1303               	bcf	3,6	;RP1=0, select bank1
 11118  05A5  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
 11119  05A6  1283               	bcf	3,5	;RP0=0, select bank0
 11120  05A7  1303               	bcf	3,6	;RP1=0, select bank0
 11121  05A8  0821               	movf	?___llmod+1,w
 11122  05A9  1683               	bsf	3,5	;RP0=1, select bank1
 11123  05AA  1303               	bcf	3,6	;RP1=0, select bank1
 11124  05AB  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
 11125  05AC  1283               	bcf	3,5	;RP0=0, select bank0
 11126  05AD  1303               	bcf	3,6	;RP1=0, select bank0
 11127  05AE  0820               	movf	?___llmod,w
 11128  05AF  1683               	bsf	3,5	;RP0=1, select bank1
 11129  05B0  1303               	bcf	3,6	;RP1=0, select bank1
 11130  05B1  00B9               	movwf	sprintf@tmpval^(0+128)
 11131  05B2                     l3595:
 11132                           
 11133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11134  05B2  0839               	movf	sprintf@tmpval^(0+128),w
 11135  05B3  3E30               	addlw	48
 11136  05B4  00AB               	movwf	??_sprintf^(0+128)
 11137  05B5  0847               	movf	sprintf@sp^(0+128),w
 11138  05B6  0084               	movwf	4
 11139  05B7  082B               	movf	??_sprintf^(0+128),w
 11140  05B8  1383               	bcf	3,7	;select IRP bank0
 11141  05B9  0080               	movwf	0
 11142  05BA  3001               	movlw	1
 11143  05BB  00AB               	movwf	??_sprintf^(0+128)
 11144  05BC  082B               	movf	??_sprintf^(0+128),w
 11145  05BD  07C7               	addwf	sprintf@sp^(0+128),f
 11146  05BE                     l3597:
 11147                           
 11148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11149  05BE  084A               	movf	sprintf@c^(0+128),w
 11150  05BF  00AB               	movwf	??_sprintf^(0+128)
 11151  05C0  3001               	movlw	1
 11152  05C1                     u5665:
 11153  05C1  1003               	clrc
 11154  05C2  0DAB               	rlf	??_sprintf^(0+128),f
 11155  05C3  3EFF               	addlw	-1
 11156  05C4  1D03               	skipz
 11157  05C5  2DC1               	goto	u5665
 11158  05C6  1003               	clrc
 11159  05C7  0D2B               	rlf	??_sprintf^(0+128),w
 11160  05C8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11161  05C9  0084               	movwf	4
 11162  05CA  120A  118A  200D  120A  118A  	fcall	stringdir
 11163  05CF  1283               	bcf	3,5	;RP0=0, select bank0
 11164  05D0  1303               	bcf	3,6	;RP1=0, select bank0
 11165  05D1  00A0               	movwf	___llmod@divisor
 11166  05D2  120A  118A  200D  120A  118A  	fcall	stringdir
 11167  05D7  00A1               	movwf	___llmod@divisor+1
 11168  05D8  120A  118A  200D  120A  118A  	fcall	stringdir
 11169  05DD  00A2               	movwf	___llmod@divisor+2
 11170  05DE  120A  118A  200D  120A  118A  	fcall	stringdir
 11171  05E3  00A3               	movwf	___llmod@divisor+3
 11172  05E4  1683               	bsf	3,5	;RP0=1, select bank1
 11173  05E5  1303               	bcf	3,6	;RP1=0, select bank1
 11174  05E6  0840               	movf	(sprintf@val+3)^(0+128),w
 11175  05E7  1283               	bcf	3,5	;RP0=0, select bank0
 11176  05E8  1303               	bcf	3,6	;RP1=0, select bank0
 11177  05E9  00A7               	movwf	___llmod@dividend+3
 11178  05EA  1683               	bsf	3,5	;RP0=1, select bank1
 11179  05EB  1303               	bcf	3,6	;RP1=0, select bank1
 11180  05EC  083F               	movf	(sprintf@val+2)^(0+128),w
 11181  05ED  1283               	bcf	3,5	;RP0=0, select bank0
 11182  05EE  1303               	bcf	3,6	;RP1=0, select bank0
 11183  05EF  00A6               	movwf	___llmod@dividend+2
 11184  05F0  1683               	bsf	3,5	;RP0=1, select bank1
 11185  05F1  1303               	bcf	3,6	;RP1=0, select bank1
 11186  05F2  083E               	movf	(sprintf@val+1)^(0+128),w
 11187  05F3  1283               	bcf	3,5	;RP0=0, select bank0
 11188  05F4  1303               	bcf	3,6	;RP1=0, select bank0
 11189  05F5  00A5               	movwf	___llmod@dividend+1
 11190  05F6  1683               	bsf	3,5	;RP0=1, select bank1
 11191  05F7  1303               	bcf	3,6	;RP1=0, select bank1
 11192  05F8  083D               	movf	sprintf@val^(0+128),w
 11193  05F9  1283               	bcf	3,5	;RP0=0, select bank0
 11194  05FA  1303               	bcf	3,6	;RP1=0, select bank0
 11195  05FB  00A4               	movwf	___llmod@dividend
 11196  05FC  160A  158A  243B  120A  118A  	fcall	___llmod
 11197  0601  1283               	bcf	3,5	;RP0=0, select bank0
 11198  0602  1303               	bcf	3,6	;RP1=0, select bank0
 11199  0603  0823               	movf	?___llmod+3,w
 11200  0604  1683               	bsf	3,5	;RP0=1, select bank1
 11201  0605  1303               	bcf	3,6	;RP1=0, select bank1
 11202  0606  00C0               	movwf	(sprintf@val+3)^(0+128)
 11203  0607  1283               	bcf	3,5	;RP0=0, select bank0
 11204  0608  1303               	bcf	3,6	;RP1=0, select bank0
 11205  0609  0822               	movf	?___llmod+2,w
 11206  060A  1683               	bsf	3,5	;RP0=1, select bank1
 11207  060B  1303               	bcf	3,6	;RP1=0, select bank1
 11208  060C  00BF               	movwf	(sprintf@val+2)^(0+128)
 11209  060D  1283               	bcf	3,5	;RP0=0, select bank0
 11210  060E  1303               	bcf	3,6	;RP1=0, select bank0
 11211  060F  0821               	movf	?___llmod+1,w
 11212  0610  1683               	bsf	3,5	;RP0=1, select bank1
 11213  0611  1303               	bcf	3,6	;RP1=0, select bank1
 11214  0612  00BE               	movwf	(sprintf@val+1)^(0+128)
 11215  0613  1283               	bcf	3,5	;RP0=0, select bank0
 11216  0614  1303               	bcf	3,6	;RP1=0, select bank0
 11217  0615  0820               	movf	?___llmod,w
 11218  0616  1683               	bsf	3,5	;RP0=1, select bank1
 11219  0617  1303               	bcf	3,6	;RP1=0, select bank1
 11220  0618  00BD               	movwf	sprintf@val^(0+128)
 11221  0619                     l3599:
 11222                           
 11223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11224  0619  3001               	movlw	1
 11225  061A  02CA               	subwf	sprintf@c^(0+128),f
 11226  061B  0A4A               	incf	sprintf@c^(0+128),w
 11227  061C  1D03               	btfss	3,2
 11228  061D  2E1F               	goto	u5671
 11229  061E  2E20               	goto	u5670
 11230  061F                     u5671:
 11231  061F  2D38               	goto	l3591
 11232  0620                     u5670:
 11233  0620  2E32               	goto	l3607
 11234  0621                     l3601:
 11235                           
 11236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11237  0621  3030               	movlw	48
 11238  0622  00AB               	movwf	??_sprintf^(0+128)
 11239  0623  0847               	movf	sprintf@sp^(0+128),w
 11240  0624  0084               	movwf	4
 11241  0625  082B               	movf	??_sprintf^(0+128),w
 11242  0626  1383               	bcf	3,7	;select IRP bank0
 11243  0627  0080               	movwf	0
 11244  0628                     l3603:
 11245  0628  3001               	movlw	1
 11246  0629  00AB               	movwf	??_sprintf^(0+128)
 11247  062A  082B               	movf	??_sprintf^(0+128),w
 11248  062B  07C7               	addwf	sprintf@sp^(0+128),f
 11249  062C                     l3605:
 11250                           
 11251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11252  062C  30FF               	movlw	255
 11253  062D  07C8               	addwf	sprintf@prec^(0+128),f
 11254  062E  1803               	skipnc
 11255  062F  0AC9               	incf	(sprintf@prec+1)^(0+128),f
 11256  0630  30FF               	movlw	255
 11257  0631  07C9               	addwf	(sprintf@prec+1)^(0+128),f
 11258  0632                     l3607:
 11259                           
 11260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11261  0632  0848               	movf	sprintf@prec^(0+128),w
 11262  0633  0449               	iorwf	(sprintf@prec+1)^(0+128),w
 11263  0634  1D03               	btfss	3,2
 11264  0635  2E37               	goto	u5681
 11265  0636  2E38               	goto	u5680
 11266  0637                     u5681:
 11267  0637  2E21               	goto	l3601
 11268  0638                     u5680:
 11269  0638  2FD6               	goto	l3687
 11270  0639                     l3609:
 11271                           
 11272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11273  0639  0834               	movf	sprintf@ap^(0+128),w
 11274  063A  0084               	movwf	4
 11275  063B  1383               	bcf	3,7	;select IRP bank0
 11276  063C  0800               	movf	0,w
 11277  063D  00AB               	movwf	??_sprintf^(0+128)
 11278  063E  0A84               	incf	4,f
 11279  063F  0800               	movf	0,w
 11280  0640  00AC               	movwf	(??_sprintf^(0+128)+1)
 11281  0641  082B               	movf	??_sprintf^(0+128),w
 11282  0642  00BD               	movwf	sprintf@val^(0+128)
 11283  0643  082C               	movf	(??_sprintf+1)^(0+128),w
 11284  0644  00BE               	movwf	(sprintf@val+1)^(0+128)
 11285  0645  3000               	movlw	0
 11286  0646  1BBE               	btfsc	(sprintf@val+1)^(0+128),7
 11287  0647  30FF               	movlw	255
 11288  0648  00BF               	movwf	(sprintf@val+2)^(0+128)
 11289  0649  00C0               	movwf	(sprintf@val+3)^(0+128)
 11290  064A                     l3611:
 11291  064A  3002               	movlw	2
 11292  064B  00AB               	movwf	??_sprintf^(0+128)
 11293  064C  082B               	movf	??_sprintf^(0+128),w
 11294  064D  07B4               	addwf	sprintf@ap^(0+128),f
 11295  064E                     l3613:
 11296                           
 11297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11298  064E  1FC0               	btfss	(sprintf@val+3)^(0+128),7
 11299  064F  2E51               	goto	u5691
 11300  0650  2E52               	goto	u5690
 11301  0651                     u5691:
 11302  0651  2E61               	goto	l3619
 11303  0652                     u5690:
 11304  0652                     l3615:
 11305                           
 11306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11307  0652  3003               	movlw	3
 11308  0653  04B5               	iorwf	sprintf@flag^(0+128),f
 11309  0654  3000               	movlw	0
 11310  0655  04B6               	iorwf	(sprintf@flag+1)^(0+128),f
 11311  0656                     l3617:
 11312                           
 11313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11314  0656  09BD               	comf	sprintf@val^(0+128),f
 11315  0657  09BE               	comf	(sprintf@val+1)^(0+128),f
 11316  0658  09BF               	comf	(sprintf@val+2)^(0+128),f
 11317  0659  09C0               	comf	(sprintf@val+3)^(0+128),f
 11318  065A  0ABD               	incf	sprintf@val^(0+128),f
 11319  065B  1903               	skipnz
 11320  065C  0ABE               	incf	(sprintf@val+1)^(0+128),f
 11321  065D  1903               	skipnz
 11322  065E  0ABF               	incf	(sprintf@val+2)^(0+128),f
 11323  065F  1903               	skipnz
 11324  0660  0AC0               	incf	(sprintf@val+3)^(0+128),f
 11325  0661                     l3619:
 11326                           
 11327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 11328  0661  0848               	movf	sprintf@prec^(0+128),w
 11329  0662  0449               	iorwf	(sprintf@prec+1)^(0+128),w
 11330  0663  1D03               	btfss	3,2
 11331  0664  2E66               	goto	u5701
 11332  0665  2E67               	goto	u5700
 11333  0666                     u5701:
 11334  0666  2E75               	goto	l3625
 11335  0667                     u5700:
 11336  0667                     l3621:
 11337  0667  0840               	movf	(sprintf@val+3)^(0+128),w
 11338  0668  043F               	iorwf	(sprintf@val+2)^(0+128),w
 11339  0669  043E               	iorwf	(sprintf@val+1)^(0+128),w
 11340  066A  043D               	iorwf	sprintf@val^(0+128),w
 11341  066B  1D03               	skipz
 11342  066C  2E6E               	goto	u5711
 11343  066D  2E6F               	goto	u5710
 11344  066E                     u5711:
 11345  066E  2E75               	goto	l3625
 11346  066F                     u5710:
 11347  066F                     l3623:
 11348                           
 11349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11350  066F  3001               	movlw	1
 11351  0670  07C8               	addwf	sprintf@prec^(0+128),f
 11352  0671  1803               	skipnc
 11353  0672  0AC9               	incf	(sprintf@prec+1)^(0+128),f
 11354  0673  3000               	movlw	0
 11355  0674  07C9               	addwf	(sprintf@prec+1)^(0+128),f
 11356  0675                     l3625:
 11357                           
 11358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11359  0675  01CA               	clrf	sprintf@c^(0+128)
 11360  0676  0ACA               	incf	sprintf@c^(0+128),f
 11361  0677                     l3631:
 11362                           
 11363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11364  0677  084A               	movf	sprintf@c^(0+128),w
 11365  0678  00AB               	movwf	??_sprintf^(0+128)
 11366  0679  3001               	movlw	1
 11367  067A                     u5725:
 11368  067A  1003               	clrc
 11369  067B  0DAB               	rlf	??_sprintf^(0+128),f
 11370  067C  3EFF               	addlw	-1
 11371  067D  1D03               	skipz
 11372  067E  2E7A               	goto	u5725
 11373  067F  1003               	clrc
 11374  0680  0D2B               	rlf	??_sprintf^(0+128),w
 11375  0681  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11376  0682  0084               	movwf	4
 11377  0683  120A  118A  200D  120A  118A  	fcall	stringdir
 11378  0688  00AC               	movwf	(??_sprintf+1)^(0+128)
 11379  0689  120A  118A  200D  120A  118A  	fcall	stringdir
 11380  068E  00AD               	movwf	((??_sprintf+1)^(0+128)+1)
 11381  068F  120A  118A  200D  120A  118A  	fcall	stringdir
 11382  0694  00AE               	movwf	((??_sprintf+1)^(0+128)+2)
 11383  0695  120A  118A  200D  120A  118A  	fcall	stringdir
 11384  069A  00AF               	movwf	((??_sprintf+1)^(0+128)+3)
 11385  069B  082F               	movf	(??_sprintf+4)^(0+128),w
 11386  069C  0240               	subwf	(sprintf@val+3)^(0+128),w
 11387  069D  1D03               	skipz
 11388  069E  2EA9               	goto	u5735
 11389  069F  082E               	movf	(??_sprintf+3)^(0+128),w
 11390  06A0  023F               	subwf	(sprintf@val+2)^(0+128),w
 11391  06A1  1D03               	skipz
 11392  06A2  2EA9               	goto	u5735
 11393  06A3  082D               	movf	(??_sprintf+2)^(0+128),w
 11394  06A4  023E               	subwf	(sprintf@val+1)^(0+128),w
 11395  06A5  1D03               	skipz
 11396  06A6  2EA9               	goto	u5735
 11397  06A7  082C               	movf	(??_sprintf+1)^(0+128),w
 11398  06A8  023D               	subwf	sprintf@val^(0+128),w
 11399  06A9                     u5735:
 11400  06A9  1803               	skipnc
 11401  06AA  2EAC               	goto	u5731
 11402  06AB  2EAD               	goto	u5730
 11403  06AC                     u5731:
 11404  06AC  2EAE               	goto	l3635
 11405  06AD                     u5730:
 11406  06AD  2EB8               	goto	l3637
 11407  06AE                     l3635:
 11408  06AE  3001               	movlw	1
 11409  06AF  00AB               	movwf	??_sprintf^(0+128)
 11410  06B0  082B               	movf	??_sprintf^(0+128),w
 11411  06B1  07CA               	addwf	sprintf@c^(0+128),f
 11412  06B2  300A               	movlw	10
 11413  06B3  064A               	xorwf	sprintf@c^(0+128),w
 11414  06B4  1D03               	btfss	3,2
 11415  06B5  2EB7               	goto	u5741
 11416  06B6  2EB8               	goto	u5740
 11417  06B7                     u5741:
 11418  06B7  2E77               	goto	l3631
 11419  06B8                     u5740:
 11420  06B8                     l3637:
 11421                           
 11422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11423  06B8  0849               	movf	(sprintf@prec+1)^(0+128),w
 11424  06B9  3A80               	xorlw	128
 11425  06BA  3C80               	sublw	128
 11426  06BB  1D03               	skipz
 11427  06BC  2EBF               	goto	u5755
 11428  06BD  0848               	movf	sprintf@prec^(0+128),w
 11429  06BE  024A               	subwf	sprintf@c^(0+128),w
 11430  06BF                     u5755:
 11431  06BF  1803               	skipnc
 11432  06C0  2EC2               	goto	u5751
 11433  06C1  2EC3               	goto	u5750
 11434  06C2                     u5751:
 11435  06C2  2ECA               	goto	l3641
 11436  06C3                     u5750:
 11437  06C3                     l3639:
 11438                           
 11439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11440  06C3  1683               	bsf	3,5	;RP0=1, select bank1
 11441  06C4  1303               	bcf	3,6	;RP1=0, select bank1
 11442  06C5  0848               	movf	sprintf@prec^(0+128),w
 11443  06C6  00AB               	movwf	??_sprintf^(0+128)
 11444  06C7  082B               	movf	??_sprintf^(0+128),w
 11445  06C8  00CA               	movwf	sprintf@c^(0+128)
 11446  06C9  2EE2               	goto	l3645
 11447  06CA                     l3641:
 11448  06CA  1683               	bsf	3,5	;RP0=1, select bank1
 11449  06CB  1303               	bcf	3,6	;RP1=0, select bank1
 11450  06CC  0849               	movf	(sprintf@prec+1)^(0+128),w
 11451  06CD  3A80               	xorlw	128
 11452  06CE  00AB               	movwf	??_sprintf^(0+128)
 11453  06CF  3080               	movlw	128
 11454  06D0  022B               	subwf	??_sprintf^(0+128),w
 11455  06D1  1D03               	skipz
 11456  06D2  2ED5               	goto	u5765
 11457  06D3  084A               	movf	sprintf@c^(0+128),w
 11458  06D4  0248               	subwf	sprintf@prec^(0+128),w
 11459  06D5                     u5765:
 11460  06D5  1803               	skipnc
 11461  06D6  2ED8               	goto	u5761
 11462  06D7  2ED9               	goto	u5760
 11463  06D8                     u5761:
 11464  06D8  2EE2               	goto	l3645
 11465  06D9                     u5760:
 11466  06D9                     l3643:
 11467                           
 11468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11469  06D9  1683               	bsf	3,5	;RP0=1, select bank1
 11470  06DA  1303               	bcf	3,6	;RP1=0, select bank1
 11471  06DB  084A               	movf	sprintf@c^(0+128),w
 11472  06DC  00AB               	movwf	??_sprintf^(0+128)
 11473  06DD  01AC               	clrf	(??_sprintf^(0+128)+1)
 11474  06DE  082B               	movf	??_sprintf^(0+128),w
 11475  06DF  00C8               	movwf	sprintf@prec^(0+128)
 11476  06E0  082C               	movf	(??_sprintf+1)^(0+128),w
 11477  06E1  00C9               	movwf	(sprintf@prec+1)^(0+128)
 11478  06E2                     l3645:
 11479                           
 11480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11481  06E2  1683               	bsf	3,5	;RP0=1, select bank1
 11482  06E3  1303               	bcf	3,6	;RP1=0, select bank1
 11483  06E4  0837               	movf	sprintf@width^(0+128),w
 11484  06E5  0438               	iorwf	(sprintf@width+1)^(0+128),w
 11485  06E6  1903               	btfsc	3,2
 11486  06E7  2EE9               	goto	u5771
 11487  06E8  2EEA               	goto	u5770
 11488  06E9                     u5771:
 11489  06E9  2EFC               	goto	l3651
 11490  06EA                     u5770:
 11491  06EA                     l3647:
 11492  06EA  3003               	movlw	3
 11493  06EB  0535               	andwf	sprintf@flag^(0+128),w
 11494  06EC  00AB               	movwf	??_sprintf^(0+128)
 11495  06ED  3000               	movlw	0
 11496  06EE  0536               	andwf	(sprintf@flag+1)^(0+128),w
 11497  06EF  00AC               	movwf	(??_sprintf+1)^(0+128)
 11498  06F0  082B               	movf	??_sprintf^(0+128),w
 11499  06F1  042C               	iorwf	(??_sprintf^(0+128)+1),w
 11500  06F2  1903               	btfsc	3,2
 11501  06F3  2EF5               	goto	u5781
 11502  06F4  2EF6               	goto	u5780
 11503  06F5                     u5781:
 11504  06F5  2EFC               	goto	l3651
 11505  06F6                     u5780:
 11506  06F6                     l3649:
 11507                           
 11508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11509  06F6  30FF               	movlw	255
 11510  06F7  07B7               	addwf	sprintf@width^(0+128),f
 11511  06F8  1803               	skipnc
 11512  06F9  0AB8               	incf	(sprintf@width+1)^(0+128),f
 11513  06FA  30FF               	movlw	255
 11514  06FB  07B8               	addwf	(sprintf@width+1)^(0+128),f
 11515  06FC                     l3651:
 11516                           
 11517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11518  06FC  1F36               	btfss	(sprintf@flag+1)^(0+128),6
 11519  06FD  2EFF               	goto	u5791
 11520  06FE  2F00               	goto	u5790
 11521  06FF                     u5791:
 11522  06FF  2F1B               	goto	l3659
 11523  0700                     u5790:
 11524  0700                     l3653:
 11525                           
 11526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11527  0700  0849               	movf	(sprintf@prec+1)^(0+128),w
 11528  0701  3A80               	xorlw	128
 11529  0702  00AB               	movwf	??_sprintf^(0+128)
 11530  0703  0838               	movf	(sprintf@width+1)^(0+128),w
 11531  0704  3A80               	xorlw	128
 11532  0705  022B               	subwf	??_sprintf^(0+128),w
 11533  0706  1D03               	skipz
 11534  0707  2F0A               	goto	u5805
 11535  0708  0837               	movf	sprintf@width^(0+128),w
 11536  0709  0248               	subwf	sprintf@prec^(0+128),w
 11537  070A                     u5805:
 11538  070A  1803               	skipnc
 11539  070B  2F0D               	goto	u5801
 11540  070C  2F0E               	goto	u5800
 11541  070D                     u5801:
 11542  070D  2F17               	goto	l3657
 11543  070E                     u5800:
 11544  070E                     l3655:
 11545                           
 11546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11547  070E  1683               	bsf	3,5	;RP0=1, select bank1
 11548  070F  1303               	bcf	3,6	;RP1=0, select bank1
 11549  0710  0848               	movf	sprintf@prec^(0+128),w
 11550  0711  02B7               	subwf	sprintf@width^(0+128),f
 11551  0712  0849               	movf	(sprintf@prec+1)^(0+128),w
 11552  0713  1C03               	skipc
 11553  0714  03B8               	decf	(sprintf@width+1)^(0+128),f
 11554  0715  02B8               	subwf	(sprintf@width+1)^(0+128),f
 11555  0716  2F1B               	goto	l3659
 11556  0717                     l3657:
 11557                           
 11558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11559  0717  1683               	bsf	3,5	;RP0=1, select bank1
 11560  0718  1303               	bcf	3,6	;RP1=0, select bank1
 11561  0719  01B7               	clrf	sprintf@width^(0+128)
 11562  071A  01B8               	clrf	(sprintf@width+1)^(0+128)
 11563  071B                     l3659:
 11564                           
 11565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11566  071B  0838               	movf	(sprintf@width+1)^(0+128),w
 11567  071C  3A80               	xorlw	128
 11568  071D  3C80               	sublw	128
 11569  071E  1D03               	skipz
 11570  071F  2F22               	goto	u5815
 11571  0720  0837               	movf	sprintf@width^(0+128),w
 11572  0721  024A               	subwf	sprintf@c^(0+128),w
 11573  0722                     u5815:
 11574  0722  1803               	skipnc
 11575  0723  2F25               	goto	u5811
 11576  0724  2F26               	goto	u5810
 11577  0725                     u5811:
 11578  0725  2F32               	goto	l3663
 11579  0726                     u5810:
 11580  0726                     l3661:
 11581                           
 11582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11583  0726  1683               	bsf	3,5	;RP0=1, select bank1
 11584  0727  1303               	bcf	3,6	;RP1=0, select bank1
 11585  0728  084A               	movf	sprintf@c^(0+128),w
 11586  0729  00AB               	movwf	??_sprintf^(0+128)
 11587  072A  01AC               	clrf	(??_sprintf^(0+128)+1)
 11588  072B  082B               	movf	??_sprintf^(0+128),w
 11589  072C  02B7               	subwf	sprintf@width^(0+128),f
 11590  072D  082C               	movf	(??_sprintf+1)^(0+128),w
 11591  072E  1C03               	skipc
 11592  072F  03B8               	decf	(sprintf@width+1)^(0+128),f
 11593  0730  02B8               	subwf	(sprintf@width+1)^(0+128),f
 11594  0731  2F36               	goto	l3665
 11595  0732                     l3663:
 11596                           
 11597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11598  0732  1683               	bsf	3,5	;RP0=1, select bank1
 11599  0733  1303               	bcf	3,6	;RP1=0, select bank1
 11600  0734  01B7               	clrf	sprintf@width^(0+128)
 11601  0735  01B8               	clrf	(sprintf@width+1)^(0+128)
 11602  0736                     l3665:
 11603                           
 11604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11605  0736  0837               	movf	sprintf@width^(0+128),w
 11606  0737  0438               	iorwf	(sprintf@width+1)^(0+128),w
 11607  0738  1903               	btfsc	3,2
 11608  0739  2F3B               	goto	u5821
 11609  073A  2F3C               	goto	u5820
 11610  073B                     u5821:
 11611  073B  2F53               	goto	l3673
 11612  073C                     u5820:
 11613  073C                     l3667:
 11614                           
 11615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11616  073C  3020               	movlw	32
 11617  073D  00AB               	movwf	??_sprintf^(0+128)
 11618  073E  0847               	movf	sprintf@sp^(0+128),w
 11619  073F  0084               	movwf	4
 11620  0740  082B               	movf	??_sprintf^(0+128),w
 11621  0741  1383               	bcf	3,7	;select IRP bank0
 11622  0742  0080               	movwf	0
 11623  0743                     l3669:
 11624  0743  3001               	movlw	1
 11625  0744  00AB               	movwf	??_sprintf^(0+128)
 11626  0745  082B               	movf	??_sprintf^(0+128),w
 11627  0746  07C7               	addwf	sprintf@sp^(0+128),f
 11628  0747                     l3671:
 11629  0747  30FF               	movlw	255
 11630  0748  07B7               	addwf	sprintf@width^(0+128),f
 11631  0749  1803               	skipnc
 11632  074A  0AB8               	incf	(sprintf@width+1)^(0+128),f
 11633  074B  30FF               	movlw	255
 11634  074C  07B8               	addwf	(sprintf@width+1)^(0+128),f
 11635  074D  0837               	movf	sprintf@width^(0+128),w
 11636  074E  0438               	iorwf	(sprintf@width+1)^(0+128),w
 11637  074F  1D03               	btfss	3,2
 11638  0750  2F52               	goto	u5831
 11639  0751  2F53               	goto	u5830
 11640  0752                     u5831:
 11641  0752  2F3C               	goto	l3667
 11642  0753                     u5830:
 11643  0753                     l3673:
 11644                           
 11645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11646  0753  3003               	movlw	3
 11647  0754  0535               	andwf	sprintf@flag^(0+128),w
 11648  0755  00AB               	movwf	??_sprintf^(0+128)
 11649  0756  3000               	movlw	0
 11650  0757  0536               	andwf	(sprintf@flag+1)^(0+128),w
 11651  0758  00AC               	movwf	(??_sprintf+1)^(0+128)
 11652  0759  082B               	movf	??_sprintf^(0+128),w
 11653  075A  042C               	iorwf	(??_sprintf^(0+128)+1),w
 11654  075B  1903               	btfsc	3,2
 11655  075C  2F5E               	goto	u5841
 11656  075D  2F5F               	goto	u5840
 11657  075E                     u5841:
 11658  075E  2FC8               	goto	l3685
 11659  075F                     u5840:
 11660  075F                     l3675:
 11661                           
 11662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11663  075F  302D               	movlw	45
 11664  0760  00AB               	movwf	??_sprintf^(0+128)
 11665  0761  0847               	movf	sprintf@sp^(0+128),w
 11666  0762  0084               	movwf	4
 11667  0763  082B               	movf	??_sprintf^(0+128),w
 11668  0764  1383               	bcf	3,7	;select IRP bank0
 11669  0765  0080               	movwf	0
 11670  0766                     l3677:
 11671  0766  3001               	movlw	1
 11672  0767  00AB               	movwf	??_sprintf^(0+128)
 11673  0768  082B               	movf	??_sprintf^(0+128),w
 11674  0769  07C7               	addwf	sprintf@sp^(0+128),f
 11675  076A  2FC8               	goto	l3685
 11676  076B                     l3679:
 11677                           
 11678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11679  076B  3000               	movlw	0
 11680  076C  1283               	bcf	3,5	;RP0=0, select bank0
 11681  076D  1303               	bcf	3,6	;RP1=0, select bank0
 11682  076E  00A3               	movwf	___llmod@divisor+3
 11683  076F  3000               	movlw	0
 11684  0770  00A2               	movwf	___llmod@divisor+2
 11685  0771  3000               	movlw	0
 11686  0772  00A1               	movwf	___llmod@divisor+1
 11687  0773  300A               	movlw	10
 11688  0774  00A0               	movwf	___llmod@divisor
 11689  0775  1683               	bsf	3,5	;RP0=1, select bank1
 11690  0776  1303               	bcf	3,6	;RP1=0, select bank1
 11691  0777  0848               	movf	sprintf@prec^(0+128),w
 11692  0778  00AB               	movwf	??_sprintf^(0+128)
 11693  0779  3001               	movlw	1
 11694  077A                     u5855:
 11695  077A  1003               	clrc
 11696  077B  0DAB               	rlf	??_sprintf^(0+128),f
 11697  077C  3EFF               	addlw	-1
 11698  077D  1D03               	skipz
 11699  077E  2F7A               	goto	u5855
 11700  077F  1003               	clrc
 11701  0780  0D2B               	rlf	??_sprintf^(0+128),w
 11702  0781  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11703  0782  0084               	movwf	4
 11704  0783  120A  118A  200D  120A  118A  	fcall	stringdir
 11705  0788  00F0               	movwf	___lldiv@divisor
 11706  0789  120A  118A  200D  120A  118A  	fcall	stringdir
 11707  078E  00F1               	movwf	___lldiv@divisor+1
 11708  078F  120A  118A  200D  120A  118A  	fcall	stringdir
 11709  0794  00F2               	movwf	___lldiv@divisor+2
 11710  0795  120A  118A  200D  120A  118A  	fcall	stringdir
 11711  079A  00F3               	movwf	___lldiv@divisor+3
 11712  079B  0840               	movf	(sprintf@val+3)^(0+128),w
 11713  079C  00F7               	movwf	___lldiv@dividend+3
 11714  079D  083F               	movf	(sprintf@val+2)^(0+128),w
 11715  079E  00F6               	movwf	___lldiv@dividend+2
 11716  079F  083E               	movf	(sprintf@val+1)^(0+128),w
 11717  07A0  00F5               	movwf	___lldiv@dividend+1
 11718  07A1  083D               	movf	sprintf@val^(0+128),w
 11719  07A2  00F4               	movwf	___lldiv@dividend
 11720  07A3  160A  158A  24EA  120A  118A  	fcall	___lldiv
 11721  07A8  0873               	movf	?___lldiv+3,w
 11722  07A9  1283               	bcf	3,5	;RP0=0, select bank0
 11723  07AA  1303               	bcf	3,6	;RP1=0, select bank0
 11724  07AB  00A7               	movwf	___llmod@dividend+3
 11725  07AC  0872               	movf	?___lldiv+2,w
 11726  07AD  00A6               	movwf	___llmod@dividend+2
 11727  07AE  0871               	movf	?___lldiv+1,w
 11728  07AF  00A5               	movwf	___llmod@dividend+1
 11729  07B0  0870               	movf	?___lldiv,w
 11730  07B1  00A4               	movwf	___llmod@dividend
 11731  07B2  160A  158A  243B  120A  118A  	fcall	___llmod
 11732  07B7  1283               	bcf	3,5	;RP0=0, select bank0
 11733  07B8  1303               	bcf	3,6	;RP1=0, select bank0
 11734  07B9  0820               	movf	?___llmod,w
 11735  07BA  3E30               	addlw	48
 11736  07BB  1683               	bsf	3,5	;RP0=1, select bank1
 11737  07BC  1303               	bcf	3,6	;RP1=0, select bank1
 11738  07BD  00AC               	movwf	(??_sprintf+1)^(0+128)
 11739  07BE  082C               	movf	(??_sprintf+1)^(0+128),w
 11740  07BF  00CA               	movwf	sprintf@c^(0+128)
 11741  07C0                     l3681:
 11742                           
 11743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11744  07C0  084A               	movf	sprintf@c^(0+128),w
 11745  07C1  00AB               	movwf	??_sprintf^(0+128)
 11746  07C2  0847               	movf	sprintf@sp^(0+128),w
 11747  07C3  0084               	movwf	4
 11748  07C4  082B               	movf	??_sprintf^(0+128),w
 11749  07C5  1383               	bcf	3,7	;select IRP bank0
 11750  07C6  0080               	movwf	0
 11751  07C7  2F66               	goto	l3677
 11752  07C8                     l3685:
 11753                           
 11754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11755  07C8  30FF               	movlw	255
 11756  07C9  07C8               	addwf	sprintf@prec^(0+128),f
 11757  07CA  1803               	skipnc
 11758  07CB  0AC9               	incf	(sprintf@prec+1)^(0+128),f
 11759  07CC  30FF               	movlw	255
 11760  07CD  07C9               	addwf	(sprintf@prec+1)^(0+128),f
 11761  07CE  0A48               	incf	sprintf@prec^(0+128),w
 11762  07CF  1D03               	skipz
 11763  07D0  2FD5               	goto	u5861
 11764  07D1  0A49               	incf	(sprintf@prec+1)^(0+128),w
 11765  07D2  1D03               	btfss	3,2
 11766  07D3  2FD5               	goto	u5861
 11767  07D4  2FD6               	goto	u5860
 11768  07D5                     u5861:
 11769  07D5  2F6B               	goto	l3679
 11770  07D6                     u5860:
 11771  07D6                     l3687:
 11772                           
 11773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11774  07D6  3001               	movlw	1
 11775  07D7  07A0               	addwf	sprintf@f^(0+128),f
 11776  07D8  30FF               	movlw	-1
 11777  07D9  0720               	addwf	sprintf@f^(0+128),w
 11778  07DA  0084               	movwf	4
 11779  07DB  120A  118A  200D  120A  118A  	fcall	stringdir
 11780  07E0  00AB               	movwf	??_sprintf^(0+128)
 11781  07E1  082B               	movf	??_sprintf^(0+128),w
 11782  07E2  00CA               	movwf	sprintf@c^(0+128)
 11783  07E3  084A               	movf	sprintf@c^(0+128),w
 11784  07E4  1D03               	btfss	3,2
 11785  07E5  2FE7               	goto	u5871
 11786  07E6  2FEA               	goto	u5870
 11787  07E7                     u5871:
 11788  07E7  160A  118A  2D48   	goto	l3407
 11789  07EA                     u5870:
 11790  07EA                     l3689:
 11791                           
 11792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11793  07EA  0847               	movf	sprintf@sp^(0+128),w
 11794  07EB  0084               	movwf	4
 11795  07EC  1383               	bcf	3,7	;select IRP bank0
 11796  07ED  0180               	clrf	0
 11797  07EE                     l420:
 11798  07EE  0008               	return
 11799  07EF                     __end_of_sprintf:

Data Sizes:
    Strings     32
    Constant    144
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     46      75
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_2(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> data(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[13]), data(BANK1[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> data(BANK1[20]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _temperatura->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _setup->_spiInit
    _leer_ADC->___xxtofl
    _Write_USART_String->_Write_USART
    _Lcd_Write_String->_LCD_CMD
    _LCD_CMD->_Puerto
    _Lcd_Set_Cursor->_datosLCD
    _Lcd_Init->_datosLCD
    _LCD_clean->_datosLCD
    _datosLCD->_Puerto
    _Conteo->_spiWrite

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34956
                                             43 BANK1      3     3      0
                            _Baudios
                             _Conteo
                          _LCD_clean
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _OSCILADOR
                        _Write_USART
                 _Write_USART_String
                       _config_rcsta
                       _config_txsta
                           _leer_ADC
                              _setup
                            _sprintf
                        _temperatura
 ---------------------------------------------------------------------------------
 (1) _temperatura                                          8     4      4     572
                                              0 BANK0      8     4      4
                           ___xxtofl
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   31824
                                              0 BANK1     43    32     11
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _leer_ADC                                             4     4      0     572
                                              0 BANK0      4     4      0
                           ___xxtofl
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
                            _spiRead (ARG)
 ---------------------------------------------------------------------------------
 (1) _config_txsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_rcsta                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     264
                                              1 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OSCILADOR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     198
                                              1 COMMON     2     2      0
                             _Puerto
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     484
                                              4 COMMON     4     3      1
                           _datosLCD
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                           _datosLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_clean                                            0     0      0     198
                           _datosLCD
 ---------------------------------------------------------------------------------
 (2) _datosLCD                                             3     3      0     198
                                              1 COMMON     3     3      0
                             _Puerto
 ---------------------------------------------------------------------------------
 (3) _Puerto                                               1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Conteo                                               2     2      0      22
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Baudios                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Baudios
   _Conteo
     _spiRead
       _spiReceiveWait
     _spiWrite
   _LCD_clean
     _datosLCD
       _Puerto
   _Lcd_Init
     _datosLCD
       _Puerto
   _Lcd_Set_Cursor
     _datosLCD
       _Puerto
   _Lcd_Write_String
     _LCD_CMD
       _Puerto
   _OSCILADOR
   _Write_USART
   _Write_USART_String
     _Write_USART
   _config_rcsta
   _config_txsta
   _leer_ADC
     ___xxtofl
       _spiRead (ARG)
         _spiReceiveWait
     _spiRead
       _spiReceiveWait
     _spiWrite
   _setup
     _spiInit
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         _spiRead (ARG)
           _spiReceiveWait
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
       _spiRead (ARG)
         _spiReceiveWait
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _temperatura
     ___xxtofl
       _spiRead (ARG)
         _spiReceiveWait
     _spiRead
       _spiReceiveWait
     _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2E      4B       7       93.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 17:02:36 2021

                          pc 0002                  _SSPSTATbits 0094                           l90 1B4A  
                         l91 1B50                           l83 1B32                           l92 1B51  
                         l84 1B35                           l93 1B57                           l85 1B3B  
                         l94 1B58                           l86 1B3C                           l95 1B5E  
                         l87 1B42                           l96 1B5F                           l88 1B43  
                         l97 1B65                           l89 1B49                           l99 1B66  
               ___awdiv@sign 0021                           fsr 0004          ___wmul@multiplicand 0072  
        __Umul8_16@word_mpld 0076         __size_of_Write_USART 000C                          l102 19B8  
                        l111 1E88                          l105 19DA                          l201 1996  
                        l202 199B                          l211 00C8                          l123 1BA8  
                        l108 1973                          l132 193D                          l205 192F  
                        l117 1A21                          l126 192E                          l135 195C  
                        l208 1935                          l144 1ABC                          l129 194F  
                        l321 12B5                          l138 1966                          l219 1008  
                        l420 07EE                          l173 19FD                          l182 1AEE  
                        l350 1605                          l167 013A                          l176 0805  
                        l424 1A52                          l328 0C9E                          l185 1DB5  
                        l610 00E5                          l426 1A6A                          l179 1C3A  
                        l611 0101                          l612 0116                          l460 1D4F  
                        l605 0932                          l390 04A6                          l615 1025  
                        l623 195A                          l383 0462                          l641 1FFF  
                        l618 1091                          l634 086C                          l642 1F71  
                        l730 1BEC                          l619 10AA                          l627 0881  
                        l652 1FF2                          l740 1B28                          l637 0881  
                        l645 1FC2                          l590 1CE9                          l751 1319  
                        l911 1985                          l904 1F0C                          l680 1C90  
                        l905 1F18                          l577 1E1E                          l594 093F  
                        l755 13C0                          l595 08A4                          l772 148B  
                        l764 153D                          l757 1397                          l853 0F6B  
                        l782 14D1                          l598 0902                          l847 0FFF  
                        l776 14AF                          l793 1531                          l785 150F  
                        l794 153D                          l866 1A7F                          l891 1EAB  
                        l859 0FF3                          l868 1A91                          l893 1F42  
                        l797 1A45                          l897 1EF0                          _RD0 0040  
                        _RD1 0041                          _RD2 0042                          _RE0 0048  
                        _RD3 0043                          _RE1 0049                          _RD4 0044  
                        _RD5 0045                          _RD6 0046                          _RD7 0047  
                        fsr0 0004                          indf 0000                 ___awmod@sign 0076  
               ___flmul@aexp 0036                 ___flmul@bexp 0037                 ___flmul@sign 0031  
               ___flmul@temp 003C                 ___flmul@prod 0038  __size_of_Write_USART_String 002B  
            __end_of_LCD_CMD 19B9                 ___fltol@exp1 005B                         l3003 1F43  
                       l3101 0927                         l3021 1F89                         l3005 1F56  
                       l3111 1A4C                         l3103 0937                         l3031 1FB4  
                       l3023 1F92                         l3015 1F72                         l2401 1B2E  
                       l3201 0840                         l3121 1CEA                         l3113 1A59  
                       l3041 1FCE                         l3033 1FBC                         l3025 1F9B  
                       l3017 1F78                         l3009 1F5F                         l2411 1B55  
                       l2403 1B39                         l3131 1D17                         l3123 1CFA  
                       l3115 1A60                         l3107 1A46                         l3051 1FF7  
                       l3035 1FC6                         l3043 1FE0                         l3027 1FA9  
                       l3019 1F87                         l2413 1B5C                         l2405 1B40  
                       l3301 1E42                         l3133 1D29                         l3125 1CFD  
                       l3141 1D47                         l3221 1C3B                         l3117 1A66  
                       l3109 1A48                         l3061 0898                         l3029 1FB3  
                       l2501 1BA9                         l2421 1DB9                         l2415 1B63  
                       l2407 1B47                         l3311 1E72                         l3303 1E4D  
                       l3151 0113                         l3215 0861                         l3207 0848  
                       l3135 1D37                         l3127 1D0A                         l3231 1C6B  
                       l3223 1C45                         l3071 08BE                         l3055 0882  
                       l2511 1BBF                         l2503 1BAB                         l2431 1DCD  
                       l2423 1DBD                         l2417 192F                         l2409 1B4E  
                       l3313 1E78                         l3305 1E53                         l3321 1A09  
                       l3153 0115                         l3145 00C9                         l3161 1039  
                       l2601 132F                         l3241 1A22                         l3217 0871  
                       l3209 085A                         l3137 1D38                         l3129 1D0E  
                       l3233 1C79                         l3225 1C48                         l3081 08F2  
                       l3073 08C0                         l3057 088F                         l3049 1FE7  
                       l2521 1BE2                         l2513 1BC3                         l2505 1BB1  
                       l2441 1DE3                         l2433 1DD1                         l2425 1DC2  
                       l3401 1D90                         l3315 1E83                         l3307 1E5E  
                       l3323 1A10                         l3331 1B6A                         l3251 1E93  
                       l3147 00DD                         l3171 10A7                         l3163 1041  
                       l2611 1343                         l2603 1333                         l3243 1A26  
                       l3219 0876                         l3139 1D41                         l3235 1C82  
                       l3227 1C55                         l3083 08F3                         l3075 08C9  
                       l3067 08A5                         l2515 1BD4                         l2507 1BB4  
                       l2523 1BE8                         l2531 1AF8                         l2451 1E03  
                       l2443 1DE7                         l2435 1DD3                         l2427 1DC4  
                       l2419 1DB6                         l3411 1555                         l3309 1E63  
                       l3325 1A16                         l3317 19FF                         l3333 1B86  
                       l3341 1936                         l3261 1EC1                         l3253 1EA3  
                       l3149 00F9                         l3173 10A9                         l3165 1045  
                       l3157 1009                         l3181 195A                         l2701 14BD  
                       l2621 1357                         l2613 1347                         l2605 1337  
                       l3229 1C59                         l3237 1C88                         l3093 090E  
                       l3085 08FC                         l3077 08D2                         l3069 08AD  
                       l2517 1BDA                         l2509 1BBB                         l2541 1B17  
                       l2533 1AFF                         l2453 1E0A                         l2445 1DEB  
                       l2437 1DD9                         l2429 1DC8                         l3501 01E9  
                       l3421 1587                         l3413 155A                         l3405 1541  
                       l3327 1A1B                         l3319 1A04                         l3335 1B8C  
                       l3351 1AA9                         l3343 193C                         l3271 1EF7  
                       l3263 1ECE                         l3255 1EB3                         l3247 1E8A  
                       l3167 1069                         l3159 101D                         l2711 14CE  
                       l2703 14BF                         l2631 137B                         l2623 135B  
                       l2615 134B                         l2607 133B                         l2551 12BD  
                       l3191 081C                         l3087 0906                         l3095 0920  
                       l3079 08E4                         l2391 1A79                         l2519 1BDB  
                       l2543 1B1E                         l2535 1B03                         l2527 1AEF  
                       l2447 1DFC                         l2439 1DDC                         l2455 1E10  
                       l2471 1C9D                         l2463 1C91                         l3511 025E  
                       l3503 0204                         l3431 15BD                         l3423 159A  
                       l3415 155E                         l3407 1548                         _ADC1 006E  
                       _ADC2 00D6                         l3337 192A                         l3329 1B67  
                       l3345 1A92                         l3281 1F30                         l3273 1F02  
                       l3265 1ED5                         l3249 1E8F                         l3361 19EE  
                       l3353 19DB                         l3169 106D                         l3177 1950  
                       l2721 14ED                         l2705 14C3                         l2641 13AB  
                       l2633 139B                         l2625 135F                         l2617 134F  
                       l2609 133F                         l2561 12D2                         l2553 12C3  
                       l3193 0831                         l3185 0806                         l2393 1A88  
                       l2385 1A6C                         l2801 0DC6                         l2537 1B07  
                       l2529 1AF5                         l2545 1B24                         l2457 1E15  
                       l2449 1E02                         l2481 1CB6                         l2473 1CA1  
                       l2465 1C92                         l3601 0621                         l3513 0266  
                       l3505 022B                         l3521 02AC                         l3441 15F0  
                       l3433 15C1                         l3425 159E                         l3417 156E  
                       l3409 154E                         l3291 1967                         l3371 0801  
                       l3347 1A94                         l3339 1946                         l3283 1F35  
                       l3275 1F06                         l3267 1ED9                         l3259 1EBC  
                       l3363 19F1                         l3355 19E9                         l3179 1958  
                       l2731 1526                         l2723 150B                         l2715 14D6  
                       l2707 14C4                         l2643 13B4                         l2635 13A4  
                       l2619 1353                         l2627 1363                         l2571 12EA  
                       l2563 12DA                         l2555 12C7                         l3195 0832  
                       l3187 0813                         l2395 1A8D                         l2387 1A6E  
                       l2811 0E29                         l2803 0DCF                         l2539 1B11  
                       l2459 1E1A                         l2491 1CD5                         l2483 1CBA  
                       l2475 1CA6                         l2467 1C96                         l3611 064A  
                       l3603 0628                         l3523 02E1                         l3515 0284  
                       l3507 023A                         l3451 1629                         l3435 15C4  
                       l3443 1601                         l3419 1572                         l3427 15AE  
                       l3381 1AE2                         l3373 1ABD                         l2901 19C3  
                       l3293 1E1F                         l3349 1AA5                         l3285 1F39  
                       l3277 1F10                         l3269 1EE7                         l3365 19F2  
                       l3357 19EC                         l2741 153C                         l2733 1527  
                       l2725 1514                         l2717 14DB                         l2709 14C8  
                       l2661 13FA                         l2653 13D2                         l2637 13A6  
                       l2645 13B8                         l2629 1364                         l2581 12FC  
                       l2573 12F0                         l2565 12DB                         l2557 12C8  
                       l2549 12B6                         l3197 083A                         l2389 1A75  
                       l2821 0EC9                         l2813 0E42                         l2805 0DDF  
                       l2485 1CBE                         l2477 1CAC                         l2493 1CDB  
                       l2469 1C9B                         l3621 0667                         l3613 064E  
                       l3605 062C                         l3541 038E                         l3533 0332  
                       l3525 032E                         l3509 0255                         l3461 1651  
                       l3453 1637                         l3445 1603                         l3437 15D9  
                       l3429 15BC                         l3701 0126                         l3375 1AC0  
                       l2399 1B2A                         l2903 19C6                         l3295 1E28  
                       l2911 195C                         l3287 1F3A                         l3279 1F1A  
                       l3391 1C2D                         l3383 1BED                         l3367 19F3  
                       l3359 19ED                         l2735 152B                         l2727 1519  
                       l2719 14E9                         l2663 13FC                         l2655 13E9  
                       l2647 13C4                         l2671 140F                         l2639 13AA  
                       l2583 1301                         l2591 1311                         l2575 12F1  
                       l2559 12CD                         l2567 12DD                         l3199 083C  
                       l2831 0F37                         l2823 0EEF                         l2815 0E5F  
                       l2807 0DFC                         l2751 0CB1                         l2743 0C9F  
                       l2495 1CE0                         l2487 1CC8                         l2479 1CAF  
                       l3631 0677                         l3623 066F                         l3615 0652  
                       l3607 0632                         l3543 0394                         l3527 0330  
                       l3519 02A3                         l3471 16A4                         l3463 166A  
                       l3455 163B                         l3439 15EC                         l3711 01A4  
                       l3703 012B                         l3377 1AC9                         l2905 19CA  
                       l3297 1E2E                         l2913 1962                         l3385 1BF0  
                       l2921 1992                         l3369 19F4                         l2737 152D  
                       l2729 1521                         l2673 1425                         l2681 147D  
                       l2665 1400                         l2657 13ED                         l2649 13C9  
                       l2593 131F                         l2585 1306                         l2577 12F7  
                       l2569 12E5                         l2841 0F4F                         l2833 0F3B  
                       l2825 0F17                         l2817 0E8C                         l2809 0E0C  
                       l2761 0CCD                         l2753 0CB6                         l2745 0CA6  
                       l2497 1CE5                         l2489 1CCE                         l3641 06CA  
                       l3625 0675                         l3617 0656                         l3561 03DC  
                       l3545 03A0                         l3553 03B5                         l3537 0369  
                       l3481 16DF                         l3473 16AF                         l3465 1683  
                       l3457 163F                         l3609 0639                         l3449 1607  
                       l3393 1D50                         l3721 01D7                         l3713 01AD  
                       l3705 0151                         l3379 1ACF                         l2907 19CD  
                       l3299 1E3D                         l3387 1BFA                         l2923 1995  
                       l2915 1987                         l2739 1538                         l2691 14AA  
                       l2683 1493                         l2675 1463                         l2667 1401  
                       l2659 13F1                         l2595 1323                         l2587 130E  
                       l2579 12FB                         l2851 0F70                         l2843 0F50  
                       l2835 0F3C                         l2827 0F20                         l2819 0E9C  
                       l2771 0CE2                         l2763 0CD2                         l2755 0CBB  
                       l2747 0CAC                         l3651 06FC                         l3643 06D9  
                       l3635 06AE                         l3619 0661                         l3571 0477  
                       l3563 0417                         l3555 03C2                         l3547 03A7  
                       l3539 0373                         l3491 1771                         l3483 16E5  
                       l3475 16B5                         l3467 1687                         l3459 164D  
                       l3395 1D53                         l3715 01B6                         l3707 015A  
                       l2925 00C4                         l2909 19D1                         l3389 1C00  
                       l2917 198E                         l2693 14AE                         l2685 1498  
                       l2677 1469                         l2669 140A                         l2597 1327  
                       l2589 130F                         l2853 0F75                         l2861 0FA6  
                       l2845 0F54                         l2837 0F45                         l2829 0F2E  
                       l2781 0CFE                         l2773 0CE7                         l2765 0CD8  
                       l2757 0CC3                         l2749 0CB0                         l2941 11C1  
                       l2933 10AE                         l3661 0726                         l3653 0700  
                       l3645 06E2                         l3637 06B8                         l3581 04AF  
                       l3573 047D                         l3565 0456                         l3557 03D0  
                       l3549 03B0                         l3493 178C                         l3485 1704  
                       l3477 16C8                         l3469 168B                         l3397 1D5D  
                       l3717 01BC                         l3709 019C                         l2927 1000  
                       l2919 1990                         l2695 14B3                         l2679 146E  
                       l2599 132B                         l2871 0FD9                         l2863 0FB3  
                       l2855 0F83                         l2847 0F68                         l2839 0F4B  
                       l2791 0D29                         l2783 0D03                         l2775 0CEF  
                       l2767 0CDC                         l2759 0CC5                         l2943 11C7  
                       l2935 10B4                         l2951 0943                         l3671 0747  
                       l3663 0732                         l3655 070E                         l3647 06EA  
                       l3639 06C3                         l3591 0538                         l3583 04B4  
                       l3575 048A                         l3567 046A                         l3559 03D7  
                       l3487 174F                         l3479 16DB                         l3495 1794  
                       l3399 1D63                         l3719 01C2                         l2929 1005  
                       l2697 14B6                         l2689 14A1                         l2873 0FE7  
                       l2865 0FBE                         l2857 0F87                         l2793 0D46  
                       l2777 0CF1                         l2769 0CDD                         l2953 0947  
                       l3681 07C0                         l3673 0753                         l3665 0736  
                       l3657 0717                         l3649 06F6                         l3593 0573  
                       l3585 04BB                         l3577 0499                         l3569 0473  
                       l3497 17A3                         l3489 1768                         l3753 161B  
                       l2891 19AD                         l2883 199D                         l2699 14B8  
                       l2875 0FEB                         l2867 0FCD                         l2859 0FA0  
                       l2795 0D62                         l2787 0D0C                         l2779 0CF9  
                       l2947 1272                         l2963 0A38                         l2955 0949  
                       l3675 075F                         l3667 073C                         l3659 071B  
                       l3595 05B2                         l3587 04BF                         l3579 04A0  
                       l3499 17EA                         l2893 19B0                         l2885 19A0  
                       l2877 0FEC                         l2869 0FD7                         l2797 0D8E  
                       l2789 0D1C                         l2981 0BE3                         l2965 0A3F  
                       l2957 0950                         l2973 0AF4                         l3677 0766  
                       l3685 07C8                         l3669 0743                         l3597 05BE  
                       l3589 04DD                         l2895 19B4                         l2887 19A6  
                       l2879 0FF7                         l2799 0DAA                         l2991 1975  
                       l2983 0BEA                         l2975 0AFB                         l3679 076B  
                       l3599 0619                         l3687 07D6                         l2897 19BA  
                       l2889 19A9                         l2993 1976                         l2969 0AC7  
                       l3689 07EA                         l2899 19BD                         l2995 197C  
                       l2987 0C72                         l3699 0117                         l2997 1982  
                       l2999 1984                         STR_1 00B6                         STR_2 00A3  
                       STR_3 00B6                         u3000 1B40                         u3001 1B3F  
                       u3010 1B47                         u3011 1B46                         u3020 1B4E  
                       u3021 1B4D                         u3030 1B55                         u3110 1DEB  
                       u3031 1B54                         u3111 1DEA                         u3040 1B5C  
                       u3041 1B5B                         u3105 1DDD                         u3050 1B63  
                       u3130 1DFC                         u3210 1CBE                         u3051 1B62  
                       u4011 0E51                         u3131 1DFB                         u3211 1CBD  
                       u3060 1935                         u4100 0F3B                         u4012 0E58  
                       u3300 1BD4                         u3220 1CC8                         u3061 1934  
                       u4101 0F3A                         u4021 0E7E                         u4013 0E5F  
                       u4005 0E2B                         u3301 1BD3                         u3125 1DEC  
                       u3221 1CC7                         u3205 1CB0                         u4022 0E85  
                       u3150 1E10                         u3070 1DBD                         u4031 0EAB  
                       u4023 0E8C                         u3151 1E0F                         u3135 1DF8  
                       u3071 1DBC                         u3400 12CD                         u5000 082A  
                       u4200 0FCD                         u4120 0F4F                         u4040 0ED5  
                       u4032 0EB2                         u3320 1BE8                         u3160 1E15  
                       u3080 1DC8                         u3240 1CDB                         u3401 12CC  
                       u4201 0FCC                         u4121 0F4E                         u4033 0EB9  
                       u3321 1BE7                         u3305 1BD0                         u3161 1E14  
                       u3145 1E04                         u3081 1DC7                         u3241 1CDA  
                       u3225 1CC4                         u3410 12D2                         u5010 0840  
                       u4210 0FEB                         u4130 0F54                         u3330 1AF5  
                       u3090 1DD9                         u3250 1CE0                         u3170 1C96  
                       u3411 12D1                         u5011 083F                         u4211 0FEA  
                       u4131 0F53                         u4115 0F3E                         u4051 0EE1  
                       u3315 1BDC                         u3331 1AF4                         u3091 1DD8  
                       u3251 1CDF                         u3235 1CCF                         u3171 1C95  
                       u4220 1962                         u3500 1387                         u3420 12F0  
                       u5020 0847                         u4140 0F68                         u4060 0EFD  
                       u4052 0EE8                         u3260 1BB1                         u3180 1CA1  
                       u4221 1961                         u3421 12EF                         u5021 0846  
                       u5005 0825                         u4205 0FC9                         u4141 0F67  
                       u4053 0EEF                         u4045 0ED0                         u3261 1BB0  
                       u3181 1CA0                         u4230 198E                         u3510 139B  
                       u3430 12FB                         u5110 1C59                         u4150 0F6F  
                       u3350 1B07                         u3190 1CAC                         u4231 198D  
                       u3511 139A                         u3431 12FA                         u5111 1C58  
                       u4151 0F6E                         u4071 0F09                         u3351 1B06  
                       u3191 1CAB                         u3600 1400                         u3520 13AA  
                       u3440 1301                         u5040 0859                         u5120 1C6B  
                       u4160 0F75                         u4072 0F10                         u3280 1BC3  
                       u3360 1B11                         u4240 10B4                         u4320 0947  
                       u3601 13FF                         u3521 13A9                         u3441 1300  
                       u5041 0858                         u5121 1C6A                         u5105 1C4A  
                       u4161 0F74                         u4073 0F17                         u4065 0EF8  
                       u3281 1BC2                         u3361 1B10                         u3345 1AF9  
                       u4305 1231                         u4241 10B3                         u4321 0946  
                       u5210 1EF6                         u3450 1306                         u5050 0860  
                       u4170 0F87                         u4410 0AFB                         u4330 0950  
                       u5211 1EF5                         u3451 1305                         u5051 085F  
                       u5035 0849                         u4171 0F86                         u3275 1BB5  
                       u4315 127D                         u4411 0AFA                         u4331 094F  
                       u5300 1A16                         u3700 14B3                         u3620 1425  
                       u3540 13C0                         u3460 131F                         u5140 1C88  
                       u4180 0F96                         u3380 1B24                         u4500 1982  
                       u5301 1A15                         u5205 1EE8                         u3701 14B2  
                       u3621 1424                         u3541 13BF                         u3461 131E  
                       u5141 1C87                         u5125 1C67                         u4085 0F19  
                       u3381 1B23                         u3365 1B0D                         u4501 1981  
                       u4405 0ACA                         u5310 1B74                         u5230 1F06  
                       u5150 1E8F                         u3710 14BD                         u3550 13C4  
                       u3470 1323                         u3390 12C7                         u5070 0871  
                       u4510 1F56                         u4190 0FB3                         u6007 1E3F  
                       u5231 1F05                         u5151 1E8E                         u3711 14BC  
                       u3631 143C                         u3623 1421                         u3615 1403  
                       u3551 13C3                         u3535 13AD                         u3471 1322  
                       u3391 12C6                         u5071 0870                         u5135 1C7A  
                       u4511 1F55                         u4191 0FB2                         u4095 0F30  
                       u3295 1BC4                         u3375 1B18                         u4255 10D1  
                       u5320 1B96                         u5240 1F0C                         u5160 1E93  
                       u3800 1514                         u3720 14C3                         u3640 1450  
                       u3632 143D                         u3560 13C9                         u3480 137B  
                       u5080 0876                         u4600 1FDF                         u4520 1F70  
                       u4280 11C7                         u5400 1637                         u6017 1E4A  
                       u5241 1F0B                         u5225 1EFB                         u5161 1E92  
                       u3801 1513                         u3721 14C2                         u3641 1451  
                       u3633 1442                         u3561 13C8                         u3481 137A  
                       u5081 0875                         u5065 0863                         u4601 1FDE  
                       u4521 1F6F                         u4185 0F91                         u4281 11C6  
                       u4265 112B                         u4425 0B1B                         u4345 0970  
                       u5401 1634                         u5330 1BA8                         u5250 1F10  
                       u5170 1EB3                         u3810 1519                         u3730 14C8  
                       u3650 146E                         u3642 1456                         u3634 1443  
                       u3490 1386                         u5090 1C45                         u4610 1FE6  
                       u4450 0BEA                         u4370 0A3F                         u5410 163B  
                       u6107 1AC4                         u6027 1E55                         u5331 1BA7  
                       u5251 1F0F                         u5171 1EB2                         u3811 1518  
                       u3731 14C7                         u3651 146D                         u3643 1457  
                       u3635 1448                         u3571 13DB                         u3491 1384  
                       u5091 1C44                         u4611 1FE5                         u4195 0FAF  
                       u4275 1180                         u4451 0BE9                         u4435 0B57  
                       u4371 0A3E                         u4355 09AC                         u5411 163A  
                       u5340 1ABC                         u5260 1F25                         u3820 1526  
                       u3740 14CE                         u3660 1493                         u3636 1449  
                       u3580 13ED                         u3572 13E2                         u4700 0906  
                       u4540 1FA9                         u3900 0CE7                         u5500 022B  
                       u5420 166A                         u6117 1ADD                         u6037 1E60  
                       u5341 1ABB                         u3821 1525                         u3741 14CD  
                       u3661 1492                         u3581 13EC                         u3573 13E9  
                       u3485 1377                         u4701 0905                         u4541 1FA8  
                       u3901 0CE6                         u4445 0BA2                         u4365 09F7  
                       u5501 022A                         u5421 1669                         u5270 1F35  
                       u5190 1ED4                         u3830 152B                         u3750 14D5  
                       u3670 1498                         u3590 13F1                         u4710 090D  
                       u4630 1FF7                         u2950 1A79                         u3910 0CFE  
                       u5510 023A                         u5430 16A4                         u5350 154E  
                       u6127 1AE9                         u6047 1E6D                         u5271 1F34  
                       u5191 1ED3                         u3831 152A                         u3751 14D4  
                       u3671 1497                         u3591 13F0                         u4711 090C  
                       u4631 1FF6                         u4535 1F94                         u2951 1A78  
                       u3911 0CFD                         u4295 11E4                         u5511 0239  
                       u5431 16A3                         u5351 154D                         u5280 1F39  
                       u3840 153C                         u3760 14DB                         u4800 1A66  
                       u4640 088F                         u4560 1FC2                         u3920 0D03  
                       u5520 0255                         u5440 16DF                         u5360 156E  
                       u6057 1E7A                         u5281 1F38                         u5265 1F20  
                       u5185 1EC6                         u3841 153B                         u3761 14DA  
                       u4801 1A65                         u4641 088E                         u4625 1FE9  
                       u4561 1FC1                         u4545 1FA5                         u3921 0D02  
                       u4465 0BFD                         u4385 0A52                         u5521 0254  
                       u5441 16DE                         u5361 156D                         u5290 1A04  
                       u3770 14ED                         u3690 14AE                         u4810 1CFA  
                       u4730 091F                         u4650 08A3                         u4570 1FC6  
                       u2970 1A8D                         u3850 0CB0                         u4490 197C  
                       u5610 0469                         u5450 1768                         u5370 15AE  
                       u6067 1E85                         u5291 1A03                         u3771 14EC  
                       u3691 14AD                         u4811 1CF9                         u4731 091E  
                       u4651 08A2                         u4571 1FC5                         u4555 1FB5  
                       u2971 1A8C                         u3931 0D54                         u3851 0CAF  
                       u4491 197B                         u4475 0C39                         u4395 0A8E  
                       u5611 0468                         u5515 0236                         u5451 1767  
                       u5371 15AD                         u2980 1B2E                         u4900 0113  
                       u3780 14FC                         u4740 0926                         u4580 1FCD  
                       u3932 0D5B                         u3860 0CB6                         u5700 0667  
                       u5620 048A                         u5540 0368                         u5460 178C  
                       u5380 15BC                         _RCIF 0065                         u2981 1B2D  
                       u6077 19C8                         u4901 0112                         u3685 14A3  
                       u4741 0925                         u4725 090F                         u4581 1FCC  
                       u2965 1A80                         u3941 0D70                         u3933 0D62  
                       u3861 0CB5                         u4485 0C75                         u5701 0666  
                       u5621 0489                         u5605 03DF                         u5541 0367  
                       u5461 178B                         u5381 15BB                         u2990 1B39  
                       u4910 101D                         u3790 150B                         u4830 1D0E  
                       u4670 08E4                         u3942 0D77                         u3870 0CBB  
                       u5710 066F                         u5630 0499                         u5550 0373  
                       u5470 17A3                         u5390 1600                         u2991 1B38  
                       u6087 19CF                         u4911 101C                         u3791 150A  
                       u4831 1D0D                         u4671 08E3                         u3951 0D9C  
                       u3943 0D7E                         u3871 0CBA                         u5711 066E  
                       u5631 0498                         u5551 0372                         u5535 0335  
                       u5471 17A2                         u5391 15FF                         u4920 1039  
                       u4760 0937                         u3952 0DA3                         u3880 0CDC  
                       u5800 070E                         u5640 04B4                         u5560 038E  
                       u5480 01E9                         u6097 19D5                         u4905 010F  
                       u4921 1038                         u3785 14F7                         u4825 1CFF  
                       u4761 0936                         u4665 08CB                         u3961 0DB8  
                       u3953 0DAA                         u3881 0CDB                         u5801 070D  
                       u5641 04B3                         u5625 0486                         u5561 038D  
                       u5545 0364                         u5481 17FA                         u4930 1045  
                       u4850 1D29                         u4770 1A4C                         u4690 0902  
                       u3962 0DBF                         u3890 0CE2                         u5810 0726  
                       u5730 06AD                         u5570 03A0                         u5490 0204  
                       u4931 1044                         u4851 1D28                         u4771 1A4B  
                       u4755 0929                         u4691 0901                         u4675 08E0  
                       u4595 1FCF                         u3963 0DC6                         u3891 0CE1  
                       u5811 0725                         u5731 06AC                         u5635 0495  
                       u5571 039F                         u5491 0203                         u5475 179F  
                       u5820 073C                         u5740 06B8                         u5580 03C2  
                       u4941 1054                         u4845 1D10                         u4685 08F5  
                       u3981 0DEE                         u5821 073B                         u5805 070A  
                       u5741 06B7                         u5725 067A                         u5581 03C1  
                       u5485 17F5                         u4950 106D                         u4942 1055  
                       u4870 1D47                         u3982 0DF5                         u5830 0753  
                       u5750 06C3                         u5670 0620                         u5590 03D0  
                       u4951 106C                         u4943 105A                         u4871 1D46  
                       u4855 1D25                         u3991 0E1B                         u3983 0DFC  
                       u3975 0DC8                         u5831 0752                         u5815 0722  
                       u5751 06C2                         u5735 06A9                         u5671 061F  
                       u5655 053B                         u5591 03CF                         u4880 00DD  
                       u4944 105B                         u3992 0E22                         u5840 075F  
                       u5760 06D9                         u5680 0638                         u4881 00DC  
                       u4961 107C                         u4945 1060                         u4865 1D39  
                       u4785 1A53                         u3993 0E29                         u5841 075E  
                       u5761 06D8                         u5681 0637                         u5665 05C1  
                       u5585 03BE                         u4890 00F9                         u4970 10A7  
                       u4962 107D                         u4946 1061                         u5770 06EA  
                       u5690 0652                         u4891 00F8                         u4971 10A6  
                       u4963 1082                         u4795 1A5A                         u5771 06E9  
                       u5755 06BF                         u5691 0651                         u5907 1D8C  
                       u4964 1083                         u4980 1958                         u5860 07D6  
                       u5780 06F6                         u4965 1088                         u4981 1957  
                       u5861 07D5                         u5781 06F5                         u5765 06D5  
                       u5917 1D99                         u4966 1089                         u4990 0813  
                       u5870 07EA                         u5790 0700                         u5927 1BF6  
                       u4975 10A3                         u4991 0812                         u5871 07E7  
                       u5855 077A                         u5791 06FF                         u5937 1C29  
                       u5947 1C36                         u5957 19AB                         u5967 19B2  
                       u5887 01DF                         u5977 19B6                         u5897 1D59  
                       u5987 1E23                         u5997 1E32                         _TRMT 04C1  
                       _data 00D7            ?_Lcd_Write_String 0073                         _cont 006F  
                       _main 0117                         _temp 00CE                         btemp 007E  
                       _volt 00D2                         start 0000               ??_config_rcsta 0070  
         ??_Lcd_Write_String 0075              __end_of_Baudios 192F           __size_of_LCD_clean 000D  
             ??_config_txsta 0070                 _sprintf$1135 00B0           __size_of_OSCILADOR 0005  
              ___fltol@sign1 005A              __end_of___fladd 153E                        ?_main 0070  
            __end_of___awdiv 1E1F              __end_of___flneg 195B              __end_of___awmod 1CEA  
            __end_of___flmul 1000              __end_of___flsub 1A46              __end_of___fltol 0882  
                      _ANSEL 0188              __end_of___lldiv 1D50              ___awdiv@divisor 0077  
            __end_of___llmod 1C91              __end_of___lwdiv 1BED              __end_of___lwmod 1B29  
            ___awdiv@counter 0020                        _RCREG 001A                        _SPBRG 0099  
                      _PORTB 0006                        _PORTD 0008                        _PORTE 0009  
    __size_of_Lcd_Set_Cursor 0024                        _TRISB 0086                        _TRISD 0088  
                      _TRISE 0089                        _TXREG 0019              __end_of_dpowers 00A3  
                      _scale 0940              __end_of_isdigit 1986                        _setup 19DB  
                      pclath 000A              __end_of_spiInit 199C              __end_of_spiRead 1009  
                      status 0003                        wtemp0 007E              __end_of_sprintf 07EF  
           __end_of_Lcd_Init 1E89              __initialization 07EF                 __end_of_main 01E9  
                     ??_main 00CB                    ??_LCD_CMD 0071         __size_of__tdiv_to_l_ 00BD  
          __end_of_LCD_clean 1974             ___llmod@dividend 0024                       ?_scale 003E  
           ___awdiv@dividend 0079                       ?_setup 0070                       _ANSELH 0189  
                  ??_Baudios 0070            __end_of_OSCILADOR 0806                       _OSCCON 008F  
                     _TRISC0 0438                       _TRISC1 0439                       _TRISC2 043A  
                     _TRISC3 043B                       _TRISC5 043D                       _SSPCON 0014  
                     _SSPBUF 0013             __end_of___xxtofl 1F43             __end_of_datosLCD 19DB  
                     _Conteo 1ABD             __end_of__powers_ 0047                       _Puerto 1B29  
           __end_of_leer_ADC 1C3B                       ___flge 1009                       ___fleq 00C9  
                  ??___fladd 005A                       ___wmul 1A46                    ??___awdiv 007B  
                  ??___flneg 0074                    ??___awmod 0074                    ??___flmul 002C  
                  ??___flsub 007E                    ??___fltol 0055                    ??___lldiv 0078  
                  ??___llmod 0028                    ??___lwdiv 007A                    ??___lwmod 0074  
                     _fround 10AB             ___awdiv@quotient 0022              ___awmod@divisor 0070  
            ___awmod@counter 0075                 ?_temperatura 0020                    ??_isdigit 0070  
         __size_of__Umul8_16 0027         __end_of_config_rcsta 193E             __end_of_spiWrite 00C9  
       __end_of_config_txsta 1950                    ??_spiInit 0073                    ??_spiRead 0070  
                  ??_sprintf 00AB              Lcd_Set_Cursor@a 0077              Lcd_Set_Cursor@x 0076  
            Lcd_Set_Cursor@y 0074                   ___flge@ff1 0070                   ___flge@ff2 0074  
               ___xxtofl@arg 007A                 ___xxtofl@exp 0079                 ___xxtofl@val 0070  
                 ___fleq@ff1 0070                   ___fleq@ff2 0074      __end_of__initialization 07FC  
                 ___flneg@f1 0070                   ___fltol@f1 0051               __pcstackCOMMON 0070  
              __end_of_scale 0C9F                __end_of_setup 19FE               _Lcd_Set_Cursor 19FE  
                 __div_to_l_ 0882                    ?_Lcd_Init 0070              __div_to_l_@exp1 0025  
            __div_to_l_@cntr 0024                      ??_scale 0042              __div_to_l_@quot 0020  
               sprintf@width 00B7                      ??_setup 0074                 Write_USART@a 0070  
                 __pbssBANK0 006E                   __pbssBANK1 00CE                __div_to_l_@f1 0070  
              __div_to_l_@f2 0074                      ?_Conteo 0070            __end_of__Umul8_16 1A92  
                 __pmaintext 0117                      ?_Puerto 0070                      ?___flge 0070  
                    ?___fleq 0070                      ?___wmul 0070                ??_Write_USART 0070  
    __size_of_spiReceiveWait 0007                      ?_fround 003E    __size_of_Lcd_Write_String 0042  
     __end_of_Lcd_Set_Cursor 1A22                      _LCD_CMD 199C   __end_of_Write_USART_String 1ABD  
                  ?___xxtofl 0070                    ?_datosLCD 0070                   ??_Lcd_Init 0074  
                    _SSPSTAT 0094                    ?_leer_ADC 0070                   __stringtab 0003  
                    _Baudios 192A            __end_of__npowers_ 007B              __size_of_Conteo 0032  
                 _scale$1134 004C              __size_of_Puerto 003E                    ?_spiWrite 0070  
                    Puerto@x 0070              __size_of___flge 00A2              __size_of___fleq 004E  
                    ___fladd 12B6                      ___awdiv 1DB6                      ___flneg 1950  
                    ___awmod 1C91                      ___flmul 0C9F                      ___flsub 1A22  
                    ___fltol 0806                      ___lldiv 1CEA              __size_of___wmul 0025  
                    ___llmod 1C3B                      ___lwdiv 1BA9                      ___lwmod 1AEF  
      __size_of_config_rcsta 0008              __size_of_fround 020B              ?_Lcd_Set_Cursor 0074  
                    __ptext1 1D50                      __ptext2 153E        __size_of_config_txsta 000A  
                    __ptext3 0940                      __ptext4 1C91                      __ptext5 1DB6  
                    __ptext6 1974                      __ptext7 10AB                      __ptext8 1AEF  
                    __ptext9 1BA9                  ?__div_to_l_ 0070                      _dpowers 007B  
        __end_of_Write_USART 1967                      _isdigit 1974                   ??___xxtofl 0074  
           ___awmod@dividend 0072         __size_of_temperatura 0066                   ??_datosLCD 0071  
                    _spiInit 1986                      _spiRead 1000                      _sprintf 153E  
                    clrloop0 193F                   ??_leer_ADC 0020                    _LCD_clean 1967  
       end_of_initialization 07FC              ___lldiv@divisor 0070                    _OSCILADOR 0801  
            ___lldiv@counter 007D                 _config_rcsta 1936                 _config_txsta 1946  
                  _RCSTAbits 0018                   ??_spiWrite 0070                      psplit$0 C0037  
             __tdiv_to_l_@f1 0070               __tdiv_to_l_@f2 0074                ??__tdiv_to_l_ 0078  
                  _PORTCbits 0007                  ___fladd@grs 0065                ___xxtofl@sign 0078  
                spiWrite@dat 0070                   ?_LCD_clean 0070            Lcd_Write_String@a 0073  
          Lcd_Write_String@i 0078                  ___flmul@grs 0032                    _TXSTAbits 0098  
        __size_of__div_to_l_ 00BE                   ?_OSCILADOR 0070               __end_of_Conteo 1AEF  
             __end_of_Puerto 1B67               _spiReceiveWait 192F               __end_of___flge 10AB  
             __end_of___fleq 0117                  _Write_USART 195B               __end_of___wmul 1A6B  
           _Lcd_Write_String 1B67            pnum$text2_split_1 0037               __end_of_fround 12B6  
        start_initialization 07EF          __end_of__tdiv_to_l_ 2000            __size_of_Lcd_Init 006A  
            ___llmod@divisor 0020              ___llmod@counter 0029                     ??_Conteo 0071  
     __end_of_spiReceiveWait 1936                     ??_Puerto 0070                     ??___flge 0078  
                   ??___fleq 0078                     ??___wmul 0074                    __Umul8_16 1A6B  
                   ??_fround 0042                sprintf@tmpval 00B9                    ___fladd@a 0056  
                  ___fladd@b 0052                     LCD_CMD@a 0072                     ?_LCD_CMD 0070  
                 fround@prec 0051                    ___flmul@a 0028                    ___flmul@b 0024  
                  ___flsub@a 0066                    ___flsub@b 006A                    ___latbits 0002  
              __pcstackBANK0 0020                __pcstackBANK1 00A0            __size_of___xxtofl 00BA  
          __size_of_datosLCD 0022                  ??_LCD_clean 0074                     ?_Baudios 0070  
                sprintf@flag 00B5            __size_of_leer_ADC 004E                  sprintf@eexp 00C1  
                sprintf@fval 00C3           _Write_USART_String 1A92                  sprintf@prec 00C8  
                ??_OSCILADOR 0070             ___lwdiv@dividend 0078              ?_spiReceiveWait 0070  
           ??_Lcd_Set_Cursor 0075          ?_Write_USART_String 0071                     ?___fladd 0052  
                   ?___awdiv 0077                     ?___flneg 0070                     ?___awmod 0070  
                   ?___flmul 0024                     ?___flsub 0066                     ?___fltol 0051  
                   ?___lldiv 0070                     ?___llmod 0020                    __npowers_ 0047  
                 ?__Umul8_16 0070                     ?___lwdiv 0076                     ?___lwmod 0070  
          __size_of_spiWrite 0006                    __pstrings 0003                  __tdiv_to_l_ 1F43  
               ??__div_to_l_ 0078                     ?_isdigit 0070                     ?_spiInit 0070  
                   ?_spiRead 0070         ??_Write_USART_String 0073             ___lwdiv@quotient 007B  
                   ?_sprintf 00A0               __size_of_scale 035F               __size_of_setup 0023  
       spiInit@sTransmitEdge 0072                    datosLCD@x 0073               ___wmul@product 0074  
                  clear_ram0 193E           spiInit@sDataSample 0070           __end_of__div_to_l_ 0940  
                __stringbase 0012                ??_temperatura 0024            ___wmul@multiplier 0070  
           __size_of_LCD_CMD 001D                     _Lcd_Init 1E1F     __end_of_Lcd_Write_String 1BA9  
           __size_of_Baudios 0005                  ??__Umul8_16 0072                 ?_Write_USART 0070  
           __size_of___fladd 0288             __size_of___awdiv 0069             __size_of___flneg 000B  
           __size_of___awmod 0059             __size_of___flmul 0361             __size_of___flsub 0024  
           __size_of___fltol 007C             __size_of___lldiv 0066             __size_of___llmod 0056  
           __size_of___lwdiv 0044             __size_of___lwmod 003A                  _fround$1132 004D  
                _fround$1133 0049           __end_of__stringtab 0013                  _isdigit$934 0070  
                 sprintf@val 00BD                     ___xxtofl 1E89             __size_of_isdigit 0012  
                   _datosLCD 19B9              ___lwdiv@divisor 0076              ___lwdiv@counter 007D  
                   __ptext10 0C9F                     __ptext11 1A6B                     __ptext20 1950  
                   __ptext12 1F43                     __ptext21 1009                     __ptext13 0882  
                   __ptext30 195B                     __ptext22 00C9                     __ptext14 1A46  
                   __ptext31 0801                     __ptext23 19DB                     __ptext15 1C3B  
                   __ptext40 00C3                     __ptext32 1B67                     __ptext24 1986  
                   __ptext16 1CEA                     __ptext41 1000                     __ptext33 199C  
                   __ptext25 1BED                     __ptext17 0806                     __ptext42 192F  
                   __ptext34 19FE                     __ptext26 1E89                     __ptext18 1A22  
                   __ptext43 192A                     __ptext35 1E1F                     __ptext27 1946  
                   __ptext19 12B6                     __ptext36 1967                     __ptext28 1936  
                   __ptext37 19B9                     __ptext29 1A92                     __ptext38 1B29  
                   __ptext39 1ABD          __end_of_temperatura 1DB6             __size_of_spiInit 0016  
           __size_of_spiRead 0009                     __powers_ 0013                     _leer_ADC 1BED  
           __size_of_sprintf F2B1                __size_of_main 00D2                    pnum$text2 000C  
                   _spiWrite 00C3                 spiInit@sType 0073            spiInit@sClockIdle 0071  
        Write_USART_String@a 0071          Write_USART_String@i 0074                     isdigit@c 0071  
                   scale@scl 0050                    sprintf@ap 00B4             __tdiv_to_l_@exp1 0025  
           __tdiv_to_l_@cntr 0024                    sprintf@sp 00C7             __tdiv_to_l_@quot 0020  
           ___lwmod@dividend 0072             ___lldiv@dividend 0074             ??_spiReceiveWait 0070  
                  stringcode 000D                 ?__tdiv_to_l_ 0070       __Umul8_16@multiplicand 0070  
                _temperatura 1D50                     sprintf@c 00CA                     sprintf@f 00A0  
           ___lldiv@quotient 0079              ___lwmod@divisor 0070              ___lwmod@counter 0075  
                   stringdir 000D                     stringtab 0003                ___fladd@signs 0062  
               ___fladd@aexp 0063                 ___fladd@bexp 0064         __Umul8_16@multiplier 0078  
              ?_config_rcsta 0070            __Umul8_16@product 0074                ?_config_txsta 0070  
