

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 17:46:05 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.31
    21                           ; Generated 13/10/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0013                     _SSPBUF	set	19
   290  0014                     _SSPCON	set	20
   291  000C                     _PIR1bits	set	12
   292  000B                     _INTCONbits	set	11
   293  001E                     _ADRESH	set	30
   294  0006                     _PORTB	set	6
   295  0005                     _PORTA	set	5
   296  0008                     _PORTD	set	8
   297  001F                     _ADCON0bits	set	31
   298  0063                     _SSPIF	set	99
   299  0094                     _SSPSTATbits	set	148
   300  0094                     _SSPSTAT	set	148
   301  0085                     _TRISAbits	set	133
   302  008C                     _PIE1bits	set	140
   303  0088                     _TRISD	set	136
   304  0086                     _TRISB	set	134
   305  0085                     _TRISA	set	133
   306  009F                     _ADCON1	set	159
   307  043B                     _TRISC3	set	1083
   308  043D                     _TRISC5	set	1085
   309  0189                     _ANSELH	set	393
   310  0188                     _ANSEL	set	392
   311                           
   312                           	psect	cinit
   313  000F                     start_initialization:	
   314                           ; #config settings
   315                           
   316  000F                     __initialization:
   317                           
   318                           ; Clear objects allocated to COMMON
   319  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   320  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   321  0011                     end_of_initialization:	
   322                           ;End of C runtime variable initialization code
   323                           
   324  0011                     __end_of__initialization:
   325  0011  0183               	clrf	3
   326  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   327                           
   328                           	psect	bssCOMMON
   329  0079                     __pbssCOMMON:
   330  0079                     _ADC:
   331  0079                     	ds	1
   332  007A                     _volt:
   333  007A                     	ds	1
   334                           
   335                           	psect	cstackCOMMON
   336  0070                     __pcstackCOMMON:
   337  0070                     ?_spiWrite:
   338  0070                     ??_spiWrite:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_setup:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_INTER:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_ADC_1:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_ADC_INIT:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_isr:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_main:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     spiWrite@dat:	
   360                           ; 1 bytes @ 0x0
   361                           
   362                           
   363                           ; 1 bytes @ 0x0
   364  0070                     	ds	1
   365  0071                     ??_isr:
   366                           
   367                           ; 1 bytes @ 0x1
   368  0071                     	ds	2
   369  0073                     ??_INTER:
   370  0073                     ?_spiInit:	
   371                           ; 1 bytes @ 0x3
   372                           
   373  0073                     ??_ADC_INIT:	
   374                           ; 1 bytes @ 0x3
   375                           
   376  0073                     ?_ADC_CHANNEL:	
   377                           ; 1 bytes @ 0x3
   378                           
   379  0073                     spiInit@sDataSample:	
   380                           ; 2 bytes @ 0x3
   381                           
   382  0073                     ADC_CHANNEL@canal:	
   383                           ; 1 bytes @ 0x3
   384                           
   385                           
   386                           ; 2 bytes @ 0x3
   387  0073                     	ds	1
   388  0074                     spiInit@sClockIdle:
   389                           
   390                           ; 1 bytes @ 0x4
   391  0074                     	ds	1
   392  0075                     ??_ADC_1:
   393  0075                     ??_ADC_CHANNEL:	
   394                           ; 1 bytes @ 0x5
   395                           
   396  0075                     spiInit@sTransmitEdge:	
   397                           ; 1 bytes @ 0x5
   398                           
   399                           
   400                           ; 1 bytes @ 0x5
   401  0075                     	ds	1
   402  0076                     ??_spiInit:
   403  0076                     spiInit@sType:	
   404                           ; 1 bytes @ 0x6
   405                           
   406                           
   407                           ; 1 bytes @ 0x6
   408  0076                     	ds	1
   409  0077                     ??_setup:
   410  0077                     ??_main:	
   411                           ; 1 bytes @ 0x7
   412                           
   413                           
   414                           ; 1 bytes @ 0x7
   415  0077                     	ds	2
   416                           
   417                           	psect	maintext
   418  0015                     __pmaintext:	
   419 ;;
   420 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   421 ;;
   422 ;; *************** function _main *****************
   423 ;; Defined at:
   424 ;;		line 58 in file "main.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   433 ;; Tracked objects:
   434 ;;		On entry : B00/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   438 ;;      Params:         0       0       0       0       0
   439 ;;      Locals:         0       0       0       0       0
   440 ;;      Temps:          2       0       0       0       0
   441 ;;      Totals:         2       0       0       0       0
   442 ;;Total ram usage:        2 bytes
   443 ;; Hardware stack levels required when called:    4
   444 ;; This function calls:
   445 ;;		_ADC_1
   446 ;;		_ADC_INIT
   447 ;;		_INTER
   448 ;;		_setup
   449 ;; This function is called by:
   450 ;;		Startup code after reset
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           
   455                           ;psect for function _main
   456  0015                     _main:
   457  0015                     l858:	
   458                           ;incstack = 0
   459                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   460                           
   461                           
   462                           ;main.c: 59:     setup();
   463  0015  120A  118A  205F  120A  118A  	fcall	_setup
   464  001A                     l860:
   465                           
   466                           ;main.c: 60:     INTER();
   467  001A  120A  118A  20BF  120A  118A  	fcall	_INTER
   468  001F                     l862:
   469                           
   470                           ;main.c: 61:     ADC_INIT();
   471  001F  120A  118A  20CF  120A  118A  	fcall	_ADC_INIT
   472  0024                     l864:
   473                           
   474                           ;main.c: 67:        ADC_1();
   475  0024  120A  118A  2042  120A  118A  	fcall	_ADC_1
   476  0029                     l866:
   477                           
   478                           ;main.c: 68:        ADC = ADC_1();
   479  0029  120A  118A  2042  120A  118A  	fcall	_ADC_1
   480  002E  00F7               	movwf	??_main
   481  002F  0877               	movf	??_main,w
   482  0030  00F9               	movwf	_ADC
   483  0031                     l868:
   484                           
   485                           ;main.c: 69:        PORTD = ADC;
   486  0031  0879               	movf	_ADC,w
   487  0032  1283               	bcf	3,5	;RP0=0, select bank0
   488  0033  1303               	bcf	3,6	;RP1=0, select bank0
   489  0034  0088               	movwf	8	;volatile
   490  0035                     l870:
   491                           
   492                           ;main.c: 70:         _delay((unsigned long)((1)*(8000000/4000.0)));
   493  0035  3003               	movlw	3
   494  0036  00F8               	movwf	??_main+1
   495  0037  3097               	movlw	151
   496  0038  00F7               	movwf	??_main
   497  0039                     u77:
   498  0039  0BF7               	decfsz	??_main,f
   499  003A  2839               	goto	u77
   500  003B  0BF8               	decfsz	??_main+1,f
   501  003C  2839               	goto	u77
   502  003D  283E               	nop2
   503  003E  2824               	goto	l864
   504  003F  120A  118A  280C   	ljmp	start
   505  0042                     __end_of_main:
   506                           
   507                           	psect	text1
   508  005F                     __ptext1:	
   509 ;; *************** function _setup *****************
   510 ;; Defined at:
   511 ;;		line 78 in file "main.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, status,2, status,0, pclath, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   525 ;;      Params:         0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0
   527 ;;      Temps:          0       0       0       0       0
   528 ;;      Totals:         0       0       0       0       0
   529 ;;Total ram usage:        0 bytes
   530 ;; Hardware stack levels used:    1
   531 ;; Hardware stack levels required when called:    3
   532 ;; This function calls:
   533 ;;		_spiInit
   534 ;; This function is called by:
   535 ;;		_main
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           
   540                           ;psect for function _setup
   541  005F                     _setup:
   542  005F                     l834:	
   543                           ;incstack = 0
   544                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   545                           
   546                           
   547                           ;main.c: 79:     ANSEL = 1;
   548  005F  3001               	movlw	1
   549  0060  1683               	bsf	3,5	;RP0=1, select bank3
   550  0061  1703               	bsf	3,6	;RP1=1, select bank3
   551  0062  0088               	movwf	8	;volatile
   552  0063                     l836:
   553                           
   554                           ;main.c: 80:     ANSELH = 0;
   555  0063  0189               	clrf	9	;volatile
   556  0064                     l838:
   557                           
   558                           ;main.c: 81:     TRISA = 1;
   559  0064  3001               	movlw	1
   560  0065  1683               	bsf	3,5	;RP0=1, select bank1
   561  0066  1303               	bcf	3,6	;RP1=0, select bank1
   562  0067  0085               	movwf	5	;volatile
   563                           
   564                           ;main.c: 82:     TRISB = 0;
   565  0068  0186               	clrf	6	;volatile
   566                           
   567                           ;main.c: 83:     TRISD = 0;
   568  0069  0188               	clrf	8	;volatile
   569                           
   570                           ;main.c: 85:     PORTA = 0;
   571  006A  1283               	bcf	3,5	;RP0=0, select bank0
   572  006B  1303               	bcf	3,6	;RP1=0, select bank0
   573  006C  0185               	clrf	5	;volatile
   574                           
   575                           ;main.c: 86:     PORTB = 0;
   576  006D  0186               	clrf	6	;volatile
   577                           
   578                           ;main.c: 87:     PORTD = 0;
   579  006E  0188               	clrf	8	;volatile
   580  006F                     l840:
   581                           
   582                           ;main.c: 89:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   583  006F  01F3               	clrf	spiInit@sDataSample
   584  0070  01F4               	clrf	spiInit@sClockIdle
   585  0071  01F5               	clrf	spiInit@sTransmitEdge
   586  0072  3024               	movlw	36
   587  0073  120A  118A  2093  120A  118A  	fcall	_spiInit
   588  0078                     l75:
   589  0078  0008               	return
   590  0079                     __end_of_setup:
   591                           
   592                           	psect	text2
   593  0093                     __ptext2:	
   594 ;; *************** function _spiInit *****************
   595 ;; Defined at:
   596 ;;		line 12 in file "SPI.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  sType           1    wreg     enum E1292
   599 ;;  sDataSample     1    3[COMMON] enum E1300
   600 ;;  sClockIdle      1    4[COMMON] enum E1304
   601 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   602 ;; Auto vars:     Size  Location     Type
   603 ;;  sType           1    6[COMMON] enum E1292
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, status,2, status,0
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   613 ;;      Params:         3       0       0       0       0
   614 ;;      Locals:         1       0       0       0       0
   615 ;;      Temps:          0       0       0       0       0
   616 ;;      Totals:         4       0       0       0       0
   617 ;;Total ram usage:        4 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; Hardware stack levels required when called:    2
   620 ;; This function calls:
   621 ;;		Nothing
   622 ;; This function is called by:
   623 ;;		_setup
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           
   628                           ;psect for function _spiInit
   629  0093                     _spiInit:
   630                           
   631                           ;incstack = 0
   632                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   633                           ;spiInit@sType stored from wreg
   634  0093  00F6               	movwf	spiInit@sType
   635  0094                     l824:
   636                           
   637                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   638  0094  1683               	bsf	3,5	;RP0=1, select bank1
   639  0095  1303               	bcf	3,6	;RP1=0, select bank1
   640  0096  1287               	bcf	7,5	;volatile
   641                           
   642                           ;SPI.c: 15:     if(sType & 0b00000100)
   643  0097  1D76               	btfss	spiInit@sType,2
   644  0098  289A               	goto	u51
   645  0099  289B               	goto	u50
   646  009A                     u51:
   647  009A  289F               	goto	l830
   648  009B                     u50:
   649  009B                     l826:
   650                           
   651                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   652  009B  0875               	movf	spiInit@sTransmitEdge,w
   653  009C  0094               	movwf	20	;volatile
   654  009D                     l828:
   655                           
   656                           ;SPI.c: 18:         TRISC3 = 1;
   657  009D  1587               	bsf	7,3	;volatile
   658                           
   659                           ;SPI.c: 19:     }
   660  009E  28A3               	goto	l100
   661  009F                     l830:
   662                           
   663                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   664  009F  0873               	movf	spiInit@sDataSample,w
   665  00A0  0475               	iorwf	spiInit@sTransmitEdge,w
   666  00A1  0094               	movwf	20	;volatile
   667  00A2                     l832:
   668                           
   669                           ;SPI.c: 23:         TRISC3 = 0;
   670  00A2  1187               	bcf	7,3	;volatile
   671  00A3                     l100:	
   672                           ;SPI.c: 24:     }
   673                           
   674                           
   675                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   676  00A3  0876               	movf	spiInit@sType,w
   677  00A4  0474               	iorwf	spiInit@sClockIdle,w
   678  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   679  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   680  00A7  0094               	movwf	20	;volatile
   681  00A8                     l101:
   682  00A8  0008               	return
   683  00A9                     __end_of_spiInit:
   684                           
   685                           	psect	text3
   686  00BF                     __ptext3:	
   687 ;; *************** function _INTER *****************
   688 ;; Defined at:
   689 ;;		line 109 in file "main.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		None
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   703 ;;      Params:         0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0
   706 ;;      Totals:         0       0       0       0       0
   707 ;;Total ram usage:        0 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:    2
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           
   718                           ;psect for function _INTER
   719  00BF                     _INTER:
   720  00BF                     l742:	
   721                           ;incstack = 0
   722                           ; Regs used in _INTER: []
   723                           
   724                           
   725                           ;main.c: 110:     INTCONbits.GIE = 1;
   726  00BF  178B               	bsf	11,7	;volatile
   727                           
   728                           ;main.c: 111:     INTCONbits.PEIE = 1;
   729  00C0  170B               	bsf	11,6	;volatile
   730                           
   731                           ;main.c: 112:     PIR1bits.SSPIF = 0;
   732  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   733  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   734  00C3  118C               	bcf	12,3	;volatile
   735                           
   736                           ;main.c: 113:     PIE1bits.SSPIE = 1;
   737  00C4  1683               	bsf	3,5	;RP0=1, select bank1
   738  00C5  1303               	bcf	3,6	;RP1=0, select bank1
   739  00C6  158C               	bsf	12,3	;volatile
   740                           
   741                           ;main.c: 114:     TRISAbits.TRISA5 = 1;
   742  00C7  1685               	bsf	5,5	;volatile
   743  00C8                     l84:
   744  00C8  0008               	return
   745  00C9                     __end_of_INTER:
   746                           
   747                           	psect	text4
   748  00CF                     __ptext4:	
   749 ;; *************** function _ADC_INIT *****************
   750 ;; Defined at:
   751 ;;		line 39 in file "./ADC_LIB.h"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		status,2
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0
   768 ;;      Totals:         0       0       0       0       0
   769 ;;Total ram usage:        0 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    2
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           
   780                           ;psect for function _ADC_INIT
   781  00CF                     _ADC_INIT:
   782  00CF                     l730:	
   783                           ;incstack = 0
   784                           ; Regs used in _ADC_INIT: [status,2]
   785                           
   786                           
   787                           ;./ADC_LIB.h: 40:     ADCON1 = 0b00000000;
   788  00CF  1683               	bsf	3,5	;RP0=1, select bank1
   789  00D0  1303               	bcf	3,6	;RP1=0, select bank1
   790  00D1  019F               	clrf	31	;volatile
   791  00D2                     l54:
   792  00D2  0008               	return
   793  00D3                     __end_of_ADC_INIT:
   794                           
   795                           	psect	text5
   796  0042                     __ptext5:	
   797 ;; *************** function _ADC_1 *****************
   798 ;; Defined at:
   799 ;;		line 93 in file "main.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      unsigned char 
   806 ;; Registers used:
   807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         0       0       0       0       0
   815 ;;      Temps:          1       0       0       0       0
   816 ;;      Totals:         1       0       0       0       0
   817 ;;Total ram usage:        1 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    3
   820 ;; This function calls:
   821 ;;		_ADC_CHANNEL
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _ADC_1
   829  0042                     _ADC_1:
   830  0042                     l842:	
   831                           ;incstack = 0
   832                           ; Regs used in _ADC_1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   833                           
   834                           
   835                           ;main.c: 94:     ADC_CHANNEL(0);
   836  0042  3000               	movlw	0
   837  0043  00F3               	movwf	ADC_CHANNEL@canal
   838  0044  00F4               	movwf	ADC_CHANNEL@canal+1
   839  0045  120A  118A  2079  120A  118A  	fcall	_ADC_CHANNEL
   840  004A                     l844:
   841                           
   842                           ;main.c: 96:     ADCON0bits.ADCS0 = 1;
   843  004A  1283               	bcf	3,5	;RP0=0, select bank0
   844  004B  1303               	bcf	3,6	;RP1=0, select bank0
   845  004C  171F               	bsf	31,6	;volatile
   846  004D                     l846:
   847                           
   848                           ;main.c: 97:     ADCON0bits.ADCS1 = 0;
   849  004D  139F               	bcf	31,7	;volatile
   850  004E                     l848:
   851                           
   852                           ;main.c: 98:     ADCON0bits.ADON = 1;
   853  004E  141F               	bsf	31,0	;volatile
   854  004F                     l850:
   855                           
   856                           ;main.c: 99:     _delay((unsigned long)((0.25)*(8000000/4000.0)));
   857  004F  30A6               	movlw	166
   858  0050  00F5               	movwf	??_ADC_1
   859  0051                     u87:
   860  0051  0BF5               	decfsz	??_ADC_1,f
   861  0052  2851               	goto	u87
   862  0053  0000               	nop
   863  0054                     l852:
   864                           
   865                           ;main.c: 100:     ADCON0bits.GO = 1;
   866  0054  1283               	bcf	3,5	;RP0=0, select bank0
   867  0055  1303               	bcf	3,6	;RP1=0, select bank0
   868  0056  149F               	bsf	31,1	;volatile
   869                           
   870                           ;main.c: 101:     while (ADCON0bits.GO == 1) {
   871  0057  285A               	goto	l78
   872  0058                     l854:
   873                           
   874                           ;main.c: 104:         return ADRESH;
   875  0058  081E               	movf	30,w	;volatile
   876  0059  285E               	goto	l80
   877  005A                     l78:	
   878                           ;main.c: 105:     }
   879                           
   880                           
   881                           ;main.c: 101:     while (ADCON0bits.GO == 1) {
   882  005A  189F               	btfsc	31,1	;volatile
   883  005B  285D               	goto	u61
   884  005C  285E               	goto	u60
   885  005D                     u61:
   886  005D  2858               	goto	l854
   887  005E                     u60:
   888  005E                     l80:
   889  005E  0008               	return
   890  005F                     __end_of_ADC_1:
   891                           
   892                           	psect	text6
   893  0079                     __ptext6:	
   894 ;; *************** function _ADC_CHANNEL *****************
   895 ;; Defined at:
   896 ;;		line 18 in file "./ADC_LIB.h"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  canal           2    3[COMMON] unsigned short 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  2    3[COMMON] unsigned int 
   903 ;; Registers used:
   904 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         2       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0
   913 ;;      Totals:         2       0       0       0       0
   914 ;;Total ram usage:        2 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    2
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_ADC_1
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function _ADC_CHANNEL
   926  0079                     _ADC_CHANNEL:
   927  0079                     l814:	
   928                           ;incstack = 0
   929                           ; Regs used in _ADC_CHANNEL: [wreg-fsr0h+status,2+status,0]
   930                           
   931                           
   932                           ;./ADC_LIB.h: 20:     switch (canal) {
   933  0079  2888               	goto	l818
   934  007A                     l48:	
   935                           ;./ADC_LIB.h: 21:         case 0:
   936                           
   937                           
   938                           ;./ADC_LIB.h: 22:             ADCON0bits.CHS3 = 0;
   939  007A  1283               	bcf	3,5	;RP0=0, select bank0
   940  007B  1303               	bcf	3,6	;RP1=0, select bank0
   941  007C  129F               	bcf	31,5	;volatile
   942                           
   943                           ;./ADC_LIB.h: 23:             ADCON0bits.CHS2 = 0;
   944  007D  121F               	bcf	31,4	;volatile
   945                           
   946                           ;./ADC_LIB.h: 24:             ADCON0bits.CHS1 = 0;
   947  007E  119F               	bcf	31,3	;volatile
   948                           
   949                           ;./ADC_LIB.h: 25:             ADCON0bits.CHS0 = 0;
   950  007F  111F               	bcf	31,2	;volatile
   951                           
   952                           ;./ADC_LIB.h: 27:             break;
   953  0080  2892               	goto	l51
   954  0081                     l50:	
   955                           ;./ADC_LIB.h: 29:         default:
   956                           
   957                           
   958                           ;./ADC_LIB.h: 30:             ADCON0bits.CHS3 = 0;
   959  0081  1283               	bcf	3,5	;RP0=0, select bank0
   960  0082  1303               	bcf	3,6	;RP1=0, select bank0
   961  0083  129F               	bcf	31,5	;volatile
   962                           
   963                           ;./ADC_LIB.h: 31:             ADCON0bits.CHS2 = 0;
   964  0084  121F               	bcf	31,4	;volatile
   965                           
   966                           ;./ADC_LIB.h: 32:             ADCON0bits.CHS1 = 0;
   967  0085  119F               	bcf	31,3	;volatile
   968                           
   969                           ;./ADC_LIB.h: 33:             ADCON0bits.CHS0 = 0;
   970  0086  111F               	bcf	31,2	;volatile
   971                           
   972                           ;./ADC_LIB.h: 34:             break;
   973  0087  2892               	goto	l51
   974  0088                     l818:
   975                           
   976                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   977                           ; Switch size 1, requested type "simple"
   978                           ; Number of cases is 1, Range of values is 0 to 0
   979                           ; switch strategies available:
   980                           ; Name         Instructions Cycles
   981                           ; simple_byte            4     3 (average)
   982                           ; direct_byte           11     8 (fixed)
   983                           ; jumptable            260     6 (fixed)
   984                           ;	Chosen strategy is simple_byte
   985  0088  0874               	movf	ADC_CHANNEL@canal+1,w
   986  0089  3A00               	xorlw	0	; case 0
   987  008A  1903               	skipnz
   988  008B  288D               	goto	l892
   989  008C  2881               	goto	l50
   990  008D                     l892:
   991                           
   992                           ; Switch size 1, requested type "simple"
   993                           ; Number of cases is 1, Range of values is 0 to 0
   994                           ; switch strategies available:
   995                           ; Name         Instructions Cycles
   996                           ; simple_byte            4     3 (average)
   997                           ; direct_byte           11     8 (fixed)
   998                           ; jumptable            260     6 (fixed)
   999                           ;	Chosen strategy is simple_byte
  1000  008D  0873               	movf	ADC_CHANNEL@canal,w
  1001  008E  3A00               	xorlw	0	; case 0
  1002  008F  1903               	skipnz
  1003  0090  287A               	goto	l48
  1004  0091  2881               	goto	l50
  1005  0092                     l51:
  1006  0092  0008               	return
  1007  0093                     __end_of_ADC_CHANNEL:
  1008                           
  1009                           	psect	text7
  1010  00A9                     __ptext7:	
  1011 ;; *************** function _isr *****************
  1012 ;; Defined at:
  1013 ;;		line 46 in file "main.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2, status,0, pclath, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1027 ;;      Params:         0       0       0       0       0
  1028 ;;      Locals:         0       0       0       0       0
  1029 ;;      Temps:          2       0       0       0       0
  1030 ;;      Totals:         2       0       0       0       0
  1031 ;;Total ram usage:        2 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:    1
  1034 ;; This function calls:
  1035 ;;		_spiWrite
  1036 ;; This function is called by:
  1037 ;;		Interrupt level 1
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           
  1042                           ;psect for function _isr
  1043  00A9                     _isr:
  1044  00A9                     i1l762:
  1045                           
  1046                           ;main.c: 48:    if(SSPIF == 1){
  1047  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1048  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1049  00AB  1D8C               	btfss	12,3	;volatile
  1050  00AC  28AE               	goto	u4_21
  1051  00AD  28AF               	goto	u4_20
  1052  00AE                     u4_21:
  1053  00AE  28B8               	goto	i1l64
  1054  00AF                     u4_20:
  1055  00AF                     i1l764:
  1056                           
  1057                           ;main.c: 50:         spiWrite(ADC);
  1058  00AF  0879               	movf	_ADC,w
  1059  00B0  120A  118A  20C9  120A  118A  	fcall	_spiWrite
  1060  00B5                     i1l766:
  1061                           
  1062                           ;main.c: 52:         SSPIF = 0;
  1063  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1064  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1065  00B7  118C               	bcf	12,3	;volatile
  1066  00B8                     i1l64:
  1067  00B8  0872               	movf	??_isr+1,w
  1068  00B9  008A               	movwf	10
  1069  00BA  0E71               	swapf	??_isr,w
  1070  00BB  0083               	movwf	3
  1071  00BC  0EFE               	swapf	btemp,f
  1072  00BD  0E7E               	swapf	btemp,w
  1073  00BE  0009               	retfie
  1074  00BF                     __end_of_isr:
  1075                           
  1076                           	psect	intentry
  1077  0004                     __pintentry:	
  1078                           ;incstack = 0
  1079                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1080                           
  1081  0004                     interrupt_function:
  1082  007E                     saved_w	set	btemp
  1083  0004  00FE               	movwf	btemp
  1084  0005  0E03               	swapf	3,w
  1085  0006  00F1               	movwf	??_isr
  1086  0007  080A               	movf	10,w
  1087  0008  00F2               	movwf	??_isr+1
  1088  0009  120A  118A  28A9   	ljmp	_isr
  1089                           
  1090                           	psect	text8
  1091  00C9                     __ptext8:	
  1092 ;; *************** function _spiWrite *****************
  1093 ;; Defined at:
  1094 ;;		line 34 in file "SPI.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;  dat             1    wreg     unsigned char 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  dat             1    0[COMMON] unsigned char 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         0       0       0       0       0
  1109 ;;      Locals:         1       0       0       0       0
  1110 ;;      Temps:          0       0       0       0       0
  1111 ;;      Totals:         1       0       0       0       0
  1112 ;;Total ram usage:        1 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_isr
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           
  1122                           ;psect for function _spiWrite
  1123  00C9                     _spiWrite:
  1124                           
  1125                           ;incstack = 0
  1126                           ; Regs used in _spiWrite: [wreg]
  1127                           ;spiWrite@dat stored from wreg
  1128  00C9  00F0               	movwf	spiWrite@dat
  1129  00CA                     i1l732:
  1130                           
  1131                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1132  00CA  0870               	movf	spiWrite@dat,w
  1133  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1134  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1135  00CD  0093               	movwf	19	;volatile
  1136  00CE                     i1l110:
  1137  00CE  0008               	return
  1138  00CF                     __end_of_spiWrite:
  1139  007E                     btemp	set	126	;btemp
  1140  007E                     wtemp0	set	126
  1141                           
  1142                           	psect	config
  1143                           
  1144                           ;Config register CONFIG1 @ 0x2007
  1145                           ;	Oscillator Selection bits
  1146                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1147                           ;	Watchdog Timer Enable bit
  1148                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1149                           ;	Power-up Timer Enable bit
  1150                           ;	PWRTE = OFF, PWRT disabled
  1151                           ;	RE3/MCLR pin function select bit
  1152                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1153                           ;	Code Protection bit
  1154                           ;	CP = OFF, Program memory code protection is disabled
  1155                           ;	Data Code Protection bit
  1156                           ;	CPD = OFF, Data memory code protection is disabled
  1157                           ;	Brown Out Reset Selection bits
  1158                           ;	BOREN = OFF, BOR disabled
  1159                           ;	Internal External Switchover bit
  1160                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1161                           ;	Fail-Safe Clock Monitor Enabled bit
  1162                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1163                           ;	Low Voltage Programming Enable bit
  1164                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1165                           ;	In-Circuit Debugger Mode bit
  1166                           ;	DEBUG = 0x1, unprogrammed default
  1167  2007                     	org	8199
  1168  2007  20D1               	dw	8401
  1169                           
  1170                           ;Config register CONFIG2 @ 0x2008
  1171                           ;	Brown-out Reset Selection bit
  1172                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1173                           ;	Flash Program Memory Self Write Enable bits
  1174                           ;	WRT = OFF, Write protection off
  1175  2008                     	org	8200
  1176  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit
    _ADC_1->_ADC_CHANNEL

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     458
                                              7 COMMON     2     2      0
                              _ADC_1
                           _ADC_INIT
                              _INTER
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _INTER                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_INIT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_1                                                1     1      0      98
                                              5 COMMON     1     1      0
                        _ADC_CHANNEL
 ---------------------------------------------------------------------------------
 (2) _ADC_CHANNEL                                          2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_1
     _ADC_CHANNEL
   _ADC_INIT
   _INTER
   _setup
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 17:46:05 2021

            _SSPSTATbits 0094                       l50 0081                       l51 0092  
                     l54 00D2                       l48 007A                       l80 005E  
                     l75 0078                       l84 00C8                       l78 005A  
                     u50 009B                       u51 009A                       u60 005E  
                     u61 005D                       u77 0039                       u87 0051  
                    l100 00A3                      l101 00A8                      _ADC 0079  
                    l730 00CF                      l814 0079                      l742 00BF  
                    l830 009F                      l832 00A2                      l824 0094  
                    l840 006F                      l818 0088                      l850 004F  
                    l842 0042                      l826 009B                      l834 005F  
                    l852 0054                      l844 004A                      l828 009D  
                    l836 0063                      l860 001A                      l854 0058  
                    l846 004D                      l838 0064                      l870 0035  
                    l862 001F                      l848 004E                      l864 0024  
                    l866 0029                      l858 0015                      l892 008D  
                    l868 0031                      _isr 00A9                     ?_isr 0070  
                   i1l64 00B8                     u4_20 00AF                     u4_21 00AE  
       __end_of_ADC_INIT 00D3                     _main 0015                     btemp 007E  
                   _volt 007A                     start 000C                    ??_isr 0071  
                  ?_main 0070                    _ADC_1 0042                    _ANSEL 0188  
                  i1l110 00CE                    i1l732 00CA                    i1l762 00A9  
                  i1l764 00AF                    _INTER 00BF                    i1l766 00B5  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _SSPIF 0063                    _setup 005F                    pclath 000A  
        __end_of_spiInit 00A9                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0042                   ??_main 0077  
                 ?_ADC_1 0070                   ?_INTER 0070                   _ADCON1 009F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                ?_ADC_INIT 0070                   saved_w 007E  
       __end_of_spiWrite 00CF                ??_spiInit 0076  __end_of__initialization 0011  
          __end_of_ADC_1 005F            __end_of_INTER 00C9           __pcstackCOMMON 0070  
          __end_of_setup 0079                  ??_ADC_1 0075                  ??_INTER 0073  
             ??_ADC_INIT 0073                  ??_setup 0077            ??_ADC_CHANNEL 0075  
             __pmaintext 0015               __pintentry 0004                  _SSPSTAT 0094  
              ?_spiWrite 0070      __end_of_ADC_CHANNEL 0093                  __ptext1 005F  
                __ptext2 0093                  __ptext3 00BF                  __ptext4 00CF  
                __ptext5 0042                  __ptext6 0079                  __ptext7 00A9  
                __ptext8 00C9             __size_of_isr 0016                  _spiInit 0093  
   end_of_initialization 0011               ??_spiWrite 0070                _TRISAbits 0085  
      __size_of_ADC_INIT 0004              spiWrite@dat 0070              _ADC_CHANNEL 0079  
    start_initialization 000F              __end_of_isr 00BF              __pbssCOMMON 0079  
              ___latbits 0002         ADC_CHANNEL@canal 0073        __size_of_spiWrite 0006  
         __size_of_ADC_1 001D           __size_of_INTER 000A                 _ADC_INIT 00CF  
               ?_spiInit 0073           __size_of_setup 001A     spiInit@sTransmitEdge 0075  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0073  
               _PIR1bits 000C               _ADCON0bits 001F             ?_ADC_CHANNEL 0073  
       __size_of_spiInit 0016            __size_of_main 002D                 _spiWrite 00C9  
           spiInit@sType 0076        spiInit@sClockIdle 0074               _INTCONbits 000B  
               intlevel1 0000     __size_of_ADC_CHANNEL 001A  
